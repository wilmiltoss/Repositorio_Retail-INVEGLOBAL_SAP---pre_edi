<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <summary>
          Proporciona los datos del evento <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />.
        </summary>
      <param name="oldSurface">
              La superficie de diseño que pierde la activación.
            </param>
      <param name="newSurface">
              La superficie de diseño que tiene la activación.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface">
      <summary>
          Obtiene la superficie de diseño que tiene la activación.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignSurface" /> que tiene la activación.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface">
      <summary>
          Obtiene la superficie de diseño que pierde la activación.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignSurface" /> que pierde la activación.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> de <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />. No se puede heredar esta clase.
        </summary>
      <param name="sender">
              El origen del evento, <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.
            </param>
      <param name="e">
              <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary>
          Proporciona una interfaz de usuario para editar matrices en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de <see cref="T:System.ComponentModel.Design.ArrayEditor" /> utilizando el tipo de datos especificado para la matriz.
        </summary>
      <param name="type">
              Tipo de datos de los elementos de la matriz. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary>
          Obtiene el tipo de datos que va a contener esta colección.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Type" /> que indica el tipo de datos que va a contener la colección.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary>
          Obtiene los elementos de la matriz.
        </summary>
      <returns>
          Matriz que contiene los elementos de la matriz especificada. Si el objeto especificado en el parámetro <paramref name="editValue" /> no es una matriz, se devuelve un objeto nuevo vacío.
        </returns>
      <param name="editValue">
              Matriz de la que se recuperan los elementos. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary>
          Establece los elementos de la matriz.
        </summary>
      <returns>
          Instancia de la nueva matriz. Si el objeto especificado por el parámetro <paramref name="editValue" /> no es una matriz, se devuelve el objeto especificado por el parámetro <paramref name="editValue" />.
        </returns>
      <param name="editValue">
              Matriz en la que se van a establecer los elementos. 
            </param>
      <param name="value">
              Matriz de objetos que se van a establecer como elementos de la matriz. 
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.BinaryEditor">
      <summary>
          Proporciona una interfaz de usuario para la edición de datos primarios.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.BinaryEditor" />. 
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Modifica el valor del objeto especificado mediante el proveedor de servicios y el contexto especificados.
        </summary>
      <returns>
          Nuevo valor del objeto. Si el valor del objeto no ha cambiado, este método debe devolver el mismo objeto que se pasó.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              Objeto de proveedor de servicios mediante el que se pueden obtener los servicios de edición. 
            </param>
      <param name="value">
              Objeto cuyo valor se va a editar. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de editor utilizado por el método <see cref="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.
        </summary>
      <returns>
          Valor enum que indica el estilo de edición proporcionado.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.ByteViewer">
      <summary>
          Muestra las matrices de bytes en formatos hexadecimal, ANSI y Unicode.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ByteViewer" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetBytes">
      <summary>
          Obtiene los bytes del búfer.
        </summary>
      <returns>
          Referencia de la matriz de bytes sin signo.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode">
      <summary>
          Obtiene el modo de presentación del control.
        </summary>
      <returns>
          Modo de presentación que utiliza este control. El valor devuelto se define en <see cref="T:System.ComponentModel.Design.DisplayMode" />.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
        </summary>
      <param name="e">
              <see cref="T:System.Windows.Forms.KeyEventArgs" /> que contiene los datos de eventos. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.Windows.Forms.Control.Layout" />.
        </summary>
      <param name="e">
              <see cref="T:System.Windows.Forms.LayoutEventArgs" /> que contiene los datos de eventos.
            </param>
      <param name="levent">
              <see cref="T:System.Windows.Forms.LayoutEventArgs" /> que contiene los datos de eventos.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
        </summary>
      <param name="e">
              <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene los datos de eventos. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)">
      <summary>
          Escribe los datos sin formato del búfer de datos en un archivo.
        </summary>
      <param name="path">
              Ruta de acceso al archivo donde se puede guardar. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="path" /> es null. 
            </exception>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="path" /> es una cadena vacía (""), contiene sólo espacios en blanco o contiene uno o varios caracteres no válidos. 
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
              La ruta de acceso especificada no es válida como, por ejemplo, una ruta de una unidad no asignada. 
            </exception>
      <exception cref="T:System.IO.IOException">
              Error de escritura en el archivo. 
            </exception>
      <exception cref="T:System.IO.PathTooLongException">
              La ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema. Por ejemplo, en las plataformas basadas en Windows, las rutas de acceso deben ser inferiores a 248 caracteres y los nombres de archivo deben ser inferiores a 260 caracteres. 
            </exception>
      <exception cref="T:System.UnauthorizedAccessException">
              El sistema operativo no permite el acceso solicitado para el parámetro <paramref name="path" /> especificado, como sucede, por ejemplo, cuando el acceso es Write o ReadWrite y el archivo o el directorio está establecido para el acceso de sólo lectura. 
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)">
      <summary>
          Controla el evento <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> en la <see cref="T:System.Windows.Forms.ScrollBar" /> del control <see cref="T:System.ComponentModel.Design.ByteViewer" />.
        </summary>
      <param name="source">
              Origen del evento. 
            </param>
      <param name="e">
              <see cref="T:System.EventArgs" /> que contiene los datos del evento. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])">
      <summary>
          Establece la matriz de bytes que se va a mostrar en el visor.
        </summary>
      <param name="bytes">
              Matriz de bytes que se va a mostrar. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              La matriz de bytes especificada es null. 
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
      <summary>
          Establece el modo de presentación actual.
        </summary>
      <param name="mode">
              Modo de presentación que se va a establecer. 
            </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              El modo de presentación especificado no procede de la enumeración <see cref="T:System.ComponentModel.Design.DisplayMode" />. 
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)">
      <summary>
          Establece el archivo que se va a mostrar en el visor.
        </summary>
      <param name="path">
              Ruta de acceso al archivo de donde se va a cargar. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="path" /> es null. 
            </exception>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="path" /> es una cadena vacía (""), contiene sólo espacios en blanco o contiene uno o varios caracteres no válidos. 
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
              La ruta de acceso especificada no es válida como, por ejemplo, una ruta de una unidad no asignada. 
            </exception>
      <exception cref="T:System.IO.IOException">
              Error de carga del archivo. 
            </exception>
      <exception cref="T:System.IO.PathTooLongException">
              La ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema. Por ejemplo, en las plataformas basadas en Windows, las rutas de acceso deben ser inferiores a 248 caracteres y los nombres de archivo deben ser inferiores a 260 caracteres. 
            </exception>
      <exception cref="T:System.UnauthorizedAccessException">
              El sistema operativo no permite el acceso solicitado para el parámetro <paramref name="path" /> especificado, como sucede, por ejemplo, cuando el acceso es Write o ReadWrite y el archivo o el directorio está establecido para el acceso de sólo lectura. 
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)">
      <summary>
          Establece la línea actual de la vista <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" />.
        </summary>
      <param name="line">
              Línea actual desde la que se va a efectuar la presentación. 
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary>
          Proporciona una interfaz de usuario con la que se pueden editar casi todos los tipos de colecciones en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.CollectionEditor" /> utilizando el tipo de colección especificado.
        </summary>
      <param name="type">
              Tipo de colección que el editor va a modificar. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary>
          Cancela los cambios en la colección.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary>
          Indica si se pueden quitar los miembros originales de la colección.
        </summary>
      <returns>
          
            true si se permite quitar este valor de la colección; en caso contrario, false. La implementación predeterminada siempre devuelve true.
        </returns>
      <param name="value">
              Valor que se va a quitar. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary>
          Indica si se pueden seleccionar a la vez varios elementos de la colección.
        </summary>
      <returns>
          
            true si se pueden seleccionar a la vez varios miembros de la colección; en caso contrario, false. De forma predeterminada, se devuelve true.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary>
          Obtiene el tipo de datos de cada elemento de la colección.
        </summary>
      <returns>
          Tipo de datos de los elementos de la colección.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary>
          Obtiene el tipo de datos del objeto de la colección.
        </summary>
      <returns>
          Tipo de datos del objeto de la colección.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary>
          Obtiene un descriptor de tipo que indica el contexto actual.
        </summary>
      <returns>
          Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el contexto que se está utilizando actualmente o null si no hay ningún contexto disponible.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary>
          Crea un formulario que permite mostrar y modificar la colección actual.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> que se va a proporcionar como interfaz de usuario para modificar la colección.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary>
          Obtiene el tipo de datos que contiene la colección.
        </summary>
      <returns>
          Tipo de datos de los elementos de la colección o <see cref="T:System.Object" /> si no se encuentra la propiedad Item en la colección.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary>
          Crea una nueva instancia del tipo de elemento de colección especificado.
        </summary>
      <returns>
          Nueva instancia del objeto especificado.
        </returns>
      <param name="itemType">
              Tipo de elemento que se va a crear. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary>
          Obtiene los tipos de datos que puede contener el editor de la colección.
        </summary>
      <returns>
          Matriz de los tipos de datos que puede contener la colección.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary>
          Destruye la instancia especificada del objeto.
        </summary>
      <param name="instance">
              Objeto que se va a destruir. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Modifica el valor del objeto especificado mediante el proveedor de servicios y el contexto especificados.
        </summary>
      <returns>
          Nuevo valor del objeto. Si el valor del objeto no ha cambiado, se debe devolver el mismo objeto que se pasó.
        </returns>
      <param name="context">
              Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              Objeto de proveedor de servicios mediante el que se obtienen los servicios de edición. 
            </param>
      <param name="value">
              Objeto cuyo valor se va a modificar. 
            </param>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">
              No se ha podido desproteger correctamente un archivo que está protegido en un programa de administración de código fuente.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary>
          Recupera el texto para mostrar del elemento de lista dado.
        </summary>
      <returns>
          Texto para mostrar de <paramref name="value" />.
        </returns>
      <param name="value">
              Elemento de lista cuyo texto para mostrar se va a recuperar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de edición utilizado por el método <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.
        </summary>
      <returns>
          Valor de enumeración <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición proporcionado. Si no se admite el método en el contexto especificado, este método devolverá el identificador <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.
        </returns>
      <param name="context">
              Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary>
          Obtiene una matriz de objetos que contiene la colección especificada.
        </summary>
      <returns>
          Matriz que contiene los objetos de la colección o matriz de objetos vacía si la colección especificada no hereda de <see cref="T:System.Collections.ICollection" />.
        </returns>
      <param name="editValue">
              Colección que se va a modificar. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary>
          Devuelve una lista que contiene el objeto dado.
        </summary>
      <returns>
          Clase <see cref="T:System.Collections.ArrayList" /> que contiene los objetos individuales que se van a crear.
        </returns>
      <param name="instance">
              <see cref="T:System.Collections.ArrayList" /> que se devuelve como objeto.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary>
          Obtiene el servicio solicitado si está disponible.
        </summary>
      <returns>
          Instancia del servicio o null si no se encuentra ningún servicio.
        </returns>
      <param name="serviceType">
              Tipo de servicio que se va a recuperar. 
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary>
          Obtiene la palabra clave de la Ayuda para mostrar el tema o la lista de temas de Ayuda cuando se hace clic en el botón Ayuda del cuadro de diálogo del editor o al presionar la tecla F1.
        </summary>
      <returns>
          Palabra clave de la Ayuda para que se muestre el tema de Ayuda o la lista de temas de Ayuda cuando se solicita ayuda desde el editor.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary>
          Obtiene los tipos de elementos disponibles que se pueden crear para esta colección.
        </summary>
      <returns>
          Tipos de elementos que se pueden crear.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary>
          Establece la matriz especificada como elementos de la colección.
        </summary>
      <returns>
          Objeto de colección recién creado o, en cualquier otro caso, colección indicada por el parámetro <paramref name="editValue" />.
        </returns>
      <param name="editValue">
              Colección que se va a modificar. 
            </param>
      <param name="value">
              Matriz de objetos que se van a establecer como elementos de la colección. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary>
          Muestra el tema de Ayuda predeterminado del editor de la colección.
        </summary>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary>
          Proporciona un cuadro de diálogo modal para editar el contenido de una colección mediante <see cref="T:System.Drawing.Design.UITypeEditor" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />.
        </summary>
      <param name="editor">
              <see cref="T:System.ComponentModel.Design.CollectionEditor" /> que se va a usar para la edición de la colección. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary>
          Indica si se pueden quitar los miembros originales de la colección.
        </summary>
      <returns>
          
            true si se permite quitar este valor de la colección; en caso contrario, false. De forma predeterminada, este método devuelve el valor desde el método <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> del <see cref="T:System.ComponentModel.Design.CollectionEditor" /> de este formulario.
        </returns>
      <param name="value">
              Valor que se va a quitar. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary>
          Indica si se pueden seleccionar a la vez varios elementos de la colección.
        </summary>
      <returns>
          
            true si se pueden seleccionar a la vez varios miembros de la colección; en caso contrario, false. De forma predeterminada, este método devuelve el valor desde el método <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> del <see cref="T:System.ComponentModel.Design.CollectionEditor" /> de este formulario.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary>
          Obtiene el tipo de datos de cada elemento de la colección.
        </summary>
      <returns>
          Tipo de datos de los elementos de la colección.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary>
          Obtiene el tipo de datos del objeto de la colección.
        </summary>
      <returns>
          Tipo de datos del objeto de la colección.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary>
          Obtiene un descriptor de tipo que indica el contexto actual.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el contexto que se está utilizando actualmente, o null si no hay ningún contexto disponible.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary>
          Crea una nueva instancia del tipo de elemento de colección especificado.
        </summary>
      <returns>
          Una instancia nueva del objeto especificado, o null si el usuario decide cancelar la creación de esta instancia.
        </returns>
      <param name="itemType">
              Tipo de elemento que se va a crear. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary>
          Destruye la instancia especificada del objeto.
        </summary>
      <param name="instance">
              Objeto que se va a destruir. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary>
          Muestra al usuario la excepción especificada.
        </summary>
      <param name="e">
              Excepción que se va a mostrar. 
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary>
          Obtiene o establece el objeto de la colección que se va a editar.
        </summary>
      <returns>
          Objeto de la colección que se va a editar.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary>
          Obtiene el servicio solicitado si está disponible.
        </summary>
      <returns>
          Instancia del servicio o null si no se encuentra ningún servicio.
        </returns>
      <param name="serviceType">
              Tipo de servicio que se va a recuperar. 
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary>
          Obtiene o establece la matriz de elementos que mostrará este formulario.
        </summary>
      <returns>
          Matriz de objetos que mostrará el formulario.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary>
          Obtiene los tipos de elementos disponibles que se pueden crear para esta colección.
        </summary>
      <returns>
          Tipos de elementos que se pueden crear.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary>
          Proporciona una oportunidad para realizar el procesamiento cuando se ha cambiado un valor de la colección.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary>
          Muestra el cuadro de diálogo para el editor de la colección mediante el objeto <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> especificado.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.DialogResult" /> que indica el código del resultado devuelto desde el cuadro de diálogo.
        </returns>
      <param name="edSvc">
              <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> que se puede utilizar para mostrar el cuadro de diálogo. 
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentActionsType">
      <summary>
          Especifica el tipo de etiqueta inteligente con enlace a objetos en función de cómo se asociase al componente.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.All">
      <summary>
          Ambos tipos de etiquetas inteligentes.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.Component">
      <summary>
          Sólo etiquetas inteligentes del modelo de extracción.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.Service">
      <summary>
          Sólo etiquetas inteligentes del modelo de inserción.
        </summary>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary>
          Extiende el comportamiento de un componente en modo de diseño.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ComponentDesigner" />. 
        </summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary>
          Obtiene las listas de acciones en tiempo de diseño que admite el componente asociado al diseñador.
        </summary>
      <returns>
          Listas de acciones en tiempo de diseño que admite el componente asociado al diseñador.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary>
          Obtiene la colección de componentes asociados al componente administrado por el diseñador.
        </summary>
      <returns>
          Componentes asociados al componente administrado por el diseñador.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary>
          Obtiene el componente que el diseñador está creando.
        </summary>
      <returns>
          Componente administrado por el diseñador.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary>
          Libera todos los recursos utilizados por el objeto <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados que utiliza la clase <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> y, opcionalmente, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary>
          Crea una firma de método en el archivo de código fuente para el evento predeterminado del componente y hace navegar el cursor del usuario en esa ubicación.
        </summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">
              No se ha podido desproteger un archivo que está protegido en un programa de administración de código fuente.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Finalize">
      <summary>
          Intenta liberar los recursos mediante una llamada a Dispose(false) antes de que el objeto sea reclamado por el recolector de objetos no utilizados.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary>
          Intenta recuperar el tipo de servicio especificado del sitio en modo de diseño del componente del diseñador.
        </summary>
      <returns>
          Objeto que implementa el servicio solicitado o null si no se puede resolver el servicio.
        </returns>
      <param name="serviceType">
              Tipo de servicio que se va a solicitar. 
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary>
          Obtiene un atributo que indica el tipo de herencia del componente asociado.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.InheritanceAttribute" /> para el componente asociado.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary>
          Obtiene un valor que indica si este componente es heredado.
        </summary>
      <returns>
          
            true si el componente es heredado; de lo contrario, false.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, modificar y diseñar el componente especificado.
        </summary>
      <param name="component">
              Componente para este diseñador. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>
          Reinicializa un componente existente.
        </summary>
      <param name="defaultValues">
              Diccionario de valores predeterminados de nombre y valor que se van a aplicar a propiedades. Puede ser null si no se especifican valores predeterminados.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>
          Inicializa un componente recién creado.
        </summary>
      <param name="defaultValues">
              Diccionario de valores predeterminados de nombre y valor que se van a aplicar a propiedades. Puede ser null si no se especifican valores predeterminados.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary>
          Inicializa la configuración de un componente importado que ya se ha inicializado con una configuración que no es la predeterminada.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary>
          Obtiene el objeto <see cref="T:System.ComponentModel.InheritanceAttribute" /> de la enumeración <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> especificada.
        </summary>
      <returns>
          Clase <see cref="T:System.ComponentModel.InheritanceAttribute" /> del diseñador especificado.
        </returns>
      <param name="toInvoke">
              Enumeración <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> cuyo atributo de herencia se va a recuperar. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary>
          Establece las propiedades predeterminadas del componente.
        </summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary>
          Obtiene el componente primario de este diseñador.
        </summary>
      <returns>
          Componente primario de este diseñador o null si el diseñador es el componente raíz.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>
          Permite a un diseñador cambiar o quitar elementos en el conjunto de atributos que expone mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="attributes">
              Atributos para la clase del componente. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>
          Permite a un diseñador cambiar o quitar elementos del conjunto de eventos que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="events">
              Eventos para la clase del componente. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>
          Permite a un diseñador cambiar o quitar elementos del conjunto de propiedades que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="properties">
              Propiedades para la clase del componente. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>
          Permite a un diseñador agregar elementos al conjunto de atributos que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="attributes">
              Atributos para la clase del componente. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>
          Permite a un diseñador agregar elementos al conjunto de eventos que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="events">
              Eventos para la clase del componente. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Permite a un diseñador agregar elementos al conjunto de propiedades que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="properties">
              Propiedades para la clase del componente. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>
          Notifica a <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> que este componente se ha cambiado.
        </summary>
      <param name="member">
              Objeto <see cref="T:System.ComponentModel.MemberDescriptor" /> que indica el miembro que ha cambiado. 
            </param>
      <param name="oldValue">
              Valor antiguo del miembro. 
            </param>
      <param name="newValue">
              Valor nuevo del miembro. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary>
          Notifica a <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> que este componente se va a cambiar.
        </summary>
      <param name="member">
              Clase <see cref="T:System.ComponentModel.MemberDescriptor" /> que indica el miembro que se va a cambiar. 
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary>
          Obtiene una colección de valores de propiedad que reemplazan la configuración del usuario.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> que indica las propiedades con copia sombra del documento de diseño.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />.
        </summary>
      <param name="attributes">
              Objetos <see cref="T:System.Attribute" /> para la clase del componente. Las claves del diccionario de atributos son los valores de la propiedad <see cref="P:System.Attribute.TypeId" /> de los atributos.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />.
        </summary>
      <param name="events">
              Objetos <see cref="T:System.ComponentModel.EventDescriptor" /> que representan los eventos de la clase del componente. Las claves del diccionario de eventos son nombres de evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />.
        </summary>
      <param name="properties">
              Objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representan las propiedades de la clase del componente. Las claves del diccionario de propiedades son nombres de propiedad.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />.
        </summary>
      <param name="attributes">
              Objetos <see cref="T:System.Attribute" /> para la clase del componente. Las claves del diccionario de atributos son los valores de la propiedad <see cref="P:System.Attribute.TypeId" /> de los atributos.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />.
        </summary>
      <param name="events">
              Objetos <see cref="T:System.ComponentModel.EventDescriptor" /> que representan los eventos de la clase del componente. Las claves del diccionario de eventos son nombres de evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />.
        </summary>
      <param name="properties">
              Objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representan las propiedades de la clase del componente. Las claves del diccionario de propiedades son nombres de propiedad.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary>
          Para obtener una descripción de este miembro, vea la propiedad <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" />.
        </summary>
      <returns>
          <see cref="T:System.Collections.ICollection" /> que contiene la colección de diseñadores <see cref="T:System.ComponentModel.Design.IDesigner" /> incluida en el diseñador primario actual. 
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary>
          Para obtener una descripción de este miembro, vea la propiedad <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" />.
        </summary>
      <returns>
          Interfaz <see cref="T:System.ComponentModel.Design.IDesigner" /> que representa el diseñador primario o null si no hay ningún elemento primario.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary>
          Obtiene los verbos en tiempo de diseño que admite el componente asociado al diseñador.
        </summary>
      <returns>
          Colección <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> de objetos <see cref="T:System.ComponentModel.Design.DesignerVerb" /> o null si no hay verbos del diseñador disponibles. Esta implementación predeterminada siempre devuelve null.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary>
          Representa una colección de propiedades con copia sombra que debe reemplazar los valores predeterminados o asignados heredados de propiedades concretas. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary>
          Indica si existe en la colección una propiedad que coincide con el nombre especificado.
        </summary>
      <returns>
          
            Es true si la propiedad está en la colección; en caso contrario, es false.
        </returns>
      <param name="propertyName">
              Nombre de la propiedad de la colección cuya existencia en la colección se va a comprobar. 
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary>
          Obtiene o establece el objeto que se encuentra en el índice especificado.
        </summary>
      <returns>
          Valor de la propiedad especificada, si existe en la colección. En los demás casos, el valor se recupera del valor actual de la propiedad que no tiene copia sombra.
        </returns>
      <param name="propertyName">
              Nombre de la propiedad a la que se va a tener acceso en la colección. 
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.DateTimeEditor">
      <summary>
          Este editor de fecha y hora es una <see cref="T:System.Drawing.Design.UITypeEditor" /> apropiada para modificar los objetos <see cref="T:System.DateTime" /> visualmente.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DateTimeEditor" />. 
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Modifica el valor del objeto especificado utilizando el estilo de editor proporcionado por GetEditorStyle. Se proporciona un proveedor de servicios para poder obtener todos los servicios de edición necesarios.
        </summary>
      <returns>
          Nuevo valor del objeto. Si el valor del objeto no ha cambiado, este método debe devolver el mismo objeto que se pasó.
        </returns>
      <param name="context">
              Contexto de descriptor de tipos que puede utilizarse para proporcionar información de contexto adicional. 
            </param>
      <param name="provider">
              Objeto de proveedor de servicios mediante el que se pueden obtener los servicios de edición. 
            </param>
      <param name="value">
              Instancia del valor que se va a modificar. 
            </param>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              <see cref="T:System.IServiceProvider" /> que puede utilizar este editor para obtener servicios. 
            </param>
      <param name="value">
              Objeto que se va a modificar. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Recupera el estilo de edición del método <see cref="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue" />. Si no se admite el método, devolverá None.
        </summary>
      <returns>
          Valor enum que indica el estilo de edición proporcionado.
        </returns>
      <param name="context">
              Contexto de descriptor de tipos que puede utilizarse para proporcionar información de contexto adicional. 
            </param>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary>
          Representa un elemento de encabezado estático en un panel de etiquetas inteligentes. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> con la cadena de nombre proporcionada.
        </summary>
      <param name="displayName">
              Texto que se va a mostrar en el encabezado.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> con las cadenas de nombre y categoría proporcionadas.
        </summary>
      <param name="displayName">
              Texto que se va a mostrar en el encabezado.
            </param>
      <param name="category">
              <see cref="T:System.String" /> que distingue entre mayúsculas y minúsculas y define las agrupaciones de las entradas del panel.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary>
          Proporciona la clase base para los tipos que representan un elemento de panel en un panel de etiquetas inteligentes.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.
        </summary>
      <param name="displayName">
              Texto de panel para este elemento.
            </param>
      <param name="category">
              <see cref="T:System.String" /> que distingue entre mayúsculas y minúsculas y define las agrupaciones de las entradas del panel.
            </param>
      <param name="description">
              Texto complementario para este elemento, que se puede utilizar en la información sobre herramientas o en la barra de estado.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary>
          Obtiene o establece un valor que indica si se permite colocar este elemento en un grupo de elementos cuya propiedad <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" /> tenga el mismo valor.
        </summary>
      <returns>
          
            true si se puede agrupar el elemento; en caso contrario, false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary>
          Obtiene el nombre de grupo para un elemento.
        </summary>
      <returns>
          Cadena que representa el grupo del que el elemento es un miembro. 
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary>
          Obtiene el texto complementario para el elemento.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el texto descriptivo para el elemento.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary>
          Obtiene el texto para este elemento.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el texto que se va a mostrar para el elemento.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary>
          Obtiene una referencia a una colección que se puede utilizar para almacenar los pares de clave/valor definidos por programador.
        </summary>
      <returns>
          Colección que implementa <see cref="T:System.Collections.IDictionary" />.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary>
          Representa una colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary>
          Agrega el objeto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> suministrado a la colección actual.
        </summary>
      <returns>
          Índice de <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> donde se ha agregado el valor.
        </returns>
      <param name="value">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que se va a agregar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary>
          Determina si <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contiene un elemento específico.
        </summary>
      <returns>
          
            Es true si la colección <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contiene el valor especificado; en caso contrario, es false.
        </returns>
      <param name="value">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que se va a buscar en la colección <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary>
          Copia los elementos de la colección actual en la matriz suministrada, comenzando por el índice especificado de la matriz.
        </summary>
      <param name="array">
              Matriz de <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> unidimensional que constituye el destino de los elementos copiados desde la colección actual. La matriz debe tener una indización de base cero.
            </param>
      <param name="index">
              Índice de base cero de <paramref name="array" /> donde comienza la copia.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary>
          Determina el índice de un elemento específico de la colección.
        </summary>
      <returns>
          Índice de base cero de la primera aparición de <paramref name="value" /> en toda la colección <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />, si se encuentra; en caso contrario, -1.
        </returns>
      <param name="value">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que se va a buscar en la colección.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary>
          Inserta un elemento en el índice especificado de la colección <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.
        </summary>
      <param name="index">
              Índice basado en cero en el que debe insertarse <paramref name="value" />.
            </param>
      <param name="value">
              Elemento <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que se va a insertar.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary>
          Obtiene o establece el elemento que se encuentra en el índice especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que se encuentra en el índice especificado.
        </returns>
      <param name="index">
              Índice de base cero del elemento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary>
          Quita la primera aparición de un objeto específico de la colección <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.
        </summary>
      <param name="value">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que se va a quitar de la colección <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary>
          Proporciona la clase base para los tipos que definen una lista de elementos utilizados para crear un panel de etiquetas inteligentes.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionList" />.
        </summary>
      <param name="component">
              Componente relacionado con el objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" />.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary>
          Obtiene o establece un valor que indica si se debe mostrar automáticamente el panel de etiquetas inteligentes al crearse.
        </summary>
      <returns>
          
            true si se debe mostrar el panel al crear el componente propietario; de lo contrario, false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary>
          Obtiene el componente relacionado con <see cref="T:System.ComponentModel.Design.DesignerActionList" />.
        </summary>
      <returns>
          Componente relacionado con <see cref="T:System.ComponentModel.Design.DesignerActionList" />.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary>
          Devuelve un objeto que representa un servicio proporcionado por el componente asociado al objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" />.
        </summary>
      <returns>
          <see cref="T:System.Object" /> que representa un servicio suministrado por <see cref="T:System.ComponentModel.Component" />. Este valor es null si <see cref="T:System.ComponentModel.Component" /> no proporciona el servicio especificado.
        </returns>
      <param name="serviceType">
              Servicio suministrado por <see cref="T:System.ComponentModel.Component" />.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary>
          Devuelve la colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que contiene la lista.
        </summary>
      <returns>
          Matriz de <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que contiene los elementos de esta lista.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary>
          Representa una colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> con la configuración predeterminada.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> con los elementos de panel especificados.
        </summary>
      <param name="value">
              Matriz de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que va a rellenar la colección.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="value" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary>
          Agrega el objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> proporcionado a la colección actual.
        </summary>
      <returns>
          Posición donde se inserta el nuevo elemento en la lista interna de la colección.
        </returns>
      <param name="value">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que se va a agregar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary>
          Agrega los elementos de la matriz <see cref="T:System.ComponentModel.Design.DesignerActionList" /> proporcionada al final de la colección actual.
        </summary>
      <param name="value">
              Matriz de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que se va a agregar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="value" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>
          Agrega los elementos del objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> proporcionado al final de la colección actual.
        </summary>
      <param name="value">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que se va a agregar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="value" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary>
          Indica si la colección contiene un valor específico.
        </summary>
      <returns>
          
            true si la colección contiene el valor especificado; en caso contrario, false.
        </returns>
      <param name="value">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que se va a buscar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary>
          Copia los elementos de la colección actual en la matriz proporcionada, comenzando por el índice de matriz especificado.
        </summary>
      <param name="array">
              Matriz unidimensional de tipo <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que constituye el destino de los elementos copiados de la colección actual. La matriz debe tener una indización de base cero.
            </param>
      <param name="index">
              Índice de base cero de <paramref name="array" /> donde empieza la operación de copia.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="array" /> es null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> es menor que 0.
            </exception>
      <exception cref="T:System.ArgumentException">
              La matriz de destino es incompatible por una o varias de las razones siguientes:
              
                
                  La matriz es multidimensional.
                
                
                  
                    <paramref name="index" /> es igual o mayor que la longitud del parámetro <paramref name="array" />.
                
                
                  El número de elementos de la colección actual es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la matriz de destino.
                
              
            </exception>
      <exception cref="T:System.InvalidCastException">
              Se produjo un problema al convertir los elementos de la colección actual al tipo de la matriz de destino, quizás como consecuencia de un error de conversión inferior.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary>
          Determina el índice de un elemento específico de la colección.
        </summary>
      <returns>
          Índice de <paramref name="value" /> si se encuentra en la lista interna; en caso contrario, -1.
        </returns>
      <param name="value">
              <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que se va a buscar en la colección.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary>
          Inserta el objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> proporcionado en la posición especificada de la colección.
        </summary>
      <param name="index">
              Índice basado en cero en el que debe insertarse <paramref name="value" />.
            </param>
      <param name="value">
              <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que se va a insertar en la colección.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                El parámetro <paramref name="index" /> es menor que 0 o mayor que el recuento de elementos de la colección actual.
            </exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary>
          Obtiene o establece el elemento que se encuentra en el índice especificado.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionList" /> situado en el índice especificado.
        </returns>
      <param name="index">
              Índice de base cero del elemento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnClear">
      <summary>
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnInsert(System.Int32,System.Object)">
      <summary>
          Realiza procesos personalizados adicionales antes de insertar un nuevo elemento en la instancia de <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />.
        </summary>
      <param name="index">
              Índice de base cero en el que se va a insertar <paramref name="value" />.
            </param>
      <param name="value">
              Nuevo valor del elemento situado en <paramref name="index" />.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnRemove(System.Int32,System.Object)">
      <summary>
          Realiza procesos de personalización adicionales al quitar un elemento de la instancia de <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />.
        </summary>
      <param name="index">
              Índice de base cero en el que se puede encontrar <paramref name="value" />.
            </param>
      <param name="value">
              Valor del elemento que se va a quitar de <paramref name="index" />.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
          Realiza procesos personalizados adicionales antes de establecer un valor en la instancia de <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />.
        </summary>
      <param name="index">
              Índice de base cero en el que se puede encontrar <paramref name="oldValue" />.
            </param>
      <param name="oldValue">
              Valor que se va a reemplazar por <paramref name="newValue" />.
            </param>
      <param name="newValue">
              Nuevo valor del elemento situado en <paramref name="index" />.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary>
          Realiza procesos de personalización adicionales al validar un valor.
        </summary>
      <param name="value">
              Objeto que se va a validar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>
          Quita de la colección la primera aparición de un objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> específico.
        </summary>
      <param name="value">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que se va a quitar de la colección actual.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary>
          Proporciona datos para el evento <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />.
        </summary>
      <param name="relatedObject">
              Objeto asociado a la colección.
            </param>
      <param name="changeType">
              Valor que especifica si se ha agregado o eliminado un objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> de la colección.
            </param>
      <param name="actionLists">
              Colección de elementos de lista resultante tras aplicar la acción.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary>
          Obtiene la colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> asociados a este evento.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que representa el estado actual de la colección.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary>
          Obtiene un indicador que especifica si se ha agregado o quitado un elemento de la colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" /> que indica el tipo de cambio.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary>
          Obtiene el objeto que está asociado a la colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.
        </summary>
      <returns>
          <see cref="T:System.Object" /> asociado al objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> administrado.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> de un objeto <see cref="T:System.ComponentModel.Design.DesignerActionService" />. Esta clase no se puede heredar.
        </summary>
      <param name="sender">
              Origen del evento.
            </param>
      <param name="e">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary>
          Especifica el tipo de cambio que se produce en una colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary>
          Se han agregado a la colección uno o varios objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary>
          Se han eliminado de la colección uno o varios objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.
        </summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary>
          Representa un elemento de panel de etiquetas inteligentes que está asociado a un método en una clase derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> con los nombres para mostrar y de método especificados.
        </summary>
      <param name="actionList">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contiene el método al que se asocia este elemento.
            </param>
      <param name="memberName">
              Nombre con distinción entre mayúsculas y minúsculas del método en la clase derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> al que se va a invocar a través del elemento de panel.
            </param>
      <param name="displayName">
              Texto de panel para este elemento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, con los nombres para mostrar y de método especificados, y con un indicador que especifica si el elemento debe aparecer en otros contextos de la interfaz de usuario.
        </summary>
      <param name="actionList">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contiene el método al que se asocia este elemento.
            </param>
      <param name="memberName">
              Nombre con distinción entre mayúsculas y minúsculas del método en la clase derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> al que se va a invocar a través del elemento de panel.
            </param>
      <param name="displayName">
              Texto de panel para este elemento.
            </param>
      <param name="includeAsDesignerVerb">
              Indicador que especifica si el método asociado también debe tratarse como un verbo de diseñador.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> con los nombres de categoría, para mostrar y de método especificados.
        </summary>
      <param name="actionList">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contiene el método al que se asocia este elemento.
            </param>
      <param name="memberName">
              Nombre con distinción entre mayúsculas y minúsculas del método en la clase derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> al que se va a invocar a través del elemento de panel.
            </param>
      <param name="displayName">
              Texto de panel para este elemento.
            </param>
      <param name="category">
              <see cref="T:System.String" /> con distinción entre mayúsculas y minúsculas que se utiliza para agrupar elementos similares en el panel.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> con los nombres de categoría, para mostrar y de método especificados, y con un indicador que especifica si el elemento debe aparecer en otros contextos de la interfaz de usuario.
        </summary>
      <param name="actionList">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contiene el método al que se asocia este elemento.
            </param>
      <param name="memberName">
              Nombre con distinción entre mayúsculas y minúsculas del método en la clase derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> al que se va a invocar a través del elemento de panel.
            </param>
      <param name="displayName">
              Texto de panel para este elemento.
            </param>
      <param name="category">
              <see cref="T:System.String" /> con distinción entre mayúsculas y minúsculas que se utiliza para agrupar elementos similares en el panel.
            </param>
      <param name="includeAsDesignerVerb">
              Indicador que especifica si el método asociado también debe tratarse como un verbo del diseñador para el componente asociado.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> con los nombres de categoría y método especificados, así como texto para mostrar y de descripción.
        </summary>
      <param name="actionList">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contiene el método al que se asocia este elemento.
            </param>
      <param name="memberName">
              Nombre con distinción entre mayúsculas y minúsculas del método en la clase derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> al que se va a invocar a través del elemento de panel.
            </param>
      <param name="displayName">
              Texto de panel para este elemento.
            </param>
      <param name="category">
              <see cref="T:System.String" /> con distinción entre mayúsculas y minúsculas que se utiliza para agrupar elementos similares en el panel.
            </param>
      <param name="description">
              Texto complementario para este elemento, que se utiliza en la información sobre herramientas o en la barra de estado.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, con los nombres de categoría y de método establecidos, el texto de descripción y para mostrar y un indicador que especifica si el elemento debe aparecer en otros contextos de la interfaz de usuario.
        </summary>
      <param name="actionList">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contiene el método al que se asocia este elemento.
            </param>
      <param name="memberName">
              Nombre con distinción entre mayúsculas y minúsculas del método en la clase derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> al que se va a invocar a través del elemento de panel.
            </param>
      <param name="displayName">
              Texto de panel para este elemento.
            </param>
      <param name="category">
              <see cref="T:System.String" /> con distinción entre mayúsculas y minúsculas que se utiliza para agrupar elementos similares en el panel.
            </param>
      <param name="description">
              Texto complementario para este elemento, que se utiliza en la información sobre herramientas o en la barra de estado.
            </param>
      <param name="includeAsDesignerVerb">
              Indicador que especifica si el método asociado también debe tratarse como un verbo del diseñador para el componente asociado.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary>
          Obtiene un valor que indica que el objeto <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> debe aparecer en otros contextos de la interfaz de usuario.
        </summary>
      <returns>
          
            true si el elemento se va a utilizar en menús de acceso directo; de lo contrario, false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary>
          Ejecuta mediante programación el método asociado al objeto <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              No se encuentra el método cuyo nombre aparece en <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />.
            </exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary>
          Obtiene el nombre del método al que está asociado este objeto <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el nombre del método asociado.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary>
          Obtiene o establece un componente que contribuye con sus objetos <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> al panel actual.
        </summary>
      <returns>
          Componente suministrado, que debería tener un diseñador asociado que proporcionase elementos.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary>
          Representa un elemento de panel que está asociado a una propiedad en una clase y que se deriva de <see cref="T:System.ComponentModel.Design.DesignerActionList" />. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> con los nombres para mostrar y de propiedad especificados.
        </summary>
      <param name="memberName">
              Nombre con distinción entre mayúsculas y minúsculas de la propiedad asociado a este elemento del panel.
            </param>
      <param name="displayName">
              Texto de panel para este elemento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> con los nombres de categoría y propiedad especificados, así como texto para mostrar.
        </summary>
      <param name="memberName">
              Nombre con distinción entre mayúsculas y minúsculas de la propiedad asociado a este elemento del panel.
            </param>
      <param name="displayName">
              Texto de panel para este elemento.
            </param>
      <param name="category">
              <see cref="T:System.String" /> con distinción entre mayúsculas y minúsculas que se utiliza para agrupar elementos similares en el panel.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> con los nombres de categoría y propiedad especificados, así como texto para mostrar y de descripción.
        </summary>
      <param name="memberName">
              Nombre con distinción entre mayúsculas y minúsculas de la propiedad asociado a este elemento del panel.
            </param>
      <param name="displayName">
              Texto de panel para este elemento.
            </param>
      <param name="category">
              <see cref="T:System.String" /> con distinción entre mayúsculas y minúsculas que se utiliza para agrupar elementos similares en el panel.
            </param>
      <param name="description">
              Texto complementario para este elemento, que se utiliza en la información sobre herramientas o en la barra de estado.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary>
          Obtiene el nombre de la propiedad a la que está asociado este elemento.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el nombre de la propiedad asociada.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary>
          Obtiene o establece un componente que contribuye con sus elementos al panel actual.
        </summary>
      <returns>
          Componente suministrado, que debería tener un diseñador asociado que proporcionase objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary>
          Establece un servicio en tiempo de diseño que administra la colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> para componentes.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionService" />.
        </summary>
      <param name="serviceProvider">
              Proveedor de servicios para el entorno actual en tiempo de diseño.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>
          Agrega un objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a la colección actual de etiquetas inteligentes administradas.
        </summary>
      <param name="comp">
              Interfaz <see cref="T:System.ComponentModel.IComponent" /> que se va a asociar a las etiquetas inteligentes.
            </param>
      <param name="actionList">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contiene los nuevos elementos de etiqueta inteligente que se van a agregar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              Uno o ambos parámetros son null. 
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>
          Agrega un objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> a la colección actual de etiquetas inteligentes administradas.
        </summary>
      <param name="comp">
              Interfaz <see cref="T:System.ComponentModel.IComponent" /> que se va a asociar a las etiquetas inteligentes.
            </param>
      <param name="designerActionListCollection">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que contiene los nuevos elementos de etiqueta inteligente que se van a agregar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              Uno o ambos parámetros son null. 
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary>
          Libera todos los componentes de la administración y borra todas las listas de etiquetas inteligentes de modelo de inserción.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary>
          Determina si el servicio actual de etiquetas inteligentes administra las listas de acciones para el componente especificado.
        </summary>
      <returns>
          
            true si el servicio actual administra el componente; de lo contrario, false.
        </returns>
      <param name="comp">
              Interfaz <see cref="T:System.ComponentModel.IComponent" /> que se va a buscar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="comp" /> es null.
            </exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary>
          Se produce cuando se quita o agrega un objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> para cualquier componente.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary>
          Libera todos los recursos que utiliza la clase <see cref="T:System.ComponentModel.Design.DesignerActionService" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados que utiliza el objeto <see cref="T:System.ComponentModel.Design.DesignerActionService" /> y, opcionalmente, los recursos administrados. 
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto recursos administrados como no administrados y false para liberar únicamente recursos no administrados. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary>
          Devuelve la colección de listas de elementos de etiqueta inteligente asociados a un componente.
        </summary>
      <returns>
          Colección de etiquetas inteligentes para el componente especificado.
        </returns>
      <param name="component">
              Componente al que están asociadas las etiquetas inteligentes.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="comp" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)">
      <summary>
          Devuelve la colección de listas de elementos de etiqueta inteligente del tipo especificado asociado a un componente.
        </summary>
      <returns>
          Colección de etiquetas inteligentes del tipo especificado para el componente determinado.
        </returns>
      <param name="component">
              Componente al que están asociadas las etiquetas inteligentes.
            </param>
      <param name="type">
              Enumeración <see cref="T:System.ComponentModel.Design.ComponentActionsType" /> con la que se filtran las etiquetas inteligentes asociadas.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="comp" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>
          Recupera las etiquetas inteligentes del modelo de extracción asociadas a un componente.
        </summary>
      <param name="component">
              Componente al que están asociadas las etiquetas inteligentes.
            </param>
      <param name="actionLists">
              Colección a la que se van a agregar las etiquetas inteligentes asociadas.
            </param>
      <exception cref="T:System.ArgumentNullException">
              Uno o ambos parámetros son null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>
          Recupera las etiquetas inteligentes del modelo de inserción asociadas a un componente.
        </summary>
      <param name="component">
              Componente al que están asociadas las etiquetas inteligentes.
            </param>
      <param name="actionLists">
              Colección a la que se van a agregar las etiquetas inteligentes asociadas.
            </param>
      <exception cref="T:System.ArgumentNullException">
              Uno o ambos parámetros son null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>
          Quita la lista de etiquetas inteligentes especificada de todos los componentes administrados mediante el servicio actual.
        </summary>
      <param name="actionList">
              Lista de etiquetas inteligentes que se va a quitar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="actionList" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary>
          Quita todas las listas de etiquetas inteligentes asociadas al componente especificado.
        </summary>
      <param name="comp">
              Componente del que se van a desasociar las etiquetas inteligentes.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="comp" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>
          Quita la lista de etiquetas inteligentes especificada del componente determinado.
        </summary>
      <param name="comp">
              Componente del que se van a desasociar las etiquetas inteligentes.
            </param>
      <param name="actionList">
              Lista de etiquetas inteligentes que se va a quitar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              Uno o ambos parámetros son null.
            </exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary>
          Representa un elemento de texto estático en un panel de etiquetas inteligentes.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" />.
        </summary>
      <param name="displayName">
              Texto de panel para este elemento.
            </param>
      <param name="category">
              Categoría utilizada para agrupar elementos similares en el panel.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary>
          Administra la interfaz de usuario para un panel de etiquetas inteligentes. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary>
          Se produce cuando se realiza una solicitud para mostrar u ocultar un panel de etiquetas inteligentes.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary>
          Libera todos los recursos que utiliza la clase <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary>
          Oculta el panel de etiquetas inteligentes para un componente.
        </summary>
      <param name="component">
              Componente cuyo panel de etiquetas inteligentes debe ocultarse.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary>
          Actualiza el panel de etiquetas inteligentes.
        </summary>
      <param name="component">
              Interfaz <see cref="T:System.ComponentModel.IComponent" /> que se va a actualizar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary>
          Indica si se muestra automáticamente el panel de etiquetas inteligentes.
        </summary>
      <returns>
          
            true para que se muestre automáticamente el panel de etiquetas inteligentes; de lo contrario, false.
        </returns>
      <param name="component">
              Interfaz <see cref="T:System.ComponentModel.IComponent" /> que se va a mostrar automáticamente.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary>
          Muestra el panel de etiquetas inteligentes para un componente.
        </summary>
      <param name="component">
              Componente cuyo panel de etiquetas inteligentes debe mostrarse.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary>
          Proporciona datos para el evento <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" />.
        </summary>
      <param name="relatedObject">
              Objeto que está asociado al panel.
            </param>
      <param name="changeType">
              Valor que especifica si se muestra u oculta el panel.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary>
          Obtiene un indicador que especifica si el panel de etiquetas inteligentes se está mostrando u ocultando.
        </summary>
      <returns>
          Enumeración <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" /> que indica el estado del panel.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary>
          Obtiene el objeto que está asociado al panel de etiquetas inteligentes.
        </summary>
      <returns>
          <see cref="T:System.Object" /> asociado al panel de etiquetas inteligentes.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> de <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.
        </summary>
      <param name="sender">
              <see cref="T:System.Object" /> que provocó el evento.
            </param>
      <param name="e">
              Información específica del evento.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary>
          Especifica el estado de vista de un panel de etiquetas inteligentes.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary>
          Se muestra el panel de etiquetas inteligentes.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary>
          Se oculta el panel de etiquetas inteligentes.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary>
          Se actualiza el panel de etiquetas inteligentes.
        </summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary>
          Representa una clase base para las herramientas en tiempo de diseño, que no se derivan de <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> y que proporcionan funciones de etiqueta inteligente o de verbo de diseñador.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary>
          Inicializa una instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerCommandSet" />.
        </summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary>
          Obtiene la colección de todas las etiquetas inteligentes asociadas al componente diseñado.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que contiene las etiquetas inteligentes para el componente diseñado asociado.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary>
          Devuelve una colección de objetos de comando.
        </summary>
      <returns>
          Colección que contiene el tipo especificado (<see cref="T:System.ComponentModel.Design.DesignerActionList" /> o <see cref="T:System.ComponentModel.Design.DesignerVerb" />) de objetos de comando. La implementación base siempre devuelve null.
        </returns>
      <param name="name">
              Tipo de colección que se va a devolver, que indica un objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> o <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary>
          Obtiene la colección de todos los verbos de diseñador asociados al componente diseñado.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> que contiene los verbos de diseñador para el componente diseñado asociado.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary>
          Presenta una interfaz de usuario para los componentes de diseño.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />.
        </summary>
      <exception cref="T:System.ObjectDisposedException">
              La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />.
        </summary>
      <param name="parentProvider">
              Proveedor de servicios primario o null si no se utiliza ningún elemento primario para resolver servicios.
            </param>
      <exception cref="T:System.ObjectDisposedException">
              La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />.
        </summary>
      <param name="parentProvider">
              Proveedor de servicios primario o null si no se utiliza ningún elemento primario para resolver servicios.
            </param>
      <param name="rootComponentType">
              Tipo de componente raíz que se va a crear.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="rootComponent" /> es null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />.
        </summary>
      <param name="rootComponentType">
              Tipo de componente raíz que se va a crear.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="rootComponent" /> es null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary>
          Comienza el proceso de carga con el cargador de diseñadores especificado.
        </summary>
      <param name="loader">
              Cargador de diseñadores que se va a utilizar para cargar el diseñador.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="loader" /> es null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary>
          Comienza el proceso de carga.
        </summary>
      <param name="rootComponentType">
              Tipo de componente que se va a crear en modo de diseño.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="rootComponentType" /> es null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.
            </exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary>
          Obtiene la implementación de <see cref="T:System.ComponentModel.IContainer" /> en la superficie de diseño.
        </summary>
      <returns>
          Implementación de <see cref="T:System.ComponentModel.IContainer" /> en la superficie de diseño.
        </returns>
      <exception cref="T:System.ObjectDisposedException">
              La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary>
          Crea una instancia de un componente.
        </summary>
      <returns>
          Componente recién creado.
        </returns>
      <param name="componentType">
              Tipo de componente que se va a crear.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="componentType" /> es null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary>
          Crea un diseñador cuando se agrega un componente al contenedor.
        </summary>
      <returns>
          Instancia del diseñador solicitado o null si no se encuentra ningún diseñador que coincida.
        </returns>
      <param name="component">
              Componente para el que se debe crear el diseñador.
            </param>
      <param name="rootDesigner">
              
                Es true para crear un diseñador raíz; es false para crear un diseñador normal.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="component" /> es null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary>
          Crea una instancia del tipo especificado.
        </summary>
      <returns>
          Objeto recién creado.
        </returns>
      <param name="type">
              Tipo que se va a crear.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="type" /> es null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary>
          Crea un contenedor adecuado para los controles o componentes de anidamiento.
        </summary>
      <returns>
          Contenedor anidado.
        </returns>
      <param name="owningComponent">
              Componente que administra el contenedor anidado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="owningComponent" /> es null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary>
          Crea un contenedor adecuado para los controles o componentes de anidamiento.
        </summary>
      <returns>
          Contenedor anidado.
        </returns>
      <param name="owningComponent">
              Componente que administra el contenedor anidado.
            </param>
      <param name="containerName">
              Nombre adicional para el contenedor anidado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="owningComponent" /> es null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary>
          Libera los recursos que utiliza el objeto <see cref="T:System.ComponentModel.Design.DesignSurface" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary>
          Libera los recursos que utiliza el objeto <see cref="T:System.ComponentModel.Design.DesignSurface" />.
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto recursos administrados como no administrados y false para liberar únicamente recursos no administrados.
            </param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary>
          Se produce cuando se desecha la superficie de diseño.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary>
          Serializa los cambios en la superficie de diseño.
        </summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary>
          Se produce cuando se realiza una llamada al método <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> de <see cref="T:System.ComponentModel.Design.DesignSurface" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary>
          Recibe un servicio del contenedor de servicios.
        </summary>
      <returns>
          Objeto que implementa, o es una clase derivada, <paramref name="serviceType" /> o null si el servicio no existe en el contenedor de servicios.
        </returns>
      <param name="serviceType">
              Tipo de servicio que se va a recuperar. 
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary>
          Obtiene un valor que indica si la superficie de diseño está cargada actualmente.
        </summary>
      <returns>
          
            true si la superficie de diseño está cargada actualmente; en caso contrario, false.
        </returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary>
          Se produce cuando finaliza la carga del diseñador.
        </summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary>
          Devuelve una colección de errores de carga o una colección nula.
        </summary>
      <returns>
          Objeto <see cref="T:System.Collections.ICollection" /> de errores de carga.
        </returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary>
          Se produce cuando el diseñador está a punto de cargarse.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" />.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" />.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" />.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary>
          Obtiene el contenedor de servicios.
        </summary>
      <returns>
          Contenedor de servicios que proporciona todos los servicios a los diseñadores incluidos en la superficie de diseño.
        </returns>
      <exception cref="T:System.ObjectDisposedException">
              La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.
            </exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary>
          Se produce cuando un diseñador ha finalizado la descarga.
        </summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary>
          Se produce cuando un diseñador está a punto de descargarse.
        </summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary>
          Obtiene la vista para el diseñador raíz.
        </summary>
      <returns>
          Vista para el diseñador raíz.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              La superficie de diseño no se está cargando, el cargador de diseñadores todavía no ha creado un diseñador raíz o la superficie de diseño ha finalizado la carga pero con errores. Puede haber más información disponible en la propiedad <see cref="P:System.Exception.InnerException" />.
            </exception>
      <exception cref="T:System.NotSupportedException">
              Se ha cargado el diseñador, aunque no proporciona una vista compatible con esta superficie de diseño.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.
            </exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary>
          Se produce cuando se ha llamado al método <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> en <see cref="T:System.ComponentModel.Design.IDesignerHost" />.
        </summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceCollection">
      <summary>
          Contiene una colección de superficies de diseño. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)">
      <summary>
          Copia los miembros de la colección en la matriz <see cref="T:System.ComponentModel.Design.DesignSurface" /> especificada a partir del índice de destino especificado.
        </summary>
      <param name="array">
              Matriz en la que se van a copiar los miembros de la colección.
            </param>
      <param name="index">
              Índice de destino dónde empezar a copiar.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Count">
      <summary>
          Obtiene el número total de superficies de diseño incluidas en el objeto <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.
        </summary>
      <returns>
          Número total de elementos incluidos en el objeto <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator">
      <summary>
          Devuelve un enumerador que puede recorrer en iteración la instancia de <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.
        </summary>
      <returns>
          Interfaz <see cref="T:System.Collections.IEnumerator" /> correspondiente a la instancia de <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)">
      <summary>
          Obtiene la superficie de diseño en el índice especificado.
        </summary>
      <returns>
          Superficie de diseño en el índice especificado.
        </returns>
      <param name="index">
              Índice de la superficie de diseño que se va a devolver.
            </param>
      <exception cref="T:System.NotSupportedException">
              La superficie de diseño especificada por <paramref name="index" /> no es compatible.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
          Para obtener una descripción de este miembro, vea el método <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.
        </summary>
      <param name="array">
              <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados desde la clase <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.
            </param>
      <param name="index">
              Índice de <paramref name="array" /> donde se inicia la copia.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count">
      <summary>
          Para obtener una descripción de este miembro, vea la propiedad <see cref="P:System.Collections.ICollection.Count" />.
        </summary>
      <returns>
          Número de elementos incluidos en <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
          Para obtener una descripción de este miembro, vea la propiedad <see cref="P:System.Collections.ICollection.IsSynchronized" />.
        </summary>
      <returns>
          
            true si el acceso a <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> está sincronizado (seguro para la ejecución de subprocesos); en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot">
      <summary>
          Para obtener una descripción de este miembro, vea la propiedad <see cref="P:System.Collections.ICollection.SyncRoot" />.
        </summary>
      <returns>
          Un objeto que se puede utilizar para sincronizar el acceso a <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
          Para obtener una descripción de este miembro, vea el método <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.
        </summary>
      <returns>
          Interfaz <see cref="T:System.Collections.IEnumerator" /> correspondiente a la instancia de <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <summary>
          Proporciona los datos del evento <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />.
        </summary>
      <param name="surface">
              La superficie de diseño que se crea.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="surface" /> es null.
            </exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface">
      <summary>
          Obtiene la superficie de diseño que se crea.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> que se crea.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> de una clase <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />. Esta clase no se puede heredar.
        </summary>
      <param name="sender">
              Origen del evento.
            </param>
      <param name="e">
              <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceManager">
      <summary>
          Administra una colección de objetos <see cref="T:System.ComponentModel.Design.DesignSurface" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.
        </summary>
      <param name="parentProvider">
              Proveedor de servicios principal. Las solicitudes de servicio se reenvían a este proveedor si el administrador de la superficie de diseño no las puede resolver.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
      <summary>
          Obtiene o establece el diseñador activo.
        </summary>
      <returns>
          Diseñador activo.
        </returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
      <summary>
          Se produce cuando cambia el actual diseñador activo.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <summary>
          Crea una instancia de una superficie de diseño.
        </summary>
      <returns>
          Nueva instancia de la superficie de diseño.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
      <summary>
          Crea una instancia de una superficie de diseño.
        </summary>
      <returns>
          Nueva instancia de la superficie de diseño.
        </returns>
      <param name="parentProvider">
              Proveedor de servicios principal. Se creará un nuevo proveedor de servicios combinado que primero solicitará un servicio a este proveedor y, a continuación, delegará cualquier error en el objeto administrador de la superficie de diseño. Este proveedor combinado se pasará al método <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="parentProvider" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
      <summary>
          Implementación que crea la superficie de diseño.
        </summary>
      <returns>
          Nueva instancia de la superficie de diseño.
        </returns>
      <param name="parentProvider">
              Proveedor de servicios que se va a pasar a la superficie de diseño. Bien es una instancia de <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />, o bien un objeto que implementa <see cref="T:System.IServiceProvider" /> y representa una combinación del proveedor de servicios de la clase <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> y de un proveedor que se ha pasado externamente.
            </param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
      <summary>
          Se produce cuando se crea un diseñador.
        </summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
      <summary>
          Se produce cuando se desecha un diseñador.
        </summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
      <summary>
          Obtiene una colección de superficies de diseño.
        </summary>
      <returns>
          Colección de superficies de diseño actualmente alojada por el administrador de la superficie de diseño.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <summary>
          Libera los recursos que utiliza el objeto <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados que utiliza el objeto <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> y, opcionalmente, los recursos administrados.
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto recursos administrados como no administrados y false para liberar únicamente recursos no administrados.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
      <summary>
          Obtiene un servicio del contenedor de servicios del administrador de la superficie de diseño.
        </summary>
      <returns>
          Objeto que implementa, o es una clase derivada, el tipo de servicio especificado; de lo contrario, si el servicio no existe en el contenedor de servicios, null.
        </returns>
      <param name="serviceType">
              Tipo de servicio que se va a recuperar.
            </param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
      <summary>
          Se produce cuando cambia la selección global.
        </summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
      <summary>
          Obtiene la propiedad <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> del administrador de la superficie de diseño.
        </summary>
      <returns>
          Propiedad <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> del administrador de la superficie de diseño.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.DisplayMode">
      <summary>
          Define identificadores que indican los modos de presentación que utiliza <see cref="T:System.ComponentModel.Design.ByteViewer" />.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Hexdump">
      <summary>
          Presentación en formato hexadecimal.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Ansi">
      <summary>
          Presentación en formato ANSI.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Unicode">
      <summary>
          Presentación en formato Unicode.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Auto">
      <summary>
          Modo de presentación que selecciona automáticamente un modo de presentación. En este modo, se examinan los bytes para determinar si son hexadecimales o imprimibles. Si los bytes tienen formato hexadecimal, se selecciona el modo <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" />. Si los caracteres coinciden con un conjunto de caracteres imprimibles, se ejecuta una prueba para seleccionar automáticamente el modo de presentación <see cref="F:System.ComponentModel.Design.DisplayMode.Ansi" /> o <see cref="F:System.ComponentModel.Design.DisplayMode.Unicode" />.
        </summary>
    </member>
    <member name="T:System.ComponentModel.Design.EventBindingService">
      <summary>
          Implementación predeterminada de la interfaz <see cref="T:System.ComponentModel.Design.IEventBindingService" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.EventBindingService" />. 
        </summary>
      <param name="provider">
              Proveedor de servicios a partir del cual <see cref="T:System.ComponentModel.Design.EventBindingService" /> consultará los servicios.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="provider" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>
          Crea un nombre de método único.
        </summary>
      <returns>
          Nombre único del método.
        </returns>
      <param name="component">
              Componente para el que se creará el nombre de método.
            </param>
      <param name="e">
              Evento para el que se va a crear un nombre.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="component" /> o <paramref name="e" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>
          Proporciona una notificación que comunica que un controlador de eventos ya no utiliza un método determinado.
        </summary>
      <param name="component">
              Componente al que está enlazado el método.
            </param>
      <param name="e">
              <see cref="T:System.ComponentModel.EventDescriptor" /> para el controlador de eventos.
            </param>
      <param name="methodName">
              Nombre del método que se va a liberar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>
          Devuelve una colección de nombres de métodos compatibles.
        </summary>
      <returns>
          Colección de cadenas que corresponden a nombres de métodos compatibles.
        </returns>
      <param name="e">
              <see cref="T:System.ComponentModel.EventDescriptor" /> que contiene el delegado compatible.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="e" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)">
      <summary>
          Obtiene el servicio solicitado del proveedor de servicios.
        </summary>
      <returns>
          Referencia al servicio especificado por <paramref name="serviceType" /> o null si el servicio solicitado no está disponible.
        </returns>
      <param name="serviceType">
              Tipo de servicio que se va a recuperar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode">
      <summary>
          Muestra el código de usuario.
        </summary>
      <returns>
          
            true si es posible mostrar el código; de lo contrario, false.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>
          Muestra el código de usuario del método especificado.
        </summary>
      <returns>
          
            true si es posible mostrar el código; de lo contrario, false.
        </returns>
      <param name="component">
              Componente al que está enlazado el método.
            </param>
      <param name="e">
              <see cref="T:System.ComponentModel.EventDescriptor" /> para el controlador de eventos.
            </param>
      <param name="methodName">
              Nombre del método para el que se va a mostrar el código.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)">
      <summary>
          Muestra el código de usuario en el número de línea especificado.
        </summary>
      <returns>
          
            true si es posible mostrar el código; de lo contrario, false.
        </returns>
      <param name="lineNumber">
              Número de línea que se va a mostrar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>
          Crea un nombre único para un método controlador de eventos para el componente y evento especificados.
        </summary>
      <returns>
          Nombre del método controlador de eventos recomendado para este evento.
        </returns>
      <param name="component">
              Instancia del componente a la que está conectado el evento.
            </param>
      <param name="e">
              Evento para el que se va a crear un nombre.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="component" /> o <paramref name="e" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>
          Obtiene una colección de métodos controlador de eventos que tienen una firma de método compatible con el evento especificado.
        </summary>
      <returns>
          Colección de cadenas que corresponden a nombres de métodos compatibles.
        </returns>
      <param name="e">
              Evento para el que se van a obtener métodos controlador de eventos compatibles.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="e" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary>
          Obtiene un <see cref="T:System.ComponentModel.EventDescriptor" /> para el evento que representa el descriptor de propiedades especificado, si representa un evento.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.EventDescriptor" /> del evento que representa la propiedad o null si la propiedad no representa un evento.
        </returns>
      <param name="property">
              Propiedad que representa un evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary>
          Convierte un conjunto de descriptores de eventos en un conjunto de descriptores de propiedades.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que describen el conjunto de eventos.
        </returns>
      <param name="events">
              Eventos que se van a convertir en propiedades.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="events" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary>
          Convierte un descriptor de eventos individuales en un descriptor de propiedades.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.PropertyDescriptor" /> que describe el evento.
        </returns>
      <param name="e">
              Evento que se va a convertir.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="e" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <summary>
          Muestra el código de usuario del diseñador.
        </summary>
      <returns>
          
            Es true si se muestra el código; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>
          Muestra el código de usuario del evento especificado.
        </summary>
      <returns>
          
            Es true si se muestra el código; en caso contrario, es false.
        </returns>
      <param name="component">
              Componente al que está conectado el evento.
            </param>
      <param name="e">
              Evento que se va a mostrar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="events" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
      <summary>
          Muestra el código de usuario del diseñador en la línea especificada.
        </summary>
      <returns>
          
            Es true si se muestra el código; en caso contrario, es false.
        </returns>
      <param name="lineNumber">
              Número de la línea donde se ha de colocar el símbolo de intercalación.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>
          Proporciona una notificación que comunica que un controlador de eventos utiliza un método determinado.
        </summary>
      <param name="component">
              Componente al que está enlazado el método.
            </param>
      <param name="e">
              <see cref="T:System.ComponentModel.EventDescriptor" /> para el controlador de eventos.
            </param>
      <param name="methodName">
              Nombre del método.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)">
      <summary>
          Valida que el nombre del método proporcionado es válido para el lenguaje o secuencia de comandos que se está utilizando.
        </summary>
      <param name="methodName">
              Nombre del método que se va a validar.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary>
          Representa la colección de excepciones.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.
        </summary>
      <param name="exceptions">
              Matriz de tipo <see cref="T:System.Exception" /> que contiene los objetos que van a rellenar la colección.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary>
          Obtiene la matriz de objetos <see cref="T:System.Exception" /> que representa la colección de excepciones.
        </summary>
      <returns>
          Matriz de <see cref="T:System.Exception" /> que representa la colección de excepciones.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Rellena un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar la colección <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.
        </summary>
      <param name="info">
              <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.
            </param>
      <param name="context">
              Destino (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />) de esta serialización.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El parámetro <paramref name="info" /> es null.
            </exception>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentDesignerDebugService">
      <summary>
          Proporciona los servicios de depuración de un entorno en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Assert(System.Boolean,System.String)">
      <summary>
          Valida una condición en un entorno en tiempo de diseño.
        </summary>
      <param name="condition">
              
                Es true para evitar que se muestre <paramref name="message" />; en caso contrario, es false.
            </param>
      <param name="message">
              Mensaje que se va a mostrar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Fail(System.String)">
      <summary>
          Registra un mensaje de error en un entorno en tiempo de diseño.
        </summary>
      <param name="message">
              Mensaje que se va a registrar.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.IComponentDesignerDebugService.IndentLevel">
      <summary>
          Obtiene o establece el nivel de sangría para los resultados de la depuración.
        </summary>
      <returns>
          Nivel de sangría para los resultados de la depuración.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.IComponentDesignerDebugService.Listeners">
      <summary>
          Obtiene una colección de agentes de escucha de seguimiento para supervisar los resultados de la depuración en tiempo de diseño.
        </summary>
      <returns>
          Colección de agentes de escucha de seguimiento 
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Trace(System.String,System.String)">
      <summary>
          Registra un mensaje de depuración en un entorno en tiempo de diseño.
        </summary>
      <param name="message">
              Mensaje que se va a registrar.
            </param>
      <param name="category">
              Categoría de <paramref name="message" />.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentDesignerStateService">
      <summary>
          Permite a un diseñador almacenar y recuperar su estado.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerStateService.GetState(System.ComponentModel.IComponent,System.String)">
      <summary>
          Obtiene un elemento de estado especificado por la clave para el componente determinado.
        </summary>
      <returns>
          Estado del diseñador para <paramref name="component" /> que especifica <paramref name="key" />.
        </returns>
      <param name="component">
              Componente para el que se recupera el elemento de estado del diseñador.
            </param>
      <param name="key">
              Nombre del elemento de estado del diseñador.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerStateService.SetState(System.ComponentModel.IComponent,System.String,System.Object)">
      <summary>
          Establece un elemento de estado especificado por la clave para el componente determinado.
        </summary>
      <param name="component">
              Componente para el que se establece el elemento de estado del diseñador.
            </param>
      <param name="key">
              Nombre del elemento de estado del diseñador.
            </param>
      <param name="value">
              Elemento de estado del diseñador para <paramref name="component" />.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary>
          Proporciona un conjunto de métodos para identificar componentes heredados.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.InheritanceService" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>
          Agrega a <see cref="T:System.ComponentModel.Design.InheritanceService" /> los componentes heredados por el componente especificado.
        </summary>
      <param name="component">
              Componente en el cual se buscarán los componentes heredados que se agregarán al contenedor especificado. 
            </param>
      <param name="container">
              Contenedor al que se agregarán los componentes heredados. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>
          Agrega a <see cref="T:System.ComponentModel.Design.InheritanceService" /> los componentes del tipo especificado heredados por el componente indicado.
        </summary>
      <param name="type">
              Tipo base que se buscará. 
            </param>
      <param name="component">
              Componente en el cual se buscarán los componentes heredados que se agregarán al contenedor especificado. 
            </param>
      <param name="container">
              Contenedor al que se agregarán los componentes heredados. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary>
          Libera todos los recursos que utiliza <see cref="T:System.ComponentModel.Design.InheritanceService" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados que utiliza <see cref="T:System.ComponentModel.Design.InheritanceService" /> y libera los recursos administrados de forma opcional. 
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto recursos administrados como no administrados, y false para liberar únicamente recursos no administrados. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary>
          Obtiene el atributo de herencia del componente especificado.
        </summary>
      <returns>
          Un objeto <see cref="T:System.ComponentModel.InheritanceAttribute" /> que describe el nivel de herencia del que procede este componente.
        </returns>
      <param name="component">
              Componente del cual se va a recuperar el atributo de herencia. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary>
          Indica si se debe omitir el miembro especificado.
        </summary>
      <returns>
          
            true si el miembro especificado debe incluirse en el conjunto de componentes heredados; de lo contrario, false.
        </returns>
      <param name="member">
              Miembro que se va a comprobar. Este miembro es un objeto <see cref="T:System.Reflection.FieldInfo" /> o bien <see cref="T:System.Reflection.MethodInfo" />. 
            </param>
      <param name="component">
              Instancia del componente a la que se enlaza este miembro. 
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary>
          Proporciona datos para el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />.
        </summary>
      <param name="succeeded">
              
                Es true para indicar que la carga del diseñador se llevó a cabo correctamente; de lo contrario, es false.
            </param>
      <param name="errors">
              Colección de errores producidos durante la carga del diseñador.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary>
          Obtiene una colección de los errores producidos durante la carga del diseñador.
        </summary>
      <returns>
          Colección de errores producidos durante la carga del diseñador.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary>
          Obtiene un valor que indica si la carga del diseñador se realizó correctamente.
        </summary>
      <returns>
          
            true si la carga del diseñador se realizó correctamente; en caso contrario, false.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />. Esta clase no se puede heredar.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="e">
              <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> que contiene los datos del evento. 
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.LocalizationExtenderProvider">
      <summary>
          Proporciona a un diseñador raíz compatibilidad en tiempo de diseño para las características de localización.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.#ctor(System.ComponentModel.ISite,System.ComponentModel.IComponent)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> mediante el proveedor de servicios principal especificado y el componente base.
        </summary>
      <param name="serviceProvider">
              Proveedor de servicios para el componente especificado. 
            </param>
      <param name="baseComponent">
              Componente base que se va a localizar. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.CanExtend(System.Object)">
      <summary>
          Indica si este objeto puede proporcionar las propiedades extensoras al objeto especificado.
        </summary>
      <returns>
          
            truesi este objeto puede proporcionar propiedades extensoras al objeto especificado; en caso contrario, false.
        </returns>
      <param name="o">
              Objeto que va a recibir las propiedades extensoras. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose">
      <summary>
          Se deshace de los recursos (distintos de la memoria) utilizados por <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados que utiliza la clase <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> y, opcionalmente, libera los recursos administrados. 
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto los recursos administrados como los no administrados, y es false para liberar únicamente los recursos no administrados. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLanguage(System.Object)">
      <summary>
          Obtiene la referencia cultural de recursos actual para el objeto especificado.
        </summary>
      <returns>
          <see cref="T:System.Globalization.CultureInfo" /> que indica la variedad de recurso.
        </returns>
      <param name="o">
              Objeto cuya referencia cultural de recursos actual se va a obtener. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLoadLanguage(System.Object)">
      <summary>
          Obtiene la referencia cultural de recursos predeterminada al inicializar los valores de un objeto localizado en tiempo de diseño.
        </summary>
      <returns>
          <see cref="T:System.Globalization.CultureInfo" /> que indica la referencia cultural de recursos que se va a utilizar para inicializar los valores del objeto especificado.
        </returns>
      <param name="o">
              Objeto cuya referencia cultural de recursos se va a obtener. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLocalizable(System.Object)">
      <summary>
          Obtiene un valor que indica si el objeto especificado admite la localización de recursos.
        </summary>
      <returns>
          
            true si el objeto especificado admite la localización de recursos; en caso contrario, es false.
        </returns>
      <param name="o">
              Objeto que se comprueba para la compatibilidad de localización. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.ResetLanguage(System.Object)">
      <summary>
          Restablece la referencia cultural de recursos para el objeto especificado.
        </summary>
      <param name="o">
              Objeto cuya referencia cultural de recursos se va a restablecer. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLanguage(System.Object,System.Globalization.CultureInfo)">
      <summary>
          Establece que la referencia cultural de recursos actual para el objeto especificado sea la referencia cultural de recursos especificada.
        </summary>
      <param name="o">
              Componente base para el que se va a establecer la referencia cultural de recursos. 
            </param>
      <param name="language">
              <see cref="T:System.Globalization.CultureInfo" /> que indica la referencia cultural de recursos que se va a utilizar. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLocalizable(System.Object,System.Boolean)">
      <summary>
          Establece un valor que indica si el objeto especificado admite recursos localizados.
        </summary>
      <param name="o">
              Componente base que se va a establecer como localizable o no localizable. 
            </param>
      <param name="localizable">
              
                true si el objeto admite la localización de recursos; en caso contrario, false. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.ShouldSerializeLanguage(System.Object)">
      <summary>
          Obtiene un valor que indica si los valores localizables del objeto especificado se deben conservar en un recurso.
        </summary>
      <returns>
          
            Es true si los valores localizables se deben conservar en los recursos; en caso contrario, es false.
        </returns>
      <param name="o">
              Objeto para el que se va a obtener el indicador de persistencia de compatibilidad de idioma. 
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <summary>
          Proporciona datos para el evento <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />.
        </summary>
      <param name="changeType">
              Tipo de cambio.
            </param>
      <param name="command">
              Comando de menú.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType">
      <summary>
          Obtiene el tipo de cambio que hizo que se provocara el evento <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.
        </summary>
      <returns>
          Tipo de cambio <see cref="T:System.ComponentModel.Design.MenuCommandsChangedType" /> que hizo que se provocara el evento <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command">
      <summary>
          Obtiene el comando que se agregó, quitó o cambió.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.MenuCommand" /> que se ha agregado, quitado o cambiado.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> de <see cref="T:System.ComponentModel.Design.MenuCommandService" />. Esta clase no se puede heredar.
        </summary>
      <param name="sender">
              Origen del evento.
            </param>
      <param name="e">
              <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedType">
      <summary>
          Especifica el tipo de acción que se ha producido en la colección de <see cref="T:System.Windows.Forms.Design.MenuCommands" /> del objeto relacionado.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded">
      <summary>
          Especifica que se han agregado uno o varios objetos de comando.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved">
      <summary>
          Especifica que se han quitado uno o varios comandos.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged">
      <summary>
          Especifica que uno o varios comandos han cambiado de estado.
        </summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandService">
      <summary>
          Implementa la interfaz <see cref="T:System.ComponentModel.Design.IMenuCommandService" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.MenuCommandService" />. 
        </summary>
      <param name="serviceProvider">
              Proveedor de servicios que utiliza este servicio para obtener otros servicios.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>
          Agrega un controlador de comandos al servicio de comandos de menú.
        </summary>
      <param name="command">
              Objeto <see cref="T:System.ComponentModel.Design.MenuCommand" /> que se va a agregar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="command" /> es null.
            </exception>
      <exception cref="T:System.ArgumentException">
              Ya existe un <paramref name="command" /> de controlador de comandos.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>
          Agrega un verbo a la tabla de verbos del objeto <see cref="T:System.ComponentModel.Design.MenuCommandService" />.
        </summary>
      <param name="verb">
              Objeto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> que se va a agregar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="verb" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose">
      <summary>
          Libera todos los recursos utilizados por <see cref="T:System.ComponentModel.Design.MenuCommandService" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
      <summary>
          Libera todos los recursos utilizados por <see cref="T:System.ComponentModel.Design.MenuCommandService" />.
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto recursos administrados como no administrados y false para liberar únicamente recursos no administrados.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
      <summary>
          Garantiza que se ha creado la lista de verbos.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>
          Busca el <see cref="T:System.ComponentModel.Design.MenuCommand" /> asociado al identificador de comandos especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.MenuCommand" /> asociado al comando especificado; en caso contrario, si no se encuentra el comando, null.
        </returns>
      <param name="commandID">
              <see cref="T:System.ComponentModel.Design.CommandID" /> que se desea buscar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
      <summary>
          Busca el <see cref="T:System.ComponentModel.Design.MenuCommand" /> asociado al comando especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.MenuCommand" /> asociado al comando especificado; en caso contrario, si no se encuentra el comando, null.
        </returns>
      <param name="guid">
              GUID del comando.
            </param>
      <param name="id">
              Identificador del comando.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
      <summary>
          Obtiene la lista de comandos para un GUID determinado.
        </summary>
      <returns>
          <see cref="T:System.Collections.ICollection" /> de comandos.
        </returns>
      <param name="guid">
              GUID de la lista de comandos.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
      <summary>
          Obtiene una referencia sobre el servicio solicitado.
        </summary>
      <returns>
          Referencia a <paramref name="serviceType" />; en caso contrario, si no se encuentra el servicio, null.
        </returns>
      <param name="serviceType">
              <see cref="T:System.Type" /> del servicio que se va a recuperar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="serviceType" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary>
          Invoca al comando especificado en el formulario local o en el entorno global.
        </summary>
      <returns>
          
            true si se encuentra el comando; en caso contrario, false.
        </returns>
      <param name="commandID">
              Comando al que se va a invocar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <summary>
          Invoca al comando especificado con el parámetro igualmente especificado en el formulario local o en el entorno global.
        </summary>
      <returns>
          
            true si se encuentra el comando; en caso contrario, false.
        </returns>
      <param name="commandId">
              Comando al que se va a invocar.
            </param>
      <param name="arg">
              Parámetro para la invocación.
            </param>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
      <summary>
          Se produce cuando cambia el estado de un comando de menú.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />. 
        </summary>
      <param name="e">
              Objeto <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> que contiene los datos del evento. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>
          Quita del documento el comando de menú especificado.
        </summary>
      <param name="command">
              Comando que se va a quitar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="command" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>
          Quita del documento el verbo especificado.
        </summary>
      <param name="verb">
              Verbo que se va a quitar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="verb" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary>
          Muestra el menú de acceso directo con el identificador de comandos especificado en la ubicación indicada.
        </summary>
      <param name="menuID">
              Menú de acceso directo que se va a mostrar.
            </param>
      <param name="x">
              Coordenada x de la ubicación del menú de acceso directo.
            </param>
      <param name="y">
              Coordenada y de la ubicación del menú de acceso directo.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandService.Verbs">
      <summary>
          Obtiene una colección de los verbos de diseñador que están disponibles actualmente.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> de los verbos de diseñador que están disponibles actualmente.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary>
          Muestra un cuadro de diálogo para editar las cadenas multilínea en modo de diseño.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.MultilineStringEditor" />. 
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Edita el valor del objeto especificado utilizando el estilo de edición proporcionado por <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.
        </summary>
      <returns>
          Nuevo valor del objeto. En caso de que el valor del objeto no cambie, este método devuelve el mismo objeto que se ha pasado.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              Objeto de proveedor de servicios mediante el que se obtienen los servicios de edición. 
            </param>
      <param name="value">
              Instancia del valor que se va a modificar. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de edición del método <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.
        </summary>
      <returns>
          Valor de enumeración <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición admitido.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene un valor que indica si este editor permite dibujar una representación del valor de un objeto.
        </summary>
      <returns>
          
            Valor false, que indica que <see cref="T:System.Drawing.Design.UITypeEditor" /> no muestra una representación visual en la ventana Propiedades.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary>
          Implementa la funcionalidad básica que se puede utilizar para diseñar editores de valor. A su vez, estos editores pueden proporcionar una interfaz de usuario para representar y editar los valores de los objetos de los tipos de datos compatibles.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.
        </summary>
      <param name="subObjectSelector">
              Valor de selector del subobjeto especificado.
            </param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary>
          Representa el valor actual de <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Modifica el valor del objeto especificado utilizando el estilo de editor indicado mediante <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" />.
        </summary>
      <returns>
          Nuevo valor del objeto. En caso de que el valor del objeto no cambie, el método devolverá el mismo objeto que se ha pasado.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
      <param name="provider">
              <see cref="T:System.IServiceProvider" /> que puede utilizar este editor para obtener servicios.
            </param>
      <param name="value">
              Objeto que se va a modificar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary>
          Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Object" /> actual.
        </summary>
      <returns>
          
            Es true si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Object" /> actual; en caso contrario, es false.
        </returns>
      <param name="value">
              Objeto <see cref="T:System.Object" /> que se va a comparar con la clase <see cref="T:System.Object" /> actual.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary>
          Rellena una colección jerárquica de elementos con etiquetas, en la que cada elemento está representado por un objeto <see cref="T:System.Windows.Forms.TreeNode" />.
        </summary>
      <param name="selector">
              Colección jerárquica de elementos con etiquetas.
            </param>
      <param name="context">
              Información de contexto para un componente.
            </param>
      <param name="provider">
              Método <see cref="M:System.IServiceProvider.GetService(System.Type)" /> de esta interfaz que obtiene el objeto que proporciona el servicio.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de editor que utilizado por el método <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.
        </summary>
      <returns>
          Valor de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de editor utilizado por <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary>
          Representa el valor anterior de <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary>
          Establece el objeto <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> actual en el valor especificado.
        </summary>
      <param name="value">
              Valor especificado.
            </param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary>
          Controla si son accesibles o no los nodos de la colección jerárquica de elementos con etiquetas.
        </summary>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary>
          Muestra una colección jerárquica de elementos con etiquetas, representado cada uno por un <see cref="T:System.Windows.Forms.TreeNode" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />.
        </summary>
      <param name="editor">
              Objeto <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary>
          Agrega un nuevo nodo de árbol a la colección.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> agregado a la colección. 
        </returns>
      <param name="label">
              Etiqueta para el nodo.
            </param>
      <param name="value">
              <see cref="T:System.Object" /> que representa el valor para el nodo.
            </param>
      <param name="parent">
              Elemento principal del nodo.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary>
          Quita todos los nodos de árbol de la colección.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary>
          Esto campo sólo es para uso interno.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary>
          Se produce después de seleccionarse el nodo de árbol.
        </summary>
      <param name="sender">
              Origen de un evento.
            </param>
      <param name="e">
              Objeto <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
          Se produce cuando se presiona una tecla mientras el control tiene el foco.
        </summary>
      <param name="e">
              Proporciona datos para el evento <see cref="E:System.Windows.Forms.Control.KeyDown" />.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
          Se produce cuando se presiona una tecla mientras el control tiene el foco.
        </summary>
      <param name="e">
              Proporciona datos para el evento <see cref="E:System.Windows.Forms.Control.KeyPress" />.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary>
          Se produce cuando el puntero del mouse (ratón) se encuentra sobre el control y se hace clic con uno de sus botones.
        </summary>
      <param name="e">
              Proporciona datos para los eventos <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" /> y <see cref="E:System.Windows.Forms.Control.MouseMove" />.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary>
          Establece los nodos de colección en un valor concreto.
        </summary>
      <returns>
          
            true si se han establecido los nodos de la colección; en caso contrario, false.
        </returns>
      <param name="value">
              Valor que hay que establecer.
            </param>
      <param name="nodes">
              Colección de nodos.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary>
          Inicializa el servicio de editor.
        </summary>
      <param name="edSvc">
              Servicio de editor.
            </param>
      <param name="value">
              Valor que hay que establecer.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary>
          Quita el servicio de editor.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <summary>
        </summary>
      <param name="m">
              <see cref="T:System.Windows.Forms.Message" /> de Windows que se va a procesar.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary>
          Representa un nodo de <see cref="T:System.Windows.Forms.TreeView" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />.
        </summary>
      <param name="label">
              Etiqueta del nodo.
            </param>
      <param name="value">
              <see cref="T:System.Object" /> que representa el valor del nodo.
            </param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary>
          Representa el valor del nodo.
        </summary>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary>
          Especifica la funcionalidad genérica para deshacer/rehacer en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.UndoEngine" />.
        </summary>
      <param name="provider">
              Proveedor de servicios primario.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="provider" /> es null.
            </exception>
      <exception cref="T:System.NotSupportedException">
              No se puede encontrar un servicio necesario. Vea los servicios necesarios en <see cref="T:System.ComponentModel.Design.UndoEngine" />. Si ha quitado este servicio, asegúrese de proporcionar uno de reemplazo.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>
          Agrega un objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> a la pila para deshacer.
        </summary>
      <param name="unit">
              Unidad para deshacer que se va a agregar. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary>
          Crea un nuevo objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.
        </summary>
      <returns>
          Nueva unidad <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.
        </returns>
      <param name="name">
              Nombre de la unidad que se va a crear. 
            </param>
      <param name="primary">
              
                Es true para crear la primera de una serie de unidades anidadas; es false para crear unidades anidadas subsiguientes.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>
          Descarta un objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.
        </summary>
      <param name="unit">
              Unidad que se va a descartar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary>
          Libera todos los recursos que utiliza el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados que utiliza el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> y, opcionalmente, los recursos administrados. 
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto recursos administrados como no administrados y false para liberar únicamente recursos no administrados. 
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary>
          Habilita o deshabilita el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" />.
        </summary>
      <returns>
          
            true si el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> está activado; en caso contrario, false.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary>
          Obtiene el servicio solicitado.
        </summary>
      <returns>
          Servicio solicitado, si se encuentra.
        </returns>
      <param name="serviceType">
              Tipo de servicio que se va a recuperar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="serviceType" /> es null.
            </exception>
      <exception cref="T:System.NotSupportedException">
              
                El parámetro <paramref name="serviceType" /> que es necesario pero no se encuentra. Si ha quitado este servicio, asegúrese de proporcionar uno de reemplazo.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary>
          Obtiene el servicio solicitado.
        </summary>
      <returns>
          Servicio solicitado o null si no se encuentra el servicio solicitado.
        </returns>
      <param name="serviceType">
              Tipo de servicio que se va a recuperar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="serviceType" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" />. 
        </summary>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" />. 
        </summary>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary>
          Se produce inmediatamente antes de que se realice una acción de deshacer.
        </summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary>
          Indica si está en curso una acción de deshacer.
        </summary>
      <returns>
          
            true si está en curso una acción de deshacer; de lo contrario, false.
        </returns>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary>
          Se produce inmediatamente después de que se realice una acción de deshacer.
        </summary>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary>
          Encapsula una unidad de trabajo que cualquier usuario puede deshacer.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.
        </summary>
      <param name="engine">
              Motor para deshacer propietario de esta unidad para deshacer.
            </param>
      <param name="name">
              Nombre de esta unidad para deshacer.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="engine" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary>
          Recibe una llamada del motor para deshacer con el fin de cerrar esta unidad.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>
          Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>
          Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
          Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>
          Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>
          Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>
          Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary>
          Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary>
          Obtiene una instancia del servicio solicitado.
        </summary>
      <returns>
          Instancia del servicio especificado o null si no se puede resolver dicho servicio.
        </returns>
      <param name="serviceType">
              Tipo de servicio que se va a recuperar.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary>
          Obtiene un valor que indica si el objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> no contiene ningún evento.
        </summary>
      <returns>
          
            true si el objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> no contiene ningún evento; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary>
          Obtiene el nombre de <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />. 
        </summary>
      <returns>
          Nombre del objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary>
          Devuelve un objeto <see cref="T:System.String" /> que representa el nombre actual de la unidad.
        </summary>
      <returns>
          <see cref="T:System.String" /> que representa el nombre actual de la unidad.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary>
          Lleva a cabo una acción de deshacer o rehacer.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary>
          <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> llama a este método para llevar a cabo una acción de deshacer.
        </summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary>
          Obtiene la propiedad <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> primaria.
        </summary>
      <returns>
          Propiedad <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> a la que está asociado el objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceDescriptor">
      <summary>
          Implementa la funcionalidad básica requerida por un origen de datos único en el nivel EnvDTE.Project.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />.
        </summary>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.Image">
      <summary>
          Cuando se reemplaza en una clase derivada, cierra esta secuencia y la secuencia subyacente obtiene la imagen <see cref="T:System.Drawing.Bitmap" /> que representa el origen de datos.
        </summary>
      <returns>
          Imagen <see cref="T:System.Drawing.Bitmap" /> que representa el origen de datos.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.IsDesignable">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor que indica si el origen de datos se puede diseñar.
        </summary>
      <returns>
          
            true si el origen de datos se puede diseñar; de lo contrario, false.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.Name">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el nombre del origen de datos.
        </summary>
      <returns>
          Nombre del origen de datos.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.TypeName">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el nombre de tipo completo del origen de datos.
        </summary>
      <returns>
          Nombre de tipo completo del origen de datos.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection">
      <summary>
          Proporciona una colección con seguridad de tipos de objetos <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Add(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>
          Agrega un objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> a la colección.
        </summary>
      <returns>
          Índice del <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> que se ha agregado a la colección.
        </returns>
      <param name="value">
              <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> que se va a agregar a la colección.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Contains(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>
          Obtiene un valor que indica si la colección <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> contiene el objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> especificado.
        </summary>
      <returns>
          
            true si la colección contiene el objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />; de lo contrario, false.
        </returns>
      <param name="value">
              Objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> que se va a buscar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.CopyTo(System.ComponentModel.Design.Data.DataSourceDescriptor[],System.Int32)">
      <summary>
          Copia los valores de <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> en una instancia de <see cref="T:System.Array" /> unidimensional en el índice especificado.
        </summary>
      <param name="array">
              <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados desde <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.
            </param>
      <param name="index">
              Índice de <paramref name="array" /> donde se inicia la copia.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.IndexOf(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>
          Devuelve el índice de un objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> en la colección <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.
        </summary>
      <returns>
          Índice del objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> del parámetro <paramref name="value" /> en la colección <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />, si se encuentra; de lo contrario, -1.
        </returns>
      <param name="value">
              Objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> que se va a buscar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Insert(System.Int32,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>
          Inserta un objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> en el índice especificado de <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.
        </summary>
      <param name="index">
              Índice basado en cero en el que debe insertarse <paramref name="value" />. 
            </param>
      <param name="value">
              <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> que se va a insertar.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Item(System.Int32)">
      <summary>
          Obtiene o establece el objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> especificado.
        </returns>
      <param name="index">
              Objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> especificado.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Remove(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>
          Quita un objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> específico de la colección <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.
        </summary>
      <param name="value">
              <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> que se quita de <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceGroup">
      <summary>
          Implementa la funcionalidad básica requerida por un origen de datos único en el nivel EnvDTE.Project.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroup.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />.
        </summary>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.DataSources">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene la colección de descriptores para los orígenes de datos de este grupo.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> que representa la colección de descriptores para los orígenes de datos de este grupo.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.Image">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene la imagen <see cref="T:System.Drawing.Bitmap" /> que representa al grupo.
        </summary>
      <returns>
          Imagen <see cref="T:System.Drawing.Bitmap" /> que representa al grupo.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.IsDefault">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene un valor que indica si este grupo es el predeterminado.
        </summary>
      <returns>
          
            true si el grupo es el predeterminado; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.Name">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el nombre del grupo.
        </summary>
      <returns>
          Nombre del grupo.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceGroupCollection">
      <summary>
          Proporciona una colección con seguridad de tipos de objetos <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Add(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>
          Agrega un objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> a la colección.
        </summary>
      <returns>
          Índice del <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> que se ha agregado a la colección.
        </returns>
      <param name="value">
              <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> que se va a agregar a la colección.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Contains(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>
          Obtiene un valor que indica si la colección <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> contiene el objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> especificado.
        </summary>
      <returns>
          
            true si la colección contiene el objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />; de lo contrario, false.
        </returns>
      <param name="value">
              Objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> que se va a buscar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.CopyTo(System.ComponentModel.Design.Data.DataSourceGroup[],System.Int32)">
      <summary>
          Copia los valores de <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> en una instancia de <see cref="T:System.Array" /> unidimensional en el índice especificado.
        </summary>
      <param name="array">
              <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados desde <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.
            </param>
      <param name="index">
              Índice de <paramref name="array" /> donde se inicia la copia.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.IndexOf(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>
          Devuelve el índice de un objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> en la colección <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.
        </summary>
      <returns>
          Índice del objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> del parámetro <paramref name="value" /> en la colección <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />, si se encuentra; de lo contrario, -1.
        </returns>
      <param name="value">
              Objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> que se va a buscar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Insert(System.Int32,System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>
          Inserta un objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> en el índice especificado de <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.
        </summary>
      <param name="index">
              Índice basado en cero en el que debe insertarse <paramref name="value" />.
            </param>
      <param name="value">
              <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> que se va a insertar.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroupCollection.Item(System.Int32)">
      <summary>
          Obtiene o establece el objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> especificado.
        </returns>
      <param name="index">
              Objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> especificado.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Remove(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>
          Quita un objeto <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> específico de la colección <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.
        </summary>
      <param name="value">
              <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> que se quita de <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceProviderService">
      <summary>
          Implementa la funcionalidad básica que se requiere de un servicio para proporcionar acceso a un origen de datos en el nivel EnvDTE.Project.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DataSourceProviderService" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.AddDataSourceInstance(System.ComponentModel.Design.IDesignerHost,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>
          Cuando se reemplaza en una clase derivada, crea y devuelve una instancia del origen de datos dado y lo agrega a la superficie de diseño.
        </summary>
      <returns>
          <see cref="T:System.Object" /> que representa una instancia del origen de datos agregado.
        </returns>
      <param name="host">
              Host del diseñador.
            </param>
      <param name="dataSourceDescriptor">
              Origen de datos.
            </param>
      <exception cref="T:System.ArgumentException">
              No se puede crear o resolver el nombre de tipo.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.GetDataSources">
      <summary>
          Cuando se reemplaza en una clase derivada, recupera la colección de orígenes de datos en el nivel EnvDTE.Project.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> o null si no hay ningún origen de datos en el nivel EnvDTE.Project.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)">
      <summary>
          Cuando se reemplaza en una clase derivada, invoca al Asistente para agregar nuevo origen de datos.
        </summary>
      <returns>
          Colección <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> de orígenes de datos recientemente agregados o null si no se agrega ningún origen de datos.
        </returns>
      <param name="parentWindow">
              Ventana primaria.
            </param>
      <param name="startPosition">
              Posición inicial de un formulario.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>
          Cuando se reemplaza en una clase derivada, invoca al cuadro de diálogo Configurar origen de datos en el origen de datos especificado.
        </summary>
      <returns>
          
            true si se ha realizado cualquier cambio en ese origen de datos; de lo contrario, false.
        </returns>
      <param name="parentWindow">
              Ventana primaria.
            </param>
      <param name="startPosition">
              Posición inicial de un formulario.
            </param>
      <param name="dataSourceDescriptor">
              Origen de datos.
            </param>
      <exception cref="T:System.ArgumentException">
              El origen de datos especificado no es válido o es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.NotifyDataSourceComponentAdded(System.Object)">
      <summary>
          Cuando se reemplaza en una clase derivada, notifica al servicio que se ha agregado a la superficie de diseño un componente que representa un origen de datos.
        </summary>
      <param name="dsc">
              Componente del origen de datos.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceProviderService.SupportsAddNewDataSource">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor que indica si el servicio admite la adición de un nuevo origen de datos utilizando <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)" />.
        </summary>
      <returns>
          
            true si el servicio admite la adición de un nuevo origen de datos utilizando <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)" />; de lo contrario, false.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceProviderService.SupportsConfigureDataSource">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor que indica si el servicio admite la configuración de orígenes de datos mediante <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)" />.
        </summary>
      <returns>
          
            true si el servicio admite la configuración de un origen de datos utilizando <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)" />; de lo contrario, false.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataColumn">
      <summary>
          Representa una columna de una tabla o vista en el almacén de datos a la que se obtiene acceso a través de una conexión de datos. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> con el nombre y el tipo de datos especificados. 
        </summary>
      <param name="name">
              Nombre que identifica a la columna en el almacén de datos.
            </param>
      <param name="dataType">
              Uno de los valores de <see cref="T:System.Data.DbType" />.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType,System.Object)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> con el nombre, el tipo de datos y el valor predeterminado especificados. 
        </summary>
      <param name="name">
              Nombre que identifica a la columna en el almacén de datos.
            </param>
      <param name="dataType">
              Uno de los valores de <see cref="T:System.Data.DbType" />.
            </param>
      <param name="defaultValue">
              Valor predeterminado de la columna.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> con los valores especificados. 
        </summary>
      <param name="name">
              Nombre que identifica a la columna en el almacén de datos.
            </param>
      <param name="dataType">
              Uno de los valores de <see cref="T:System.Data.DbType" />.
            </param>
      <param name="defaultValue">
              Valor predeterminado de la columna.
            </param>
      <param name="identity">
              
                true si el campo es el campo de identidad de la fila de datos; de lo contrario, false.
            </param>
      <param name="nullable">
              
                true si el campo puede ser null en el almacén de datos; de lo contrario, false.
            </param>
      <param name="primaryKey">
              
                true si el campo es la clave principal de la fila de datos; de lo contrario, false.
            </param>
      <param name="precision">
              Número máximo de dígitos que utiliza un campo de datos numéricos.
            </param>
      <param name="scale">
              Número máximo de dígitos a la derecha del separador decimal en un campo de datos numéricos.
            </param>
      <param name="length">
              Longitud del campo de datos, en bytes.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.DataType">
      <summary>
          Obtiene el tipo de datos de la columna de datos.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Data.DbType" />.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.DefaultValue">
      <summary>
          Obtiene el valor predeterminado de la columna de datos.
        </summary>
      <returns>
          Valor predeterminado de la columna de datos. El valor predeterminado es null.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Identity">
      <summary>
          Obtiene un valor que indica si la columna de datos es una columna de identidad para la fila de datos.
        </summary>
      <returns>
          
            true si la columna es de identidad; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Length">
      <summary>
          Obtiene la longitud en bytes de la columna de datos.
        </summary>
      <returns>
          Longitud de la columna de datos, en bytes.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Name">
      <summary>
          Obtiene el nombre de la columna en el almacén de datos.
        </summary>
      <returns>
          Nombre de la columna en el almacén de datos.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Nullable">
      <summary>
          Obtiene un valor que indica si la columna puede ser null en el almacén de datos.
        </summary>
      <returns>
          
            true si la columna puede ser null en el almacén de datos; de lo contrario, false.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Precision">
      <summary>
          Obtiene el número de dígitos en una columna de datos numéricos.
        </summary>
      <returns>
          Número de dígitos en una columna de datos numéricos. 
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.PrimaryKey">
      <summary>
          Obtiene un valor que indica si la columna forma parte de la clave principal de la tabla.
        </summary>
      <returns>
          
            true si la columna forma parte de la clave principal de la tabla; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Scale">
      <summary>
          Obtiene el número de dígitos a la derecha del separador decimal en una columna numérica.
        </summary>
      <returns>
          Número de dígitos a la derecha del separador decimal en una columna numérica.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataConnection">
      <summary>
          Representa una conexión a un almacén de datos en una herramienta de diseño. Esta clase no se puede heredar. 
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataConnection.#ctor(System.String,System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> con el nombre, el proveedor de datos y la cadena de conexión especificados. 
        </summary>
      <param name="name">
              Nombre asociado a esta conexión.
            </param>
      <param name="providerName">
              Nombre del objeto de proveedor que se utiliza para obtener acceso al almacén de datos subyacente.
            </param>
      <param name="connectionString">
              Cadena que especifica la forma de conectar al almacén de datos.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataConnection.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> con el nombre, el proveedor de datos y la cadena de conexión especificados, e indica si la conexión se ha cargado desde un archivo de configuración. 
        </summary>
      <param name="name">
              Nombre asociado a esta conexión.
            </param>
      <param name="providerName">
              Nombre del objeto de proveedor que se utiliza para obtener acceso al almacén de datos subyacente.
            </param>
      <param name="connectionString">
              Cadena que especifica la forma de conectar al almacén de datos.
            </param>
      <param name="isConfigured">
              
                true para indicar que la conexión se ha creado a partir de información almacenada en el archivo de configuración de la aplicación; de lo contrario, false.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.ConnectionString">
      <summary>
          Obtiene la cadena de conexión de la aplicación definida para la conexión.
        </summary>
      <returns>
          Cadena de conexión de la aplicación definida para la conexión.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.IsConfigured">
      <summary>
          Obtiene un valor que indica si la información de conexión está en el archivo de configuración de la aplicación.
        </summary>
      <returns>
          
            true si la conexión se define en el archivo de configuración de la aplicación; de lo contrario, false.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.Name">
      <summary>
          Obtiene el nombre de la conexión de datos.
        </summary>
      <returns>
          Nombre de la conexión de datos.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.ProviderName">
      <summary>
          Obtiene el nombre del proveedor utilizado para obtener acceso al almacén de datos subyacente.
        </summary>
      <returns>
          Nombre del proveedor que se utiliza para obtener acceso al almacén de datos subyacente.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataParameter">
      <summary>
          Representa un parámetro para un procedimiento almacenado. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataParameter.#ctor(System.String,System.Data.DbType,System.Data.ParameterDirection)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DesignerDataParameter" /> con el nombre, el tipo de datos y la semántica de entrada/salida especificados. 
        </summary>
      <param name="name">
              Nombre del parámetro.
            </param>
      <param name="dataType">
              Uno de los valores de <see cref="T:System.Data.DbType" />.
            </param>
      <param name="direction">
              Uno de los valores de <see cref="T:System.Data.ParameterDirection" />.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.DataType">
      <summary>
          Obtiene el tipo de base de datos del parámetro.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Data.DbType" />.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.Direction">
      <summary>
          Obtiene un valor que indica si el parámetro es sólo de entrada, sólo de salida, bidireccional o un parámetro de un valor devuelto por un procedimiento almacenado.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Data.ParameterDirection" />.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.Name">
      <summary>
          Obtiene el nombre del parámetro.
        </summary>
      <returns>
          Nombre del parámetro.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataRelationship">
      <summary>
          Para el diseñador representa una relación entre dos tablas del origen de datos a las que se obtiene acceso mediante una conexión de datos. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataRelationship.#ctor(System.String,System.Collections.ICollection,System.ComponentModel.Design.Data.DesignerDataTable,System.Collections.ICollection)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> con el nombre, la columna primaria y la relación secundaria que se hayan especificado. 
        </summary>
      <param name="name">
              Nombre de la relación.
            </param>
      <param name="parentColumns">
              Columnas de la tabla primaria que definen la relación.
            </param>
      <param name="childTable">
              Tabla secundaria de la relación.
            </param>
      <param name="childColumns">
              Columnas de la tabla secundaria que definen la relación.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ChildColumns">
      <summary>
          Obtiene una colección de columnas de la tabla secundaria que forman parte de la relación.
        </summary>
      <returns>
          Colección de objetos <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> que definen la relación en la tabla secundaria.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ChildTable">
      <summary>
          Obtiene la tabla secundaria a la que hace referencia la relación.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> que representa la tabla secundaria de la relación.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.Name">
      <summary>
          Obtiene el nombre de la relación.
        </summary>
      <returns>
          Nombre de la relación.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ParentColumns">
      <summary>
          Obtiene una colección de columnas de la tabla primaria que forman parte de la relación entre las dos tablas.
        </summary>
      <returns>
          Colección de objetos <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> que definen la relación en la tabla primaria.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataSchemaClass">
      <summary>
          Especifica los tipos de objetos que se pueden recuperar de un esquema del almacén de datos. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.StoredProcedures">
      <summary>
          Indica que se deben devolver procedimientos almacenados del esquema del almacén de datos.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.Tables">
      <summary>
          Indica que se deben devolver tablas del esquema del almacén de datos.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.Views">
      <summary>
          Indica que se deben devolver vistas de datos del esquema del almacén de datos.
        </summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure">
      <summary>
          Representa un procedimiento almacenado en el almacén de datos.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure" /> con el nombre especificado. 
        </summary>
      <param name="name">
              Nombre del procedimiento almacenado.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure" /> con el nombre y el propietario especificados. 
        </summary>
      <param name="name">
              Nombre del procedimiento almacenado.
            </param>
      <param name="owner">
              Propietario del almacén de datos del procedimiento almacenado.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.CreateParameters">
      <summary>
          Cuando se reemplaza en una clase derivada, devuelve una colección de parámetros para el procedimiento almacenado.
        </summary>
      <returns>
          Colección de objetos <see cref="T:System.ComponentModel.Design.Data.DesignerDataParameter" />.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Name">
      <summary>
          Obtiene el nombre del procedimiento almacenado.
        </summary>
      <returns>
          Nombre del procedimiento almacenado.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Owner">
      <summary>
          Obtiene el propietario del procedimiento almacenado.
        </summary>
      <returns>
          Propietario del procedimiento almacenado.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Parameters">
      <summary>
          Obtiene una colección de parámetros necesarios para un procedimiento almacenado.
        </summary>
      <returns>
          Colección de parámetros para el procedimiento almacenado.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataTable">
      <summary>
          Representa una tabla en el almacén de datos.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> con el nombre especificado. 
        </summary>
      <param name="name">
              Nombre de la tabla.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> con el nombre y el propietario especificados. 
        </summary>
      <param name="name">
              Nombre de la tabla.
            </param>
      <param name="owner">
              Propietario de la tabla.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.CreateRelationships">
      <summary>
          Cuando se reemplaza en una clase derivada, devuelve una colección de objetos de relación.
        </summary>
      <returns>
          Colección de objetos <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" />.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTable.Relationships">
      <summary>
          Obtiene una colección de relaciones definidas para una tabla.
        </summary>
      <returns>
          Colección de objetos <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" />.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataTableBase">
      <summary>
          Define las propiedades y métodos compartidos entre las tablas del almacén de datos y las vistas del almacén de datos.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.#ctor(System.String)">
      <summary>
          Inicializa la clase para que la utilice una instancia de la clase heredada. Sólo una clase heredada puede llamar a este constructor.
        </summary>
      <param name="name">
              Nombre de la tabla o vista.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.#ctor(System.String,System.String)">
      <summary>
          Inicializa la clase para que la utilice una instancia de la clase heredada. Sólo una clase heredada puede llamar a este constructor.
        </summary>
      <param name="name">
              Nombre de la tabla o vista.
            </param>
      <param name="owner">
              Propietario del almacén de datos de la tabla o vista.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Columns">
      <summary>
          Obtiene una colección de columnas definida para una tabla o vista.
        </summary>
      <returns>
          Colección de columnas definida para una tabla o vista.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.CreateColumns">
      <summary>
          Cuando se reemplaza en una clase derivada, devuelve una colección de objetos de columna del almacén de datos.
        </summary>
      <returns>
          Colección de objetos <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" />.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Name">
      <summary>
          Obtiene el nombre de la tabla o vista del almacén de datos.
        </summary>
      <returns>
          Nombre de la tabla o vista del almacén de datos.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Owner">
      <summary>
          Obtiene el propietario de la tabla o vista del almacén de datos.
        </summary>
      <returns>
          Propietario de la tabla o vista del almacén de datos.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataView">
      <summary>
          Representa una vista de datos en el almacén de datos.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataView.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DesignerDataView" /> con el nombre especificado. 
        </summary>
      <param name="name">
              Nombre de la vista.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataView.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Data.DesignerDataView" /> con el nombre y el propietario especificados. 
        </summary>
      <param name="name">
              Nombre de la vista.
            </param>
      <param name="owner">
              Propietario del almacén de datos de la vista.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.IDataEnvironment">
      <summary>
          Define una interfaz a los servicios de datos que permite que los diseñadores de controles integren en su entorno de diseño funcionalidad relacionada con las bases de datos o almacenes de datos.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.BuildConnection(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>
          Crea una nueva conexión de datos o edita una conexión existente utilizando la interfaz de usuario de nueva conexión de la herramienta de diseño.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> nuevo o editado, o null si el usuario cancela.
        </returns>
      <param name="owner">
              Ventana primaria para el cuadro de diálogo de conexión.
            </param>
      <param name="initialConnection">
              Conexión que, en su caso, se va a editar. Para crear una nueva conexión, <paramref name="initialConnection" /> debe ser null.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.BuildQuery(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection,System.ComponentModel.Design.Data.QueryBuilderMode,System.String)">
      <summary>
          Inicia un cuadro de diálogo para generar una cadena de consulta SQL.
        </summary>
      <returns>
          Cadena que contiene la consulta SQL o null si el usuario cancela.
        </returns>
      <param name="owner">
              Ventana primaria para el cuadro de diálogo.
            </param>
      <param name="connection">
              Conexión de datos que se va a utilizar para la consulta.
            </param>
      <param name="mode">
              Uno de los valores de <see cref="T:System.ComponentModel.Design.Data.QueryBuilderMode" />.
            </param>
      <param name="initialQueryText">
              Valor inicial de la consulta o <see cref="F:System.String.Empty" /> para crear una nueva consulta.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.ConfigureConnection(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection,System.String)">
      <summary>
          Escribe una cadena de conexión en el archivo de configuración de la aplicación.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> que contiene los datos de conexión guardados, con la propiedad <see cref="P:System.ComponentModel.Design.Data.DesignerDataConnection.Name" /> establecida en <paramref name="name" /> y la propiedad <see cref="P:System.ComponentModel.Design.Data.DesignerDataConnection.IsConfigured" /> establecida en true.
        </returns>
      <param name="owner">
              Ventana primaria para el cuadro de diálogo, si existe.
            </param>
      <param name="connection">
              Objeto <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> que contiene los datos de conexión que se van a guardar.
            </param>
      <param name="name">
              Nombre de la entrada de configuración de la nueva conexión.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.IDataEnvironment.Connections">
      <summary>
          Obtiene una colección de conexiones de datos definida en la sesión de diseño actual.
        </summary>
      <returns>
          Colección de objetos <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> que representa las conexiones de datos disponibles en la sesión de diseño actual.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetCodeExpression(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>
          Devuelve una expresión de código que contiene el código fuente necesario para recuperar una cadena de conexión del archivo de configuración de la aplicación.
        </summary>
      <returns>
          Objeto <see cref="T:System.CodeDom.CodeExpression" /> que contiene el código fuente necesario para recuperar una cadena de conexión del archivo de configuración de la aplicación.
        </returns>
      <param name="connection">
              Conexión que se va a recuperar del archivo de configuración de la aplicación.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetConnectionSchema(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>
          Obtiene el esquema para la conexión de datos especificada.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.Data.IDesignerDataSchema" /> que contiene la información de esquema para la conexión de datos especificada, o null si no hay ninguna información de esquema disponible.
        </returns>
      <param name="connection">
              Conexión de datos para la que se va a devolver la información de esquema.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetDesignTimeConnection(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>
          Obtiene una conexión a base de datos que se puede utilizar en tiempo de diseño.
        </summary>
      <returns>
          Objeto <see cref="T:System.Data.Common.DbConnection" /> que se puede utilizar en tiempo de diseño.
        </returns>
      <param name="connection">
              Conexión de datos deseada.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.IDesignerDataSchema">
      <summary>
          Define métodos para recuperar información de esquema del almacén de datos.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems(System.ComponentModel.Design.Data.DesignerDataSchemaClass)">
      <summary>
          Obtiene una colección de elementos de esquema especificados.
        </summary>
      <returns>
          Colección de objetos de esquema del tipo especificado.
        </returns>
      <param name="schemaClass">
              Objetos de esquema que se van a devolver.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass(System.ComponentModel.Design.Data.DesignerDataSchemaClass)">
      <summary>
          Devuelve un valor que indica si el almacén de datos contiene el objeto de esquema de datos especificado.
        </summary>
      <returns>
          
            true si el almacén de datos admite el objeto de esquema de datos especificado; de lo contrario, false.
        </returns>
      <param name="schemaClass">
              Objetos de esquema que se van a devolver.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.QueryBuilderMode">
      <summary>
          Especifica el tipo de consulta al almacén de datos que debe construir el entorno de diseño.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Select">
      <summary>
          Se genera una consulta Select.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Update">
      <summary>
          Se genera una consulta Update.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Insert">
      <summary>
          Se genera una consulta Insert.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Delete">
      <summary>
          Se genera una consulta Delete.
        </summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader">
      <summary>
          Proporciona una implementación de la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary>
          Inicia el proceso de carga.
        </summary>
      <param name="host">
              Host del cargador de diseñadores que se va a cargar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="host" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El diseñador ya está cargado o se ha llamado a <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> con un host de cargador de diseñadores diferente.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              
                Se ha eliminado <paramref name="host" />.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose">
      <summary>
          Libera los recursos que utiliza el objeto <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)">
      <summary>
          Habilita o deshabilita la notificación de componentes con el objeto <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.
        </summary>
      <returns>
          
            true si la notificación de componentes se ha habilitado antes de esta llamada; de lo contrario, false.
        </returns>
      <param name="enable">
              
                Es true para habilitar la notificación de componentes por parte del objeto <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />; es false para deshabilitar la notificación de componentes por parte del objeto <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush">
      <summary>
          Vacía los cambios pendientes y los escribe en el cargador de diseñadores.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)">
      <summary>
          Obtiene el servicio solicitado.
        </summary>
      <returns>
          Servicio solicitado o null si no se encuentra el servicio solicitado.
        </returns>
      <param name="serviceType">
              Objeto <see cref="T:System.Type" /> del servicio.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize">
      <summary>
          Inicializa los servicios.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              No se ha inicializado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              Se ha eliminado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded">
      <summary>
          Indica si se debe volver a cargar el diseñador.
        </summary>
      <returns>
          
            true si se debe volver a cargar el diseñador; en caso contrario, false. La implementación predeterminada devuelve siempre true.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost">
      <summary>
          Obtiene el host del cargador.
        </summary>
      <returns>
          Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> que se ha pasado al método <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              No se ha inicializado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              Se ha eliminado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.
            </exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading">
      <summary>
          Obtiene un valor que indica si el cargador de diseñadores está cargando la superficie de diseño.
        </summary>
      <returns>
          
            true si el cargador de diseñadores está cargando actualmente la superficie de diseño; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified">
      <summary>
          Obtiene o establece un valor que indica si se ha modificado el diseñador.
        </summary>
      <returns>
          
            true si el diseñador se ha modificado; en caso contrario, false.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad">
      <summary>
          Notifica al cargador de diseñadores que la carga está a punto de comenzar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload">
      <summary>
          Notifica al cargador de diseñadores que la descarga está a punto de comenzar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>
          Notifica al cargador de diseñadores que se ha completado la carga.
        </summary>
      <param name="successful">
              
                Es true si la carga se ha realizado correctamente; en caso contrario, es false.
            </param>
      <param name="errors">
              Interfaz <see cref="T:System.Collections.ICollection" /> que contiene objetos (normalmente excepciones) respecto a lo cuales se han creado informes de error.
            </param>
      <exception cref="T:System.InvalidOperationException">
              No se ha inicializado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              Se ha eliminado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying">
      <summary>
          Notifica al cargador de diseñadores que está a punto de modificarse el estado del documento.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>
          Vacía todos los cambios realizados en el diseñador.
        </summary>
      <param name="serializationManager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para conservar el estado de los diseñadores cargados.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>
          Carga un diseñador desde la persistencia.
        </summary>
      <param name="serializationManager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para cargar el estado de los diseñadores.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider">
      <summary>
          Obtiene o establece el proveedor de propiedades para el administrador de serialización que utiliza el cargador.
        </summary>
      <returns>
          Objeto cuyas propiedades se van a proporcionar al administrador de serialización.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              No se ha inicializado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)">
      <summary>
          Pone en la cola una recarga del diseñador.
        </summary>
      <param name="flags">
              Combinación bit a bit de los valores de <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" />.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending">
      <summary>
          Obtiene un valor que indica si se ha puesto en la cola una recarga.
        </summary>
      <returns>
          
            true, si una llamada a <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> ha puesto en la cola una solicitud de recarga; de lo contrario, false.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)">
      <summary>
          Crea informes sobre los errores que se han producido al vaciar los cambios.
        </summary>
      <param name="errors">
              Interfaz <see cref="T:System.Collections.ICollection" /> que contiene objetos de error, normalmente excepciones.
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjeron uno o varios errores al vaciar los cambios.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)">
      <summary>
          Establece el nombre completo de clase del componente base.
        </summary>
      <param name="name">
              Cadena que representa el nombre completo del componente que se va a diseñar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="name" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency">
      <summary>
          Registra un componente externo como parte del proceso de carga administrado por <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              No se ha inicializado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary>
          Indica que ha finalizado una carga dependiente.
        </summary>
      <param name="successful">
              
                Es true si la carga se ha realizado correctamente; de lo contrario, es false.
            </param>
      <param name="errorCollection">
              Interfaz <see cref="T:System.Collections.ICollection" /> que contiene los errores que se han producido durante la carga.
            </param>
      <exception cref="T:System.InvalidOperationException">
              <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" /> no ha agregado ninguna dependencia de carga o no se ha inicializado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />. 
            </exception>
      <exception cref="T:System.ObjectDisposedException">
              Se ha eliminado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload">
      <summary>
          Recarga el documento de diseño.
        </summary>
      <returns>
          
            true si se acepta la petición de recarga; false si el cargador no permite la recarga.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions">
      <summary>
          Define el comportamiento del método <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />. Estos indicadores se pueden combinar utilizando el operador OR bit a bit.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Default">
      <summary>
          El cargador de diseñadores vacía los cambios antes de volver a cargar, pero no fuerza una recarga, ni tampoco establece la propiedad <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> en true si se producen errores de carga.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.ModifyOnError">
      <summary>
          El cargador de diseñadores establecerá la propiedad <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> en true si se produce un error de carga. Este indicador es útil si desea vaciar el cargador para sobrescribir un estado persistente que contenga errores.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Force">
      <summary>
          El cargador de diseñadores obliga a que se produzca la recarga. Normalmente, se produce una recarga sólo si el método <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" /> devuelve true. Este indicador omite la llamada a este método y siempre lleva a cabo la recarga.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.NoFlush">
      <summary>
          El cargador de diseñadores abandona cualquier cambio antes de volver a realizar ningún tipo de carga.
        </summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary>
          Serializa un conjunto de componentes en un almacén de serialización.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" />. 
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> utilizando el proveedor de servicios determinado para resolver los servicios.
        </summary>
      <param name="provider">
              Interfaz <see cref="T:System.IServiceProvider" /> que se va a utilizar para resolver los servicios.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary>
          Crea un nuevo objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary>
          Deserializa el almacén determinado para generar una colección de objetos.
        </summary>
      <returns>
          Colección de componentes deserializados.
        </returns>
      <param name="store">
              Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> del que se van a deserializar los objetos.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="store" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                <paramref name="store" /> no es un tipo de almacén de serialización compatible. Utilice un almacén que haya devuelto <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>
          Deserializa el almacén determinado y rellena la interfaz <see cref="T:System.ComponentModel.IContainer" /> determinada con los objetos <see cref="T:System.ComponentModel.IComponent" /> deserializados.
        </summary>
      <returns>
          Colección de componentes deserializados.
        </returns>
      <param name="store">
              Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> del que se van a deserializar los objetos.
            </param>
      <param name="container">
              Contenedor al que se van a agregar los objetos de <see cref="T:System.ComponentModel.IComponent" />.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="store" /> o <paramref name="container" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                <paramref name="store" /> no es un tipo de almacén de serialización compatible. Utilice un almacén que haya devuelto <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary>
          Deserializa el objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> especificado en el contenedor determinado, aplicando opcionalmente los valores predeterminados de las propiedades.
        </summary>
      <param name="store">
              Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> del que se van a deserializar los objetos.
            </param>
      <param name="container">
              Contenedor de objetos a los que se van a aplicar los datos.
            </param>
      <param name="validateRecycledTypes">
              
                Es true para validar el tipo reciclado; de lo contrario, es false.
            </param>
      <param name="applyDefaults">
              
                Es true para aplicar los valores de propiedad predeterminados; de lo contrario, es false.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="store" /> o <paramref name="container" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                <paramref name="store" /> no es un tipo de almacén de serialización compatible. Utilice un almacén que haya devuelto <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary>
          Carga un objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> desde la secuencia especificada.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> cargado.
        </returns>
      <param name="stream">
              Secuencia a partir de la cual se carga el objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="stream" /> es null.
            </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
              
                <paramref name="stream" /> admite operaciones de búsqueda, pero su longitud es cero. 
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>
          Serializa el objeto especificado en el objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> especificado.
        </summary>
      <param name="store">
              Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> en el que se va a serializar <paramref name="value" />. 
            </param>
      <param name="value">
              Objeto que se va a serializar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="store" /> o <paramref name="value" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                <paramref name="store" /> está cerrado o <paramref name="store" /> no es un tipo de almacén de serialización admitido. Utilice un almacén que haya devuelto <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>
          Serializa el objeto dado, teniendo en cuenta los valores de propiedad predeterminados.
        </summary>
      <param name="store">
              Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> en el que se va a serializar <paramref name="value" />. 
            </param>
      <param name="value">
              Objeto que se va a serializar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="store" /> o <paramref name="value" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                <paramref name="store" /> está cerrado o <paramref name="store" /> no es un tipo de almacén de serialización admitido. Utilice un almacén que haya devuelto <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>
          Serializa el miembro determinado en el objeto dado.
        </summary>
      <param name="store">
              Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> en el que se va a serializar <paramref name="member" />. 
            </param>
      <param name="owningObject">
              Objeto propietario de <paramref name="member" />.
            </param>
      <param name="member">
              Miembro especificado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="store" />, <paramref name="owningObject" /> o <paramref name="member" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                <paramref name="store" /> está cerrado o <paramref name="store" /> no es un tipo de almacén de serialización admitido. Utilice un almacén que haya devuelto <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>
          Serializa el miembro especificado en el objeto igualmente especificado, pero también serializa el miembro si contiene el valor de propiedad predeterminado.
        </summary>
      <param name="store">
              Objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> en el que se va a serializar <paramref name="member" />. 
            </param>
      <param name="owningObject">
              Objeto propietario de <paramref name="member" />.
            </param>
      <param name="member">
              Miembro especificado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="store" />, <paramref name="owningObject" /> o <paramref name="member" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                <paramref name="store" /> está cerrado o <paramref name="store" /> no es un tipo de almacén de serialización admitido. Utilice un almacén que haya devuelto <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.
            </exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
      <summary>
          Proporciona la clase base para implementar un cargador de diseñadores basado en CodeDOM.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />.
        </summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider">
      <summary>
          Obtiene la propiedad <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> que va a utilizar este cargador de diseñadores. 
        </summary>
      <returns>
          Propiedad <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> que va a utilizar este cargador de diseñadores
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose">
      <summary>
          Libera los recursos que utiliza la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize">
      <summary>
          Inicializa servicios.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              No se ha inicializado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> o el cargador de diseñadores no ha proporcionado un servicio de resolución de tipos, tal y como requiere la serialización de CodeDOM.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded">
      <summary>
          Devuelve un valor que indica si es necesario volver a cargar.
        </summary>
      <returns>
          
            true si la propiedad <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> decide que es necesario volver a cargar; en caso contrario, false.
        </returns>
      <exception cref="T:System.NotSupportedException">
              El lenguaje no ha proporcionado un analizador de código para este archivo; puede que este tipo de archivo no admita un diseñador.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              Aunque se haya diseñado la clase, no es la primera clase en el archivo o no se ha podido mostrar el diseñador para ese archivo en particular porque no es posible diseñar ninguna de las clases que contiene.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad">
      <summary>
          Notifica al cargador de diseñadores que la carga está a punto de comenzar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload">
      <summary>
          Notifica al cargador de diseñadores que la descarga está a punto de comenzar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)">
      <summary>
          Provoca el evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />. 
        </summary>
      <param name="component">
              Componente al que se va a cambiar el nombre.
            </param>
      <param name="oldName">
              Nombre original del componente.
            </param>
      <param name="newName">
              Nombre nuevo del componente.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>
          Notifica al cargador de diseñadores que se ha completado la carga.
        </summary>
      <param name="successful">
              
                Es true para indicar que la carga se ha completado satisfactoriamente; de lo contrario, es false.
            </param>
      <param name="errors">
              Interfaz <see cref="T:System.Collections.ICollection" /> de objetos (normalmente excepciones) de los cuales se han creado informes de error.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse">
      <summary>
          Analiza el texto u otro almacenamiento persistente y devuelve un objeto <see cref="T:System.CodeDom.CodeCompileUnit" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.CodeDom.CodeCompileUnit" /> resultante de una operación de análisis.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>
          Solicita la serialización del componente raíz del diseñador.
        </summary>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a partir de la cual se va a solicitar el serializador.
            </param>
      <exception cref="T:System.NotSupportedException">
              El lenguaje no ha proporcionado un analizador de código para este archivo; puede que este tipo de archivo no admita un diseñador.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              Aunque se haya diseñado la clase, no es la primera clase en el archivo o no se ha podido mostrar el diseñador para ese archivo en particular porque no es posible diseñar ninguna de las clases que contiene.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>
          Analiza el código de un proveedor CodeDOM.
        </summary>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a partir de la cual se va a solicitar el serializador.
            </param>
      <exception cref="T:System.NotSupportedException">
              El lenguaje no ha proporcionado un analizador de código para este archivo; puede que este tipo de archivo no admita un diseñador.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              Aunque se haya diseñado la clase, no es la primera clase en el archivo o no se ha podido mostrar el diseñador para ese archivo en particular porque no es posible diseñar ninguna de las clases que contiene.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)">
      <summary>
          Deserializa el objeto de datos de serialización especificado y devuelve una colección de objetos representada por dichos datos.
        </summary>
      <returns>
          Colección de objetos representada por <paramref name="serializationData" />.
        </returns>
      <param name="serializationData">
              Objeto formado por datos serializados.
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="serializationData" /> no es un objeto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />. 
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)">
      <summary>
          Serializa la colección de objetos especificada y almacena dichos objetos en un objeto de datos de serialización.
        </summary>
      <returns>
          Objeto que contiene el estado serializado de la colección de objetos especificada.
        </returns>
      <param name="objects">
              Colección de objetos que se va a serializar.
            </param>
      <exception cref="T:System.InvalidOperationException">
              No se encontró el objeto <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary>
          Crea un nombre nuevo que es único para todos los componentes del contenedor especificado.
        </summary>
      <returns>
          Nombre único para el tipo de datos.
        </returns>
      <param name="container">
              Contenedor al que se agrega el objeto nuevo.
            </param>
      <param name="dataType">
              Tipo de datos del objeto que recibe el nombre.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="dataType" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)">
      <summary>
          Obtiene un valor que indica si el nombre especificado es válido.
        </summary>
      <returns>
          
            Es true si el nombre es válido; en caso contrario, es false.
        </returns>
      <param name="name">
              Nombre que se va a validar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="name" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)">
      <summary>
          Obtiene un valor que indica si el nombre especificado es válido.
        </summary>
      <param name="name">
              Nombre que se va a validar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="name" /> es null.
            </exception>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="name" /> no es un identificador válido, o ya existe un componente con el mismo nombre. 
            </exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService">
      <summary>
          Obtiene el servicio de resolución de tipos que se va a utilizar con este cargador de diseñadores.
        </summary>
      <returns>
          Interfaz <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> que los serializadores CodeDOM van a utilizar para la resolución de tipos.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)">
      <summary>
          Escribe los cambios de la unidad de compilación en un almacenamiento persistente.
        </summary>
      <param name="unit">
              Objeto <see cref="T:System.CodeDom.CodeCompileUnit" /> que se va a conservar.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel">
      <summary>
          Determina el modelo de localización que va a utilizar el adaptador de recursos CodeDom.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None">
      <summary>
          El proveedor de localización debe omitir las propiedades localizadas. No obstante, continuará creando recursos para los objetos que no admitan la generación de código y sean serializables.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyAssignment">
      <summary>
          El proveedor de localización creará recursos para las propiedades localizadas asignando un recurso a cada propiedad. Este modelo es rápido cuando el número de propiedades es pequeño, pero no crece de forma satisfactoria al hacerlo el número de propiedades que contienen valores predeterminados.
        </summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyReflection">
      <summary>
          El proveedor de localización escribirá los valores de propiedad localizados en un archivo de recursos y utilizará la clase <see cref="T:System.ComponentModel.ComponentResourceManager" /> para reflejarlos en las propiedades por nombre, con el fin de rellenarlas en tiempo de ejecución. Este procedimiento utiliza la reflexión en tiempo de ejecución, por lo que puede ser lento, pero se adapta mejor al pasar a procesar grandes números de propiedades con valores predeterminados.
        </summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider">
      <summary>
          Proporciona los servicios de serialización de recursos CodeDOM. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />. 
        </summary>
      <param name="provider">
              Interfaz <see cref="T:System.IServiceProvider" /> que utiliza el proveedor de localización para agregar sus propiedades extensoras.
            </param>
      <param name="model">
              Valor de <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> que indica el modelo de localización que va a utilizar el adaptador de recursos CodeDOM. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel,System.Globalization.CultureInfo[])">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />. 
        </summary>
      <param name="provider">
              Interfaz <see cref="T:System.IServiceProvider" /> que utiliza el proveedor de localización para agregar sus propiedades extensoras.
            </param>
      <param name="model">
              Valor de <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> que indica el modelo de localización que va a utilizar el adaptador de recursos CodeDOM. 
            </param>
      <param name="supportedCultures">
              Matriz de referencias culturales que debe admitir este adaptador de recursos.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.Dispose">
      <summary>
          Libera todos los recursos que utiliza el objeto <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />.
        </summary>
      <returns>
          Instancia de un serializador del tipo solicitado o null si no se puede atender la solicitud.
        </returns>
      <param name="manager">
              Administrador de serialización que solicita el serializador. 
            </param>
      <param name="currentSerializer">
              Instancia del serializador actual del tipo especificado. Puede ser null si no existe ningún serializador del tipo especificado. 
            </param>
      <param name="objectType">
              Tipo de datos del objeto que se va a serializar. 
            </param>
      <param name="serializerType">
              Tipo de datos del serializador que se va a crear. 
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary>
          Serializa un gráfico de objetos en una serie de instrucciones CodeDOM. Esta clase proporciona una clase base abstracta para un serializador.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />. 
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
          Deserializa el objeto CodeDOM serializado especificado en un objeto.
        </summary>
      <returns>
          Objeto CodeDOM deserializado.
        </returns>
      <param name="manager">
              Interfaz del administrador de serialización que se utiliza durante el proceso de deserialización. 
            </param>
      <param name="codeObject">
              Objeto CodeDOM serializado que se va a deserializar. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="manager" /> o <paramref name="codeObject" /> es null.
            </exception>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="codeObject" /> es un elemento de código no compatible.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>
          Deserializa una instrucción sencilla.
        </summary>
      <returns>
          Instancia de un objeto que es el resultado de la deserialización de <paramref name="statement" />.
        </returns>
      <param name="manager">
              Administrador de serialización que se va a utilizar para la serialización.
            </param>
      <param name="statement">
              Instrucción que se va a deserializar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary>
          Determina a qué grupo de instrucciones debería pertenecer la instrucción dada.
        </summary>
      <returns>
          Nombre del componente con el que debería agruparse <paramref name="statement" />.
        </returns>
      <param name="statement">
              Clase <see cref="T:System.CodeDom.CodeStatement" /> cuyo grupo se va a determinar.
            </param>
      <param name="expression">
              Objeto <see cref="T:System.CodeDom.CodeExpression" /> al que se ha reducido <paramref name="statement" />.
            </param>
      <param name="targetType">
              <see cref="T:System.Type" /> de <paramref name="statement" />.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
          Serializa el objeto especificado en un objeto CodeDOM.
        </summary>
      <returns>
          Objeto CodeDOM que representa el objeto que se ha serializado.
        </returns>
      <param name="manager">
              Administrador de serialización que se va a utilizar durante la serialización. 
            </param>
      <param name="value">
              Objeto que se va a serializar. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="manager" /> o <paramref name="value" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
          Serializa el objeto dado, teniendo en cuenta los valores predeterminados.
        </summary>
      <returns>
          Objeto CodeDom que representa <paramref name="value" />.
        </returns>
      <param name="manager">
              Administrador de serialización que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto que se va a serializar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="manager" /> o <paramref name="value" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>
          Serializa el miembro dado en el objeto dado.
        </summary>
      <returns>
          Objeto <see cref="T:System.CodeDom.CodeStatementCollection" /> que representa el estado serializado de <paramref name="member" />.
        </returns>
      <param name="manager">
              Administrador de serialización que se va a utilizar para la serialización.
            </param>
      <param name="owningObject">
              Objeto al que <paramref name="member" /> está asociado.
            </param>
      <param name="member">
              Miembro que se va a serializar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" />, <paramref name="owningObject" /> o <paramref name="member" /> es null.
            </exception>
      <exception cref="T:System.NotSupportedException">
              
                <paramref name="member" /> no es un tipo serializable.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>
          Serializa el miembro dado, teniendo en cuenta los valores predeterminados.
        </summary>
      <returns>
          Objeto CodeDom que representa <paramref name="member" />.
        </returns>
      <param name="manager">
              Administrador de serialización que se va a utilizar para la serialización.
            </param>
      <param name="owningObject">
              Objeto al que <paramref name="member" /> está asociado.
            </param>
      <param name="member">
              Miembro que se va a serializar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" />, <paramref name="owningObject" /> o <paramref name="member" /> es null.
            </exception>
      <exception cref="T:System.NotSupportedException">
              
                <paramref name="member" /> no es un tipo serializable.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
          Serializa el valor especificado en una expresión CodeDOM.
        </summary>
      <returns>
          Valor serializado. Devuelve null si no se puede obtener ninguna expresión de referencia para el valor especificado o si el valor no se puede serializar.
        </returns>
      <param name="manager">
              Administrador de serialización que se va a utilizar durante la serialización. 
            </param>
      <param name="value">
              Objeto que se va a serializar. 
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary>
          Proporciona una clase base para las clases <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary>
          Deserializa la expresión determinada en un objeto en memoria.
        </summary>
      <returns>
          Objeto que es el resultado de la interpretación de <paramref name="expression" />.
        </returns>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="name">
              Nombre del objeto que es el resultado de la expresión. Puede ser null si no es necesario dar un nombre al objeto.
            </param>
      <param name="expression">
              <see cref="T:System.CodeDom.CodeExpression" /> que se va a interpretar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary>
          Devuelve una instancia del tipo determinado.
        </summary>
      <returns>
          Instancia de <paramref name="type" />.
        </returns>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="type">
              Objeto <see cref="T:System.Type" /> de la instancia que se va a devolver.
            </param>
      <param name="parameters">
              Parámetros que se van a pasar al constructor para <paramref name="type" />.
            </param>
      <param name="name">
              Nombre del objeto deserializado.
            </param>
      <param name="addToContainer">
              
                Es true para agregar este objeto al contenedor de diseño; de lo contrario, es false. El objeto debe implementar <see cref="T:System.ComponentModel.IComponent" /> para que esto surta efecto.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> o <paramref name="type" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>
          Deserializa las propiedades del objeto en concreto del lote de recursos de la referencia cultural de todos los idiomas.
        </summary>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto del que se van a deserializar las propiedades.
            </param>
      <param name="filter">
              Matriz <see cref="T:System.Attribute" /> que filtra las propiedades que se van a deserializar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>
          Deserializa una instrucción interpretando y ejecutando una instrucción CodeDOM.
        </summary>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="statement">
              Objeto <see cref="T:System.CodeDom.CodeStatement" /> que se va a deserializar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
          Devuelve una expresión para el objeto determinado.
        </summary>
      <returns>
          Objeto <see cref="T:System.CodeDom.CodeExpression" /> que representa v<paramref name="alue" /> o null si no hay ninguna expresión existente para v<paramref name="alue" />.
        </returns>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto para el que se va a obtener una expresión.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
          Busca un serializador para el valor de objeto determinado.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> adecuado para <paramref name="value" />.
        </returns>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto que especifica el serializador que se va a recuperar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> o <paramref name="value" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>
          Busca un serializador para el tipo determinado.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> adecuado para <paramref name="valueType" />.
        </returns>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="valueType">
              Objeto <see cref="T:System.Type" /> que especifica el serializador que se va a recuperar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> o <paramref name="valueType" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
          Devuelve un nombre único para el objeto determinado.
        </summary>
      <returns>
          Nombre único para <paramref name="value" />.
        </returns>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto para el que se va a recuperar el nombre.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> o <paramref name="value" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
          Devuelve un valor que indica si se ha serializado el objeto determinado.
        </summary>
      <returns>
          
            true si se ha serializado <paramref name="value" />; en caso contrario, false.
        </returns>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto que se va a comprobar para la serialización previa.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> o <paramref name="value" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>
          Devuelve un valor que indica si se ha serializado el objeto determinado, considerando opcionalmente las expresiones preestablecidas.
        </summary>
      <returns>
          
            true si se ha serializado <paramref name="value" />; en caso contrario, false.
        </returns>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto que se va a comprobar para la serialización previa.
            </param>
      <param name="honorPreset">
              
                true para incluir expresiones preestablecidas; en caso contrario, false. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> o <paramref name="value" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary>
          Devuelve una expresión que representa la creación del objeto determinado.
        </summary>
      <returns>
          Expresión que representa la creación de <paramref name="value" />.
        </returns>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto que se va a serializar.
            </param>
      <param name="isComplete">
              
                true si se ha serializado <paramref name="value" /> totalmente; en caso contrario, false.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> o <paramref name="value" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary>
          Serializa el evento especificado en la colección de instrucciones determinada.
        </summary>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="statements">
              Objeto <see cref="T:System.CodeDom.CodeStatementCollection" /> en el que se va a serializar el evento.
            </param>
      <param name="value">
              Objeto al que está enlazado <paramref name="descriptor" />.
            </param>
      <param name="descriptor">
              Objeto <see cref="T:System.ComponentModel.EventDescriptor" /> que especifica el evento que se va a serializar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> o <paramref name="descriptor" /> es null.
            </exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
              
                <see cref="T:System.ComponentModel.Design.IEventBindingService" /> no está disponible.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>
          Serializa los eventos especificados en la colección de instrucciones determinada.
        </summary>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="statements">
              Objeto <see cref="T:System.CodeDom.CodeStatementCollection" /> en el que se va a serializar el evento.
            </param>
      <param name="value">
              Objeto en el que se van a serializar los eventos.
            </param>
      <param name="filter">
              Matriz de <see cref="T:System.Attribute" /> que filtra los eventos que se van a serializar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" />, <paramref name="value" /> o <paramref name="statements" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>
          Serializa las propiedades del objeto especificado en la colección de instrucciones determinada.
        </summary>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="statements">
              Objeto <see cref="T:System.CodeDom.CodeStatementCollection" /> en el que se van a serializar las propiedades.
            </param>
      <param name="value">
              Objeto en el que se van a serializar las propiedades.
            </param>
      <param name="filter">
              Matriz de <see cref="T:System.Attribute" /> que filtra las propiedades que se van a serializar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" />, <paramref name="value" /> o <paramref name="statements" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>
          Serializa las propiedades del objeto determinado en el lote de recursos de la referencia cultural de todos los idiomas.
        </summary>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="statements">
              No se utiliza.
            </param>
      <param name="value">
              Objeto cuyas propiedades se van a serializar.
            </param>
      <param name="filter">
              Matriz de <see cref="T:System.Attribute" /> que filtra las propiedades que se van a serializar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" />, <paramref name="value" /> o <paramref name="statements" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary>
          Serializa una propiedad en el objeto determinado.
        </summary>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="statements">
              Objeto <see cref="T:System.CodeDom.CodeStatementCollection" /> en el que se va a serializar la propiedad.
            </param>
      <param name="value">
              Objeto en el que se va a serializar la propiedad.
            </param>
      <param name="propertyToSerialize">
              Propiedad que se va a serializar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> o <paramref name="propertyToSerialize" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>
          Serializa el objeto especificado en un lote de recursos utilizando el nombre de un recurso determinado.
        </summary>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="resourceName">
              Nombre del lote de recursos en el que se va a serializar <paramref name="value" />.
            </param>
      <param name="value">
              Objeto que se va a serializar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>
          Serializa el objeto especificado en un lote de recursos utilizando el nombre de un recurso determinado.
        </summary>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="resourceName">
              Nombre del lote de recursos en el que se va a serializar <paramref name="value" />.
            </param>
      <param name="value">
              Objeto que se va a serializar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
          Serializa el objeto determinado en una expresión.
        </summary>
      <returns>
          Objeto <see cref="T:System.CodeDom.CodeExpression" /> si se puede serializar <paramref name="value" />; de lo contrario, null.
        </returns>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto que se va a serializar. Puede ser null.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
          Serializa el objeto determinado en una expresión.
        </summary>
      <returns>
          Objeto <see cref="T:System.CodeDom.CodeExpression" /> que contiene <paramref name="value" /> como una expresión serializada.
        </returns>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto que se va a serializar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>
          Serializa el objeto determinado en una expresión adecuada para la referencia cultural de todos los idiomas.
        </summary>
      <returns>
          Objeto <see cref="T:System.CodeDom.CodeExpression" /> que contiene <paramref name="value" /> como una expresión serializada.
        </returns>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto que se va a serializar.
            </param>
      <param name="ensureInvariant">
              
                Es true para serializar en la referencia cultural de todos los idiomas; de lo contrario, es false.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary>
          Asocia un objeto a una expresión.
        </summary>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto que se va a serializar.
            </param>
      <param name="expression">
              Objeto <see cref="T:System.CodeDom.CodeExpression" /> al que se va a asociar <paramref name="value" />.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" />, <paramref name="value" /> o <paramref name="expression" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary>
          Asocia un objeto a una expresión, especificando opcionalmente una expresión preestablecida.
        </summary>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto que se va a serializar.
            </param>
      <param name="expression">
              Objeto <see cref="T:System.CodeDom.CodeExpression" /> al que se va a asociar <paramref name="value" />.
            </param>
      <param name="isPreset">
              
                Es true para especificar una expresión preestablecida; de lo contrario, es false.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary>
          Excepción que se produce cuando existe información disponible acerca del número de línea para un error de serialización.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> con la excepción y la información de línea especificadas.
        </summary>
      <param name="ex">
              Excepción que se va a producir. 
            </param>
      <param name="linePragma">
              <see cref="T:System.CodeDom.CodeLinePragma" /> que indica dónde se produjo la excepción. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />. 
        </summary>
      <param name="ex">
              Excepción que se va a producir. 
            </param>
      <param name="manager">
              El objeto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> del que se extrae el contexto.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="Manager" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> con el contexto y los datos de serialización especificados.
        </summary>
      <param name="info">
              Almacena los datos que se estaban utilizado para serializar o deserializar el objeto que el serializador <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> se encontraba serializando o deserializando. 
            </param>
      <param name="context">
              Describe el origen y el destino de la cadena que generó la excepción, así como un modo de serialización para retener dicho contexto y un contexto adicional definido por el llamador. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> con el mensaje y la información de línea especificadas.
        </summary>
      <param name="message">
              Mensaje que describe la excepción. 
            </param>
      <param name="linePragma">
              <see cref="T:System.CodeDom.CodeLinePragma" /> que indica dónde se produjo la excepción. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />. 
        </summary>
      <param name="message">
              Mensaje que describe la excepción. 
            </param>
      <param name="manager">
              El objeto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> del que se extrae el contexto.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="Manager" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Establece el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con el nombre del parámetro y la información adicional de la excepción.
        </summary>
      <param name="info">
              Almacena los datos que se estaban utilizado para serializar o deserializar el objeto que el serializador <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> se encontraba serializando o deserializando. 
            </param>
      <param name="context">
              Describe el origen y el destino de la cadena que generó la excepción, así como un modo de serialización para retener dicho contexto y un contexto adicional definido por el llamador. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor del parámetro <paramref name="info" /> es null. 
            </exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary>
          Obtiene o establece la información de línea para el error asociado a esta excepción.
        </summary>
      <returns>
          <see cref="T:System.CodeDom.CodeLinePragma" /> que indica la información de línea del error.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary>
          Serializa colecciones.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" />. 
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary>
          Verifica si <paramref name="method" /> admite la serialización.
        </summary>
      <returns>
          
            true si <paramref name="method" /> admite la serialización; en caso contrario, false.
        </returns>
      <param name="method">
              Objeto <see cref="T:System.Reflection.MethodInfo" /> en el que se van a comprobar los atributos de serialización.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="method" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
          Serializa la colección especificada en un objeto CodeDOM.
        </summary>
      <returns>
          Objeto CodeDOM que representa <paramref name="value" />.
        </returns>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar durante la serialización.
            </param>
      <param name="value">
              Objeto que se va a serializar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> o <paramref name="value" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>
          Serializa la colección determinada.
        </summary>
      <returns>
          Colección serializada si el proceso de serialización se realiza correctamente; de lo contrario, null.
        </returns>
      <param name="manager">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar durante la serialización.
            </param>
      <param name="targetExpression">
              Objeto <see cref="T:System.CodeDom.CodeExpression" /> que hace referencia a la colección
            </param>
      <param name="targetType">
              Objeto <see cref="T:System.Type" /> de la colección.
            </param>
      <param name="originalCollection">
              Colección que se va a serializar.
            </param>
      <param name="valuesToSerialize">
              Valores que se van a serializar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" /> o <paramref name="valuesToSerialize" /> es null.
            </exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary>
          Proporciona una implementación de la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> con el proveedor de servicios especificado.
        </summary>
      <param name="provider">
              Interfaz <see cref="T:System.IServiceProvider" />.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="provider" /> es null.
            </exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary>
          Obtiene o establece el contenedor para este administrador de serialización.
        </summary>
      <returns>
          Interfaz <see cref="T:System.ComponentModel.IContainer" /> a la que el administrador de serialización va a agregar componentes.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El administrador de serialización tiene una sesión de serialización activa.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>
          Crea una instancia de un tipo.
        </summary>
      <returns>
          Nueva instancia del tipo especificado por <paramref name="type" />.
        </returns>
      <param name="type">
              Tipo del que se va a crear una instancia.
            </param>
      <param name="arguments">
              Parámetros del constructor del tipo. Puede ser null o una colección vacía para invocar al constructor predeterminado.
            </param>
      <param name="name">
              Nombre que se va a dar al objeto. Si es null, no se dará nombre al objeto, salvo que el propio objeto se agregue a un contenedor y el contenedor le dé un nombre.
            </param>
      <param name="addToContainer">
              
                Es true para agregar el objeto al contenedor si el objeto implementa <see cref="T:System.ComponentModel.IComponent" />; de lo contrario, es false.
            </param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
              
                <paramref name="type" /> no tiene un constructor que adopte los parámetros contenidos en <paramref name="arguments" />.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary>
          Crea una nueva sesión de serialización.
        </summary>
      <returns>
          Interfaz <see cref="T:System.IDisposable" /> que representa una nueva sesión de serialización.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El administrador de serialización ya está en una sesión. Esta versión de <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> no admite sesiones simultáneas.
            </exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary>
          Obtiene la lista de los errores que se han producido durante la serialización o deserialización.
        </summary>
      <returns>
          La lista de los errores que se han producido durante la serialización o deserialización.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El acceso a esta propiedad se realizó fuera de una sesión de serialización.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>
          Obtiene el serializador para el tipo de objeto especificado.
        </summary>
      <returns>
          Serializador para <paramref name="objectType" /> o null si no se ha encontrado.
        </returns>
      <param name="objectType">
              Tipo de objeto para el que se va a recuperar el serializador.
            </param>
      <param name="serializerType">
              Tipo de serializador que se va a recuperar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="objectType" /> o <paramref name="serializerType" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary>
          Obtiene el servicio solicitado.
        </summary>
      <returns>
          Servicio solicitado o null si no se puede resolver el servicio.
        </returns>
      <param name="serviceType">
              Tipo de servicio que se va a recuperar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary>
          Obtiene el tipo solicitado.
        </summary>
      <returns>
          Tipo solicitado o null si no se puede resolver el tipo.
        </returns>
      <param name="typeName">
              Nombre del tipo que se va a recuperar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />. 
        </summary>
      <param name="e">
              Objeto <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> que contiene los datos del evento. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />. 
        </summary>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />. 
        </summary>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary>
          Obtiene o establece un valor que indica si el método <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> debe comprobar la presencia del nombre especificado en el contenedor.
        </summary>
      <returns>
          
            true si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a pasar el nombre de componente determinado; false si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a comprobar la presencia del nombre determinado en el contenedor. El valor predeterminado es true.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El cambio de esta propiedad se realizó desde una sesión de serialización.
            </exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary>
          Obtiene el objeto que se debe utilizar para proporcionar propiedades a la propiedad <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> del administrador de serialización.
        </summary>
      <returns>
          Objeto que se debe utilizar para proporcionar propiedades a la propiedad <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> del administrador de serialización.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary>
          Obtiene o establece un indicador que especifica si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a crear siempre una nueva instancia de un tipo. 
        </summary>
      <returns>
          
            true si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a devolver la instancia existente; false si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a crear una nueva instancia de un tipo. El valor predeterminado es false.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El administrador de serialización tiene una sesión de serialización activa.
            </exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary>
          Tiene lugar cuando se crea una sesión. 
        </summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary>
          Se produce cuando se desecha una sesión.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>
          Agrega un proveedor de serialización personalizado al administrador de serialización.
        </summary>
      <param name="provider">
              Proveedor de serialización que se va a agregar.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary>
          Obtiene la pila de contexto para esta sesión de serialización. 
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> que almacena datos.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El acceso a esta propiedad se realizó fuera de una sesión de serialización.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>
          Implementa el método <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />.
        </summary>
      <returns>
          Instancia del objeto recién creada.
        </returns>
      <param name="type">
              Tipo de datos que se va crear. 
            </param>
      <param name="arguments">
              Argumentos que se van a pasar al constructor para este tipo. 
            </param>
      <param name="name">
              Nombre del objeto. Se puede utilizar este nombre para tener acceso al objeto más adelante a través de <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />. Si se pasa null, el objeto sigue creado pero no se puede tener acceso a él mediante el nombre. 
            </param>
      <param name="addToContainer">
              
                Es true para agregar este objeto al contenedor de diseño. El objeto debe implementar <see cref="T:System.ComponentModel.IComponent" /> para que esto surta efecto. 
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary>
          Recupera una instancia de un objeto creado con el nombre especificado.
        </summary>
      <returns>
          Instancia del objeto con el nombre dado, o null si no se encuentra ningún objeto por ese nombre.
        </returns>
      <param name="name">
              Nombre del objeto que se va a recuperar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="name" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El acceso a esta propiedad se realizó fuera de una sesión de serialización.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary>
          Recupera un nombre para el objeto especificado.
        </summary>
      <returns>
          Nombre del objeto, o null si el objeto no tiene nombre.
        </returns>
      <param name="value">
              Objeto para el que se va a recuperar el nombre.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="value" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El acceso a esta propiedad se realizó fuera de una sesión de serialización.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary>
          Obtiene un serializador del tipo solicitado para el tipo de objeto especificado.
        </summary>
      <returns>
          Instancia del serializador solicitado, o null si no se encuentra ningún serializador adecuado.
        </returns>
      <param name="objectType">
              Tipo del objeto para el que se obtiene el serializador.
            </param>
      <param name="serializerType">
              Tipo del serializador que se va a recuperar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary>
          Obtiene un tipo del nombre especificado.
        </summary>
      <returns>
          Instancia del tipo, o null si no se puede cargar el tipo.
        </returns>
      <param name="typeName">
              Nombre completo del tipo que se va a cargar.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El acceso a esta propiedad se realizó fuera de una sesión de serialización.
            </exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary>
          Implementa la propiedad <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />. 
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contiene las propiedades que se van a serializar.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>
          Quita un proveedor de serialización agregado anteriormente.
        </summary>
      <param name="provider">
              Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> que se va a quitar.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary>
          Se utiliza para crear un informe de error recuperable en la serialización.
        </summary>
      <param name="errorInformation">
              Objeto que contiene la información de error, normalmente de tipo <see cref="T:System.String" /> o <see cref="T:System.Exception" />.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El acceso a esta propiedad se realizó fuera de una sesión de serialización.
            </exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary>
          Se produce cuando <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> no encuentra el nombre especificado en la tabla de nombres del administrador de serialización. 
        </summary>
      <param name="value">
              Delegado <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventHandler" /> al que se llama cuando se provoca <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              El administrador de serialización no tiene una sesión de serialización activa.
            </exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary>
          Se produce al finalizar la serialización.
        </summary>
      <param name="value">
              Objeto <see cref="T:System.EventHandler" /> al que se llama cuando se provoca el evento <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El administrador de serialización no tiene una sesión de serialización activa.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary>
          Establece el nombre para el objeto especificado.
        </summary>
      <param name="instance">
              Objeto para el que se va a establecer el nombre.
            </param>
      <param name="name">
              Objeto <see cref="T:System.String" /> que se ha utilizado como nombre del objeto.
            </param>
      <exception cref="T:System.ArgumentNullException">
              Uno o ambos parámetros son null.
            </exception>
      <exception cref="T:System.ArgumentException">
              El objeto especificado por la instancia ya tiene un nombre, o bien otro objeto con nombre ya utiliza <paramref name="name" />.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El acceso a esta propiedad se realizó fuera de una sesión de serialización.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary>
          Para obtener una descripción de este miembro, vea el método <see cref="M:System.IServiceProvider.GetService(System.Type)" />.
        </summary>
      <returns>
          Objeto de servicio del tipo <paramref name="serviceType" />.
          O bien
          
            null si no hay ningún objeto de servicio del tipo <paramref name="serviceType" />.
        </returns>
      <param name="serviceType">
              Objeto que especifica el tipo de objeto de servicio que se va a obtener.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary>
          Obtiene o establece un indicador que especifica si el método <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> comprobará que los nombres coincidentes hacen referencia al mismo tipo.
        </summary>
      <returns>
          
            true si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> comprueba los tipos; en caso contrario, false. El valor predeterminado es true.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El administrador de serialización tiene una sesión de serialización activa.
            </exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary>
          Proporciona un medio para pasar el estado de contexto entre los serializadores. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> con la expresión y el propietario determinados. 
        </summary>
      <param name="expression">
              Expresión de código determinada.
            </param>
      <param name="expressionType">
              Tipo de la expresión de código determinada.
            </param>
      <param name="owner">
              Propietario de la expresión de código determinada.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="expression" />, <paramref name="expressionType" /> o <paramref name="owner" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> con un valor actual.
        </summary>
      <param name="expression">
              Expresión de código determinada.
            </param>
      <param name="expressionType">
              Tipo de la expresión de código determinada.
            </param>
      <param name="owner">
              Propietario de la expresión de código determinada.
            </param>
      <param name="presetValue">
              Valor preestablecido de la expresión de código determinada.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="expression" />, <paramref name="expressionType" /> o <paramref name="owner" /> es null.
            </exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary>
          Obtiene la expresión que representa este contexto.
        </summary>
      <returns>
          Expresión que representa este contexto.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary>
          Obtiene el objeto <see cref="T:System.Type" /> de la expresión.
        </summary>
      <returns>
          Objeto <see cref="T:System.Type" /> de la expresión.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary>
          Obtiene el objeto propietario de esta expresión.
        </summary>
      <returns>
          Objeto propietario de esta expresión.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary>
          Obtiene el valor preestablecido de una expresión.
        </summary>
      <returns>
          Valor preestablecido de esta expresión o null si no hay ninguno asignado.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload">
      <summary>
          Proporciona una interfaz que se puede utilizar para optimizar la recarga de un diseñador.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner(System.CodeDom.CodeCompileUnit)">
      <summary>
          Indica si el diseñador debe recargarse para importar correctamente la unidad de complicación especificada.
        </summary>
      <returns>
          
            true si debe recargarse el diseñador; en caso contrario, false.
        </returns>
      <param name="newTree">
              <see cref="T:System.CodeDom.CodeCompileUnit" /> que contiene el código de documento del diseñador. 
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary>
          Proporciona la clase base para serializar un tipo primitivo de reflexión dentro del gráfico de objetos.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />. 
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary>
          Serializa el descriptor de miembro especificado con el valor determinado en una colección de instrucciones.
        </summary>
      <param name="manager">
              Administrador de serialización que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto al que está enlazado el miembro.
            </param>
      <param name="descriptor">
              Descriptor del miembro que se va a serializar.
            </param>
      <param name="statements">
              Objeto <see cref="T:System.CodeDom.CodeStatementCollection" /> en el que se serializa <paramref name="descriptor" />.
            </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>
          Determina si se debe serializar el miembro especificado.
        </summary>
      <returns>
          
            true si debe serializarse el miembro que describe <paramref name="descriptor" />; de lo contrario, false.
        </returns>
      <param name="manager">
              Administrador de serialización que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Objeto al que está enlazado el miembro.
            </param>
      <param name="descriptor">
              Descriptor del miembro que se va a serializar.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary>
          Contiene una tabla de instrucciones que proporciona la clase <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary>
          Determina si la tabla contiene el propietario de instrucciones determinado.
        </summary>
      <returns>
          
            true si <paramref name="statementOwner" /> está en la tabla; en caso contrario, false.
        </returns>
      <param name="statementOwner">
              Propietario de la colección de instrucciones.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="statementOwner" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary>
          Devuelve una interfaz <see cref="T:System.Collections.IEnumerator" /> para el objeto <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.
        </summary>
      <returns>
          Interfaz <see cref="T:System.Collections.IEnumerator" /> para el objeto <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary>
          Obtiene la colección de instrucciones para el propietario determinado.
        </summary>
      <returns>
          Colección de instrucciones para <paramref name="statementOwner" /> o null si <paramref name="statementOwner" /> no está en la tabla.
        </returns>
      <param name="statementOwner">
              Propietario de la colección de instrucciones.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="statementOwner" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary>
          Rellena la tabla de instrucciones con una colección de propietarios de instrucciones.
        </summary>
      <param name="statementOwners">
              Colección de propietarios de instrucciones que se va a agregar a la tabla.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="statementOwner" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary>
          Rellena la tabla de instrucciones con un propietario de instrucciones.
        </summary>
      <param name="owner">
              Propietario de instrucciones que se va a agregar a la tabla.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="owner" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
          Para obtener una descripción de este miembro, vea el método <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.
        </summary>
      <returns>
          <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary>
          Un objeto <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> agrega un contexto raíz para proporcionar una definición del objeto raíz. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.RootContext" />. 
        </summary>
      <param name="expression">
              Expresión que representa el objeto raíz en el gráfico de objetos.
            </param>
      <param name="value">
              Objeto raíz del gráfico de objetos.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="expression" /> o <paramref name="value" /> es null.
            </exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary>
          Obtiene la expresión que representa el objeto raíz en el gráfico de objetos.
        </summary>
      <returns>
          Objeto <see cref="T:System.CodeDom.CodeExpression" /> que representa el objeto raíz en el gráfico de objetos.
        </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary>
          Obtiene el objeto raíz del gráfico de objetos.
        </summary>
      <returns>
          Objeto raíz del gráfico de objetos.
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary>
          Especifica que los serializadores deben controlar los valores predeterminados. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" />. 
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> con la opción de poder establecer un enlace con un miembro concreto. 
        </summary>
      <param name="member">
              Miembro al que está enlazado este contexto. Puede ser null.
            </param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary>
          Obtiene el miembro al que está enlazado este contexto.
        </summary>
      <returns>
          Miembro al que está enlazado este contexto o null si el contexto se enlaza a todos los miembros de un objeto.
        </returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary>
          Obtiene un valor que indica si el miembro determinado se debe serializar en este contexto.
        </summary>
      <returns>
          
            true si el miembro determinado se debe serializar en este contexto; de lo contrario, false.
        </returns>
      <param name="member">
              Miembro que se va a examinar para la serialización.
            </param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary>
          Proporciona una ubicación en la que se pueden serializar instrucciones. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />. 
        </summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary>
          Obtiene una colección de instrucciones que proporciona el contexto de instrucciones.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" /> que contiene las instrucciones que proporciona el contexto de instrucciones. 
        </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary>
          Serializa un objeto en un nuevo tipo.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />. 
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>
          Deserializa la declaración de tipos determinada.
        </summary>
      <returns>
          <see cref="T:System.Object" /> raíz.
        </returns>
      <param name="manager">
              Administrador de serialización que se va a utilizar para la serialización.
            </param>
      <param name="declaration">
              Declaración de tipos que se va a utilizar para la serialización.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> o <paramref name="typeDecl" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary>
          Devuelve el método en el que se almacenan las instrucciones utilizadas para serializar un miembro.
        </summary>
      <returns>
          Método utilizado para emitir todo el código de inicialización del miembro determinado.
        </returns>
      <param name="manager">
              Administrador de serialización que se va a utilizar para la serialización.
            </param>
      <param name="declaration">
              Declaración de tipos que se va a utilizar para la serialización.
            </param>
      <param name="value">
              Valor que se va a utilizar para la serialización.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" />, <paramref name="typeDecl" /> o <paramref name="value" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>
          Devuelve una matriz de los métodos que se van a interpretar durante la deserialización.
        </summary>
      <returns>
          Matriz de <see cref="T:System.CodeDom.CodeMemberMethod" /> de los métodos que se van a interpretar durante la deserialización.
        </returns>
      <param name="manager">
              Administrador de serialización que se va a utilizar para la serialización.
            </param>
      <param name="declaration">
              Declaración de tipos que se va a utilizar para la serialización.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> o <paramref name="typeDecl" /> es null.
            </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary>
          Serializa la raíz del objeto creando una nueva declaración de tipos que define la raíz.
        </summary>
      <returns>
          Objeto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> que define el objeto raíz.
        </returns>
      <param name="manager">
              Administrador de serialización que se va a utilizar para la serialización.
            </param>
      <param name="root">
              Objeto que se va a serializar.
            </param>
      <param name="members">
              Colección opcional de miembros. Puede ser null o estar vacía.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="manager" /> o <paramref name="root" /> es null.
            </exception>
    </member>
    <member name="T:System.Data.Design.MethodSignatureGenerator">
      <summary>
          Esta clase se utiliza para generar la firma de un método de consulta de base de datos, tal como la creará el generador del conjuntos de datos con tipo.
        </summary>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase MethodSignatureGenerator.
        </summary>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.CodeProvider">
      <summary>
          Obtiene o establece el objeto <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.
        </summary>
      <returns>
          La implementación del objeto <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, que proporciona interfaces de generación o compilación de código para generar el código y administrar la compilación para un solo lenguaje de programación. Los generadores de código pueden utilizarse para generar código en un determinado lenguaje y los compiladores de código para compilar código y generar ensamblados.
        </returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.ContainerParameterType">
      <summary>
          Obtiene o establece el tipo de objeto que va a rellenar la consulta.
        </summary>
      <returns>
          El tipo de objeto que va a rellenar la consulta. El tipo será <see cref="T:System.Data.DataSet" /> o <see cref="T:System.Data.DataTable" />.
        </returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.DataSetClassName">
      <summary>
          Obtiene o establece el nombre de tipo del conjunto de datos con tipo que se va a rellenar.
        </summary>
      <returns>
          Una cadena que representa el nombre de tipo del conjunto de datos con tipo que se va a rellenar.
        </returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateMethod">
      <summary>
          Devuelve un método que es miembro del código y que representa la consulta de base de datos, tal como la generó el generador de conjuntos de datos con tipo.
        </summary>
      <returns>
          El objeto <see cref="T:System.CodeDom.CodeMemberMethod" /> que representa la consulta de base de datos, tal como lo generó el generador del conjunto de datos con tipo.
        </returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateMethodSignature">
      <summary>
          Devuelve una cadena que representa la firma del método de consulta de base de datos, tal como la generó el generador de conjuntos de datos con tipo.
        </summary>
      <returns>
          Una cadena que representa la firma del método de consulta de base de datos, tal como la generó el generador de conjuntos de datos con tipo.
        </returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateUpdatingMethods">
      <summary>
          Devuelve una declaración de tipo de código que contiene los métodos Insert, Update y Delete asociados a la consulta de base de datos.
        </summary>
      <returns>
          Un objeto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> que contiene los métodos Insert, Updatey Delete asociados a la consulta de base de datos.
        </returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.IsGetMethod">
      <summary>
          Obtiene o establece un valor booleano que especifica si la firma generada tiene que devolver un objeto <see cref="T:System.Data.DataTable" />.
        </summary>
      <returns>
          Un valor booleano que especifica si la firma generada tiene que devolver un objeto <see cref="T:System.Data.DataTable" /> object: True, si la firma generada tiene que devolver una tabla de datos; en caso contrario, False.
        </returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.PagingMethod">
      <summary>
          Obtiene o establece un valor booleano que especifica si el método admite la paginación.
        </summary>
      <returns>
          Un valor booleano que especifica si el método admite la paginación: True, si el método admite la paginación; False, si no lo hace.
        </returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.ParameterOption">
      <summary>
          Obtiene o establece la categoría de los tipos que se van a usar en los parámetros.
        </summary>
      <returns>
          Un valor ParameterGenerationOption que especifica la categoría de los tipos que se van a utilizar en los parámetros: <see cref="F:System.Data.Design.ParameterGenerationOption.ClrTypes" /> (el valor predeterminado), <see cref="F:System.Data.Design.ParameterGenerationOption.SqlTypes" /> o <see cref="F:System.Data.Design.ParameterGenerationOption.Objects" />.
        </returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.SetDesignTableContent(System.String)">
      <summary>
          Establece el esquema de la tabla de diseño para la que se generará el método de consulta de base de datos.
        </summary>
      <param name="designTableContent">
              Una representación de cadena del esquema de la tabla.
            </param>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.SetMethodSourceContent(System.String)">
      <summary>
          Establece la consulta de base de datos para la que se generará la firma del método.
        </summary>
      <param name="methodSourceContent">
              Una representación de cadena de la consulta de base de datos.
            </param>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.TableClassName">
      <summary>
          Obtiene o establece el nombre del tipo de la tabla con tipo que se va a rellenar.
        </summary>
      <returns>
          Una cadena que indica el nombre del tipo de la tabla con tipo que se va a rellenar.
        </returns>
    </member>
    <member name="T:System.Data.Design.ParameterGenerationOption">
      <summary>
          Establece el tipo de parámetros que se generan en una clase <see cref="T:System.Data.DataSet" /> con tipo.
        </summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.ClrTypes">
      <summary>
          Los parámetros del conjunto de datos con tipo son tipos CLR.
        </summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.SqlTypes">
      <summary>
          Los parámetros del conjunto de datos con tipo son tipos Sql.
        </summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.Objects">
      <summary>
          Los parámetros del conjunto de datos con tipo son todos <see cref="T:System.Object" />.
        </summary>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGenerator">
      <summary>
          Genera una clase <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos.
        </summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>
          Genera un objeto <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos basándose en un <see cref="T:System.Data.DataSet" /> existente. 
        </summary>
      <returns>
          <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos.
        </returns>
      <param name="dataSet">
              <see cref="T:System.Data.DataSet" /> de origen que especifica los metadatos para el <see cref="T:System.Data.DataSet" /> con información de tipos.
            </param>
      <param name="codeNamespace">
              El espacio de nombres que proporciona el espacio de nombres de destino para el <see cref="T:System.Data.DataSet" /> con información de tipos.
            </param>
      <param name="codeProvider">
              <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico del lenguaje que se va a utilizar para generar el conjunto de datos.
            </param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>
          Genera un objeto <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos basándose en el archivo de entrada proporcionado.
        </summary>
      <returns>
          <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos.
        </returns>
      <param name="inputFileContent">
              Cadena que representa el esquema XML en el que se va a basar el objeto <see cref="T:System.Data.DataSet" />.
            </param>
      <param name="compileUnit">
              <see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.
            </param>
      <param name="mainNamespace">
              <see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.
            </param>
      <param name="codeProvider">
              <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico del lenguaje que se va a utilizar para generar el conjunto de datos.
            </param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable)">
      <summary>
          Genera un objeto <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos basándose en el archivo de entrada proporcionado.
        </summary>
      <returns>
          <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos.
        </returns>
      <param name="inputFileContent">
              Cadena que representa el esquema XML en el que se va a basar el objeto <see cref="T:System.Data.DataSet" />.
            </param>
      <param name="compileUnit">
              <see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.
            </param>
      <param name="mainNamespace">
              <see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.
            </param>
      <param name="codeProvider">
              <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico del lenguaje que se va a utilizar para generar el conjunto de datos.
            </param>
      <param name="customDBProviders">
              HashTable que asigna conexiones a proveedores concretos del conjunto de datos con tipo.
            </param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>
          Genera un objeto <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos basándose en el archivo de entrada proporcionado.
        </summary>
      <param name="inputFileContent">
              Cadena que representa el esquema XML en el que se va a basar el objeto <see cref="T:System.Data.DataSet" />.
            </param>
      <param name="compileUnit">
              <see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.
            </param>
      <param name="mainNamespace">
              <see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.
            </param>
      <param name="codeProvider">
              <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico del lenguaje que se va a utilizar para generar el conjunto de datos.
            </param>
      <param name="customDBProviders">
              HashTable que asigna conexiones a proveedores concretos del conjunto de datos con tipo.
            </param>
      <param name="option">
              <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> que determina qué componentes y métodos adicionales (si alguno) crear al generar un conjunto de datos con tipo.
            </param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)">
      <summary>
          Genera un objeto <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos basándose en el archivo de entrada proporcionado.
        </summary>
      <param name="inputFileContent">
              Cadena que representa el esquema XML en el que se va a basar el objeto <see cref="T:System.Data.DataSet" />.
            </param>
      <param name="compileUnit">
              <see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.
            </param>
      <param name="mainNamespace">
              <see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.
            </param>
      <param name="codeProvider">
              <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico del lenguaje que se va a utilizar para generar el conjunto de datos.
            </param>
      <param name="customDBProviders">
              HashTable que asigna las conexiones a proveedores concretos en el conjunto de datos con tipo.
            </param>
      <param name="option">
              <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> que determina qué componentes y métodos adicionales (si proceden) se van a crear al generar un conjunto de datos con tipo.
            </param>
      <param name="dataSetNamespace">
              Cadena que contiene el espacio de nombres del conjunto de datos generado.
            </param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Common.DbProviderFactory)">
      <summary>
          Genera un objeto <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos basándose en el archivo de entrada proporcionado.
        </summary>
      <returns>
          <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos.
        </returns>
      <param name="inputFileContent">
              Cadena que representa el esquema XML en el que se va a basar el objeto <see cref="T:System.Data.DataSet" />.
            </param>
      <param name="compileUnit">
              <see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.
            </param>
      <param name="mainNamespace">
              <see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.
            </param>
      <param name="codeProvider">
              <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico del lenguaje que se va a utilizar para generar el conjunto de datos.
            </param>
      <param name="specifiedFactory">
              El objeto <see cref="T:System.Data.Common.DbProviderFactory" /> que se va a usar para invalidar el proveedor contenido en el <paramref name="inputFileContent" />.
            </param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>
          Genera un objeto <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos basándose en el archivo de entrada proporcionado.
        </summary>
      <returns>
          <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos.
        </returns>
      <param name="inputFileContent">
              Cadena que representa el esquema XML en el que se va a basar el objeto <see cref="T:System.Data.DataSet" />.
            </param>
      <param name="compileUnit">
              <see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.
            </param>
      <param name="mainNamespace">
              <see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.
            </param>
      <param name="codeProvider">
              <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico del lenguaje que se va a utilizar para generar el conjunto de datos.
            </param>
      <param name="option">
              <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> que determina qué componentes y métodos adicionales (si alguno) crear al generar un conjunto de datos con tipo.
            </param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)">
      <summary>
          Genera un objeto <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos basándose en el archivo de entrada proporcionado.
        </summary>
      <param name="inputFileContent">
              Cadena que representa el esquema XML en el que se va a basar el objeto <see cref="T:System.Data.DataSet" />.
            </param>
      <param name="compileUnit">
              <see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.
            </param>
      <param name="mainNamespace">
              <see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.
            </param>
      <param name="codeProvider">
              <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico del lenguaje que se va a utilizar para generar el conjunto de datos.
            </param>
      <param name="option">
              <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> que determina qué componentes y métodos adicionales (si proceden) se van a crear al generar un conjunto de datos con tipo.
            </param>
      <param name="dataSetNamespace">
              Cadena que contiene el espacio de nombres del conjunto de datos generado.
            </param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String)">
      <summary>
          Devuelve el primer nombre de proveedor que se encuentra en el archivo de entrada proporcionado.
        </summary>
      <returns>
          Cadena que representa el proveedor concreto para este <see cref="T:System.Data.DataSet" />.
        </returns>
      <param name="inputFileContent">
              Cadena que representa el esquema XML en el que se va a basar el objeto <see cref="T:System.Data.DataSet" />.
            </param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String,System.String)">
      <summary>
          Devuelve el nombre del proveedor para <paramref name="tableName" /> del archivo de entrada.
        </summary>
      <returns>
          Cadena que representa el nombre del proveedor para la tabla concreta que se ha pasado en el parámetro <paramref name="tableName" />.
        </returns>
      <param name="inputFileContent">
              Cadena que representa el esquema XML en el que se va a basar el objeto <see cref="T:System.Data.DataSet" />.
            </param>
      <param name="tableName">
              Cadena que representa el nombre de la tabla de la que se va a devolver el nombre del proveedor.
            </param>
    </member>
    <member name="P:System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies">
      <summary>
          Obtiene o establece la colección de ensamblados a los que se hace referencia en un conjunto de datos con tipo.
        </summary>
      <returns>
          Una colección que contiene todos los ensamblados a los que se hace referencia en el conjunto de datos.
        </returns>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGenerator.GenerateOption">
      <summary>
          Proporciona a <see cref="T:System.Data.Design.TypedDataSetGenerator" /> información para crear conjuntos de datos con tipo que admiten LINQ to DataSet y actualización jerárquica.
        </summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.None">
      <summary>
          Genera conjuntos de datos con tipo que son compatibles con conjuntos de datos con tipo generados en versiones de Visual Studio anteriores a Visual Studio 2008.
        </summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.HierarchicalUpdate">
      <summary>
          Genera conjuntos de datos con tipo que tienen un TableAdapterManager y métodos asociados para habilitar la actualización jerárquica.
        </summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.LinqOverTypedDatasets">
      <summary>
          Genera conjuntos de datos con tipo que tienen tablas de datos que heredan de <see cref="T:System.Data.TypedTableBase`1" /> para habilitar la capacidad de realizar consultas de LINQ en tablas de datos.
        </summary>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGeneratorException">
      <summary>
          Es la excepción que se produce cuando ocurre un conflicto de nombres al generar una clase <see cref="T:System.Data.DataSet" /> con establecimiento inflexible de tipos.
        </summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Data.Design.TypedDataSetGeneratorException" />.
        </summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.Collections.IList)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> pasando una colección de errores.
        </summary>
      <param name="list">
              <see cref="T:System.Collections.IList" /> de errores.
            </param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Data.Design.TypedDataSetGeneratorException" />, usando la información de serialización y el contexto de transmisión por secuencias especificados.
        </summary>
      <param name="info">
              Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.
            </param>
      <param name="context">
              Estructura <see cref="T:System.Runtime.Serialization.StreamingContext" />.
            </param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> con la cadena especificada.
        </summary>
      <param name="message">
              Cadena que se muestra cuando se produce la excepción.
            </param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> con la cadena y la excepción interna especificadas.
        </summary>
      <param name="message">
              Cadena que se muestra cuando se produce la excepción.
            </param>
      <param name="innerException">
              Referencia a una excepción interna.
            </param>
    </member>
    <member name="P:System.Data.Design.TypedDataSetGeneratorException.ErrorList">
      <summary>
          Obtiene una lista dinámica de los errores generados.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Implementa la interfaz ISerializable y devuelve los datos necesarios para serializar el objeto <see cref="T:System.Data.Design.TypedDataSetGeneratorException" />.
        </summary>
      <param name="info">
              Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.
            </param>
      <param name="context">
              Estructura <see cref="T:System.Runtime.Serialization.StreamingContext" />.
            </param>
    </member>
    <member name="T:System.Data.Design.TypedDataSetSchemaImporterExtension">
      <summary>
          Genera asignaciones internas a los tipos de .NET Framework para las declaraciones de elemento de esquema XML, incluidas las partes literales del mensaje XSD de un documento WSDL.
        </summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" />.
        </summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.#ctor(System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" />.
        </summary>
      <param name="dataSetGenerateOptions">
              Valor de <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> para generar conjuntos de datos con tipo que habilitan LINQ to DataSet y Hierarchical Update.
            </param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>
          Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML.
        </summary>
      <returns>
          <see cref="T:System.String" /> que representa el nombre de la clase del conjunto de datos con tipo.
        </returns>
      <param name="name">
              <see cref="T:System.String" /> que representa el nombre del esquema que se va a importar.
            </param>
      <param name="namespaceName">
              <see cref="T:System.String" /> que representa el espacio de nombres del esquema XML.
            </param>
      <param name="context">
              <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que representa la clase raíz para la jerarquía del modelo de objetos de esquemas XML y sirve de clase base para clases como XmlSchemams-help://MS.VSCC.v80/MS.MSDN.v80/MS.NETDEVFX.v20.en/CPref19/html/T_System_Xml_Schema_XmlSchema.htm.
            </param>
      <param name="schemas">
              Clase <see cref="T:System.Xml.Schema.XmlSchema" /> que representa una colección de esquemas XML.
            </param>
      <param name="importer">
              <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> base que genera asignaciones internas a los tipos de .NET Framework para las declaraciones de elemento de esquema XML, incluidas las partes literales del mensaje XSD de un documento WSDL.
            </param>
      <param name="compileUnit">
              <see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.
            </param>
      <param name="mainNamespace">
              <see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.
            </param>
      <param name="options">
              <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> que especifica diversas opciones que se pueden utilizar al generar tipos de .NET Framework para su uso con un servicio web XML.
            </param>
      <param name="codeProvider">
              <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico del lenguaje que se va a utilizar para generar el conjunto de datos.
            </param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>
          Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML.
        </summary>
      <returns>
          <see cref="T:System.String" /> que representa el nombre de la clase del conjunto de datos con tipo.
        </returns>
      <param name="type">
              XMLSchemaType
            </param>
      <param name="context">
              <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que representa la clase raíz para la jerarquía del modelo de objetos de esquemas Xml y sirve de clase base para clases como XmlSchemams-help://MS.VSCC.v80/MS.MSDN.v80/MS.NETDEVFX.v20.en/CPref19/html/T_System_Xml_Schema_XmlSchema.htm.
            </param>
      <param name="schemas">
              Clase <see cref="T:System.Xml.Schema.XmlSchema" /> que representa una colección de esquemas XML.
            </param>
      <param name="importer">
              <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> base que genera asignaciones internas a los tipos de .NET Framework para las declaraciones de elemento de esquema XML, incluidas las partes literales del mensaje XSD de un documento WSDL.
            </param>
      <param name="compileUnit">
              <see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.
            </param>
      <param name="mainNamespace">
              CodeNamespace
            </param>
      <param name="options">
              <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> que especifica diversas opciones que se pueden utilizar al generar tipos de .NET Framework para su uso con un servicio web XML.
            </param>
      <param name="codeProvider">
              <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico del lenguaje que se va a utilizar para generar el conjunto de datos.
            </param>
    </member>
    <member name="T:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35">
      <summary>
          Genera las asignaciones internas a los tipos de .NET Framework para las declaraciones del elemento de esquema XML. Se expande en <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" /> para proporcionar la función adicional para los conjuntos de datos con tipo creados para la versión 3.5 de .NET Framework.
        </summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35.#ctor">
      <summary>
          Inicializar una nueva instancia de la clase <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35" />.
        </summary>
    </member>
    <member name="T:System.Diagnostics.Design.LogConverter">
      <summary>
          Proporciona el convertidor de tipos para la propiedad <see cref="P:System.Diagnostics.EventLog.Log" />.
        </summary>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Design.LogConverter" /> para el tipo especificado.
        </summary>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
          Indica si este convertidor puede convertir un objeto del tipo dado al tipo de este convertidor, utilizando el contexto especificado. 
        </summary>
      <returns>
          
            true si la conversión se puede realizar; en caso contrario, false.
        </returns>
      <param name="context">
              Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.
            </param>
      <param name="sourceType">
              <see cref="T:System.Type" /> que representa el tipo a partir del cual se desea realizar la conversión.
            </param>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
          Convierte el objeto dado a una cadena, utilizando el contexto especificado y la información de referencia cultural.
        </summary>
      <returns>
          Objeto <see cref="T:System.Object" /> que representa el valor convertido.
        </returns>
      <param name="context">
              Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.
            </param>
      <param name="culture">
              <see cref="T:System.Globalization.CultureInfo" /> que se va a utilizar como referencia cultural actual.
            </param>
      <param name="value">
              <see cref="T:System.Object" /> que se va a convertir.
            </param>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene una colección de valores estándar para el tipo de datos para el que está diseñado este control de validación.
        </summary>
      <returns>
          Colección <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contiene un conjunto estándar de valores válidos o null si el tipo de datos no es compatible con un conjunto estándar de valores.
        </returns>
      <param name="context">
              Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato. 
            </param>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Indica si este objeto admite un conjunto estándar de valores que se pueden seleccionar de una lista, utilizando el contexto especificado.
        </summary>
      <returns>
          
            Es true porque debe llamarse al método <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> para buscar un conjunto común de valores que sea compatible con el objeto. Este método nunca devuelve false.
        </returns>
      <param name="context">
              Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato. 
            </param>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessDesigner">
      <summary>
          Clase base del diseñador para ampliar el comportamiento de un proceso en modo de diseño.
        </summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Design.ProcessDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Ajusta el conjunto de propiedades que el proceso expone mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="properties">
              <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades de la clase del componente.
            </param>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessModuleDesigner">
      <summary>
          Clase base del diseñador para ampliar el comportamiento del módulo de un proceso en modo de diseño.
        </summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessModuleDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Design.ProcessModuleDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessModuleDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Ajusta el conjunto de propiedades que el módulo de un proceso expone mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="properties">
              <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades de la clase del componente.
            </param>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessThreadDesigner">
      <summary>
          Clase base del diseñador para ampliar el comportamiento del subproceso de un proceso en modo de diseño.
        </summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessThreadDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Design.ProcessThreadDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessThreadDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Ajusta el conjunto de propiedades que el componente expone mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="properties">
              <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades de la clase del componente.
            </param>
    </member>
    <member name="T:System.Messaging.Design.MessageDesigner">
      <summary>
          Proporciona funcionalidad básica en tiempo de diseño para la clase <see cref="T:System.Messaging.Message" />.
        </summary>
    </member>
    <member name="M:System.Messaging.Design.MessageDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Messaging.Design.MessageDesigner" />.
        </summary>
    </member>
    <member name="M:System.Messaging.Design.MessageDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Modifica el conjunto de propiedades que el diseñador expone mediante la clase <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <returns>
        </returns>
      <param name="properties">
              <see cref="T:System.Collections.IDictionary" /> que contiene el conjunto de propiedades de filtrado para el componente.
            </param>
    </member>
    <member name="T:System.Resources.Tools.StronglyTypedResourceBuilder">
      <summary>
          Proporciona compatibilidad para los recursos con establecimiento inflexible de tipos. Esta clase no se puede heredar. 
        </summary>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>
          Genera un archivo de clase que contiene propiedades con establecimiento inflexible de tipos que coinciden con los recursos a los que se hace referencia en la colección especificada.
        </summary>
      <returns>
          Un contenedor de <see cref="T:System.CodeDom.CodeCompileUnit" />.
        </returns>
      <param name="resourceList">
              Colección <see cref="T:System.Collections.IDictionary" /> donde cada par de clave y valor de entrada del diccionario es el nombre de un recurso y el valor del recurso.
            </param>
      <param name="baseName">
              Nombre de la clase que se va a generar.
            </param>
      <param name="generatedCodeNamespace">
              Espacio de nombres de la clase que se va a generar.
            </param>
      <param name="codeProvider">
              Clase <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que proporciona el lenguaje en el que se generará la clase.
            </param>
      <param name="internalClass">
              
                true para generar una clase interna; false para generar una clase pública.
            </param>
      <param name="unmatchable">
              Matriz de <see cref="T:System.String" /> que contiene cada nombre de recurso para el que no se puede generar una propiedad. Normalmente, no se puede generar una propiedad porque el nombre del recurso no es un identificador válido.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="resourceList" />, <paramref name="basename" /> o <paramref name="codeProvider" /> es null.
            </exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>
          Genera un archivo de clase que contiene propiedades con establecimiento inflexible de tipos que coinciden con los recursos a los que se hace referencia en la colección especificada.
        </summary>
      <returns>
          Un contenedor de <see cref="T:System.CodeDom.CodeCompileUnit" />.
        </returns>
      <param name="resourceList">
              Colección <see cref="T:System.Collections.IDictionary" /> donde cada par de clave y valor de entrada del diccionario es el nombre de un recurso y el valor del recurso.
            </param>
      <param name="baseName">
              Nombre de la clase que se va a generar.
            </param>
      <param name="generatedCodeNamespace">
              Espacio de nombres de la clase que se va a generar.
            </param>
      <param name="resourcesNamespace">
              Espacio de nombres del recurso que se va a generar. 
            </param>
      <param name="codeProvider">
              Objeto <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que proporciona el lenguaje en el que se generará la clase.
            </param>
      <param name="internalClass">
              
                true para generar una clase interna; false para generar una clase pública.
            </param>
      <param name="unmatchable">
              Matriz de <see cref="T:System.String" /> que contiene cada nombre de recurso para el que no se puede generar una propiedad. Normalmente, no se puede generar una propiedad porque el nombre del recurso no es un identificador válido.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="resourceList" />, <paramref name="basename" /> o <paramref name="codeProvider" /> es null.
            </exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>
          Genera un archivo de clase que contiene propiedades con establecimiento inflexible de tipos que coinciden con los recursos del archivo .resx especificado.
        </summary>
      <returns>
          Un contenedor de <see cref="T:System.CodeDom.CodeCompileUnit" />.
        </returns>
      <param name="resxFile">
              Nombre de un archivo .resx utilizado como entrada.
            </param>
      <param name="baseName">
              Nombre de la clase que se va a generar.
            </param>
      <param name="generatedCodeNamespace">
              Espacio de nombres de la clase que se va a generar.
            </param>
      <param name="codeProvider">
              Clase <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que proporciona el lenguaje en el que se generará la clase.
            </param>
      <param name="internalClass">
              
                true para generar una clase interna; false para generar una clase pública.
            </param>
      <param name="unmatchable">
              Matriz de <see cref="T:System.String" /> que contiene cada nombre de recurso para el que no se puede generar una propiedad. Normalmente, no se puede generar una propiedad porque el nombre del recurso no es un identificador válido.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="basename" /> o <paramref name="codeProvider" /> es null.
            </exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>
          Genera un archivo de clase que contiene propiedades con establecimiento inflexible de tipos que coinciden con los recursos del archivo .resx especificado.
        </summary>
      <returns>
          Un contenedor de <see cref="T:System.CodeDom.CodeCompileUnit" />.
        </returns>
      <param name="resxFile">
              Nombre de un archivo .resx utilizado como entrada.
            </param>
      <param name="baseName">
              Nombre de la clase que se va a generar.
            </param>
      <param name="generatedCodeNamespace">
              Espacio de nombres de la clase que se va a generar.
            </param>
      <param name="resourcesNamespace">
              Espacio de nombres del recurso que se va a generar. 
            </param>
      <param name="codeProvider">
              Clase <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que proporciona el lenguaje en el que se generará la clase.
            </param>
      <param name="internalClass">
              
                true para generar una clase interna; false para generar una clase pública.
            </param>
      <param name="unmatchable">
              Matriz de <see cref="T:System.String" /> que contiene cada nombre de recurso para el que no se puede generar una propiedad. Normalmente, no se puede generar una propiedad porque el nombre del recurso no es un identificador válido.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="basename " /> o <paramref name="codeProvider" /> es null.
            </exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>
          Genera una cadena de recurso válida tomando como base la cadena de entrada y el proveedor de código especificados.
        </summary>
      <returns>
          El nombre de recurso válido derivado del parámetro <paramref name="key" />. Los símbolos que no sean válidos se reemplazarán por el carácter de subrayado (_) o null si la cadena derivada todavía contiene caracteres no válidos de acuerdo con el lenguaje especificado por el parámetro <paramref name="provider" />.
        </returns>
      <param name="key">
              Cadena que se va a comprobar y, si es necesario, convertir en un nombre de recurso válido.
            </param>
      <param name="provider">
              Objeto <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que especifica el lenguaje de destino que se va a utilizar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="key" /> o <paramref name="provider" /> es null.
            </exception>
    </member>
    <member name="T:System.ServiceProcess.Design.ServiceControllerDesigner">
      <summary>
          Proporciona a la clase <see cref="T:System.ServiceProcess.ServiceController" /> servicios en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceControllerDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.ServiceProcess.Design.ServiceControllerDesigner" />.
        </summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceControllerDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Ajusta el conjunto de propiedades que <see cref="T:System.ServiceProcess.ServiceController" /> expone mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="properties">
              <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades para la clase <see cref="T:System.ServiceProcess.ServiceController" />. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.AppSettingsExpressionEditor">
      <summary>
          Provee propiedades y métodos para evaluar y modificar una expresión de configuración de aplicaciones en un archivo de configuración en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>
          Evalúa una cadena de expresión de configuración de aplicaciones y proporciona el valor en tiempo de diseño de una propiedad de control.
        </summary>
      <returns>
          Objeto al que hace referencia <paramref name="expression" />, si la evaluación de expresión fue satisfactoria; de lo contrario, null.
        </returns>
      <param name="expression">
              Cadena de expresión de configuración de aplicaciones que se debe evaluar. <paramref name="expression" /> no incluye el prefijo de expresión AppSettings.
            </param>
      <param name="parseTimeData">
              Objeto que contiene información de análisis adicional para evaluar <paramref name="expression" />.
            </param>
      <param name="propertyType">
              Tipo de propiedad de control.
            </param>
      <param name="serviceProvider">
              Implementación del proveedor de servicio mediante el host del diseñador, utilizado para obtener servicios adicionales en tiempo de diseño.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>
          Devuelve una hoja del editor de expresiones para una expresión de configuración de aplicaciones.
        </summary>
      <returns>
          Implementación de <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> que define las propiedades de expresión de configuración de aplicaciones.
        </returns>
      <param name="expression">
              Cadena de expresión establecida para una propiedad de control, utilizada para inicializar la hoja del editor de expresiones. <paramref name="expression" /> no contiene el prefijo de expresión AppSettings.
            </param>
      <param name="serviceProvider">
              Implementación del proveedor de servicio mediante el host del diseñador, utilizado para obtener servicios adicionales en tiempo de diseño.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.CalendarDataBindingHandler">
      <summary>
          Proporciona un controlador de enlace a datos para un calendario.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.CalendarDataBindingHandler.#ctor">
      <summary>
          Inicializa una instancia de la clase <see cref="T:System.Web.UI.Design.CalendarDataBindingHandler" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.CalendarDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>
          Establece la fecha del calendario en el día actual si la propiedad <see cref="P:System.Web.UI.WebControls.Calendar.SelectedDate" /> está enlazada a datos.
        </summary>
      <param name="designerHost">
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> para el documento que contiene el control. 
            </param>
      <param name="control">
              <see cref="T:System.Web.UI.Control" /> al que se agregará enlace de datos. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.ClientScriptItem">
      <summary>
          Representa un elemento de secuencia de comandos de cliente en un formulario Web Forms o control de usuario en tiempo de diseño. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ClientScriptItem.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ClientScriptItem" /> mediante los parámetros proporcionados.
        </summary>
      <param name="text">
              Contenido del elemento de script; una cadena de instrucciones de secuencia de comandos que se van a ejecutar en el cliente.
            </param>
      <param name="source">
              Valor de atributo src para el elemento de script, que especifica una ubicación de origen externa para el contenido de la secuencia de comandos de cliente.
            </param>
      <param name="language">
              Valor de atributo language para el elemento de script, que especifica el lenguaje de las instrucciones de secuencia de comandos.
            </param>
      <param name="type">
              El valor de atributo del tipo del elemento script, que indica el tipo MIME para el motor de secuencias de comandos asociado.
            </param>
      <param name="id">
              El identificador del elemento script. Este argumento es necesario para el host de diseño (por ejemplo, Visual Studio 2005).
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="id" /> es null (iniciado por el host de diseño).
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Id">
      <summary>
          Obtiene el valor de atributo ID para el elemento de secuencia de comandos de cliente.
        </summary>
      <returns>
          ID para el elemento script.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Language">
      <summary>
          Obtiene el valor de atributo language para el elemento de secuencia de comandos de cliente.
        </summary>
      <returns>
          El nombre del lenguaje especificado para el atributo language en el elemento de script.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Source">
      <summary>
          Obtiene el valor de atributo src para el elemento de secuencia de comandos de cliente.
        </summary>
      <returns>
          La ruta de acceso al archivo de código fuente especificado para el atributo src en el elemento de script.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Text">
      <summary>
          Obtiene las instrucciones de secuencia de comandos que contiene el elemento de secuencia de comandos de cliente.
        </summary>
      <returns>
          Las instrucciones de secuencia de comandos que contiene el elemento de script.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Type">
      <summary>
          Obtiene el valor de atributo type para el elemento de secuencia de comandos de cliente.
        </summary>
      <returns>
          Nombre del tipo MIME asociado al elemento script.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.ClientScriptItemCollection">
      <summary>
          Representa una colección de sólo lectura de los bloques de secuencias de comandos de cliente que contiene un formulario Web Forms o un control de usuario en tiempo de diseño. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ClientScriptItemCollection.#ctor(System.Web.UI.Design.ClientScriptItem[])">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" />. 
        </summary>
      <param name="clientScriptItems">
              Matriz de elementos <see cref="T:System.Web.UI.Design.ClientScriptItem" /> que se utiliza para inicializar la colección.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.ColorBuilder">
      <summary>
          Proporciona un generador de cadenas de color HTML en tiempo de diseño que permite al usuario seleccionar un color.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ColorBuilder.BuildColor(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String)">
      <summary>
          Inicia un editor de colores para crear un valor de propiedad de color HTML.
        </summary>
      <returns>
          Valor de color, representado como cadena en un formato de color HTML, o null si el servicio del generador no se puede recuperar.
        </returns>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" /> cuyo sitio se utilizará para obtener acceso a servicios en tiempo de diseño. 
            </param>
      <param name="owner">
              <see cref="T:System.Web.UI.Control" /> que se utiliza para asociar la ventana del selector. 
            </param>
      <param name="initialColor">
              Color inicial que se mostrará en la ventana del selector en un formato de color HTML válido. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.ConnectionStringEditor">
      <summary>
          Proporciona una clase base para una interfaz de usuario para seleccionar y editar propiedades de cadena de conexión en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ConnectionStringEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Modifica el valor del objeto especificado mediante el proveedor de servicios y el contexto especificados.
        </summary>
      <returns>
          La expresión de conexión seleccionada, como un objeto de cadena; de lo contrario, si no se ha seleccionado una expresión, el mismo <paramref name="value" /> que se ha pasado.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se utiliza para obtener información adicional sobre el contexto.
            </param>
      <param name="provider">
              Objeto de proveedor de servicios a través del que pueden obtener los servicios de edición.
            </param>
      <param name="value">
              Instancia del objeto que se va a editar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Devuelve el estilo de edición que está asociado al editor de cadenas de conexión para el contexto especificado.
        </summary>
      <returns>
          Valor de enumeración <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición de la interfaz de usuario proporcionada.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se utiliza para obtener información adicional sobre el contexto.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.GetProviderName(System.Object)">
      <summary>
          Devuelve el nombre del proveedor de la instancia proporcionada de la clase <see cref="T:System.Web.UI.Design.ConnectionStringEditor" />.
        </summary>
      <returns>
          Es siempre una cadena vacía ("").
        </returns>
      <param name="instance">
              <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> o una instancia de una clase derivada.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.SetProviderName(System.Object,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>
          Coloca el nombre del proveedor en la instancia especificada de la clase <see cref="T:System.Web.UI.Design.ConnectionStringEditor" />.
        </summary>
      <param name="instance">
              <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> o una instancia de una clase derivada.
            </param>
      <param name="connection">
              <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" />.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.ConnectionStringsExpressionEditor">
      <summary>
          Proporciona propiedades y métodos para seleccionar una expresión de conexión de datos que se asocia en tiempo de diseño a propiedades de control.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ConnectionStringsExpressionEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>
          Evalúa una expresión de cadena de conexión y proporciona el valor en tiempo de diseño de una propiedad de control.
        </summary>
      <returns>
          Objeto al que hace referencia la cadena de expresión evaluada si la evaluación de la expresión se realizó correctamente; en caso contrario, se devuelve null.
        </returns>
      <param name="expression">
              Expresión de cadena de conexión que se va a evaluar. La expresión no incluye el prefijo de expresión ConnectionStrings.
            </param>
      <param name="parseTimeData">
              Objeto que contiene información de análisis adicional para evaluar la expresión.
            </param>
      <param name="propertyType">
              Tipo de la propiedad de control.
            </param>
      <param name="serviceProvider">
              Implementación del proveedor de servicio mediante el host del diseñador, utilizado para obtener servicios adicionales en tiempo de diseño.
            </param>
      <param name="expression">
              Cadena de expresión que se va a evaluar. La expresión no incluye el prefijo de expresión.
            </param>
      <param name="parseTimeData">
              Objeto que contiene información de análisis adicional para evaluar <paramref name="expression" />. Normalmente, lo proporciona el generador de expresiones.
            </param>
      <param name="propertyType">
              Tipo de la propiedad de control a la que <paramref name="expression" /> está enlazado.
            </param>
      <param name="serviceProvider">
              Implementación del proveedor de servicios proporcionada por el host del diseñador, que se utiliza para obtener servicios en tiempo de diseño adicionales.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>
          Devuelve una hoja del editor de expresiones para una expresión de cadena de conexión.
        </summary>
      <returns>
          Instancia de <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> que define las propiedades de expresión de la cadena de conexión.
        </returns>
      <param name="expression">
              La cadena de expresión establecida para una propiedad de control, utilizada para inicializar la hoja del editor de expresiones. La expresión no incluye el prefijo de expresión ConnectionStrings.
            </param>
      <param name="serviceProvider">
              Implementación del proveedor de servicio mediante el host del diseñador, utilizado para obtener servicios adicionales en tiempo de diseño.
            </param>
      <param name="expression">
              Cadena de expresión establecida para una propiedad de control, que se utiliza para inicializar la hoja del editor de expresiones.
            </param>
      <param name="serviceProvider">
              Implementación del proveedor de servicios proporcionada por el host del diseñador, que se utiliza para obtener servicios en tiempo de diseño adicionales.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.ContainerControlDesigner">
      <summary>
          Proporciona funciones del diseñador para controles que contienen controles secundarios o propiedades que se pueden modificar en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ContainerControlDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)">
      <summary>
          Agrega los atributos de estilo del control en tiempo de diseño.
        </summary>
      <param name="styleAttributes">
              Colección en clave de atributos de estilo.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.AllowResize">
      <summary>
          Obtiene un valor que indica si se puede cambiar el tamaño del control en tiempo de diseño.
        </summary>
      <returns>
          
            Es true si se puede cambiar el tamaño del control; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.FrameCaption">
      <summary>
          Obtiene el título que se mostrará para un control en tiempo de diseño.
        </summary>
      <returns>
          Cadena utilizada para el título del marco del control en tiempo de diseño, si el control tiene un título en tiempo de diseño; de lo contrario es una cadena vacía ("").
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.FrameStyle">
      <summary>
          Obtiene el estilo que se aplica al marco del control en tiempo de diseño.
        </summary>
      <returns>
          Clase <see cref="T:System.Web.UI.WebControls.Style" /> para el marco del control en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes">
      <summary>
          Devuelve los atributos de estilo de la colección en tiempo de diseño.
        </summary>
      <returns>
          Colección de atributos de estilo aplicados al control en la superficie de diseño. Los nombres de atributo de estilo son claves utilizadas para obtener acceso a los valores de atributo de estilo de la interfaz <see cref="T:System.Collections.IDictionary" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Devuelve el formato HTML usado para representar el control en tiempo de diseño.
        </summary>
      <returns>
          Cadena de formato HTML que representa el control.
        </returns>
      <param name="regions">
              Colección de regiones del diseñador.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>
          Devuelve el contenido de la región modificable del control en tiempo de diseño.
        </summary>
      <returns>
          El contenido de la región conservado contenido en la clase <see cref="T:System.Web.UI.Design.ContainerControlDesigner" />.
        </returns>
      <param name="region">
              Región de diseño modificable contenida en el control.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetPersistenceContent">
      <summary>
          Devuelve el contenido con persistencia del control en tiempo de diseño.
        </summary>
      <returns>
          
            null.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Establece el contenido de la región modificable del control en tiempo de diseño.
        </summary>
      <param name="region">
              Región de diseño modificable contenida en el control.
            </param>
      <param name="content">
              Contenido que se va a asignar a la región de diseño modificable.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.ContentDefinition">
      <summary>
          Proporciona una estructura de propiedad que define el contenido Web en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ContentDefinition.#ctor(System.String,System.String,System.String)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ContentDefinition" />.
        </summary>
      <param name="id">
              Un identificador de cadena para el contenido.
            </param>
      <param name="content">
              El contenido del formato HTML predeterminado.
            </param>
      <param name="designTimeHtml">
              El contenido del formato HTML en tiempo de diseño.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.ContentPlaceHolderID">
      <summary>
          Obtiene el id. del control <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> que se asocia al contenido actual.
        </summary>
      <returns>
          El id. de <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> asociado al contenido actual.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.DefaultContent">
      <summary>
          Obtiene el formato HTML predeterminado para el contenido.
        </summary>
      <returns>
          Una cadena que contiene el formato HTML.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.DefaultDesignTimeHtml">
      <summary>
          Obtiene el formato HTML para representar el contenido en tiempo de diseño.
        </summary>
      <returns>
          Una cadena que contiene el formato HTML.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.ContentDesignerState">
      <summary>
          Enumera los valores de configuración posibles para el estado de un control <see cref="T:System.Web.UI.Design.WebControls.ContentDesigner" /> en tiempo de diseño.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.ContentDesignerState.ShowDefaultContent">
      <summary>
          El control asociado muestra el contenido predeterminado.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.ContentDesignerState.ShowUserContent">
      <summary>
          El control asociado muestra el contenido del usuario.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlDesigner">
      <summary>
          Proporciona una clase base de diseñador de controles para ampliar el comportamiento de un control de servidor Web en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ControlDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones para el diseñador de controles.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que contiene los elementos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> para el diseñador de controles.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.AllowResize">
      <summary>
          Obtiene un valor que indica si se puede cambiar el tamaño del control en el entorno en tiempo de diseño.
        </summary>
      <returns>
          
            Es true si se puede cambiar el tamaño del control; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.AutoFormats">
      <summary>
          Obtiene la colección de esquemas de formato automático predefinidos para mostrarla en tiempo de diseño en el cuadro de diálogo Formato automático correspondiente al control asociado. 
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> que contiene los esquemas predefinidos del control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)">
      <summary>
          Crea el formato HTML para mostrar un mensaje de error especificado en tiempo de diseño.
        </summary>
      <returns>
          Una cadena de formato HTML que contiene el mensaje de error especificado.
        </returns>
      <param name="errorMessage">
              El mensaje de error que se va a incluir en el formato HTML generado.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)">
      <summary>
          Crea el formato HTML para mostrar un mensaje de error de excepción especificado en tiempo de diseño.
        </summary>
      <returns>
          Formato HTML que contiene el <paramref name="errorMessage" /> especificado y <paramref name="e" />.
        </returns>
      <param name="errorMessage">
              Mensaje de error que se va a incluir en la cadena HTML generada.
            </param>
      <param name="e">
              Excepción que se va a incluir en la cadena HTML generada.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml">
      <summary>
          Proporciona una representación sencilla del marcador de posición rectangular que muestra el tipo y el Id. del control.
        </summary>
      <returns>
          Una cadena que contiene código HTML en tiempo de diseño que proporciona información básica sobre el control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)">
      <summary>
          Proporciona una representación sencilla del marcador de posición rectangular que muestra el tipo y el Id. del control, así como instrucciones o información adicionales que se hayan especificado.
        </summary>
      <returns>
          Una cadena que contiene código HTML en tiempo de diseño que proporciona información sobre el control.
        </returns>
      <param name="instruction">
              Una cadena que contiene texto y código para agregar al resultado HTML. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateViewControl">
      <summary>
          Devuelve una copia del control asociado para verlo o representarlo en la superficie de diseño.
        </summary>
      <returns>
          Un control de servidor Web.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DataBindingsEnabled">
      <summary>
          Obtiene un valor que indica si la región contenedora del control asociado permite el enlace a datos.
        </summary>
      <returns>
          
            Es true si el contenedor del control admite el enlace a datos; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignerState">
      <summary>
          Obtiene un objeto que se utiliza para guardar los datos del control asociado en tiempo de diseño.
        </summary>
      <returns>
          Propiedad <see cref="P:System.Web.UI.Design.ControlDesigner.DesignerState" /> que implementa <see cref="T:System.Collections.IDictionary" /> y utiliza <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> para conservar los datos de estado en tiempo de diseño para el control asociado. 
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignTimeElementView">
      <summary>
          Obtiene el objeto de control de vista para el diseñador de controles.
        </summary>
      <returns>
          
            null.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete">
      <summary>
          Obtiene un valor que indica si el host de diseño debe terminar de cargarse antes de que se pueda llamar al método <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />.
        </summary>
      <returns>
          
            Es true si se debe terminar de cargar antes de poder llamar al método <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />; de lo contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetBounds">
      <summary>
          Recupera las coordenadas del rectángulo que representa los límites del control mostrado en la superficie de diseño.
        </summary>
      <returns>
          Objeto <see cref="T:System.Drawing.Rectangle" /> que representa los límites del control en la superficie de diseño con respecto al control, no al documento.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml">
      <summary>
          Recupera el formato HTML usado para representar el control en tiempo de diseño.
        </summary>
      <returns>
          El formato HTML que se utiliza para representar el control en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Recupera el formato HTML para mostrar el control y rellena la colección con las regiones del diseñador de controles actuales.
        </summary>
      <returns>
          El formato HTML en tiempo de diseño para el control asociado, incluyendo todas las regiones del diseñador de controles.
        </returns>
      <param name="regions">
              Una colección de regiones del diseñador de controles para el control asociado.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory(System.IServiceProvider)">
      <summary>
          Devuelve un generador adecuado de proveedores de recursos según la configuración de globalización en el archivo de configuración del sitio.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" />, si hay alguno definido en el archivo de configuración; de lo contrario, es null.
        </returns>
      <param name="serviceProvider">
              Objeto <see cref="T:System.IServiceProvider" /> que puede recuperar servicios globales y locales.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>
          Devuelve el contenido de un área modificable de la vista en tiempo de diseño del control asociado.
        </summary>
      <returns>
          El contenido guardado de la región, si el diseñador de controles admite regiones modificables; de lo contrario, es una cadena vacía ("").
        </returns>
      <param name="region">
              Objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> para el que se obtendrá el contenido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml">
      <summary>
          Recupera el formato HTML para representar un control de servidor Web en tiempo de diseño que no tendrá ninguna representación visual en tiempo de ejecución.
        </summary>
      <returns>
          El formato HTML utilizado para representar un control en tiempo de diseño que de lo contrario no tendría ninguna representación visual. El valor predeterminado es un rectángulo que contiene el tipo y el Id. del componente.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
          Recupera el formato HTML que proporciona información sobre la excepción especificada. 
        </summary>
      <returns>
          El formato HTML en tiempo de diseño de la excepción especificada.
        </returns>
      <param name="e">
              Excepción que se ha producido. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent">
      <summary>
          Recupera el formato HTML interno con persistencia del control en tiempo de diseño.
        </summary>
      <returns>
          Una cadena que representa el formato HTML interno con persistencia del control asociado. El valor predeterminado es null.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml">
      <summary>
          Recupera el formato HTML interno con persistencia del control.
        </summary>
      <returns>
          El formato HTML interno con persistencia del control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering">
      <summary>
          Recupera un objeto que contiene el formato en tiempo de diseño para el contenido y las regiones del control asociado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.ViewRendering" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Control)">
      <summary>
          Recupera un objeto que contiene el formato en tiempo de diseño para el contenido y las regiones del control especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.ViewRendering" />.
        </returns>
      <param name="control">
              Objeto <see cref="T:System.Web.UI.Control" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Design.ControlDesigner)">
      <summary>
          Recupera un objeto que contiene el formato en tiempo de diseño para el contenido y las regiones del control asociado para el diseñador de controles especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.ViewRendering" />.
        </returns>
      <param name="designer">
              Diseñador de controles que se deriva de <see cref="T:System.Web.UI.Design.ControlDesigner" />.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode">
      <summary>
          Obtiene un valor que indica si las propiedades del control asociado están ocultas cuando el control está en modo de plantilla.
        </summary>
      <returns>
          
            Es true si las propiedades del control asociado están ocultas cuando el control está en modo de plantilla; de lo contrario, es false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ID">
      <summary>
          Obtiene o establece la cadena del identificador del control.
        </summary>
      <returns>
          Cadena del identificador del control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador de controles y carga el componente especificado.
        </summary>
      <param name="component">
              El control que se va a diseñar. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.InTemplateMode">
      <summary>
          Obtiene un valor que indica si el control está en el modo de vista o de edición de plantilla en el host de diseño. La propiedad <see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> es de sólo lectura.
        </summary>
      <returns>
          
            Es true si el control está en el modo de vista o de edición de plantilla; de lo contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Invalidate">
      <summary>
          Invalida todo el área del control que se muestra en la superficie de diseño y señala al diseñador de controles que vuelva a dibujar el control.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Invalidate(System.Drawing.Rectangle)">
      <summary>
          Invalida el área especificada del control que se muestra en la superficie de diseño y señala al diseñador de controles que vuelva a dibujar el control.
        </summary>
      <param name="rectangle">
              Objeto <see cref="T:System.Drawing.Rectangle" /> que representa el área que se va a invalidar, con respecto a la esquina superior izquierda del control. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)">
      <summary>
          Ajusta una serie de cambios en una transacción, utilizando los parámetros especificados que se pueden deshacer como una unidad con la funcionalidad de deshacer del host de diseño.
        </summary>
      <param name="component">
              El control asociado al diseñador de controles.
            </param>
      <param name="callback">
              Objeto <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> que representa una función a la que se va a llamar en el diseñador de controles como parte de la transacción.
            </param>
      <param name="context">
              Un objeto que contiene el argumento para la devolución de llamada.
            </param>
      <param name="description">
              Una descripción del efecto de permitir que se complete la transacción, que el host de diseño utiliza para ofrecer al usuario la posibilidad de cancelar la transacción.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="component" /> es null.
              O bien,
              
                <paramref name="callback" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)">
      <summary>
          Ajusta una serie de cambios en una transacción, utilizando los parámetros especificados que se pueden deshacer como una unidad con la funcionalidad de deshacer del host de diseño.
        </summary>
      <param name="component">
              El control asociado al diseñador de controles.
            </param>
      <param name="callback">
              Objeto <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> que representa una función a la que se va a llamar en el diseñador de controles como parte de la transacción.
            </param>
      <param name="context">
              Un objeto que contiene el argumento para la devolución de llamada.
            </param>
      <param name="description">
              Una descripción del efecto de permitir que se complete la transacción, que el host de diseño utiliza para ofrecer al usuario la posibilidad de cancelar la transacción.
            </param>
      <param name="member">
              Objeto <see cref="T:System.ComponentModel.MemberDescriptor" /> (normalmente un objeto <see cref="T:System.ComponentModel.EventDescriptor" /> o <see cref="T:System.ComponentModel.PropertyDescriptor" />) que describe el miembro del control asociado que se invoca como parte de la transacción.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="component" /> es null.
              O bien,
              
                <paramref name="callback" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.IServiceProvider,System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)">
      <summary>
          Ajusta una serie de cambios en una transacción, utilizando los parámetros especificados que se pueden deshacer como una unidad con la funcionalidad de deshacer del host de diseño.
        </summary>
      <param name="serviceProvider">
              Objeto <see cref="T:System.IServiceProvider" /> que representa el host de diseño que proporciona servicios del diseñador de controles para el control asociado.
            </param>
      <param name="component">
              El control asociado al diseñador de controles.
            </param>
      <param name="callback">
              Objeto <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> que representa una función a la que se va a llamar en el diseñador de controles como parte de la transacción.
            </param>
      <param name="context">
              Un objeto que contiene el argumento para la devolución de llamada.
            </param>
      <param name="description">
              Una descripción del efecto de permitir que se complete la transacción, que el host de diseño utiliza para ofrecer al usuario la posibilidad de cancelar la transacción.
            </param>
      <param name="member">
              Objeto <see cref="T:System.ComponentModel.MemberDescriptor" /> (normalmente un objeto <see cref="T:System.ComponentModel.EventDescriptor" /> o <see cref="T:System.ComponentModel.PropertyDescriptor" />) que describe el miembro del control asociado que se invoca como parte de la transacción.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="component" /> es null.
              O bien
              
                El valor de <paramref name="callback" /> es null.
              O bien
              
                El valor de <paramref name="serviceProvider" /> es null.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.IsDirty">
      <summary>
          Obtiene o establece un valor que indica si el control de servidor Web se ha marcado como modificado.
        </summary>
      <returns>
          
            Es true si el control de servidor Web se ha modificado desde que se almacenó o cargó por última vez; de lo contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.IsPropertyBound(System.String)">
      <summary>
          Recupera un valor que indica si la propiedad especificada en el control asociado está enlazada a datos o no.
        </summary>
      <returns>
          
            Es true si la propiedad está enlazada a datos; de lo contrario, es false.
        </returns>
      <param name="propName">
              La propiedad cuyo enlace de datos se va a comprobar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)">
      <summary>
          Utiliza el sistema de escritura de recursos proporcionado para conservar las propiedades adaptables del control asociado en un recurso en el host de diseño.
        </summary>
      <param name="resourceWriter">
              Objeto derivado del objeto <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" /> que se utiliza para escribir recursos en la secuencia de respuesta en tiempo de diseño.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>
          Se le llama cuando se ha aplicado un esquema de formato automático predefinido al control asociado.
        </summary>
      <param name="appliedAutoFormat">
              Objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> que define un estilo.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)">
      <summary>
          Se le llama cuando cambia la colección de enlace a datos.
        </summary>
      <param name="propName">
              Propiedad para la que se va a comprobar los cambios en su colección de enlaces. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>
          Lo llama el host de diseño cuando el usuario hace clic en el control asociado en tiempo de diseño.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> que especifica la ubicación y, posiblemente, la región del diseñador de controles en la que el usuario hizo clic.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
          Se le llama cuando cambia el control asociado.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="ce">
              Objeto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene los datos del evento. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> del control asociado. 
        </summary>
      <param name="sender">
              Objeto que es el origen del evento.
            </param>
      <param name="ce">
              Objeto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnControlResize">
      <summary>
          Se le llama cuando el control de servidor Web asociado ha cambiado de tamaño en tiempo de diseño en el host de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
          Se le llama cuando el diseñador de controles dibuja el control asociado en la superficie de diseño, si el valor <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> es true.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.Windows.Forms.PaintEventArgs" /> que especifica los gráficos y límites de rectángulo utilizados para dibujar el control.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Agrega propiedades o quita propiedades de la cuadrícula Propiedades en un host de diseño en tiempo de diseño, o proporciona nuevas propiedades en tiempo de diseño que pueden corresponderse con las propiedades del control asociado.
        </summary>
      <param name="properties">
              Propiedades para la clase del componente. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent">
      <summary>
          Provoca el evento <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ReadOnly">
      <summary>
          Obtiene o establece un valor que indica si las propiedades del control son de sólo lectura en tiempo de diseño.
        </summary>
      <returns>
          
            Es true si las propiedades del control son de sólo lectura en tiempo de diseño; de lo contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.RegisterClone(System.Object,System.Object)">
      <summary>
          Registra los datos internos en un control clonado.
        </summary>
      <param name="original">
              El control asociado al diseñador de controles.
            </param>
      <param name="clone">
              La copia clonada del control asociado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="original" /> es null.
              O bien,
              
                <paramref name="clone" /> es null.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.RootDesigner">
      <summary>
          Obtiene el diseñador de controles para la página de formularios Web Forms que contiene el control asociado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> que se puede utilizar en tiempo de diseño para obtener acceso a los componentes de la página de formularios Web Forms que contiene el control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Especifica el contenido de una región modificable del control en tiempo de diseño. 
        </summary>
      <param name="region">
              Área de diseño modificable que contiene el control.
            </param>
      <param name="content">
              El contenido que se va a asignar a la región de diseño modificable.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Especifica el contenido de una región modificable en la vista en tiempo de diseño del control.
        </summary>
      <param name="region">
              Área de diseño modificable que contiene la vista en tiempo de diseño del control.
            </param>
      <param name="content">
              El contenido que se va a asignar a la región de diseño modificable.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)">
      <summary>
          Asigna la enumeración <see cref="T:System.Web.UI.Design.ViewFlags" /> bit a bit especificada al valor de indicador especificado.
        </summary>
      <param name="viewFlags">
              Valor de tipo <see cref="T:System.Web.UI.Design.ViewFlags" />.
            </param>
      <param name="setFlag">
              
                Es true para establecer el indicador y false para quitar el indicador.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.Tag">
      <summary>
          Obtiene un objeto que representa el elemento de formato HTML del control asociado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> que representa el elemento de formato HTML del control asociado. 
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.TemplateGroups">
      <summary>
          Obtiene una colección de grupos de plantillas; cada uno de ellos contiene una o varias definiciones de plantilla.
        </summary>
      <returns>
          Colección de objetos <see cref="T:System.Web.UI.Design.TemplateGroup" />. El valor predeterminado es un <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> vacío
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml">
      <summary>
          Actualiza el formato HTML en tiempo de diseño para el control de servidor Web asociado llamando al método <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador de controles utiliza un control de vista previa temporal para generar el formato HTML en tiempo de diseño.
        </summary>
      <returns>
          
            Es true si el diseñador de controles utiliza una copia temporal del control para la vista previa en tiempo de diseño; de lo contrario, es false si el diseñador de controles utiliza la propiedad <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> para el control contenido en el diseñador de controles.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ViewControl">
      <summary>
          Obtiene o establece un control de servidor Web que se puede utilizar para ofrecer una vista previa del formato HTML en tiempo de diseño.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Control" /> utilizado por la clase base para generar el formato HTML en tiempo de diseño.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ViewControlCreated">
      <summary>
          Obtiene o establece un valor que indica si se ha creado un control View para la presentación en la superficie de diseño.
        </summary>
      <returns>
          
            Es true si se ha creado un control para mostrarlo en la superficie de diseño; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.Visible">
      <summary>
          Obtiene un valor que indica si el control está visible en tiempo de diseño.
        </summary>
      <returns>
          
            true en todos los casos.
          
          
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.ControlDesignerState">
      <summary>
          Proporciona el acceso al estado del diseñador del control en el host de diseño a través de la interfaz <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" />. Esta clase no se puede heredar. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesignerState.Item(System.String)">
      <summary>
          Representa un elemento, identificado mediante la clave especificada, en la colección de estados para un diseñador de control.
        </summary>
      <returns>
          Objeto al que identifica <paramref name="key" />.
        </returns>
      <param name="key">
              Nombre del elemento que se va a recuperar de la colección de estados.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.ControlLocation">
      <summary>
          Especifica las posibles ubicaciones para agregar un control en un contenedor.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.Before">
      <summary>
          Agrega el control después de la selección actual o el control actual.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.After">
      <summary>
          Agrega el control después de la selección actual o el control actual.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.First">
      <summary>
          Agrega el control al inicio del documento.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.Last">
      <summary>
          Agrega el control al final del documento.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.FirstChild">
      <summary>
          Agrega el control como el primer elemento secundario del control seleccionado, si el control seleccionado es un control contenedor.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.LastChild">
      <summary>
          Agrega el control como el último elemento secundario del control seleccionado, si el control seleccionado es un control contenedor.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlParser">
      <summary>
          Proporciona métodos para crear un control <see cref="T:System.Web.UI.Control" /> de servidor Web o una interfaz <see cref="T:System.Web.UI.ITemplate" /> a partir de una cadena de marcado que representa un control o plantilla almacenados.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>
          Crea un control a partir del marcado especificado, utilizando el host del diseñador especificado.
        </summary>
      <returns>
          El control <see cref="T:System.Web.UI.Control" /> representado por controlText; de lo contrario, null si el analizador no puede generar el control.
        </returns>
      <param name="designerHost">
              Instancia de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador de la página. 
            </param>
      <param name="controlText">
              Marcado HTML para el control. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              Un parámetro no es válido. 
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String,System.String)">
      <summary>
          Crea un control a partir del marcado especificado, utilizando el host y las directivas del diseñador especificados.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Control" /> representado por <paramref name="controlText" />.
        </returns>
      <param name="designerHost">
              Instancia de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador de la página.
            </param>
      <param name="controlText">
              Texto del formato HTML del control.
            </param>
      <param name="directives">
              Directivas de página que se van a incluir en el código del control.
            </param>
      <exception cref="T:System.ArgumentNullException">
              Un parámetro no es válido. 
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControls(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>
          Crea una matriz de controles a partir del marcado especificado utilizando el host del diseñador especificado.
        </summary>
      <returns>
          Matriz de elementos <see cref="T:System.Web.UI.Control" />, analizada a partir de <paramref name="controlText" />; de lo contrario, null, si el analizador no puede generar los controles.
        </returns>
      <param name="designerHost">
              Instancia de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador de la página.
            </param>
      <param name="controlText">
              Cadena que representa una colección de marcado para controles.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="designerHost" /> es null.
              O bien
              
                <paramref name="controlText" /> es null o una cadena vacía ("").
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>
          Crea una interfaz <see cref="T:System.Web.UI.ITemplate" /> a partir del marcado de plantilla especificado.
        </summary>
      <returns>
          Una instancia de <see cref="T:System.Web.UI.ITemplate" /> creada mediante el análisis de <paramref name="templateText" />.
        </returns>
      <param name="designerHost">
              Instancia de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador de la página. 
            </param>
      <param name="templateText">
              Cadena que contiene el marcado de la plantilla. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="designerHost" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String,System.String)">
      <summary>
          Analiza el marcado de plantilla especificado y crea una interfaz <see cref="T:System.Web.UI.ITemplate" />.
        </summary>
      <returns>
          Una instancia de <see cref="T:System.Web.UI.ITemplate" /> creada mediante el análisis de <paramref name="templateText" />.
        </returns>
      <param name="designerHost">
              Instancia de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador de la página. 
            </param>
      <param name="templateText">
              Cadena que contiene el marcado de la plantilla. 
            </param>
      <param name="directives">
              Directivas que se agregan al principio del código de la plantilla. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="designerHost" /> es null.
            </exception>
    </member>
    <member name="T:System.Web.UI.Design.ControlPersister">
      <summary>
          Proporciona métodos para almacenar controles de servidor Web en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control)">
      <summary>
          Muestra una cadena de datos que representa al formulario almacenado del control especificado en el <see cref="T:System.IO.TextWriter" /> especificado.
        </summary>
      <param name="sw">
              <see cref="T:System.IO.TextWriter" /> donde se proporcionarán los datos del control almacenado. 
            </param>
      <param name="control">
              <see cref="T:System.Web.UI.Control" /> que se va a almacenar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost)">
      <summary>
          Proporciona una cadena de datos que representa al formulario almacenado del control especificado al <see cref="T:System.IO.TextWriter" /> especificado mediante el host del diseñador especificado.
        </summary>
      <param name="sw">
              <see cref="T:System.IO.TextWriter" /> donde se proporcionarán los datos del control almacenado. 
            </param>
      <param name="control">
              <see cref="T:System.Web.UI.Control" /> que se va a almacenar. 
            </param>
      <param name="host">
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador del control. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.Web.UI.Control)">
      <summary>
          Obtiene una cadena de datos que representa al formulario almacenado del control especificado.
        </summary>
      <returns>
          Cadena que representa al formulario almacenado del control.
        </returns>
      <param name="control">
              <see cref="T:System.Web.UI.Control" /> que se va a almacenar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost)">
      <summary>
          Obtiene una cadena de datos que representa al formulario almacenado del control especificado, mediante el host del diseñador especificado.
        </summary>
      <returns>
          Cadena que representa al formulario almacenado del control.
        </returns>
      <param name="control">
              <see cref="T:System.Web.UI.Control" /> que se va a almacenar. 
            </param>
      <param name="host">
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador del control. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistInnerProperties(System.IO.TextWriter,System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>
          Proporciona una cadena de datos  en el <see cref="T:System.IO.TextWriter" /> especificado, que puede almacenar las propiedades internas del control especificado mediante el host del diseñador especificado.
        </summary>
      <param name="sw">
              Objeto <see cref="T:System.IO.TextWriter" /> que se va a utilizar. 
            </param>
      <param name="component">
              Componente que se va a almacenar. 
            </param>
      <param name="host">
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador del control. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistInnerProperties(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>
          Obtiene una cadena de datos que puede almacenar las propiedades internas del control especificado.
        </summary>
      <returns>
          Cadena que contiene la información que se almacenará sobre las propiedades internas del control.
        </returns>
      <param name="component">
              Componente cuyas propiedades internas se van a almacenar. 
            </param>
      <param name="host">
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador del control. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.IO.TextWriter,System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)">
      <summary>
          Escribe una cadena de datos que representa al formulario almacenado de la plantilla especificada en el objeto <see cref="T:System.IO.TextWriter" /> especificado.
        </summary>
      <param name="writer">
              Objeto <see cref="T:System.IO.TextWriter" /> al que se van a escribir los datos de la plantilla almacenada.
            </param>
      <param name="template">
              Plantilla que se va a almacenar.
            </param>
      <param name="host">
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador del control.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)">
      <summary>
          Obtiene una cadena de datos que representa al formulario almacenado de la plantilla especificada.
        </summary>
      <returns>
          Cadena que representa al formulario almacenado de la plantilla.
        </returns>
      <param name="template">
              Plantilla que se va a almacenar.
            </param>
      <param name="host">
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador del control.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingCollectionConverter">
      <summary>
          Proporciona un convertidor de tipos para objetos <see cref="T:System.Web.UI.DataBindingCollection" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionConverter.#ctor">
      <summary>
          Inicializa una instancia de la clase <see cref="T:System.Web.UI.Design.DataBindingCollectionConverter" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
          Convierte una colección de enlaces de datos en el tipo especificado.
        </summary>
      <returns>
          El objeto que se obtiene tras la conversión de tipos. Si el parámetro <paramref name="destinationType" /> es de tipo <see cref="T:System.String" />, este método devuelve una cadena vacía ("").
        </returns>
      <param name="context">
              Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el componente o control al que pertenece la colección de enlaces de datos. 
            </param>
      <param name="culture">
              Un objeto <see cref="T:System.Globalization.CultureInfo" /> que se puede utilizar para proporcionar información adicional de referencia cultural. 
            </param>
      <param name="value">
              Objeto que se va a convertir. 
            </param>
      <param name="destinationType">
              Tipo al que se va a convertir. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingCollectionEditor">
      <summary>
          Proporciona una interfaz de usuario para editar una colección de enlaces de datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DataBindingCollectionEditor" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Modifica el valor de la colección de enlaces de datos especificada mediante el proveedor de servicios y el contexto especificados.
        </summary>
      <returns>
          Nueva colección.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que identifica el componente o el control al que pertenece la colección. 
            </param>
      <param name="provider">
              <see cref="T:System.IServiceProvider" /> que se va a utilizar. 
            </param>
      <param name="value">
              Colección que se va a editar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de editor utilizado por el método <see cref="M:System.Web.UI.Design.DataBindingCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que especifica el estilo del editor del componente o control.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que identifica el componente o el control para el que se va a recuperar el estilo de edición. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingHandler">
      <summary>
          Proporciona una clase base para un controlador de enlace a datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingHandler.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DataBindingHandler" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>
          Enlaza el control especificado.
        </summary>
      <param name="designerHost">
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> del documento. 
            </param>
      <param name="control">
              <see cref="T:System.Web.UI.Control" /> que se va a enlazar. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingValueUIHandler">
      <summary>
          Proporciona un controlador de la Interfaz de usuario a los valores de enlace de datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingValueUIHandler.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DataBindingValueUIHandler" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingValueUIHandler.OnGetUIValueItem(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor,System.Collections.ArrayList)">
      <summary>
          Agrega un enlace de datos para la propiedad y la lista de elementos de valor especificadas, si el control actual tiene enlaces de datos y el objeto actual ya no tiene ningún enlace.
        </summary>
      <param name="context">
              Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que puede proporcionar información de contexto adicional. 
            </param>
      <param name="propDesc">
              Un objeto <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa la propiedad para la cual se va a agregar un enlace de datos. 
            </param>
      <param name="valueUIItemList">
              Un objeto <see cref="T:System.Collections.ArrayList" /> que contiene los elementos con enlaces de datos. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DataColumnSelectionConverter">
      <summary>
          Proporciona un convertidor de tipos para una propiedad que representa el nombre de un campo de columna enlazado en un control <see cref="T:System.Web.UI.WebControls.GridView" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DataColumnSelectionConverter" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
          Indica si el tipo de origen especificado se puede convertir al tipo de la propiedad de control asociada.
        </summary>
      <returns>
          
            Es true si el convertidor puede realizar la conversión; en caso contrario, es false.
        </returns>
      <param name="context">
              Implementación de <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
      <param name="sourceType">
              Tipo del que se va a realizar la conversión.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
          Convierte el objeto especificado al tipo de la propiedad de control asociada.
        </summary>
      <returns>
          Una instancia de <see cref="T:System.Object" /> que representa el objeto convertido.
        </returns>
      <param name="context">
              Implementación de <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
      <param name="culture">
              El objeto <see cref="T:System.Globalization.CultureInfo" /> que se puede utilizar para admitir las características de localización.
            </param>
      <param name="value">
              Objeto que se va a convertir.
            </param>
      <exception cref="T:System.NotSupportedException">
              No se pudo realizar la conversión. 
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Devuelve una lista de valores disponibles que se pueden asignar a la propiedad de control asociada.
        </summary>
      <returns>
          Una instancia de <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contiene valores disponibles para asignación a la propiedad de control asociada.
        </returns>
      <param name="context">
              Implementación de <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Indica si este tipo de convertidor devuelve una lista que contiene todos los valores posibles que se pueden asignar a la propiedad de control asociada.
        </summary>
      <returns>
          
            Es true si este convertidor devuelve una lista que contiene todos los valores posibles que se pueden asignar a la propiedad de control asociada; de lo contrario es false.
        </returns>
      <param name="context">
              Implementación de <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Indica si este convertidor devuelve un conjunto de valores disponibles para asignación a la propiedad de control asociada, dentro del contexto especificado.
        </summary>
      <returns>
          
            Es true si este convertidor devuelve un conjunto de valores disponibles estándar para asignación a la propiedad de control asociada; de lo contrario es false.
        </returns>
      <param name="context">
              Implementación de <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DataFieldConverter">
      <summary>
          Proporciona un convertidor de tipos que puede recuperar una lista de campos de datos a partir del origen de datos seleccionado del componente actual.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DataFieldConverter" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
          Obtiene un valor que indica si el convertidor puede convertir un objeto del tipo de origen especificado en un tipo nativo del convertidor.
        </summary>
      <returns>
          
            Es true si el convertidor puede realizar la conversión; en caso contrario, es false.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede usar para obtener más información del contexto. 
            </param>
      <param name="sourceType">
              <see cref="T:System.Type" /> que representa el tipo de origen de la conversión. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
          Convierte el objeto especificado en el tipo nativo del convertidor.
        </summary>
      <returns>
          <see cref="T:System.Object" /> que representa el objeto especificado tras la conversión.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede usar para obtener más información del contexto. 
            </param>
      <param name="culture">
              <see cref="T:System.Globalization.CultureInfo" /> que se puede utilizar para admitir las funciones de localización. 
            </param>
      <param name="value">
              <see cref="T:System.Object" /> que se va a convertir. 
            </param>
      <exception cref="T:System.NotSupportedException">
              No se puede realizar la conversión. 
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene los campos de datos presentes en el origen de datos seleccionado si la información sobre los mismos está disponible.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que crea una lista de los orígenes de datos estándar a los que se puede tener acceso.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el componente o control cuyos valores se deben obtener. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene un valor que indica si la colección de valores estándar devuelta a partir de <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista de todos los valores posibles.
        </summary>
      <returns>
          
            true si <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que devuelve <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista exclusiva de todos los valores posibles que son válidos; false si hay otros valores posibles.
          Como se implementa en esta clase, este método devuelve siempre false.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede usar para obtener más información del contexto. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene un valor que indica si el convertidor admite un conjunto estándar de valores que se pueden seleccionar de una lista.
        </summary>
      <returns>
          
            Es true si se debe llamar a <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> para buscar un conjunto común de valores que sea compatible con el objeto; en caso contrario, es false.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DataMemberConverter">
      <summary>
          Proporciona un convertidor de tipos que puede recuperar una lista de miembros de datos a partir del origen de datos seleccionado del componente actual.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DataFieldConverter" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
          Obtiene un valor que indica si el convertidor puede convertir un objeto del tipo de origen especificado en un tipo nativo del convertidor.
        </summary>
      <returns>
          
            Es true si el convertidor puede realizar la conversión; en caso contrario, es false.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que puede utilizarse para obtener más información de contexto. 
            </param>
      <param name="sourceType">
              Un objeto <see cref="T:System.Type" /> que representa el tipo de origen de la conversión. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
          Convierte el objeto especificado en el tipo nativo del convertidor.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Object" /> que representa el objeto especificado tras la conversión.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que puede utilizarse para obtener más información de contexto. 
            </param>
      <param name="culture">
              Un objeto <see cref="T:System.Globalization.CultureInfo" /> que se puede utilizar para admitir las funciones de localización. 
            </param>
      <param name="value">
              El objeto <see cref="T:System.Object" /> que se va a convertir. 
            </param>
      <exception cref="T:System.NotSupportedException">
              No se puede realizar la conversión. 
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene los miembros de datos presentes en el origen de datos seleccionado, si la información sobre los mismos está disponible.
        </summary>
      <returns>
          Un objeto <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que crea una lista de miembros de datos a partir del origen de datos seleccionado por el componente. 
        </returns>
      <param name="context">
              Una interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el componente o control del que se van a obtener valores. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene un valor que indica si la colección de valores estándar devuelta a partir de <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista de todos los valores posibles.
        </summary>
      <returns>
          
            Es true si el objeto <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> devuelto por <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista exclusiva de todos los valores válidos posibles; es false si hay otros valores posibles.
          Tal y como se ha implementado en esta clase, este método devuelve siempre false.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene un valor que indica si el convertidor admite un conjunto estándar de valores que se pueden seleccionar de una lista.
        </summary>
      <returns>
          
            Es true si debe llamarse a <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> para buscar un conjunto común de valores que sea compatible con el objeto; en caso contrario, es false. Esta implementación siempre devuelve true.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que puede utilizarse para obtener más información de contexto. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DataSetFieldSchema">
      <summary>
          Representa la estructura, o esquema, de un campo de datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetFieldSchema.#ctor(System.Data.DataColumn)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DataSetFieldSchema" /> mediante un objeto <see cref="T:System.Data.DataColumn" /> especificado.
        </summary>
      <param name="column">
              Objeto <see cref="T:System.Data.DataColumn" /> que el objeto <see cref="T:System.Web.UI.Design.DataSetFieldSchema" /> describe.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.DataType">
      <summary>
          Obtiene el tipo de datos almacenado en el campo de datos.
        </summary>
      <returns>
          Objeto <see cref="T:System.Type" /> que representa el tipo de datos que el campo de datos contiene.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Identity">
      <summary>
          Obtiene un valor que indica si el valor del campo de datos se incrementa automáticamente por cada nueva fila agregada a la tabla o vista.
        </summary>
      <returns>
          
            Es true si el valor de <see cref="P:System.Web.UI.Design.DataSetFieldSchema.DataType" /> es numérico y el valor de la columna se incrementa automáticamente cuando se agregan nuevas filas a la tabla <see cref="T:System.Data.DataTable" />; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.IsReadOnly">
      <summary>
          Obtiene un valor que indica si <see cref="T:System.Data.DataColumn" /> es de sólo lectura.
        </summary>
      <returns>
          
            true si el campo de datos es de sólo lectura; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.IsUnique">
      <summary>
          Obtiene un valor que indica si es necesario que los valores del campo de datos sean únicos.
        </summary>
      <returns>
          
            Es true si los datos del campo de datos deben ser únicos; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Length">
      <summary>
          Obtiene un valor que limita el tamaño de los datos que se pueden almacenar en el campo de datos.
        </summary>
      <returns>
          El número de bytes que la columna puede almacenar.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Name">
      <summary>
          Obtiene el nombre del campo de datos.
        </summary>
      <returns>
          Nombre del campo de datos.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Nullable">
      <summary>
          Obtiene un valor que indica si el campo de datos puede aceptar valores null.
        </summary>
      <returns>
          
            true si el campo de datos puede aceptar valores null; de lo contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Precision">
      <summary>
          Obtiene el número máximo de dígitos utilizados para representar un valor numérico en el campo de datos.
        </summary>
      <returns>
          Esta propiedad devuelve siempre -1.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.PrimaryKey">
      <summary>
          Obtiene un valor que indica si el campo de datos está en la clave principal para la tabla o vista que lo contiene.
        </summary>
      <returns>
          
            Es true si el campo de datos está en la clave principal; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Scale">
      <summary>
          Obtiene el número de posiciones decimales de los valores numéricos que figuran en el campo de datos.
        </summary>
      <returns>
          Esta propiedad devuelve siempre -1.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSetSchema">
      <summary>
          La clase <see cref="T:System.Web.UI.Design.DataSetSchema" /> representa la estructura o esquema de un origen de datos. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetSchema.#ctor(System.Data.DataSet)">
      <summary>
          Crea una instancia de la clase <see cref="T:System.Web.UI.Design.DataSetSchema" /> mediante un <see cref="T:System.Data.DataSet" /> especificado.
        </summary>
      <param name="dataSet">
              La <see cref="T:System.Data.DataSet" /> que la instancia <see cref="T:System.Web.UI.Design.DataSetSchema" /> describirá.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSetSchema.GetViews">
      <summary>
          Obtiene una matriz que contiene información acerca de cada vista del origen de datos.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSetViewSchema">
      <summary>
          Representa la estructura o esquema de una clase <see cref="T:System.Data.DataTable" />. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.#ctor(System.Data.DataTable)">
      <summary>
          Crea una instancia de la clase <see cref="T:System.Web.UI.Design.DataSetViewSchema" /> utilizando el objeto <see cref="T:System.Data.DataTable" /> especificado.
        </summary>
      <param name="dataTable">
              El objeto <see cref="T:System.Data.DataTable" /> que la instancia de <see cref="T:System.Web.UI.Design.DataSetViewSchema" /> describirá.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.GetChildren">
      <summary>
          Obtiene una matriz que representa las vistas secundarias contenidas en la vista actual.
        </summary>
      <returns>
          
            null.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.GetFields">
      <summary>
          Obtiene una matriz que contiene información acerca de cada campo de datos de la vista.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Web.UI.Design.IDataSourceFieldSchema" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetViewSchema.Name">
      <summary>
          Obtiene el nombre de la vista mediante su propiedad <see cref="P:System.Data.DataTable.TableName" />.
        </summary>
      <returns>
          Nombre de la vista.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter">
      <summary>
          Proporciona un convertidor de tipos para una propiedad que representa un campo de tipo Boolean de un esquema de origen de datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter.#ctor">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Devuelve una lista de valores de tipo Boolean disponibles que se pueden asignar al campo asociado.
        </summary>
      <returns>
          Colección de valores de tipo Boolean.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceConverter">
      <summary>
          Proporciona un convertidor de tipos que puede recuperar una lista de orígenes de datos a los que puede tener acceso el componente actual.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DataSourceConverter" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
          Obtiene un valor que indica si el convertidor puede convertir un objeto del tipo de origen especificado en un tipo nativo del convertidor.
        </summary>
      <returns>
          
            Es true si el convertidor puede realizar la conversión; en caso contrario, es false.
          Tal y como se ha implementado en esta clase, este método devuelve siempre false.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="sourceType">
              <see cref="T:System.Type" /> que representa el tipo a partir del cual se desea realizar la conversión. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
          Convierte el objeto especificado en el tipo nativo del convertidor.
        </summary>
      <returns>
          <see cref="T:System.Object" /> que representa el objeto especificado tras la conversión.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="culture">
              <see cref="T:System.Globalization.CultureInfo" /> que se puede utilizar para admitir las funciones de localización. 
            </param>
      <param name="value">
              Clase <see cref="T:System.Object" /> que se va a convertir. 
            </param>
      <exception cref="T:System.NotSupportedException">
              No se pudo realizar la conversión. 
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene los orígenes de datos estándar a los que puede tener acceso el control.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que crea una lista de los orígenes de datos estándar a los que se puede tener acceso.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el componente o control para el que se van a obtener valores. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene un valor que indica si la colección de valores estándar devuelta a partir de <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista de todos los valores posibles.
        </summary>
      <returns>
          
            Es true si el <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> devuelto por <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista exclusiva de valores posibles; es false si hay otros valores posibles.
          Tal y como se ha implementado en esta clase, este método devuelve siempre false.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene un valor que indica si el convertidor admite un conjunto estándar de valores que se pueden seleccionar de una lista.
        </summary>
      <returns>
          
            Es true si debe llamarse a <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> para buscar un conjunto común de valores que sea compatible con el objeto; en caso contrario, es false. Esta implementación siempre devuelve true.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>
          Indica si el componente especificado es un origen de datos válido para este convertidor.
        </summary>
      <returns>
          
            Es true si <paramref name="component" /> implementa<see cref="T:System.Collections.IEnumerable" /> o <see cref="T:System.ComponentModel.IListSource" />; en caso contrario, es false.
        </returns>
      <param name="component">
              Componente que se va a comprobar para determinar si es un origen de datos válido.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual con la clase <see cref="T:System.Web.UI.DataSourceControl" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DataSourceDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.ActionLists">
      <summary>
          Obtiene una lista de elementos que se usa para crear un menú de lista de acciones en tiempo de diseño.
        </summary>
      <returns>
          Un objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que contiene los elementos de lista de acciones para el diseñador de controles.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.CanConfigure">
      <summary>
          Obtiene un valor que indica si se puede llamar al método <see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" />.
        </summary>
      <returns>
          
            Es true si se puede llamar a <see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" />; en caso contrario, false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema">
      <summary>
          Obtiene un valor que indica si se puede llamar al método <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" />.
        </summary>
      <returns>
          
            Es true si se puede llamar al método <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" />; en caso contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.Configure">
      <summary>
          Inicia la utilidad de configuración de orígenes de datos en el host de diseño.
        </summary>
      <exception cref="T:System.NotSupportedException">
              Se intentó invocar este método en la clase base.
            </exception>
    </member>
    <member name="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged">
      <summary>
          Tiene lugar cuando cambia alguna propiedad del origen de datos asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetDesignTimeHtml">
      <summary>
          Recupera el formato HTML que se usa para mostrar el control de origen de datos asociado en tiempo de diseño.
        </summary>
      <returns>
          El marcado para la presentación en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetView(System.String)">
      <summary>
          Recupera un objeto <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> identificado por el nombre de vista.
        </summary>
      <returns>
          Esta implementación siempre devuelve null.
        </returns>
      <param name="viewName">
              Nombre de la vista.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetViewNames">
      <summary>
          Devuelve una matriz de los nombres de vista disponibles en este origen de datos.
        </summary>
      <returns>
          Matriz de nombres de vista.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged(System.EventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> cuando las propiedades del origen de datos han cambiado y el valor de la propiedad <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> es false.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> proporcionado por el objeto llamador.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> cuando el esquema del origen de datos ha cambiado y el valor de la propiedad <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> es false.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>
          Actualiza el esquema de origen de datos, suprimiendo opcionalmente los eventos.
        </summary>
      <param name="preferSilent">
              
                true para admitir eventos al actualizar el esquema; false para deshabilitar los eventos <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> y <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> al actualizar el esquema.
            </param>
      <exception cref="T:System.NotSupportedException">
              Se intentó invocar este método en la clase base.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents">
      <summary>
          Restaura los eventos del origen de datos después de que se hayan suprimido.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              Se intentó invocar este método en la clase base.
            </exception>
    </member>
    <member name="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed">
      <summary>
          Tiene lugar una vez que se ha actualizado el esquema.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent(System.Web.UI.Design.IDataSourceSchema,System.Web.UI.Design.IDataSourceSchema)">
      <summary>
          Proporciona un valor que indica si los dos esquemas son iguales.
        </summary>
      <returns>
          
            true si los dos esquemas son equivalentes; en caso contrario, false.
        </returns>
      <param name="schema1">
              Primer esquema que se va a comparar (derivado de <see cref="T:System.Web.UI.Design.IDataSourceSchema" />).
            </param>
      <param name="schema2">
              Segundo esquema que se va a comparar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents">
      <summary>
          Pospone todos los eventos del origen de datos hasta después de que se haya llamado al método <see cref="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents">
      <summary>
          Obtiene un valor que indica si se produce el evento <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> o el método <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" />.
        </summary>
      <returns>
          
            true si se suprimen eventos; en caso contrario, false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent(System.Web.UI.Design.IDataSourceViewSchema,System.Web.UI.Design.IDataSourceViewSchema)">
      <summary>
          Proporciona un valor que determina si las dos vista del esquema son iguales.
        </summary>
      <returns>
          
            true si las dos vistas son equivalentes; en caso contrario, false. 
        </returns>
      <param name="viewSchema1">
              Primera vista que se va a comparar (derivada de <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />).
            </param>
      <param name="viewSchema2">
              Segunda vista que se va a comparar.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceViewSchemaConverter">
      <summary>
          Proporciona un convertidor de tipos para propiedades que representan campos de esquemas de origen de datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DataSourceViewSchemaConverter" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
          Indica si el tipo de origen especificado se puede convertir al tipo de la propiedad de control asociada.
        </summary>
      <returns>
          
            Es true si el convertidor puede realizar la conversión; en caso contrario, es false.
        </returns>
      <param name="context">
              Implementación de <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
      <param name="sourceType">
              Tipo del que se va a realizar la conversión.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
          Convierte el objeto especificado al tipo de la propiedad de control asociada.
        </summary>
      <returns>
          Una instancia de <see cref="T:System.Object" /> que representa el objeto convertido.
        </returns>
      <param name="context">
              Implementación de <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
      <param name="culture">
              El objeto <see cref="T:System.Globalization.CultureInfo" /> que se puede utilizar para admitir las características de localización.
            </param>
      <param name="value">
              Objeto que se va a convertir.
            </param>
      <exception cref="T:System.NotSupportedException">
              No se pudo realizar la conversión. 
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Devuelve una lista de valores disponibles que se pueden asignar a la propiedad de control asociada.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contiene valores disponibles para asignación a la propiedad de control asociada.
        </returns>
      <param name="context">
              Implementación de <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
          Devuelve una lista de valores disponibles que se pueden asignar a la propiedad de control asociada.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contiene valores disponibles para asignación a la propiedad de control asociada.
        </returns>
      <param name="context">
              Implementación de <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
      <param name="typeFilter">
              Tipo utilizado para filtrar campos que se van a incluir en la lista de valores estándar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Indica si este tipo de convertidor devuelve una lista que contiene todos los valores posibles que se pueden asignar a la propiedad de control asociada.
        </summary>
      <returns>
          
            Es true si este convertidor devuelve una lista que contiene todos los valores posibles que se pueden asignar a la propiedad de control asociada; de lo contrario es false.
        </returns>
      <param name="context">
              Implementación de <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Indica si este convertidor devuelve un conjunto de valores disponibles para asignación a la propiedad de control asociada, dentro del contexto especificado.
        </summary>
      <returns>
          
            Es true si este convertidor devuelve un conjunto de valores disponibles estándar para asignación a la propiedad de control asociada; de lo contrario es false.
        </returns>
      <param name="context">
              Implementación de <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormat">
      <summary>
          Proporciona la clase base abstracta para crear formatos que se pueden aplicar en tiempo de diseño a un control de servidor Web personalizado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.
        </summary>
      <param name="name">
              Cadena que identifica un objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> específico.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="name" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.Apply(System.Web.UI.Control)">
      <summary>
          Aplica el formato asociado al control especificado.
        </summary>
      <param name="control">
              Un control de servidor Web al que se va a aplicar formato.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.GetPreviewControl(System.Web.UI.Control)">
      <summary>
          Devuelve una copia del control asociado para proporcionar una vista previa antes de aplicar el formato al control.
        </summary>
      <returns>
          El método <see cref="M:System.Web.UI.Design.DesignerAutoFormat.GetPreviewControl(System.Web.UI.Control)" /> devuelve una copia del control de servidor Web asociado.
        </returns>
      <param name="runtimeControl">
              Versión en tiempo de ejecución del control de servidor Web.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormat.Name">
      <summary>
          Obtiene el nombre de un objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.
        </summary>
      <returns>
          Nombre de <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormat.Style">
      <summary>
          Obtiene un objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" /> que el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> utiliza para representar una vista previa en tiempo de diseño del control asociado.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.ToString">
      <summary>
          Devuelve una cadena que representa el actual objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.
        </summary>
      <returns>
          La propiedad <see cref="P:System.Web.UI.Design.DesignerAutoFormat.Name" /> de la <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> actual.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormatCollection">
      <summary>
          Representa una colección de objetos<see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> dentro de un diseñador de controles. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Add(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>
          Agrega el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> especificado al final de la colección.
        </summary>
      <returns>
          Índice de la colección donde se agregó el formato.
        </returns>
      <param name="format">
              Instancia de <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Clear">
      <summary>
          Quita todos los formatos de la colección.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Contains(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>
          Determina si el formato especificado está contenido en la colección.
        </summary>
      <returns>
          
            Es true si el formato especificado está en la colección; en caso contrario, es false.
        </returns>
      <param name="format">
              Instancia de <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count">
      <summary>
          Obtiene el número de objetos <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> de la colección.
        </summary>
      <returns>
          Número de objetos <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> de la colección.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.IndexOf(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>
          Devuelve el índice del objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> especificado dentro de la colección.
        </summary>
      <returns>
          Índice de base cero de la primera aparición de <paramref name="format" /> dentro de la colección; de lo contrario, -1 si el formato no está en la colección.
        </returns>
      <param name="format">
              <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> que se va a buscar en la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Insert(System.Int32,System.Web.UI.Design.DesignerAutoFormat)">
      <summary>
          Inserta un objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> en la colección en el índice especificado.
        </summary>
      <param name="index">
              Índice de base cero dentro de la colección donde se va a insertar <paramref name="format" />.
            </param>
      <param name="format">
              Objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> que se va a insertar en la colección.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> es menor que cero.
              O bien
              
                <paramref name="index" /> es mayor que la propiedad <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" />.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.Item(System.Int32)">
      <summary>
          Obtiene o establece un objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> en el índice especificado de la colección.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> situado en el índice especificado de la colección.
        </returns>
      <param name="index">
              Índice basado en cero de <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> que se va a obtener o establecer en la colección.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> es menor que cero.
              O bien
              
                <paramref name="index" /> es mayor que la propiedad <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" />.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.PreviewSize">
      <summary>
          Obtiene el número máximo de dimensiones externas como aparecerán en tiempo de ejecución.
        </summary>
      <returns>
          Estructura <see cref="T:System.Drawing.Size" /> que contiene el alto y ancho del control en la superficie de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Remove(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>
          Quita el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> especificado de la colección.
        </summary>
      <param name="format">
              <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> que se va a quitar de la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.RemoveAt(System.Int32)">
      <summary>
          Quita el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> en el índice especificado de la colección.
        </summary>
      <param name="index">
              Índice basado en cero de <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> que se va a quitar de la colección.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> es menor que cero.
              O bien
              
                <paramref name="index" /> es mayor que la propiedad <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" />.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.SyncRoot">
      <summary>
          Obtiene un objeto que se puede utilizar para sincronizar el acceso al objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.
        </summary>
      <returns>
          Objeto que se puede utilizar para sincronizar el acceso a <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
          Copia los elementos de la colección en un objeto <see cref="T:System.Array" />, empezando por un índice <see cref="T:System.Array" /> determinado cuando el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> se convierte en una interfaz <see cref="T:System.Collections.ICollection" />.
        </summary>
      <param name="array">
              <see cref="T:System.Array" /> que va a recibir los elementos designados.
            </param>
      <param name="index">
              Índice de inicio de los elementos que se van a copiar.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#Count">
      <summary>
          Devuelve el número de elementos que contiene la colección cuando el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> se convierte en una interfaz <see cref="T:System.Collections.ICollection" />.
        </summary>
      <returns>
          Número de elementos de la colección.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
          Devuelve un valor que indica si el acceso a la colección es sincronizado (seguro para subprocesos) cuando el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> se convierte en una interfaz <see cref="T:System.Collections.ICollection" />.
        </summary>
      <returns>
          
            true si el <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> es sincronizado; de lo contrario, false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
          Devuelve una interfaz <see cref="T:System.Collections.IEnumerator" /> que recorre en iteración la colección cuando el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> se convierte en una interfaz <see cref="T:System.Collections.IEnumerable" />.
        </summary>
      <returns>
          Interfaz <see cref="T:System.Collections.IEnumerator" /> para la matriz <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Add(System.Object)">
      <summary>
          Agrega un elemento a la colección cuando el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> se convierte en una interfaz <see cref="T:System.Collections.IList" />.
        </summary>
      <returns>
          Índice del elemento que se ha agregado.
        </returns>
      <param name="value">
              <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> que se va a agregar a <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Contains(System.Object)">
      <summary>
          Determina si la colección contiene un valor concreto cuando el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> se convierte en una interfaz <see cref="T:System.Collections.IList" />.
        </summary>
      <returns>
          
            Es true si el objeto está en <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />; en caso contrario, es false.
        </returns>
      <param name="value">
              <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>
          Determina el índice de un elemento concreto de la colección cuando el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> se convierte en una interfaz <see cref="T:System.Collections.IList" />.
        </summary>
      <returns>
        </returns>
      <param name="value">
              
              
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>
          Inserta un elemento en la colección en el índice especificado cuando el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> se convierte en una interfaz <see cref="T:System.Collections.IList" />.
        </summary>
      <param name="index">
              Índice en el que se va a insertar <paramref name="value" />.
            </param>
      <param name="value">
              <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> que se va a insertar.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IsFixedSize">
      <summary>
          Devuelve un valor que indica si la colección tiene un tamaño fijo cuando el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> se convierte en una interfaz <see cref="T:System.Collections.IList" />.
        </summary>
      <returns>
          false, siempre.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IsReadOnly">
      <summary>
          Para obtener una descripción de este método, vea <see cref="P:System.Collections.IList.IsReadOnly" />.
        </summary>
      <returns>
          Es siempre true, lo que indica que no se puede sustituir ni suprimir la colección.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Item(System.Int32)">
      <summary>
          Obtiene el elemento del índice especificado cuando el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> se convierte en una interfaz <see cref="T:System.Collections.IList" />.
        </summary>
      <returns>
        </returns>
      <param name="index">
              
              
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Remove(System.Object)">
      <summary>
          Quita la primera aparición de un objeto concreto de la colección cuando el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> se convierte en una interfaz <see cref="T:System.Collections.IList" />.
        </summary>
      <param name="value">
              <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> que se va a quitar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>
          Quita el elemento del índice especificado cuando el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> se convierte en una interfaz <see cref="T:System.Collections.IList" />.
        </summary>
      <param name="index">
              Índice del elemento que se va a quitar.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormatStyle">
      <summary>
          Representa el estilo de un objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />. Esta clase la usan principalmente los desarrolladores de controles.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatStyle.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" /> utilizando valores predeterminados.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatStyle.VerticalAlign">
      <summary>
          Obtiene o establece la alineación vertical del contenido del control asociado.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Web.UI.WebControls.VerticalAlign" />. El valor predeterminado es NotSet.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerDataSourceView">
      <summary>
          Actúa como clase base para las clases de vista de origen de datos en tiempo de diseño. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerDataSourceView.#ctor(System.Web.UI.Design.IDataSourceDesigner,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> utilizando el diseñador de origen de datos y el nombre de la vista especificados.
        </summary>
      <param name="owner">
              Diseñador del origen de datos principal.
            </param>
      <param name="viewName">
              Nombre de la vista del origen de datos.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="owner" /> es null
              O bien
              
                El valor de <paramref name="viewName" /> es null.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanDelete">
      <summary>
          Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.DataSourceView" /> asociado al control <see cref="T:System.Web.UI.DataSourceControl" /> actual admite el método <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />.
        </summary>
      <returns>
          
            true si se admite el método <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanInsert">
      <summary>
          Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.DataSourceView" /> asociado al control <see cref="T:System.Web.UI.DataSourceControl" /> actual admite el método <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />.
        </summary>
      <returns>
          
            true si se admite el método <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanPage">
      <summary>
          Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.DataSourceView" /> asociado al objeto <see cref="T:System.Web.UI.DataSourceControl" /> actual admite la paginación de los datos recuperados por el método <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />.
        </summary>
      <returns>
          
            true si se admite la paginación de los datos recuperados por el método <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>
          Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.DataSourceView" /> asociado al objeto <see cref="T:System.Web.UI.DataSourceControl" /> actual admite la recuperación del número total de filas de datos, en lugar de los datos propiamente dichos.
        </summary>
      <returns>
          
            true si se admite la recuperación del número total de filas de datos; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanSort">
      <summary>
          Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.DataSourceView" /> asociado al objeto <see cref="T:System.Web.UI.DataSourceControl" /> actual admite una vista ordenada en el origen de datos subyacente.
        </summary>
      <returns>
          
            true si se admite una vista ordenada en el origen de datos subyacente; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanUpdate">
      <summary>
          Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.DataSourceView" /> asociado al control <see cref="T:System.Web.UI.DataSourceControl" /> actual admite el método <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />.
        </summary>
      <returns>
          
            true si se admite el método <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.DataSourceDesigner">
      <summary>
          Obtiene una referencia al diseñador que creó este control <see cref="T:System.Web.UI.Design.DesignerDataSourceView" />.
        </summary>
      <returns>
          El objeto <see cref="T:System.Web.UI.Design.IDataSourceDesigner" /> proporcionado cuando se creó la instancia de <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> actual.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>
          Genera datos en tiempo de diseño que coinciden con el esquema del control de origen de datos asociado utilizando el número de filas especificado e indica si los datos devueltos son un ejemplo o son datos reales.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.DataSourceView" /> que contiene datos que se mostrarán en tiempo de diseño.
        </returns>
      <param name="minimumRows">
              Número mínimo de filas que se debe devolver.
            </param>
      <param name="isSampleData">
              
                true para indicar que los datos devueltos son datos de ejemplo; false para indicar que los datos devueltos son datos activos.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.Name">
      <summary>
          Obtiene el nombre de la vista que se proporcionó cuando se creó esta instancia de la clase <see cref="T:System.Web.UI.Design.DesignerDataSourceView" />.
        </summary>
      <returns>
          Nombre de la vista.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.Schema">
      <summary>
          Obtiene un esquema que describe la vista del origen de datos representada por este objeto de vista.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView">
      <summary>
          Proporciona una clase base para diseñadores de vistas de datos basadas en datos jerárquicos. Esta clase debe heredarse.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.IHierarchicalDataSourceDesigner,System.String)">
      <summary>
          Inicia una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />.
        </summary>
      <param name="owner">
              <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" /> que es el diseñador para el control asociado.
            </param>
      <param name="viewPath">
              Ruta única del bloque de datos que se utilizará en la vista.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="owner" /> es null
              O bien
              
                <paramref name="viewPath" /> es null.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.DataSourceDesigner">
      <summary>
          Obtiene el diseñador asociado.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" /> principal.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>
          Genera datos en tiempo de diseño que coinciden con el esquema del control de origen de datos asociado y devuelve un valor que indica si los datos son datos reales o de ejemplo.
        </summary>
      <returns>
          Esta implementación siempre devuelve null.
        </returns>
      <param name="isSampleData">
              
                true para indicar que los datos devueltos son datos de ejemplo; false para indicar que los datos devueltos son datos reales.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.Path">
      <summary>
          Obtiene la ruta del bloque de datos que se presenta en la vista.
        </summary>
      <returns>
          La ruta proporcionada al crear <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.Schema">
      <summary>
          Obtiene el esquema que describe la vista de orígenes de datos para el control asociado.
        </summary>
      <returns>
          Esta implementación siempre devuelve null.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerObject">
      <summary>
          Representa un objeto en un host de diseño como Visual Studio 2005. Esta clase se debe heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DesignerObject" />.
        </summary>
      <param name="designer">
              Diseñador primario.
            </param>
      <param name="name">
              Nombre del objeto.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="designer" /> es null.
              O bien
              
                El valor de <paramref name="name" /> es null.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Designer">
      <summary>
          Obtiene el componente del diseñador asociado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.ControlDesigner" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.GetService(System.Type)">
      <summary>
          Obtiene un servicio del host de diseño identificado por el tipo proporcionado.
        </summary>
      <returns>
          Servicio solicitado.
        </returns>
      <param name="serviceType">
              Tipo de servicio que se va a solicitar.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Name">
      <summary>
          Obtiene el nombre del objeto.
        </summary>
      <returns>
          Nombre del objeto.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Properties">
      <summary>
          Obtiene las propiedades del objeto.
        </summary>
      <returns>
          Objeto <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades del objeto y sus valores.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.System#IServiceProvider#GetService(System.Type)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.IServiceProvider.GetService(System.Type)" />.
        </summary>
      <returns>
          Servicio solicitado.
        </returns>
      <param name="serviceType">
              Tipo de servicio que se va a solicitar.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegion">
      <summary>
          Define una región de contenido dentro del marcado en tiempo de diseño para el control asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DesignerRegion" /> con el nombre especificado para un diseñador de controles.
        </summary>
      <param name="designer">
              El diseñador de controles que contiene esta región del diseñador.
            </param>
      <param name="name">
              Nombre de esta región del diseñador.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="designer" /> es null.
              O bien
              
                <paramref name="designer" /> es una cadena vacía ("").
              O bien
              
                <paramref name="name" /> es null.
              O bien
              
                <paramref name="name" /> es una cadena vacía ("").
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DesignerRegion" /> con el nombre especificado para un diseñador de controles, que de modo opcional establece la instancia como una región seleccionable del diseñador.
        </summary>
      <param name="designer">
              El diseñador de controles que contiene esta región del diseñador.
            </param>
      <param name="name">
              Nombre de esta región del diseñador.
            </param>
      <param name="selectable">
              
                Es true para seleccionar la región; de lo contrario, es false.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="designer" /> es null.
              O bien
              
                <paramref name="designer" /> es una cadena vacía ("").
              O bien
              
                <paramref name="name" /> es null.
              O bien
              
                <paramref name="name" /> es una cadena vacía ("").
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Description">
      <summary>
          Obtiene o establece la descripción de una región del diseñador.
        </summary>
      <returns>
          Descripción de texto de la región del diseñador. El valor predeterminado es una cadena vacía ("").
        </returns>
    </member>
    <member name="F:System.Web.UI.Design.DesignerRegion.DesignerRegionAttributeName">
      <summary>
          Define el nombre del atributo HTML de una región del diseñador.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.DisplayName">
      <summary>
          Obtiene o establece el nombre descriptivo que se va a mostrar de una región del diseñador.
        </summary>
      <returns>
          Nombre de texto para mostrar de la región del diseñador. El valor predeterminado es una cadena vacía ("").
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.EnsureSize">
      <summary>
          Obtiene o establece un valor que indica si el host del diseñador va a establecer explícitamente el tamaño de la región del diseñador.
        </summary>
      <returns>
          
            Es true si el host del diseñador debe establecer el tamaño en la región del diseñador; en caso contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.GetBounds">
      <summary>
          Recupera el tamaño de la región del diseñador en la superficie de diseño.
        </summary>
      <returns>
          <see cref="T:System.Drawing.Rectangle" /> que representa el tamaño de la región del diseñador en la superficie de diseño.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Highlight">
      <summary>
          Obtiene o establece un valor que indica si la región del diseñador se va a resaltar en la superficie de diseño.
        </summary>
      <returns>
          
            Es true para indicar que el diseñador visual ha de resaltar la región del diseñador en la superficie de diseño; en caso contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Selectable">
      <summary>
          Obtiene o establece un valor que indica si el usuario puede seleccionar la región del diseñador en la superficie de diseño.
        </summary>
      <returns>
          
            Es true si el usuario puede seleccionar la región del diseñador en la superficie de diseño; en caso contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Selected">
      <summary>
          Obtiene o establece un valor que indica si la región del diseñador está actualmente seleccionada en la superficie de diseño.
        </summary>
      <returns>
          
            Es true si la región del diseñador está actualmente seleccionada en la superficie de diseño; en caso contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.UserData">
      <summary>
          Obtiene o establece datos de usuario opcionales que se van a asociar a la región del diseñador.
        </summary>
      <returns>
          Objeto que contiene datos de usuario almacenados para la región del diseñador. El valor predeterminado es null.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegionCollection">
      <summary>
          Representa una colección de objetos <see cref="T:System.Web.UI.Design.DesignerRegion" /> dentro de un diseñador de controles.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.#ctor(System.Web.UI.Design.ControlDesigner)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> para el diseñador de controles especificado.
        </summary>
      <param name="owner">
              Diseñador de controles que posee esta colección de regiones del diseñador.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Add(System.Web.UI.Design.DesignerRegion)">
      <summary>
          Agrega el objeto <see cref="T:System.Web.UI.Design.DesignerRegion" /> especificado al final de la colección.
        </summary>
      <returns>
          Índice de la colección en que se agregó la región.
        </returns>
      <param name="region">
              Objeto <see cref="T:System.Web.UI.Design.DesignerRegion" /> que se va a agregar a la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Clear">
      <summary>
          Quita todas las regiones de la colección.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Contains(System.Web.UI.Design.DesignerRegion)">
      <summary>
          Obtiene un valor que indica si la región especificada está en la colección.
        </summary>
      <returns>
          
            Es true si la región está en la colección; en caso contrario, es false.
        </returns>
      <param name="region">
              <see cref="T:System.Web.UI.Design.DesignerRegion" /> que se va a buscar en la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.CopyTo(System.Array,System.Int32)">
      <summary>
          Copia los elementos de la colección en un objeto <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.
        </summary>
      <param name="array">
              Objeto <see cref="T:System.Array" /> que es el destino de las regiones copiadas. <see cref="T:System.Array" /> debe tener una indización de base cero.
            </param>
      <param name="index">
              Índice de base cero de <paramref name="array" /> donde comienza la copia.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Count">
      <summary>
          Obtiene el número de objetos <see cref="T:System.Web.UI.Design.DesignerRegion" /> de la colección.
        </summary>
      <returns>
          Número de objetos <see cref="T:System.Web.UI.Design.DesignerRegion" /> de la colección.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.GetEnumerator">
      <summary>
          Devuelve un enumerador que recorre en iteración la colección.
        </summary>
      <returns>
          <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.IndexOf(System.Web.UI.Design.DesignerRegion)">
      <summary>
          Devuelve el índice del objeto <see cref="T:System.Web.UI.Design.DesignerRegion" /> especificado dentro de la colección.
        </summary>
      <returns>
          Índice de base cero de la primera aparición de <paramref name="region" /> en la colección; de lo contrario, devuelve -1 si <paramref name="region" /> no está en la colección.
        </returns>
      <param name="region">
              <see cref="T:System.Web.UI.Design.DesignerRegion" /> que se va a buscar en la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Insert(System.Int32,System.Web.UI.Design.DesignerRegion)">
      <summary>
          Inserta un objeto <see cref="T:System.Web.UI.Design.DesignerRegion" /> en la colección en el índice especificado.
        </summary>
      <param name="index">
              Índice de base cero dentro de la colección donde se va a insertar la región.
            </param>
      <param name="region">
              Clase <see cref="T:System.Web.UI.Design.DesignerRegion" /> que se va a insertar en la colección.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> es menor que cero.
              O bien
              
                <paramref name="index" /> es mayor que la propiedad <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" />.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsFixedSize">
      <summary>
          Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> tiene un tamaño fijo.
        </summary>
      <returns>
          
            true, si el tamaño de la colección no se puede cambiar agregando o quitando elementos; de lo contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly">
      <summary>
          Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> es de sólo lectura.
        </summary>
      <returns>
          
            Es true si no se puede cambiar la colección; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsSynchronized">
      <summary>
          Obtiene un valor que indica si el acceso al objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> está sincronizado (es seguro para la ejecución de subprocesos).
        </summary>
      <returns>
          
            true si el acceso a la colección <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> está sincronizado; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Item(System.Int32)">
      <summary>
          Obtiene o establece un objeto <see cref="T:System.Web.UI.Design.DesignerRegion" /> en el índice especificado de la colección.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.DesignerRegion" /> situado en el índice especificado de la colección.
        </returns>
      <param name="index">
              Índice de base cero de <see cref="T:System.Web.UI.Design.DesignerRegion" /> que se va a obtener o establecer en la colección.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="value" /> es menor que cero.
              O bien
              
                <paramref name="value" /> es mayor que la propiedad <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" />.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Owner">
      <summary>
          Obtiene el diseñador de controles que posee la colección de regiones del diseñador.
        </summary>
      <returns>
          Clase <see cref="T:System.Web.UI.Design.ControlDesigner" /> que representa al diseñador de controles que posee el objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Remove(System.Web.UI.Design.DesignerRegion)">
      <summary>
          Quita el objeto <see cref="T:System.Web.UI.Design.DesignerRegion" /> especificado de la colección. 
        </summary>
      <param name="region">
              <see cref="T:System.Web.UI.Design.DesignerRegion" /> que se va a quitar de la colección. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.RemoveAt(System.Int32)">
      <summary>
          Quita el objeto <see cref="T:System.Web.UI.Design.DesignerRegion" /> en el índice especificado de la colección.
        </summary>
      <param name="index">
              Índice de base cero dentro de la colección de la región <see cref="T:System.Web.UI.Design.DesignerRegion" /> que se va a quitar.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> es menor que cero.
              O bien
              
                <paramref name="index" /> es mayor que la propiedad <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" />.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.SyncRoot">
      <summary>
          Obtiene un objeto que se puede utilizar para sincronizar el acceso al objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />.
        </summary>
      <returns>
          Objeto que se puede utilizar para sincronizar el acceso al objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.
        </summary>
      <param name="array">
              Objeto <see cref="T:System.Array" /> que es el destino de las regiones copiadas. <see cref="T:System.Array" /> debe tener una indización de base cero.
            </param>
      <param name="index">
              Índice de base cero de <paramref name="array" /> en el que empieza la operación de copia.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.Count" />.
        </summary>
      <returns>
          Número de elementos de la colección.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.IsSynchronized" />.
        </summary>
      <returns>
          
            Es true si el acceso a la colección está sincronizado; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.SyncRoot" />.
        </summary>
      <returns>
          Objeto que se puede utilizar para sincronizar el acceso a la colección.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.
        </summary>
      <returns>
          <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add(System.Object)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Add(System.Object)" />.
        </summary>
      <returns>
          Índice de la colección en el que se agregó el elemento.
        </returns>
      <param name="o">
              Elemento que se va a agregar a la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Clear" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Contains(System.Object)" />.
        </summary>
      <returns>
          
            Es true si la región está en la colección; en caso contrario, es false.
        </returns>
      <param name="o">
              <see cref="T:System.Web.UI.Design.DesignerRegion" /> que se va a buscar en la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.
        </summary>
      <returns>
          Índice de base cero de la primera aparición del objeto en la colección; o bien -1, si el objeto no está en la colección.
        </returns>
      <param name="o">
              <see cref="T:System.Web.UI.Design.DesignerRegion" /> que se va a buscar en la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.
        </summary>
      <param name="index">
              Índice de base cero dentro de la colección donde se va a insertar el objeto.
            </param>
      <param name="o">
              Objeto que se va a insertar en la colección.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsFixedSize" />.
        </summary>
      <returns>
          
            Devuelve false, si la colección aumenta dinámicamente de tamaño cuando se agregan nuevos objetos; de lo contrario, devuelve true.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsReadOnly" />.
        </summary>
      <returns>
          Valor de la propiedad <see cref="P:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.Item(System.Int32)" />.
        </summary>
      <returns>
          Objeto situado en el índice especificado de la colección.
        </returns>
      <param name="index">
              Índice de base cero del objeto que se va a obtener de la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Remove(System.Object)" />.
        </summary>
      <param name="o">
              Objeto que se va a quitar de la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.
        </summary>
      <param name="index">
              Índice de base cero dentro de la colección del objeto que se va a quitar.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegionMouseEventArgs">
      <summary>
          Proporciona datos a un evento <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> que se provoca al hacer clic en un control seleccionado o en una región del diseñador en un control seleccionado. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionMouseEventArgs.#ctor(System.Web.UI.Design.DesignerRegion,System.Drawing.Point)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> con la región y la posición especificadas. 
        </summary>
      <param name="region">
              Región del diseñador donde se ha hecho clic con el mouse; se utiliza para inicializar la propiedad <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region" />.
            </param>
      <param name="location">
              Ubicación en la que se hizo clic, en relación con el ángulo superior izquierdo de la región; se utiliza para inicializar <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Location" />.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Location">
      <summary>
          Obtiene la ubicación del control en la que se hizo clic.
        </summary>
      <returns>
          <see cref="T:System.Drawing.Point" /> que identifica la ubicación de la región en la que se hizo clic.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region">
      <summary>
          Obtiene la región del diseñador donde se ha hecho clic, si la hay.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.DesignerRegion" /> al que se aplica el evento de clic, o null si no se hizo clic en ninguna región.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignTimeData">
      <summary>
          Proporciona métodos auxiliares que pueden utilizar los diseñadores de controles para generar datos de ejemplo para las propiedades enlazadas a datos en tiempo de diseño. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateDummyDataBoundDataTable">
      <summary>
          Crea un objeto <see cref="T:System.Data.DataTable" /> que contiene tres columnas con nombres que indican que las columnas están conectadas al origen de datos.
        </summary>
      <returns>
          Un nuevo objeto <see cref="T:System.Data.DataTable" /> con tres columnas y ningún dato.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateDummyDataTable">
      <summary>
          Crea un objeto <see cref="T:System.Data.DataTable" /> que contiene tres columnas con nombres que indica que las columnas contienen datos de ejemplo.
        </summary>
      <returns>
          Un nuevo <see cref="T:System.Data.DataTable" /> con tres columnas. Estas columnas pueden contener datos del tipo cadena.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateSampleDataTable(System.Collections.IEnumerable)">
      <summary>
          Crea un objeto <see cref="T:System.Data.DataTable" /> de ejemplo con el mismo esquema que los datos proporcionados.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Data.DataTable" /> que contiene las columnas con los mismos nombres y tipos de datos que el <paramref name="referenceData" /> proporcionado.
        </returns>
      <param name="referenceData">
              Origen de datos con el esquema que se utilizará como formato del objeto <see cref="T:System.Data.DataTable" /> de ejemplo. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateSampleDataTable(System.Collections.IEnumerable,System.Boolean)">
      <summary>
          Crea un objeto <see cref="T:System.Data.DataTable" /> con el mismo esquema que los datos proporcionados y contiene opcionalmente nombres de columna que indican que los datos están enlazados.
        </summary>
      <returns>
          Objeto <see cref="T:System.Data.DataTable" />.
        </returns>
      <param name="referenceData">
              Objeto <see cref="T:System.Collections.IEnumerable" /> que contiene datos.
            </param>
      <param name="useDataBoundData">
              Si es true, los nombres de columna indican que contienen datos enlazados.
            </param>
    </member>
    <member name="F:System.Web.UI.Design.DesignTimeData.DataBindingHandler">
      <summary>
          Obtiene un controlador de eventos para el enlace de datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataFields(System.Collections.IEnumerable)">
      <summary>
          Obtiene una colección de descriptores de propiedad para los campos de datos del origen de datos especificado.
        </summary>
      <returns>
          Un objeto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que describe los campos de datos del origen de datos especificado.
        </returns>
      <param name="dataSource">
              El origen de datos del que se van a recuperar los campos de datos. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataMember(System.ComponentModel.IListSource,System.String)">
      <summary>
          Obtiene el miembro de datos especificado del origen de datos especificado.
        </summary>
      <returns>
          Un objeto que implementa <see cref="T:System.Collections.IEnumerable" /> que contiene el miembro de datos especificado del origen de datos especificado, si existe.
        </returns>
      <param name="dataSource">
              <see cref="T:System.ComponentModel.IListSource" /> que contiene los datos en los que se va a buscar el miembro. 
            </param>
      <param name="dataMember">
              Nombre del miembro de datos que se va a recuperar. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="dataSource" /> es null
              O bien
              
                <paramref name="dataMember" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataMembers(System.Object)">
      <summary>
          Obtiene los nombres de los datos del origen de datos especificado.
        </summary>
      <returns>
          Matriz de tipo String que contiene los nombres de datos del origen de datos especificado.
        </returns>
      <param name="dataSource">
              El origen de datos del que se van a recuperar los nombres de los miembros. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDesignTimeDataSource(System.Data.DataTable,System.Int32)">
      <summary>
          Agrega el número especificado de filas del ejemplo a la tabla de datos especificada.
        </summary>
      <returns>
          Un objeto que implementa <see cref="T:System.Collections.IEnumerable" /> que contiene en tiempo de diseño los datos del ejemplo que se utilizan.
        </returns>
      <param name="dataTable">
              El objeto <see cref="T:System.Data.DataTable" /> al que se van a agregar las filas del ejemplo. 
            </param>
      <param name="minimumRows">
              Número mínimo de filas que se va a agregar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetSelectedDataSource(System.ComponentModel.IComponent,System.String)">
      <summary>
          Obtiene un origen de datos seleccionado por nombre en el host del diseño, representado por la propiedad del sitio del componente especificado e identificado por el nombre del origen de datos especificado.
        </summary>
      <returns>
          Un objeto que implementa <see cref="T:System.ComponentModel.IListSource" /> o <see cref="T:System.Collections.IEnumerable" /> y que representa el origen de datos seleccionado, o bien, null si no se puede obtener acceso al origen de datos o al host del diseñador.
        </returns>
      <param name="component">
              El objeto <see cref="T:System.ComponentModel.IComponent" /> que contiene el origen de datos. 
            </param>
      <param name="dataSource">
              Nombre del origen de datos que se va a recuperar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetSelectedDataSource(System.ComponentModel.IComponent,System.String,System.String)">
      <summary>
          Obtiene un origen de datos seleccionado por nombre en el host del diseño, representado por la propiedad del sitio del componente especificado e identificado por el nombre del origen de datos y de miembro especificados.
        </summary>
      <returns>
          Objeto que implementa <see cref="T:System.Collections.IEnumerable" /> que contiene el miembro de datos o, devuelve null si no se pudo tener acceso al origen de los datos, al miembro o al sitio del componente.
        </returns>
      <param name="component">
              Objeto que implementa <see cref="T:System.ComponentModel.IComponent" /> que contiene la propiedad con el origen de datos. 
            </param>
      <param name="dataSource">
              Origen de datos que se va a recuperar. 
            </param>
      <param name="dataMember">
              Miembro de datos que se va a recuperar. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.DesignTimeResourceProviderFactory">
      <summary>
          La adaptación de controles a otros idiomas lo utiliza para leer y escribir recursos en tiempo de diseño. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.#ctor">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeGlobalResourceProvider(System.IServiceProvider,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, crea un proveedor de recursos globales utilizando la interfaz <see cref="T:System.IServiceProvider" /> y el nombre de clase de recurso proporcionados.
        </summary>
      <returns>
          Una clase <see cref="T:System.Web.Compilation.IResourceProvider" /> o una clase <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" />.
        </returns>
      <param name="serviceProvider">
              Referencia al host de diseño.
            </param>
      <param name="classKey">
              Nombre de la clase de recurso.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeLocalResourceProvider(System.IServiceProvider)">
      <summary>
          Cuando se reemplaza en una clase derivada, crea un proveedor de recursos local utilizando la referencia al host de diseño proporcionada.
        </summary>
      <returns>
          Una clase <see cref="T:System.Web.Compilation.IResourceProvider" /> o una clase derivada de <see cref="T:System.Web.Compilation.IResourceProvider" />.
        </returns>
      <param name="serviceProvider">
              Referencia al host de diseño.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeLocalResourceWriter(System.IServiceProvider)">
      <summary>
          Cuando se reemplaza en una clase derivada, crea un sistema de escritura de recursos local para utilizar la referencia al host de diseño proporcionada.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Resources.ResourceWriter" />.
        </returns>
      <param name="serviceProvider">
              Referencia al host de diseño.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.EditableDesignerRegion">
      <summary>
          Representa un área modificable de contenido en el marcado en tiempo de diseño para el control asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> con el nombre y el propietario proporcionados.
        </summary>
      <param name="owner">
              Objeto <see cref="T:System.Web.UI.Design.ControlDesigner" /> o un diseñador derivado de <see cref="T:System.Web.UI.Design.ControlDesigner" />.
            </param>
      <param name="name">
              Nombre del área.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Boolean)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> utilizando el nombre y el propietario proporcionados y el valor inicial de la propiedad <see cref="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly" />.
        </summary>
      <param name="owner">
              Objeto <see cref="T:System.Web.UI.Design.ControlDesigner" /> o un diseñador derivado de <see cref="T:System.Web.UI.Design.ControlDesigner" />.
            </param>
      <param name="name">
              Nombre del área.
            </param>
      <param name="serverControlsOnly">
              
                true para que el área sólo acepte controles de servidor Web para el contenido; en caso contrario, false.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.Content">
      <summary>
          Obtiene o establece el formato HTML para el contenido del área.
        </summary>
      <returns>
          formato HTML que representa el contenido del objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.GetChildViewRendering(System.Web.UI.Control)">
      <summary>
          Devuelve un objeto <see cref="T:System.Web.UI.Design.ViewRendering" /> que contiene el formato HTML en tiempo de diseño para el control proporcionado.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.ViewRendering" />.
        </returns>
      <param name="control">
              Control para el que se debe obtener el objeto <see cref="T:System.Web.UI.Design.ViewRendering" /> para el área actual.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly">
      <summary>
          Obtiene o establece un valor que indica si el área sólo acepta controles de servidor Web.
        </summary>
      <returns>
          
            true si el área sólo acepta controles de servidor Web; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding">
      <summary>
          Obtiene o establece un valor que indica si el área se puede enlazar a un origen de datos.
        </summary>
      <returns>
          
            true si el contenido de <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> se puede enlazar a un origen de datos; en caso contrario, false.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionEditor">
      <summary>
          Define un conjunto de propiedades y métodos para evaluar una expresión asociada a la propiedad de un control en tiempo de diseño y para proporcionar una hoja de editor de expresiones al host de diseño visual para su uso en el cuadro de diálogo del editor de expresiones. Esta clase es abstracta.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ExpressionEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>
          Evalúa una cadena de expresión y proporciona el valor en tiempo de diseño de una propiedad de control.
        </summary>
      <returns>
          Objeto al que hace referencia la cadena de expresión evaluada si la evaluación de la expresión se realizó correctamente; en caso contrario, es null.
        </returns>
      <param name="expression">
              Cadena de expresión que se va a evaluar. La expresión no incluye el prefijo de expresión.
            </param>
      <param name="parseTimeData">
              Objeto que contiene información de análisis adicional para evaluar <paramref name="expression" />. Normalmente, lo proporciona el generador de expresiones.
            </param>
      <param name="propertyType">
              Tipo de la propiedad de control a la que <paramref name="expression" /> está enlazado.
            </param>
      <param name="serviceProvider">
              Implementación del proveedor de servicios proporcionada por el host del diseñador, que se utiliza para obtener servicios en tiempo de diseño adicionales.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix">
      <summary>
          Obtiene el prefijo de expresión que identifica las cadenas de expresión admitidas por la implementación del editor de expresiones.
        </summary>
      <returns>
          Una cadena que representa el prefijo de las expresiones admitidas por la clase derivada de <see cref="T:System.Web.UI.Design.ExpressionEditor" />; de lo contrario, una cadena vacía ("") si el editor de expresiones no tiene un prefijo de expresión asociado.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)">
      <summary>
          Devuelve una implementación de <see cref="T:System.Web.UI.Design.ExpressionEditor" /> que está asociada al prefijo de expresión especificado.
        </summary>
      <returns>
          Implementación de <see cref="T:System.Web.UI.Design.ExpressionEditor" /> asociada a <paramref name="expressionPrefix" />; de lo contrario, null, si <paramref name="expressionPrefix" /> no está definido o no está asociado a un <see cref="T:System.Web.UI.Design.ExpressionEditor" />.
        </returns>
      <param name="expressionPrefix">
              Prefijo de expresión utilizado para buscar el editor de expresiones asociado.
            </param>
      <param name="serviceProvider">
              Implementación del proveedor de servicios proporcionada por el host del diseñador, que se utiliza para obtener servicios en tiempo de diseño adicionales.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="serviceProvider" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)">
      <summary>
          Devuelve una implementación de <see cref="T:System.Web.UI.Design.ExpressionEditor" /> que está asociada al tipo de generador de expresiones especificado.
        </summary>
      <returns>
          Implementación de <see cref="T:System.Web.UI.Design.ExpressionEditor" /> asociada a <paramref name="expressionBuilderType" />; de lo contrario, null, si <paramref name="expressionBuilderType" /> no se encuentra o no tiene un <see cref="T:System.Web.UI.Design.ExpressionEditor" /> asociado.
        </returns>
      <param name="expressionBuilderType">
              Tipo de la clase de generador de expresiones derivada, que se utiliza para buscar el editor de expresiones asociado.
            </param>
      <param name="serviceProvider">
              Implementación del proveedor de servicios proporcionada por el host del diseñador, que se utiliza para obtener servicios en tiempo de diseño adicionales.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="expressionBuilderType" /> es null.
              O bien
              
                <paramref name="serviceProvider" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>
          Devuelve una hoja del editor de expresiones que está asociada al actual editor de expresiones.
        </summary>
      <returns>
          Una hoja <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> que define las propiedades de expresión personalizadas.
        </returns>
      <param name="expression">
              Cadena de expresión establecida para una propiedad de control, que se utiliza para inicializar la hoja del editor de expresiones.
            </param>
      <param name="serviceProvider">
              Implementación del proveedor de servicios proporcionada por el host del diseñador, que se utiliza para obtener servicios en tiempo de diseño adicionales.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionEditorSheet">
      <summary>
          Representa una hoja de editor en tiempo de diseño para una expresión personalizada. Esta clase se debe heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />.
        </summary>
      <param name="serviceProvider">
              Implementación del proveedor de servicios proporcionada por el host del diseñador, que se utiliza para obtener servicios en tiempo de diseño adicionales.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
      <summary>
          Cuando se reemplaza en una clase derivada, devuelve la cadena de expresión formada por los valores de las propiedades de la hoja del editor de expresiones.
        </summary>
      <returns>
          La cadena de expresión personalizada para los valores de propiedad actuales.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
      <summary>
          Devuelve un valor que indica si la cadena de expresión es válida o no.
        </summary>
      <returns>
          
            Es true si la cadena de expresión es válida; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
      <summary>
          Obtiene la implementación del proveedor de servicios que utiliza la hoja de editor de expresiones.
        </summary>
      <returns>
          Un <see cref="T:System.IServiceProvider" />, que normalmente proporciona el host de diseño, y que se puede utilizar para obtener servicios en tiempo de diseño adicionales.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionsCollectionConverter">
      <summary>
          Proporciona un convertidor de tipos para colecciones de enlaces de expresión.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionConverter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ExpressionsCollectionConverter" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
          Convierte una colección de enlaces de expresión al tipo especificado.
        </summary>
      <returns>
          Si <paramref name="destinationType" /> no es de tipo <see cref="T:System.String" />, el objeto producido por la conversión de tipos; en caso contrario, si <paramref name="destinationType" /> es una cadena, devuelve una cadena vacía ("").
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el componente o control al que pertenece la colección de enlaces de expresión. 
            </param>
      <param name="culture">
              Un objeto <see cref="T:System.Globalization.CultureInfo" /> que se puede utilizar para proporcionar información adicional de referencia cultural.
            </param>
      <param name="value">
              Objeto que se va a convertir. 
            </param>
      <param name="destinationType">
              Tipo en el que se va a convertir.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionsCollectionEditor">
      <summary>
          Proporciona una interfaz de usuario para seleccionar y editar expresiones que enlazan colecciones en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ExpressionsCollectionEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Modifica el valor del objeto especificado con el proveedor de servicios y el contexto especificados.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.ExpressionBindingCollection" /> que contiene las expresiones seleccionadas; de lo contrario, si no se selecciona ninguna expresión, será el objeto <paramref name="value" />.
        </returns>
      <param name="context">
              Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información de contexto adicional como el control asociado.
            </param>
      <param name="provider">
              Objeto de proveedor de servicios mediante el que se obtienen los servicios de edición.
            </param>
      <param name="value">
              Instancia del objeto que se va a editar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de edición que está asociado a este editor para el contexto especificado.
        </summary>
      <returns>
          Valor de enumeración <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición de la interfaz de usuario proporcionada.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que puede utilizarse para obtener más información de contexto.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.HierarchicalDataSourceConverter">
      <summary>
          Proporciona un convertidor de tipos que puede recuperar una lista de los orígenes de datos jerárquicos que son accesibles para el componente actual.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceConverter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.HierarchicalDataSourceConverter" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>
          Indica si el componente especificado es un origen de datos válido para este convertidor.
        </summary>
      <returns>
          
            Es true si <paramref name="component" /> implementa <see cref="T:System.Web.UI.IHierarchicalEnumerable" />; en caso contrario, es false.
        </returns>
      <param name="component">
              Componente que se va a comprobar si un origen de datos válido.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.HierarchicalDataSourceDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual con el control <see cref="T:System.Web.UI.HierarchicalDataSourceControl" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.HierarchicalDataSourceDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.ActionLists">
      <summary>
          Obtiene la colección de lista de acciones para el diseñador de controles.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que contiene los elementos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> para el diseñador de controles.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.CanConfigure">
      <summary>
          Indica si se puede llamar al método <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" />.
        </summary>
      <returns>
          Esta implementación siempre devuelve false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.CanRefreshSchema">
      <summary>
          Indica si se puede llamar al método <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" />.
        </summary>
      <returns>
          Esta implementación siempre devuelve false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.Configure">
      <summary>
          Inicia el asistente para la configuración del origen de datos subyacente.
        </summary>
      <exception cref="T:System.NotSupportedException">
              En todos los casos.
            </exception>
    </member>
    <member name="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged">
      <summary>
          Tiene lugar cuando cambia alguna propiedad del origen de datos asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el formato HTML usado para representar el control en tiempo de diseño.
        </summary>
      <returns>
          El formato HTML que se utiliza para representar el control en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.GetView(System.String)">
      <summary>
          Obtiene la vista de origen de datos con nombre asociada al control de origen de datos.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />.
        </returns>
      <param name="viewPath">
              Ruta de acceso única al bloque de datos que se va usar al crear la vista.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.OnDataSourceChanged(System.EventArgs)">
      <summary>
          [Retirado del producto]
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.OnSchemaRefreshed(System.EventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed" /> cuando el esquema del origen de datos ha cambiado y el valor de la propiedad <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> es false.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>
          Actualiza el esquema de los datos.
        </summary>
      <param name="preferSilent">
              Este parámetro no se utiliza en esta implementación. Sin embargo, debe ser compatible con las clases derivadas.
            </param>
      <exception cref="T:System.NotSupportedException">
              En todos los casos.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.ResumeDataSourceEvents">
      <summary>
          Restaura los eventos del origen de datos una vez que se han suprimido.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              La propiedad <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> es false.
            </exception>
    </member>
    <member name="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed">
      <summary>
          Tiene lugar una vez que se ha actualizado el esquema.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressDataSourceEvents">
      <summary>
          Pospone todos los eventos del origen de datos hasta después de que se haya llamado al método <see cref="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.ResumeDataSourceEvents" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents">
      <summary>
          Indica si se ha deshabilitado los eventos de origen de datos.
        </summary>
      <returns>
          
            true si los eventos <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged" /> o <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed" /> se han deshabilitado; en caso contrario, false.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.HtmlControlDesigner">
      <summary>
          Proporciona funcionalidad básica en tiempo de diseño para controles de servidor ASP.NET.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.HtmlControlDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.Behavior">
      <summary>
          Obtiene o establece el comportamiento DHTML asociado al diseñador.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> que está asociado al diseñador.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.DataBindings">
      <summary>
          Obtiene la colección de enlaces de datos del control actual.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.DataBindingCollection" /> que contiene los enlaces de datos para el control actual.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.DesignTimeElement">
      <summary>
          Obtiene el objeto en tiempo de diseño que representa el control asociado al objeto <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> en la superficie de diseño.
        </summary>
      <returns>
          Objeto en tiempo de diseño que representa el control asociado a <see cref="T:System.Web.UI.Design.HtmlControlDesigner" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados utilizados por el objeto <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> y, de forma opcional, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.Expressions">
      <summary>
          Obtiene los enlaces de expresión en tiempo de diseño para el control actual.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.ExpressionBindingCollection" /> que contiene el conjunto de cadenas de expresiones para propiedades del control actual.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador y establece el componente para diseño.
        </summary>
      <param name="component">
              Elemento de control para diseño. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorAttached">
      <summary>
          Se le llama cuando un comportamiento está asociado al elemento.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorDetaching">
      <summary>
          Se le llama cuando se anula la asociación de un comportamiento al elemento.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBindingsCollectionChanged(System.String)">
      <summary>
          Proporciona un método que puede utilizarse para indicar cuándo se ha modificado un enlace de datos.
        </summary>
      <param name="propName">
              Nombre de la propiedad que se ha modificado. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnSetParent">
      <summary>
          Proporciona una manera de realizar el procesamiento adicional cuando el control asociado se asocia a un control primario.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>
          Establece la lista de eventos que se exponen en tiempo de diseño para el objeto <see cref="T:System.ComponentModel.TypeDescriptor" /> para el componente.
        </summary>
      <param name="events">
              <see cref="T:System.Collections.IDictionary" /> que contiene los nombres de los eventos del componente que se va exponer. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Permite al diseñador exponer un conjunto de propiedades concreto a través de un objeto <see cref="T:System.ComponentModel.TypeDescriptor" /> en tiempo de diseño.
        </summary>
      <param name="properties">
              Conjunto de propiedades que se van a filtrar para el componente. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.ShouldCodeSerialize">
      <summary>
          Obtiene o establece un valor que indica si se debe crear una declaración de campo para el control en el archivo de código subyacente para el documento de diseño actual durante la serialización.
        </summary>
      <returns>
          
            Es true si debe crearse una declaración; en caso contrario, es false.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.HtmlIntrinsicControlDesigner">
      <summary>
          Proporciona un diseñador base para todos los controles HTML intrínsecos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlIntrinsicControlDesigner.#ctor">
      <summary>
          Inicializa una instancia de la clase <see cref="T:System.Web.UI.Design.HtmlIntrinsicControlDesigner" />.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.HyperLinkDataBindingHandler">
      <summary>
          Proporciona un controlador de enlace de datos para una propiedad de hipervínculo.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.HyperLinkDataBindingHandler.#ctor">
      <summary>
          Inicializa una instancia de la clase <see cref="T:System.Web.UI.Design.HyperLinkDataBindingHandler" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.HyperLinkDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>
          Resuelve el enlace de datos en tiempo de diseño para el control especificado.
        </summary>
      <param name="designerHost">
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> para el documento que contiene el control. 
            </param>
      <param name="control">
              <see cref="T:System.Web.UI.Control" /> al que se van a enlazar datos. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.IContentResolutionService">
      <summary>
          Ofrece una interfaz que da acceso a una página principal de una página de contenido en tiempo de diseño, si un host de diseño, como Visual Studio 2005, la proporciona.  
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.IContentResolutionService.ContentDefinitions">
      <summary>
          Obtiene los objetos <see cref="T:System.Web.UI.Design.ContentDefinition" /> de los marcadores de posición de contenido identificados en la página principal.
        </summary>
      <returns>
          Un <see cref="T:System.Collections.IDictionary" /> que contiene los identificadores y objetos <see cref="T:System.Web.UI.Design.ContentDefinition" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IContentResolutionService.GetContentDesignerState(System.String)">
      <summary>
          Recupera el estado actual del marcador de posición de contenido identificado.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.ContentDesignerState" />.
        </returns>
      <param name="identifier">
              Identificador de un marcador de posición de contenido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IContentResolutionService.SetContentDesignerState(System.String,System.Web.UI.Design.ContentDesignerState)">
      <summary>
          Establece el estado actual del marcador de posición de contenido identificado.
        </summary>
      <param name="identifier">
              Identificador de un marcador de posición de contenido.
            </param>
      <param name="state">
              <see cref="T:System.Web.UI.Design.ContentDesignerState" />.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerBehavior">
      <summary>
          Habilita la extensión de comportamientos específicos de un diseñador de controles.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerBehavior.DesignTimeElementView">
      <summary>
          Obtiene el objeto de control de vista en tiempo de diseño para el diseñador.
        </summary>
      <returns>
          Objeto de control de vista para el diseñador.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerBehavior.DesignTimeHtml">
      <summary>
          Obtiene o establece el código HTML en tiempo de diseño para el control del diseñador.
        </summary>
      <returns>
          Código HTML utilizado en tiempo de diseño para dar formato al control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerBehavior.OnTemplateModeChanged">
      <summary>
          Proporciona una oportunidad para realizar un procesamiento cuando el diseñador entra en el modo de plantilla o sale del mismo.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerTag">
      <summary>
          Proporciona una interfaz para el acceso en tiempo de diseño al formato HTML para un control asociado a un diseñador de controles.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetAttribute(System.String)">
      <summary>
          Recupera el valor del atributo identificado en la etiqueta.
        </summary>
      <returns>
          Cadena que contiene el valor del atributo.
        </returns>
      <param name="name">
              Nombre del atributo.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetContent">
      <summary>
          Recupera el formato HTML para el contenido de la etiqueta.
        </summary>
      <returns>
          Formato HTML para el contenido de la etiqueta.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetOuterContent">
      <summary>
          Recupera el formato HTML completo para el control, incluidas las etiquetas exteriores.
        </summary>
      <returns>
          Formato HTML exterior para el control.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerTag.IsDirty">
      <summary>
          Obtiene un valor que indica si ha cambiado o no un atributo o el contenido de una etiqueta.
        </summary>
      <returns>
          
            true si la etiqueta ha cambiado; en caso contrario, false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.RemoveAttribute(System.String)">
      <summary>
          Elimina el atributo especificado de la etiqueta.
        </summary>
      <param name="name">
              Nombre del atributo.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetAttribute(System.String,System.String)">
      <summary>
          Establece el valor del atributo especificado y lo crea, si es necesario.
        </summary>
      <param name="name">
              Nombre del atributo.
            </param>
      <param name="value">
              Valor del atributo.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetContent(System.String)">
      <summary>
          Establece el formato HTML para el contenido de la etiqueta.
        </summary>
      <param name="content">
              Formato HTML para el contenido de la etiqueta.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetDirty(System.Boolean)">
      <summary>
          Establece la propiedad <see cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" /> de la etiqueta.
        </summary>
      <param name="dirty">
              Valor para la propiedad <see cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" />.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerView">
      <summary>
          Proporciona una interfaz para obtener acceso a la representación visual y el contenido de un control en tiempo de diseño.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.ContainingRegion">
      <summary>
          Obtiene la región del diseñador que contiene el control asociado, si lo hay.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.DesignerRegion" /> si el control asociado se encuentra en una región del diseñador; de lo contrario null.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.GetBounds(System.Web.UI.Design.DesignerRegion)">
      <summary>
          Recupera los límites exteriores de la vista de diseñador.
        </summary>
      <returns>
          <see cref="T:System.Drawing.Rectangle" /> que contiene información en tiempo de diseño sobre la ubicación y medidas de la vista.
        </returns>
      <param name="region">
              <see cref="T:System.Web.UI.Design.DesignerRegion" /> cuyos límites se desea recuperar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.Invalidate(System.Drawing.Rectangle)">
      <summary>
          Notifica al host del diseño que el área representada por el rectángulo proporcionado se debe volver a dibujar en la superficie de diseño.
        </summary>
      <param name="rectangle">
              <see cref="T:System.Drawing.Rectangle" /> que representa la ubicación y las medidas exteriores de la vista en la superficie de diseño. El origen del sistema de coordenadas de este rectángulo es la esquina superior izquierda del elemento al que se asocia el comportamiento.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.NamingContainerDesigner">
      <summary>
          Obtiene el componente del diseñador para el contenedor de nomenclatura del control asociado, si lo hay.
        </summary>
      <returns>
          Objeto IDesigner que representa el componente del diseñador para el contenedor de nomenclatura para el control asociado; de lo contrario null.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.SetFlags(System.Web.UI.Design.ViewFlags,System.Boolean)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IControlDesignerView.SetFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />.
        </summary>
      <param name="viewFlags">
              Miembro de la enumeración <see cref="T:System.Web.UI.Design.ViewFlags" />.
            </param>
      <param name="setFlag">
              
                true para establecer el indicador, false para cancelar el indicador.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Coloca el contenido proporcionado en la región del diseñador proporcionada.
        </summary>
      <param name="region">
              <see cref="T:System.Web.UI.Design.DesignerRegion" /> en que se va a colocar el contenido.
            </param>
      <param name="content">
              Formato HTML que se va a colocar en la región del diseñador.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.SupportsRegions">
      <summary>
          Obtiene un valor que indica si se admiten regiones del diseñador.
        </summary>
      <returns>
          
            true si se admiten regiones del diseñador; en caso contrario, false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.Update">
      <summary>
          Hace que el control asociado vuelva a dibujar las regiones no válidas en su área de cliente.
        </summary>
    </member>
    <member name="E:System.Web.UI.Design.IControlDesignerView.ViewEvent">
      <summary>
          Evento provocado por el host de diseño para la vista y el componente del diseñador.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataBindingSchemaProvider">
      <summary>
          Proporciona una interfaz para el acceso en tiempo de diseño a un proveedor de esquema en un host de diseño.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema">
      <summary>
          Obtiene un valor que indica si el proveedor puede actualizar el esquema.
        </summary>
      <returns>
          
            true, si se puede actualizar el esquema; de lo contrario, false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)">
      <summary>
          Actualiza el esquema del origen de datos.
        </summary>
      <param name="preferSilent">
              
                true para deshabilitar los eventos de enlace de datos hasta después de que se haya actualizado el esquema; false para habilitar los eventos.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema">
      <summary>
          Obtiene el objeto de esquema actual para el diseñador.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceDesigner">
      <summary>
          Define la funcionalidad básica de un diseñador de orígenes de datos.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure">
      <summary>
          Indica si se puede llamar al método <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" />.
        </summary>
      <returns>
          
            Es true si el origen de datos subyacente tiene un asistente para la configuración que se puede iniciar con el método <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" />; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema">
      <summary>
          Indica si se puede llamar al método <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" />.
        </summary>
      <returns>
          
            Es true si el origen de datos subyacente puede actualizar su esquema; de lo contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.Configure">
      <summary>
          Inicia el asistente para la configuración del origen de datos subyacente.
        </summary>
    </member>
    <member name="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged">
      <summary>
          Se produce cuando un origen de datos ha cambiado de modo que afecta a los controles enlazados a datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)">
      <summary>
          Obtiene <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> de la vista especificada.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> que contiene información sobre la vista identificada o null si no se encuentra una vista con el nombre especificado.
        </returns>
      <param name="viewName">
              Nombre de una vista en el origen de datos subyacente.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames">
      <summary>
          Obtiene los nombres de las vistas en el origen de datos subyacente.
        </summary>
      <returns>
          Una matriz de tipo <see cref="T:System.String" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>
          Actualiza el esquema del origen de datos subyacente.
        </summary>
      <param name="preferSilent">
              Indica si deben suprimirse los eventos provocados durante la actualización del esquema.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents">
      <summary>
          Reanuda los eventos del origen de datos después de llamar al método <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" />.
        </summary>
    </member>
    <member name="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed">
      <summary>
          Se produce cuando los campos o datos del origen de datos subyacente han cambiado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents">
      <summary>
          Suprime todos los eventos provocados por un origen de datos hasta que se llame al método <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" />.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceFieldSchema">
      <summary>
          Proporciona funciones básicas para describir la estructura de campos de datos en tiempo de diseño.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType">
      <summary>
          Obtiene el tipo de datos almacenado en el campo.
        </summary>
      <returns>
          Objeto <see cref="T:System.Type" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Identity">
      <summary>
          Obtiene un valor que indica si se incrementa automáticamente el valor del campo por cada fila nueva.
        </summary>
      <returns>
          
            Es true si el tipo de datos <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> del campo es numérico y el campo subyacente se incrementa automáticamente a medida que se agregan nuevas filas; en caso contrario es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.IsReadOnly">
      <summary>
          Obtiene un valor que indica si el campo es modificable.
        </summary>
      <returns>
          
            true si el campo es de sólo lectura; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.IsUnique">
      <summary>
          Obtiene un valor que indica si es necesario que los valores del campo sean únicos.
        </summary>
      <returns>
          
            Es true si los datos del campo deben ser únicos, en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Length">
      <summary>
          Obtiene un valor que limita el tamaño de los datos que se pueden almacenar en el campo.
        </summary>
      <returns>
          Número de bytes que el campo puede almacenar.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Name">
      <summary>
          Obtiene el nombre del campo.
        </summary>
      <returns>
          Nombre del campo.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Nullable">
      <summary>
          Obtiene un valor que indica si el campo puede aceptar valores null.
        </summary>
      <returns>
          
            true si el campo puede aceptar valores null; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Precision">
      <summary>
          Obtiene el número máximo de dígitos utilizados para representar un valor numérico del campo.
        </summary>
      <returns>
          Número máximo de dígitos utilizados para representar los valores del campo si la propiedad <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> del campo representa un tipo numérico. Si no se implementa esta propiedad, devolverá -1.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.PrimaryKey">
      <summary>
          Obtiene un valor que indica si el campo está en la clave principal.
        </summary>
      <returns>
          
            Es true si el campo está en la clave principal; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Scale">
      <summary>
          Obtiene el número de lugares decimales determinado por los valores numéricos del campo.
        </summary>
      <returns>
          Si la propiedad <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> del campo representa un tipo numérico, devuelve el número de lugares decimales determinado para los valores; en caso contrario, es -1.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceProvider">
      <summary>
          Define una interfaz que puede implementar un diseñador de control para proporcionar acceso a un origen de datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource">
      <summary>
          Obtiene el miembro de datos seleccionado del origen de datos seleccionado.
        </summary>
      <returns>
          Miembro de datos seleccionado del origen de datos seleccionado, si el control permite al usuario seleccionar un <see cref="T:System.ComponentModel.IListSource" /> (como un <see cref="T:System.Data.DataSet" />) para el origen de datos, y proporciona una propiedad DataMember para seleccionar una lista particular (o <see cref="T:System.Data.DataTable" />) dentro del origen de datos.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource">
      <summary>
          Obtiene una referencia al origen de datos seleccionado del proveedor de origen de datos.
        </summary>
      <returns>
          Objeto de origen de datos actualmente seleccionado de este proveedor de orígenes de datos.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceSchema">
      <summary>
          Proporciona funciones básicas para describir la estructura de un origen de datos en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceSchema.GetViews">
      <summary>
          Obtiene una matriz de los descriptores de esquemas para las vistas del origen de datos.
        </summary>
      <returns>
          Una matriz de objetos <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceViewSchema">
      <summary>
          Define un conjunto de métodos y propiedades utilizado para examinar un origen de datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceViewSchema.GetChildren">
      <summary>
          Obtiene una matriz que representa las vistas secundarias contenidas en la vista actual.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> que representa las vistas secundarias contenidas en la vista actual.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceViewSchema.GetFields">
      <summary>
          Obtiene una matriz que contiene información acerca de cada campo del origen de datos.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Web.UI.Design.IDataSourceFieldSchema" /> que representa cada uno de los campos del origen de datos.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceViewSchema.Name">
      <summary>
          Obtiene el nombre de la vista.
        </summary>
      <returns>
          Nombre de la vista.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.IDesignTimeResourceProviderFactoryService">
      <summary>
          Proporciona una interfaz para crear una clase <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> personalizada.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IDesignTimeResourceProviderFactoryService.GetFactory">
      <summary>
          Crea un objeto <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" />.
        </summary>
      <returns>
          A <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.IDesignTimeResourceWriter">
      <summary>
          Se utiliza por la clase <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> para adaptar los datos en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IDesignTimeResourceWriter.CreateResourceKey(System.String,System.Object)">
      <summary>
          Crea una clave utilizando la cadena proporcionada que se va a utilizar para recuperar los datos del recurso determinado.
        </summary>
      <returns>
          La clave utilizada para escribir o recuperar <paramref name="obj" /> de <paramref name="resourceName" />.
        </returns>
      <param name="resourceName">
              Nombre del recurso.
            </param>
      <param name="obj">
              Objeto que se va a adaptar.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.IDocumentProjectItem">
      <summary>
          Proporciona una interfaz para tener acceso a un elemento de documento recuperado en tiempo de diseño en un host de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IDocumentProjectItem.GetContents">
      <summary>
          Proporciona acceso al contenido de un elemento de documento que se recupera del host de diseño.
        </summary>
      <returns>
          Un objeto <see cref="T:System.IO.Stream" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IDocumentProjectItem.Open">
      <summary>
          Abre un elemento de documento que se recupera del host de diseño.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.IFolderProjectItem">
      <summary>
          Proporciona una interfaz para una carpeta de proyecto en un host de diseño, como Visual Studio 2005.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IFolderProjectItem.AddDocument(System.String,System.Byte[])">
      <summary>
          Agrega un documento a una carpeta de proyecto en un host de diseño, como Visual Studio 2005.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.IDocumentProjectItem" /> que representa el documento agregado.
        </returns>
      <param name="name">
              Nombre del documento.
            </param>
      <param name="content">
              Una matriz de tipo <see cref="T:System.Byte" /> que contiene el contenido del documento.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IFolderProjectItem.AddFolder(System.String)">
      <summary>
          Crea una nueva carpeta en una carpeta de proyecto de un host de diseño, como Visual Studio 2005.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.IFolderProjectItem" /> que representa la nueva carpeta.
        </returns>
      <param name="name">
              Nombre de la nueva carpeta.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.IFolderProjectItem.Children">
      <summary>
          Obtiene una colección de elementos en una carpeta de proyecto en un host de diseño, como Visual Studio 2005.
        </summary>
      <returns>
          <see cref="T:System.Collections.ICollection" /> que contiene los elementos en la carpeta de proyecto del host de diseño.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner">
      <summary>
          Proporciona, en un diseñador visual, compatibilidad en tiempo de diseño con una clase derivada de la clase <see cref="T:System.Web.UI.HierarchicalDataSourceControl" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.IHierarchicalDataSourceDesigner.CanConfigure">
      <summary>
          Obtiene un valor que indica si se puede llamar al método <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" />.
        </summary>
      <returns>
          
            true si el origen de datos subyacente dispone de un asistente para configuración que se puede iniciar con el método <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" />; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IHierarchicalDataSourceDesigner.CanRefreshSchema">
      <summary>
          Obtiene un valor que indica si se puede llamar al método <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" />.
        </summary>
      <returns>
          
            Es true si se puede llamar a <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" />; en caso contrario, false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure">
      <summary>
          Inicia el asistente para la configuración del origen de datos subyacente.
        </summary>
    </member>
    <member name="E:System.Web.UI.Design.IHierarchicalDataSourceDesigner.DataSourceChanged">
      <summary>
          Tiene lugar cuando un control de origen de datos ha cambiado de manera que afecta a los controles enlazados a datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.GetView(System.String)">
      <summary>
          Obtiene la vista de origen de datos con nombre asociada al control de origen de datos.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />.
        </returns>
      <param name="viewPath">
              XPath a la parte del origen de datos que se debe recuperar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>
          Actualiza el esquema del origen de datos subyacente.
        </summary>
      <param name="preferSilent">
              
                true para suprimir los eventos provocados al actualizar el esquema; en caso contrario false.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.ResumeDataSourceEvents">
      <summary>
          Restaura los eventos después de llamar al método <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SuppressDataSourceEvents" />.
        </summary>
    </member>
    <member name="E:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SchemaRefreshed">
      <summary>
          Tiene lugar cuando los campos o los datos del origen de datos subyacente han cambiado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SuppressDataSourceEvents">
      <summary>
          Desactiva los eventos en el control de origen de datos.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.IHtmlControlDesignerBehavior">
      <summary>
          Define una interfaz que habilita la extensión de comportamientos específicos de un diseñador de controles HTML.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.IHtmlControlDesignerBehavior.Designer">
      <summary>
          Obtiene o establece el diseñador al que está asociado el comportamiento.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> al que está asociado el comportamiento.
          
            La interfaz <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> está obsoleta. Use las interfaces <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> y <see cref="T:System.Web.UI.Design.IControlDesignerView" /> para obtener la funcionalidad equivalente del diseñador de controles.
          
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IHtmlControlDesignerBehavior.DesignTimeElement">
      <summary>
          Obtiene el elemento al que está asociado el diseñador.
        </summary>
      <returns>
          Objeto al que está asociado el diseñador.
          
            La interfaz <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> está obsoleta. Use las interfaces <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> y <see cref="T:System.Web.UI.Design.IControlDesignerView" /> para obtener la funcionalidad equivalente del diseñador de controles.
          
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.GetAttribute(System.String,System.Boolean)">
      <summary>
          Obtiene el atributo especificado.
        </summary>
      <returns>
          Atributo que se recuperó.
        </returns>
      <param name="attribute">
              Atributo que se va a recuperar. 
            </param>
      <param name="ignoreCase">
              
                Es true si la sintaxis del atributo no distingue entre mayúsculas de minúsculas; en caso contrario, es false. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.GetStyleAttribute(System.String,System.Boolean,System.Boolean)">
      <summary>
          Obtiene el atributo de estilo especificado.
        </summary>
      <returns>
          Atributo de estilo que se recuperó.
        </returns>
      <param name="attribute">
              Atributo de estilo que se va a recuperar. 
            </param>
      <param name="designTimeOnly">
              
                Es true si el atributo sólo está activo en tiempo de diseño; de lo contrario, es false. 
            </param>
      <param name="ignoreCase">
              
                Es true si la sintaxis del atributo no distingue entre mayúsculas de minúsculas; en caso contrario, es false. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.RemoveAttribute(System.String,System.Boolean)">
      <summary>
          Quita el atributo especificado.
        </summary>
      <param name="attribute">
              Atributo que se va a quitar. 
            </param>
      <param name="ignoreCase">
              
                Es true si la sintaxis del atributo no distingue entre mayúsculas de minúsculas; en caso contrario, es false. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.RemoveStyleAttribute(System.String,System.Boolean,System.Boolean)">
      <summary>
          Quita el atributo de estilo especificado.
        </summary>
      <param name="attribute">
              Atributo de estilo que se va a quitar. 
            </param>
      <param name="designTimeOnly">
              
                Es true si el atributo sólo está activo en tiempo de diseño; de lo contrario, es false. 
            </param>
      <param name="ignoreCase">
              
                Es true si la sintaxis del atributo no distingue entre mayúsculas de minúsculas; en caso contrario, es false. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.SetAttribute(System.String,System.Object,System.Boolean)">
      <summary>
          Establece el atributo especificado en el objeto especificado.
        </summary>
      <param name="attribute">
              Atributo que se va a establecer. 
            </param>
      <param name="value">
              Objeto en el que se va a establecer el atributo. 
            </param>
      <param name="ignoreCase">
              
                Es true si la sintaxis del atributo no distingue entre mayúsculas de minúsculas; en caso contrario, es false. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.SetStyleAttribute(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>
          Establece el atributo de estilo especificado en el objeto especificado.
        </summary>
      <param name="attribute">
              Atributo que se va a establecer. 
            </param>
      <param name="designTimeOnly">
              
                Es true si el atributo sólo está activo en tiempo de diseño; de lo contrario, es false. 
            </param>
      <param name="value">
              Objeto en el que se va a establecer el atributo. 
            </param>
      <param name="ignoreCase">
              
                Es true si la sintaxis del atributo no distingue entre mayúsculas de minúsculas; en caso contrario, es false. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.ImageUrlEditor">
      <summary>
          Proporciona una interfaz de usuario para seleccionar una dirección URL que hace referencia a una imagen
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ImageUrlEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ImageUrlEditor" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.ImageUrlEditor.Caption">
      <summary>
          Obtiene el título que se va a mostrar en la ventana del cuadro de diálogo de selección.
        </summary>
      <returns>
          Título que se va a mostrar en la ventana del cuadro de diálogo de selección.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ImageUrlEditor.Filter">
      <summary>
          Obtiene la cadena de filtro de nombres de archivo para el editor. Esta cadena se usa para determinar los productos que aparecen en la lista de archivos del cuadro de diálogo.
        </summary>
      <returns>
          La cadena de filtro se pude usar para filtrar la lista de archivos del cuadro de diálogo.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.IProjectItem">
      <summary>
          Proporciona una interfaz para un elemento que se recupera en tiempo de diseño desde un host de diseñador, por ejemplo Visual Studio 2005.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.AppRelativeUrl">
      <summary>
          Obtiene la dirección URL del elemento relativa al host de diseño.
        </summary>
      <returns>
          Dirección URL relativa.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.Name">
      <summary>
          Obtiene el nombre del elemento.
        </summary>
      <returns>
          Nombre del elemento.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.Parent">
      <summary>
          Obtiene una referencia al elemento contenedor, si lo hay.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.IProjectItem" />, si el elemento actual se encuentra dentro de otro elemento; en caso contrario, null.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.PhysicalPath">
      <summary>
          Obtiene la ruta de acceso de un elemento del proyecto.
        </summary>
      <returns>
          Ruta de acceso del elemento.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.ITemplateEditingFrame">
      <summary>
          Proporciona una interfaz para administrar un área de edición de plantillas.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Close(System.Boolean)">
      <summary>
          Cierra el control y, opcionalmente, guarda los cambios.
        </summary>
      <param name="saveChanges">
              
                Es true si se deben guardar los cambios del documento; en caso contrario, es false. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.ControlStyle">
      <summary>
          Obtiene el estilo del marco de edición.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.WebControls.Style" /> que representa los atributos de estilo del control de servidor Web para el marco de edición.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.InitialHeight">
      <summary>
          Obtiene o establece el alto inicial del control.
        </summary>
      <returns>
          Alto inicial del control.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.InitialWidth">
      <summary>
          Obtiene o establece el ancho inicial del control.
        </summary>
      <returns>
          Ancho inicial del control.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.Name">
      <summary>
          Obtiene el nombre del marco de edición.
        </summary>
      <returns>
          Nombre del marco de edición.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Open">
      <summary>
          Abre y muestra el control.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Resize(System.Int32,System.Int32)">
      <summary>
          Cambia de tamaño el control con el ancho y alto especificados.
        </summary>
      <param name="width">
              Nuevo ancho del control. 
            </param>
      <param name="height">
              Nuevo alto del control. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Save">
      <summary>
          Guarda los cambios realizados en el documento.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.TemplateNames">
      <summary>
          Obtiene un conjunto de nombres de las plantillas que se van a utilizar.
        </summary>
      <returns>
          Matriz de nombres de plantillas.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.TemplateStyles">
      <summary>
          Obtiene los estilos de plantilla del control.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Web.UI.WebControls.Style" /> que representan los estilos de plantilla del control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.UpdateControlName(System.String)">
      <summary>
          Cambia el nombre del control por el nombre especificado.
        </summary>
      <param name="newName">
              Nuevo nombre del control. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.Verb">
      <summary>
          Obtiene o establece el verbo que invoca la plantilla.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> que invoca la plantilla.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.ITemplateEditingService">
      <summary>
          Proporciona servicios para editar plantillas de controles en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[])">
      <summary>
          Crea un nuevo marco de edición de plantillas para el diseñador de controles con plantilla especificado, mediante el nombre y las plantillas especificados.
        </summary>
      <returns>
          La nueva <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.
        </returns>
      <param name="designer">
              <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> que utilizará el marco de edición de plantillas. 
            </param>
      <param name="frameName">
              Nombre del marco de edición que se mostrará en el marco. Normalmente, es igual que la propiedad <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> que se utiliza como texto de menú de <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> al que se llama para crear el marco. 
            </param>
      <param name="templateNames">
              Matriz de nombres de plantillas que contendrá el marco de edición de plantillas. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
      <summary>
          Crea un nuevo marco de edición de plantillas para el <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> especificado, mediante el nombre, los nombres de plantilla, el estilo de control y los estilos de plantilla especificados.
        </summary>
      <returns>
          La nueva <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.
        </returns>
      <param name="designer">
              <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> que utilizará el marco de edición de plantillas. 
            </param>
      <param name="frameName">
              Nombre del marco de edición que se mostrará en el marco. Normalmente, es igual que la propiedad <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> que se utiliza como texto de menú de <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> al que se llama para crear el marco. 
            </param>
      <param name="templateNames">
              Matriz de nombres de plantillas que contendrá el marco de edición de plantillas. 
            </param>
      <param name="controlStyle">
              Objeto <see cref="T:System.Web.UI.WebControls.Style" /> del control para el marco de edición. 
            </param>
      <param name="templateStyles">
              Matriz de tipo <see cref="T:System.Web.UI.WebControls.Style" /> que representa los estilos de plantilla para el marco de edición. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.GetContainingTemplateName(System.Web.UI.Control)">
      <summary>
          Obtiene el nombre de la plantilla principal.
        </summary>
      <returns>
          Nombre de la plantilla principal.
        </returns>
      <param name="control">
              <see cref="T:System.Web.UI.Control" /> para el que se va a obtener el nombre de la plantilla principal. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingService.SupportsNestedTemplateEditing">
      <summary>
          Indica si el servicio admite la edición de plantillas anidadas.
        </summary>
      <returns>
          
            Es true si el servicio admite la edición de plantillas anidadas; en caso contrario, es false.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.IWebAdministrationService">
      <summary>
          Proporciona una interfaz para crear los servicios para administrar un sitio Web en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebAdministrationService.Start(System.Collections.IDictionary)">
      <summary>
          Inicia la herramienta de administración Web en el host de diseño.
        </summary>
      <param name="arguments">
              <see cref="T:System.Collections.IDictionary" />.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.IWebApplication">
      <summary>
          Proporciona una interfaz para tener acceso a una aplicación Web en un host de diseño, como Microsoft Visual Studio 2005, en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebApplication.GetProjectItemFromUrl(System.String)">
      <summary>
          Devuelve un elemento de proyecto de un host de diseño basado en su dirección URL.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.IProjectItem" />.
        </returns>
      <param name="appRelativeUrl">
              Ruta de acceso relativa al elemento de proyecto que se va a recuperar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IWebApplication.OpenWebConfiguration(System.Boolean)">
      <summary>
          Devuelve un objeto <see cref="T:System.Configuration.Configuration" /> que representa la aplicación Web actual en el host de diseño.
        </summary>
      <returns>
          <see cref="T:System.Configuration.Configuration" />.
        </returns>
      <param name="isReadOnly">
              
                true para indicar que la <see cref="T:System.Configuration.Configuration" /> devuelta se puede editar; de lo contrario, es false.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.IWebApplication.RootProjectItem">
      <summary>
          Recibe el elemento de proyecto raíz del host de diseño.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.IProjectItem" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormReferenceManager">
      <summary>
          Proporciona una interfaz que puede buscar información sobre los tipos que se utilizan en el proyecto de formularios Web Forms actual.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetObjectType(System.String,System.String)">
      <summary>
          Obtiene el tipo del objeto especificado.
        </summary>
      <returns>
          <see cref="T:System.Type" /> del objeto, si se pudo resolver.
        </returns>
      <param name="tagPrefix">
              Prefijo de etiqueta del tipo. 
            </param>
      <param name="typeName">
              Nombre del tipo. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetRegisterDirectives">
      <summary>
          Obtiene las directivas del registro del proyecto actual.
        </summary>
      <returns>
          Directivas del registro del proyecto actual.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetTagPrefix(System.Type)">
      <summary>
          Obtiene el prefijo de etiqueta para el tipo de objeto especificado.
        </summary>
      <returns>
          Prefijo de etiqueta del tipo de objeto especificado, si se pudo encontrar.
        </returns>
      <param name="objectType">
              Tipo del objeto. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormsBuilderUIService">
      <summary>
          Proporciona métodos para iniciar interfaces de usuario específicas para generar propiedades en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsBuilderUIService.BuildColor(System.Windows.Forms.Control,System.String)">
      <summary>
          Inicia un <see cref="T:System.Web.UI.Design.ColorBuilder" /> para generar una propiedad de color.
        </summary>
      <returns>
          Color que se había seleccionado. Este valor será un color con nombre o un color RGB expresado en formato de color HTML (#RRGGBB).
        </returns>
      <param name="owner">
              Control usado como control principal del cuadro de diálogo que muestra <see cref="T:System.Web.UI.Design.ColorBuilder" />. 
            </param>
      <param name="initialColor">
              Color inicial que debe preseleccionar el editor. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsBuilderUIService.BuildUrl(System.Windows.Forms.Control,System.String,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>
          Inicia un editor para generar una propiedad de dirección URL.
        </summary>
      <returns>
          Cadena que contiene la dirección URL devuelta por <see cref="T:System.Web.UI.Design.UrlBuilder" />.
        </returns>
      <param name="owner">
              Control usado como control principal del cuadro de diálogo que muestra <see cref="T:System.Web.UI.Design.UrlBuilder" />. 
            </param>
      <param name="initialUrl">
              Dirección URL inicial que se mostrará en la interfaz de selección. 
            </param>
      <param name="baseUrl">
              Dirección URL base para crear direcciones URL relativas. 
            </param>
      <param name="caption">
              Título que presenta un mensaje en la interfaz de selección. 
            </param>
      <param name="filter">
              Cadena de filtro que se utiliza para filtrar de forma opcional los archivos mostrados en la interfaz de selección. 
            </param>
      <param name="options">
              <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> que indica las opciones de <see cref="T:System.Web.UI.Design.UrlBuilder" />. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormsDocumentService">
      <summary>
          Proporciona métodos que permiten obtener acceso a servicios para realizar el seguimiento del estado de carga de un documento de formularios Web Forms, controlar los eventos en tiempo de carga, obtener acceso a la ubicación de un documento, administrar el servicio de deshacer de un documento y establecer una nueva selección dentro del documento.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.CreateDiscardableUndoUnit">
      <summary>
          Crea una unidad de deshacer que se puede descartar.
        </summary>
      <returns>
          Nueva unidad de deshacer que se puede descartar.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.DiscardUndoUnit(System.Object)">
      <summary>
          Descarta la unidad de deshacer especificada.
        </summary>
      <param name="discardableUndoUnit">
              Unidad de deshacer que se va a descartar. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.IWebFormsDocumentService.DocumentUrl">
      <summary>
          Obtiene la dirección URL en la que se encuentra el documento.
        </summary>
      <returns>
          Dirección URL en la que se encuentra el documento o null si el documento no tiene ninguna dirección URL asociada.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.EnableUndo(System.Boolean)">
      <summary>
          Permite deshacer acciones que se producen en unidades de acción o transacciones que se pueden deshacer.
        </summary>
      <param name="enable">
              
                Es true si es necesario que las acciones se puedan deshacer; en caso contrario, es false. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.IWebFormsDocumentService.IsLoading">
      <summary>
          Obtiene un valor que indica si el servicio del documento se está cargando actualmente.
        </summary>
      <returns>
          
            Es true si el servicio del documento se está cargando; en caso contrario, es false.
        </returns>
    </member>
    <member name="E:System.Web.UI.Design.IWebFormsDocumentService.LoadComplete">
      <summary>
          Se produce cuando el servicio ha terminado de cargarse.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.UpdateSelection">
      <summary>
          Cuando se implementa en una clase derivada, actualiza la selección actual.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.MailFileEditor">
      <summary>
          Proporciona una interfaz de usuario para seleccionar y editar un nombre de archivo de correo de una propiedad en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.MailFileEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.MailFileEditor" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.MailFileEditor.Caption">
      <summary>
          Devuelve el título para el cuadro de diálogo del editor.
        </summary>
      <returns>
          Título del cuadro de diálogo en tiempo de diseño.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.MailFileEditor.Filter">
      <summary>
          Devuelve la cadena de filtro de archivo para el cuadro de diálogo (por ejemplo, "*.txt").
        </summary>
      <returns>
          Filtro para seleccionar los archivos en el cuadro de diálogo en tiempo de diseño.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.MdbDataFileEditor">
      <summary>
          Proporciona una interfaz de usuario en tiempo de diseño para seleccionar un archivo de base de datos de Microsoft Access.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.MdbDataFileEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.MdbDataFileEditor" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.MdbDataFileEditor.Caption">
      <summary>
          Obtiene el título que se va a mostrar en el cuadro de diálogo de selección.
        </summary>
      <returns>
          El texto del título que se va a mostrar en el cuadro de diálogo de selección.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.MdbDataFileEditor.Filter">
      <summary>
          Obtiene las opciones de filtro de dirección URL para el editor, que se utilizan para filtrar los elementos que aparecen en el cuadro de diálogo de selección de direcciones URL.
        </summary>
      <returns>
          Una cadena que representa una o varias opciones de filtro de dirección URL del cuadro de diálogo.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.ReadWriteControlDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño para controles de servidor de lectura/escritura.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.#ctor">
      <summary>
          Inicializa una instancia de la clase <see cref="T:System.Web.UI.Design.ReadWriteControlDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el HTML usado para representar el control en tiempo de diseño.
        </summary>
      <returns>
          HTML usado para representar el control en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.MapPropertyToStyle(System.String,System.Object)">
      <summary>
          Asigna una propiedad, incluidos su descripción y valor, a un estilo HTML intrínseco.
        </summary>
      <param name="propName">
              Nombre de la propiedad que se debe asignar. 
            </param>
      <param name="varPropValue">
              Valor de la propiedad. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.OnBehaviorAttached">
      <summary>
          Proporciona una notificación que se produce cuando se adjunta un comportamiento al diseñador.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> de la clase <see cref="T:System.ComponentModel.Design.IComponentChangeService" />.
        </summary>
      <param name="sender">
              Objeto que envía el evento. 
            </param>
      <param name="ce">
              Objeto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que proporciona los datos para el evento. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.UpdateDesignTimeHtml">
      <summary>
          Actualiza la presentación del control.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.ResourceExpressionEditor">
      <summary>
          Proporciona propiedades y métodos para evaluar y modificar una expresión de recurso en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de una clase <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>
          Evalúa una expresión de recurso y proporciona el valor en tiempo de diseño de una propiedad de control.
        </summary>
      <returns>
          Objeto al que hace referencia la cadena de expresión evaluada si la evaluación de la expresión se realizó correctamente; en caso contrario, es null.
        </returns>
      <param name="expression">
              Expresión de recurso que se va a evaluar. <paramref name="expression" /> no incluye el prefijo de expresión Resources.
            </param>
      <param name="parseTimeData">
              Objeto que suministra datos de análisis adicionales, en la forma de un valor de <see cref="T:System.Web.Compilation.ResourceExpressionFields" />.
            </param>
      <param name="propertyType">
              Tipo de la propiedad de control.
            </param>
      <param name="serviceProvider">
              Implementación del proveedor de servicio mediante el host del diseñador, utilizado para obtener servicios adicionales en tiempo de diseño.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>
          Devuelve una hoja del editor de expresiones de recurso que se inicializa con la cadena de expresión de entrada y la implementación del proveedor de servicio.
        </summary>
      <returns>
          Clase <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> que define las propiedades de expresión de recurso.
        </returns>
      <param name="expression">
              Expresión de recurso, utilizada para inicializar la hoja del editor de expresiones.
            </param>
      <param name="serviceProvider">
              Implementación del proveedor de servicio mediante el host del diseñador, utilizado para inicializar la hoja del editor de expresiones.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.ResourceExpressionEditorSheet">
      <summary>
          Representa una hoja del editor en tiempo de diseño para las propiedades de una expresión de recurso en la interfaz de usuario de un host del diseñador.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />.
        </summary>
      <param name="expression">
              Expresión de recurso, que se utiliza para inicializar la hoja del editor de expresiones.
            </param>
      <param name="serviceProvider">
              Implementación del proveedor de servicios proporcionada por el host del diseñador, que se utiliza para obtener servicios en tiempo de diseño adicionales.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey">
      <summary>
          Obtiene o establece la clave que coincide con el nombre de archivo del recurso en la carpeta de recursos globales del proyecto.
        </summary>
      <returns>
          Clave de un archivo de recursos en la carpeta de recursos globales. 
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditorSheet.GetExpression">
      <summary>
          Devuelve una expresión de recurso formada por los valores de propiedad de la hoja del editor de expresiones.
        </summary>
      <returns>
          La cadena de expresión de recurso para la configuración actual en la hoja.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.IsValid">
      <summary>
          Devuelve un valor que indica si la cadena de expresión de recurso es válida.
        </summary>
      <returns>
          
            true si la cadena de expresión de recurso es válida; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey">
      <summary>
          Obtiene o establece el nombre del recurso, que se utiliza como clave para buscar el valor de recurso.
        </summary>
      <returns>
          Nombre del recurso.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.SkinIDTypeConverter">
      <summary>
          Proporciona una lista de Id. de máscara válidos para un control en tiempo de diseño, basada en el tema que se está aplicando actualmente.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.SkinIDTypeConverter" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
          Devuelve un valor que indica si este convertidor puede convertir un objeto <see cref="P:System.Web.UI.Control.SkinID" /> en cadena utilizando el contexto de formato y el tipo proporcionados.
        </summary>
      <returns>
          
            true, si la conversión se puede realizar; en caso contrario, false.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato para el control que se va a diseñar.
            </param>
      <param name="sourceType">
              Un objeto <see cref="T:System.Type" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
          Devuelve un valor que indica si este convertidor puede convertir un objeto <see cref="P:System.Web.UI.Control.SkinID" /> en el tipo especificado, utilizando el contexto especificado.
        </summary>
      <returns>
          
            true, si se puede realizar una conversión; en caso contrario, false.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato para el control que se va a diseñar.
            </param>
      <param name="destType">
              <see cref="T:System.Type" /> que representa el tipo al que se va a realizar la conversión.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
          Convierte la cadena dada en un objeto <see cref="P:System.Web.UI.Control.SkinID" /> utilizando el contexto y la información de referencia cultural proporcionados.
        </summary>
      <returns>
          Objeto que se puede convertir en un objeto <see cref="P:System.Web.UI.DataSourceControl.SkinID" />, si se puede realizar la conversión; en caso contrario, null.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato que representa el control que se va a diseñar.
            </param>
      <param name="culture">
              Clase <see cref="T:System.Globalization.CultureInfo" />. Si se pasa null, se supone que se trata de la actual información de referencia cultural.
            </param>
      <param name="value">
              Cadena que se va a convertir.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
          Convierte el objeto <see cref="P:System.Web.UI.Control.SkinID" /> dado en cadena utilizando el contexto y la información de referencia cultural proporcionados.
        </summary>
      <returns>
          Objeto que representa el valor convertido.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato que representa el control que se va a diseñar.
            </param>
      <param name="culture">
              Clase <see cref="T:System.Globalization.CultureInfo" />. Si es null, se asume la referencia cultural actual. 
            </param>
      <param name="value">
              Objeto <see cref="P:System.Web.UI.Control.SkinID" /> que se va a convertir.
            </param>
      <param name="destinationType">
              <see cref="T:System.Type" /> al que se va a convertir <paramref name="value" /> (debe ser un objeto <see cref="T:System.String" />). 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Devuelve un conjunto de objetos <see cref="P:System.Web.UI.Control.SkinID" /> que se puede aplicar al control representado por el contexto de formato dado.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contiene un conjunto de objetos <see cref="P:System.Web.UI.Control.SkinID" />; de lo contrario, null, si el control no admite máscaras.
        </returns>
      <param name="context">
              Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto del formato que representa el control que se va a diseñar. Tanto <paramref name="context" /> como las propiedades de <paramref name="context" /> pueden ser null.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Devuelve un valor que indica si el control representado por el contexto dado admite un conjunto de objetos <see cref="P:System.Web.UI.Control.SkinID" /> que se pueden seleccionar de una lista.
        </summary>
      <returns>
          
            true, si se debe llamar a <see cref="Overload:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValues" /> para buscar un conjunto común de valores que sea compatible con el objeto; en caso contrario, false.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> para el control que se está diseñando.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.SupportsPreviewControlAttribute">
      <summary>
          Indica si un diseñador de controles requiere una instancia de vista preliminar del control en tiempo de diseño. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.#ctor(System.Boolean)">
      <summary>
          Inicializa una instancia nueva de la clase <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> y establece el valor inicial de la propiedad <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" />.
        </summary>
      <param name="supportsPreviewControl">
              El valor inicial que se asigna a <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" />.
            </param>
    </member>
    <member name="F:System.Web.UI.Design.SupportsPreviewControlAttribute.Default">
      <summary>
          Obtiene una instancia de la clase <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> establecida en el valor de vista preliminar predeterminado. Este campo es de sólo lectura.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.Equals(System.Object)">
      <summary>
          Determina si el objeto especificado representa la misma configuración de atributo de vista preliminar que la instancia actual de la clase <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />.
        </summary>
      <returns>
          
            Es true si <paramref name="obj" /> es un atributo <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> y tiene el mismo valor que la instancia de <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />; en caso contrario, es false.
        </returns>
      <param name="obj">
              El objeto que se compara con la instancia actual de <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.GetHashCode">
      <summary>
          Devuelve el código hash de esta instancia de la clase <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />.
        </summary>
      <returns>
          Un código hash entero con signo de 32 bits para la instancia actual de <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.IsDefaultAttribute">
      <summary>
          Indica si la instancia actual de la clase <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> está establecida en el valor del atributo de la vista preliminar predeterminado.
        </summary>
      <returns>
          
            Es true si la instancia actual de <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> es igual al valor del atributo de la vista preliminar predeterminado; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador de controles requiere un control de vista preliminar temporal en tiempo de diseño.
        </summary>
      <returns>
          
            Es true si el diseñador utiliza una copia temporal del control asociado para la vista preliminar en tiempo de diseño; es false si el diseñador utiliza una instancia del control <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> contenido en el diseñador.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplatedControlDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño para los controles de servidor basados en plantilla.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.ActiveTemplateEditingFrame">
      <summary>
          Obtiene el marco de edición de plantillas activo.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> que es el marco de edición de plantillas actualmente activo.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.CanEnterTemplateMode">
      <summary>
          Obtiene un valor que Indica si este diseñador permite ver o editar plantillas.
        </summary>
      <returns>
          
            Es true si el diseñador permite ver o editar las plantillas; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>
          Cuando se reemplaza en una clase derivada, crea un marco de edición de plantillas para el verbo especificado.
        </summary>
      <returns>
          Nuevo marco de edición de plantillas.
        </returns>
      <param name="verb">
              Verbo de edición de plantillas para el que se va a crear un marco de edición de plantillas. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.DataBindingsEnabled">
      <summary>
          Obtiene un valor que indica si el diseñador permite el enlace de datos. 
        </summary>
      <returns>
          
            true si el diseñador permite el enlace de datos; en caso contrario, false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.EnterTemplateMode(System.Web.UI.Design.ITemplateEditingFrame)">
      <summary>
          Abre un objeto de marco de plantilla concreto para editarlo en el diseñador.
        </summary>
      <param name="newTemplateEditingFrame">
              Objeto de marco de edición de plantillas que se va a abrir en el diseñador. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.ExitTemplateMode(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
          Cierra el marco de edición de plantillas actualmente activo después de guardar los cambios relevantes.
        </summary>
      <param name="fSwitchingTemplates">
              
                Es true cuando se cambia de un marco de edición de plantillas a otro; en caso contrario, es false. 
            </param>
      <param name="fNested">
              
                Es true si este diseñador está anidado (tiene uno o varios niveles) dentro de otro control cuyo diseñador también se encuentra en modo de edición de plantillas; en caso contrario, es false. 
            </param>
      <param name="fSave">
              
                Es true si deben guardarse las plantillas al salir; en caso contrario, es false. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetCachedTemplateEditingVerbs">
      <summary>
          Obtiene los verbos de edición de plantillas almacenados en caché.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Web.UI.Design.TemplateEditingVerb" />, si existen.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>
          Obtiene la propiedad del elemento de datos del contenedor de la plantilla.
        </summary>
      <returns>
          Cadena que representa los datos.
        </returns>
      <param name="templateName">
              Nombre de la plantilla. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataSource(System.String)">
      <summary>
          Obtiene el origen de datos del contenedor de la plantilla.
        </summary>
      <returns>
          Origen de datos del contenedor de la plantilla especificada.
        </returns>
      <param name="templateName">
              Nombre de la plantilla. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el contenido de la plantilla.
        </summary>
      <returns>
          Contenido de la plantilla.
        </returns>
      <param name="editingFrame">
              Marco de edición de plantillas cuyo contenido se va a recuperar. 
            </param>
      <param name="templateName">
              Nombre de la plantilla. 
            </param>
      <param name="allowEditing">
              
                Es true si el contenido de la plantilla se puede editar, y false si el contenido es de sólo lectura. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateEditingVerbs">
      <summary>
          Obtiene los verbos de edición de plantillas que se encuentran disponibles para el diseñador.
        </summary>
      <returns>
          Verbos de edición de plantillas que se encuentran disponibles para el diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateFromText(System.String)">
      <summary>
          Crea una plantilla a partir del texto especificado.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.ITemplate" /> a partir del texto especificado.
        </returns>
      <param name="text">
              Texto a partir del cual se recuperará una plantilla. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplatePropertyParentType(System.String)">
      <summary>
          Obtiene el tipo del elemento principal de la propiedad de la plantilla.
        </summary>
      <returns>
          Tipo del objeto que tiene la propiedad de la plantilla.
        </returns>
      <param name="templateName">
              Nombre de la plantilla para la que se va a devolver el tipo del elemento principal. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTextFromTemplate(System.Web.UI.ITemplate)">
      <summary>
          Obtiene una cadena de texto que representa la plantilla especificada.
        </summary>
      <returns>
          Cadena que representa la plantilla especificada.
        </returns>
      <param name="template">
              <see cref="T:System.Web.UI.ITemplate" /> que se va a convertir en texto. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="template" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador y carga el componente especificado.
        </summary>
      <param name="component">
              Elemento del control que se va a diseñar.
            </param>
      <param name="component">
              El control que se va a diseñar. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.InTemplateMode">
      <summary>
          Obtiene un valor que indica si el documento del diseñador está en modo de plantilla.
        </summary>
      <returns>
          
            Es true si el documento del diseñador se encuentra en modo de plantilla; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnBehaviorAttached">
      <summary>
          Proporciona una oportunidad de realizar procesos adicionales cuando hay un comportamiento conectado al diseñador.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
          Delegado para controlar el evento de componente cambiado.
        </summary>
      <param name="sender">
              Objeto que envía el evento. 
            </param>
      <param name="ce">
              <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnSetParent">
      <summary>
          Proporciona una oportunidad de realizar procesos adicionales cuando cambia el elemento principal de este diseñador.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged">
      <summary>
          Proporciona una oportunidad de realizar procesos adicionales cuando cambia el modo de plantilla.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.SaveActiveTemplateEditingFrame">
      <summary>
          Guarda el marco de edición de plantillas activo.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, establece el contenido de la plantilla especificada en el contenido especificado.
        </summary>
      <param name="editingFrame">
              Marco de edición de plantillas para el que se va a proporcionar contenido. 
            </param>
      <param name="templateName">
              Nombre de la plantilla. 
            </param>
      <param name="templateContent">
              Contenido que se va a establecer para la plantilla. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.TemplateGroups">
      <summary>
          Obtiene una colección de grupos de plantillas; cada uno de ellos contiene una definición de plantilla.
        </summary>
      <returns>
          Una colección de elementos de <see cref="T:System.Web.UI.Design.TemplateGroup" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.UpdateDesignTimeHtml">
      <summary>
          Actualiza el código HTML en tiempo de diseño.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.TemplatedEditableDesignerRegion">
      <summary>
          Define un área modificable de contenido en el marcado en tiempo de diseño para el control asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedEditableDesignerRegion.#ctor(System.Web.UI.Design.TemplateDefinition)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TemplatedEditableDesignerRegion" /> con la definición de plantilla proporcionada.
        </summary>
      <param name="templateDefinition">
              Instancia de <see cref="T:System.Web.UI.Design.TemplateDefinition" /> para la plantilla que se va a editar.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.IsSingleInstanceTemplate">
      <summary>
          Obtiene o establece si la plantilla tiene lugar sólo una vez en la instancia del control que la contiene, por ejemplo una plantilla header, o puede aparecer varias veces en función de los datos disponibles, por ejemplo una plantilla item.
        </summary>
      <returns>
          
            Es true si la plantilla sólo aparece una vez; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.SupportsDataBinding">
      <summary>
          Obtiene si la plantilla se puede enlazar a un origen de datos.
        </summary>
      <returns>
          
            true si la plantilla representada por el área se puede enlazar a un origen de datos; en caso contrario, false.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              Se intentó establecer esta propiedad.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.TemplateDefinition">
      <summary>
          Obtiene un objeto <see cref="T:System.Web.UI.Design.TemplateDefinition" /> que describe la plantilla a la que hace referencia el área.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.TemplateDefinition" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateDefinition">
      <summary>
          Proporciona métodos y propiedades que definen un elemento de plantilla en un control de servidor Web en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TemplateDefinition" /> utilizando el diseñador, el nombre de la plantilla, la plantilla y el nombre de la propiedad proporcionados.
        </summary>
      <param name="designer">
              Objeto <see cref="T:System.Web.UI.Design.ControlDesigner" /> primario.
            </param>
      <param name="name">
              Nombre de la plantilla.
            </param>
      <param name="templatedObject">
              Objeto que contiene la plantilla.
            </param>
      <param name="templatePropertyName">
              Nombre de la propiedad que representa esta plantilla en la lista Propiedades del host de diseño.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="designer" /> es null.
              O bien
              
                <paramref name="templatedObject" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Boolean)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TemplateDefinition" /> utilizando el diseñador, el nombre de la plantilla, la plantilla y el nombre de la propiedad proporcionados, así como si el contenido debe limitarse a controles de servidor Web.
        </summary>
      <param name="designer">
              Objeto <see cref="T:System.Web.UI.Design.ControlDesigner" /> primario.
            </param>
      <param name="name">
              Nombre de la plantilla.
            </param>
      <param name="templatedObject">
              Objeto que contiene la plantilla.
            </param>
      <param name="templatePropertyName">
              Nombre de la propiedad que representa esta plantilla en la lista Propiedades del host de diseño.
            </param>
      <param name="serverControlsOnly">
              Un valor booleano que indica si el contenido de la plantilla debe admitir controles de servidor Web únicamente.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="designer" /> es null.
              O bien
              
                <paramref name="templatedObject" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TemplateDefinition" /> utilizando el diseñador, el nombre de la plantilla, la plantilla, el nombre de la propiedad y el objeto <see cref="T:System.Web.UI.WebControls.Style" /> proporcionados.
        </summary>
      <param name="designer">
              Objeto <see cref="T:System.Web.UI.Design.ControlDesigner" /> primario.
            </param>
      <param name="name">
              Nombre de la plantilla.
            </param>
      <param name="templatedObject">
              Objeto que contiene la plantilla.
            </param>
      <param name="templatePropertyName">
              Nombre de la propiedad que representa esta plantilla en la lista Propiedades del host de diseño.
            </param>
      <param name="style">
              Objeto <see cref="T:System.Web.UI.WebControls.Style" /> para aplicar a cada plantilla.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="designer" /> es null.
              O bien
              
                <paramref name="templatedObject" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style,System.Boolean)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TemplateDefinition" /> utilizando el diseñador, el nombre de la plantilla, la plantilla, el nombre de la propiedad y el objeto <see cref="T:System.Web.UI.WebControls.Style" /> proporcionados, así como si el contenido debe limitarse a controles de servidor Web.
        </summary>
      <param name="designer">
              Objeto <see cref="T:System.Web.UI.Design.ControlDesigner" /> primario.
            </param>
      <param name="name">
              Nombre de la plantilla.
            </param>
      <param name="templatedObject">
              Objeto que contiene la plantilla.
            </param>
      <param name="templatePropertyName">
              Nombre de la propiedad que representa esta plantilla en la lista Propiedades del host de diseño.
            </param>
      <param name="style">
              Objeto <see cref="T:System.Web.UI.WebControls.Style" /> para aplicar a cada plantilla.
            </param>
      <param name="serverControlsOnly">
              Un valor booleano que indica si la plantilla debe limitar el contenido a controles de servidor Web.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="designer" /> es null.
              O bien
              
                <paramref name="templatedObject" /> es null.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.AllowEditing">
      <summary>
          Obtiene un valor que indica si la plantilla debería permitir la modificación de su contenido.
        </summary>
      <returns>
          
            true si se permite la modificación; en caso contrario, false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.Content">
      <summary>
          Obtiene o establece el formato HTML que representa el contenido de la plantilla.
        </summary>
      <returns>
          Formato HTML del contenido de la plantilla.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.ServerControlsOnly">
      <summary>
          Obtiene un valor que indica si la plantilla debe limitar el contenido a controles de servidor Web, como se establece en el constructor <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" />. Esta propiedad es de sólo lectura.
        </summary>
      <returns>
          
            true si el contenido se limita a controles de servidor Web; de lo contrario es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.Style">
      <summary>
          Obtiene el estilo que debe aplicarse a la plantilla, como se establece en el constructor <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" />. Esta propiedad es de sólo lectura.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.WebControls.Style" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.SupportsDataBinding">
      <summary>
          Obtiene o establece un valor que indica si la plantilla admite el enlace de datos.
        </summary>
      <returns>
          
            Es true si la plantilla admite el enlace de datos; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.TemplatedObject">
      <summary>
          Obtiene el componente en el que reside la plantilla. Esta propiedad es de sólo lectura.
        </summary>
      <returns>
          El componente tal como se estableció al crear <see cref="T:System.Web.UI.Design.TemplateDefinition" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.TemplatePropertyName">
      <summary>
          Obtiene el nombre de propiedad de la plantilla que el host de diseño debería mostrar en la lista Properties.
        </summary>
      <returns>
          El nombre de la plantilla tal como debería aparecer en la lista Propiedades del host de diseño.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateEditingService">
      <summary>
          Proporciona servicios para editar plantillas de controles en tiempo de diseño. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TemplateEditingService" /> con el host del diseñador especificado. 
        </summary>
      <param name="designerHost">
              Una implementación de <see cref="T:System.ComponentModel.Design.IDesignerHost" />, utilizada para tener acceso a los componentes en tiempo de diseño.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[])">
      <summary>
          Crea un nuevo marco de edición de plantillas para el diseñador de control con plantilla especificado, mediante el nombre y las plantillas especificados.
        </summary>
      <returns>
          El nuevo marco <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.
        </returns>
      <param name="designer">
              <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> que utilizará el marco de edición de plantillas.
            </param>
      <param name="frameName">
              Nombre del marco de edición que se mostrará en el marco. Normalmente, es igual que la propiedad <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> que se utiliza como texto de menú de <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> que se invoca para crear el marco.
            </param>
      <param name="templateNames">
              Matriz de nombres de plantillas que contendrá el marco de edición de plantillas.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
      <summary>
          Crea un nuevo marco de edición de plantillas para el objeto <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> especificado, mediante el nombre, los nombres de plantilla, el estilo de control y los estilos de plantilla especificados.
        </summary>
      <returns>
          El nuevo marco <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.
        </returns>
      <param name="designer">
              <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> que utilizará el marco de edición de plantillas. 
            </param>
      <param name="frameName">
              Nombre del marco de edición que se mostrará en el marco. Normalmente, es igual que la propiedad <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> que se utiliza como texto de menú de <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> que se invoca para crear el marco. 
            </param>
      <param name="templateNames">
              Matriz de nombres de plantillas que contendrá el marco de edición de plantillas. 
            </param>
      <param name="controlStyle">
              Objeto <see cref="T:System.Web.UI.WebControls.Style" /> del control para el marco de edición. 
            </param>
      <param name="templateStyles">
              Matriz de tipo <see cref="T:System.Web.UI.WebControls.Style" /> que representa los estilos de plantilla para el marco de edición. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.Dispose">
      <summary>
          Libera todos los recursos utilizados por el objeto <see cref="T:System.Web.UI.Design.TemplateEditingService" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.GetContainingTemplateName(System.Web.UI.Control)">
      <summary>
          Obtiene el nombre de la plantilla principal.
        </summary>
      <returns>
          Nombre de la plantilla principal.
        </returns>
      <param name="control">
              <see cref="T:System.Web.UI.Control" /> para el que se va a obtener el nombre de la plantilla principal. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingService.SupportsNestedTemplateEditing">
      <summary>
          Indica si el servicio admite la edición de plantillas anidadas.
        </summary>
      <returns>
          
            Es true si el servicio admite la edición de plantillas anidadas; en caso contrario, es false.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateEditingVerb">
      <summary>
          Representa un verbo de diseñador que crea un marco de edición de plantillas, y un editor de plantillas es el único que puede invocarlo.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.#ctor(System.String,System.Int32)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> con el texto del verbo y el índice especificados.
        </summary>
      <param name="text">
              Texto que se va a mostrar para el verbo en un menú.
            </param>
      <param name="index">
              Valor entero opcional que puede utilizar un diseñador; normalmente, para indicar el índice del verbo dentro de un conjunto de verbos.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.#ctor(System.String,System.Int32,System.Web.UI.Design.TemplatedControlDesigner)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TemplateEditingVerb" />.
        </summary>
      <param name="text">
              Texto que se va a mostrar para el verbo en un menú. 
            </param>
      <param name="index">
              Valor entero opcional que puede utilizar un diseñador; normalmente, para indicar el índice del verbo dentro de un conjunto de verbos. 
            </param>
      <param name="designer">
              <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> que puede utilizar este verbo. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Dispose">
      <summary>
          Libera todos los recursos utilizados por la clase <see cref="T:System.Web.UI.Design.TemplateEditingVerb" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados que utiliza la clase <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> y, opcionalmente, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Finalize">
      <summary>
          Intenta liberar los recursos antes de que el objeto sea reclamado por el recolector de objetos no utilizados.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingVerb.Index">
      <summary>
          Obtiene el índice u otros datos del usuario para el verbo.
        </summary>
      <returns>
          El índice o datos del usuario para el verbo.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateGroup">
      <summary>
          Colección de objetos <see cref="T:System.Web.UI.Design.TemplateDefinition" /> que representa los elementos de plantilla de un control de servidor Web en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.#ctor(System.String)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TemplateGroup" /> con el nombre proporcionado.
        </summary>
      <param name="groupName">
              Nombre del grupo.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.#ctor(System.String,System.Web.UI.WebControls.Style)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TemplateGroup" /> con el nombre y el estilo proporcionados.
        </summary>
      <param name="groupName">
              Nombre del grupo.
            </param>
      <param name="groupStyle">
              Objeto <see cref="T:System.Web.UI.WebControls.Style" /> que se debe aplicar a las plantillas del grupo.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.AddTemplateDefinition(System.Web.UI.Design.TemplateDefinition)">
      <summary>
          Agrega el objeto <see cref="T:System.Web.UI.Design.TemplateDefinition" /> al grupo.
        </summary>
      <param name="templateDefinition">
              Un objeto <see cref="T:System.Web.UI.Design.TemplateDefinition" />.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.GroupName">
      <summary>
          Obtiene el nombre del grupo.
        </summary>
      <returns>
          Nombre del grupo.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.GroupStyle">
      <summary>
          Obtiene el estilo actual para el grupo.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.WebControls.Style" /> para el grupo si está establecido; en caso contrario, null.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.IsEmpty">
      <summary>
          Obtiene un valor que indica si hay plantillas en el grupo.
        </summary>
      <returns>
          
            true si no hay plantillas en el grupo; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.Templates">
      <summary>
          Obtiene una matriz de definiciones de plantilla del grupo.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Web.UI.Design.TemplateDefinition" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateGroupCollection">
      <summary>
          Representa una colección de objetos <see cref="T:System.Web.UI.Design.TemplateGroup" /> de un diseñador de controles. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Add(System.Web.UI.Design.TemplateGroup)">
      <summary>
          Agrega el objeto <see cref="T:System.Web.UI.Design.TemplateGroup" /> especificado al final de la colección.
        </summary>
      <returns>
          El índice donde se agregó <see cref="T:System.Web.UI.Design.TemplateGroup" /> a la colección.
        </returns>
      <param name="group">
              Objeto <see cref="T:System.Web.UI.Design.TemplateGroup" /> que se va a agregar a la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.AddRange(System.Web.UI.Design.TemplateGroupCollection)">
      <summary>
          Agrega los grupos de plantillas de un objeto <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> existente al actual objeto <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.
        </summary>
      <param name="groups">
              <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> que contiene los grupos que se van a agregar a la colección.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="groups" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Clear">
      <summary>
          Quita todos los grupos de la colección.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Contains(System.Web.UI.Design.TemplateGroup)">
      <summary>
          Determina si el grupo especificado está en la colección.
        </summary>
      <returns>
          
            true si <paramref name="group" /> está en la colección; en caso contrario, false.
        </returns>
      <param name="group">
              <see cref="T:System.Web.UI.Design.TemplateGroup" /> que se va a buscar en la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.CopyTo(System.Web.UI.Design.TemplateGroup[],System.Int32)">
      <summary>
          Copia los grupos de la colección en una matriz unidimensional compatible, empezando en el índice especificado de la matriz de destino.
        </summary>
      <param name="array">
              <see cref="T:System.Array" /> que es el destino de los grupos copiados. <see cref="T:System.Array" /> debe tener una indización de base cero.
            </param>
      <param name="index">
              Índice de base cero de <paramref name="array" /> donde se comienza a copiar.
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="array" /> es multidimensional.
              O bien 
              
                <paramref name="index" /> es mayor o igual que la longitud de <paramref name="array" />.
              O bien 
              El número de elementos de la <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> de origen es mayor que el espacio disponible desde el <paramref name="index" /> hasta el final de la <paramref name="array" />. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> es menor que cero.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="array" /> es null.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.Count">
      <summary>
          Obtiene el número de objetos <see cref="T:System.Web.UI.Design.TemplateGroup" /> de la colección.
        </summary>
      <returns>
          El número de objetos <see cref="T:System.Web.UI.Design.TemplateGroup" /> de la colección.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.IndexOf(System.Web.UI.Design.TemplateGroup)">
      <summary>
          Devuelve el índice del objeto <see cref="T:System.Web.UI.Design.TemplateGroup" />especificado de la colección.
        </summary>
      <returns>
          Índice de base cero de la primera aparición de <paramref name="group" /> en la colección; de lo contrario, devuelve -1 si <paramref name="group" /> no está en la colección.
        </returns>
      <param name="group">
              <see cref="T:System.Web.UI.Design.TemplateGroup" /> que se va a buscar en la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Insert(System.Int32,System.Web.UI.Design.TemplateGroup)">
      <summary>
          Inserta un objeto <see cref="T:System.Web.UI.Design.TemplateGroup" /> en la colección, en el índice especificado.
        </summary>
      <param name="index">
              Índice de base cero dentro de la colección donde se va a insertar <paramref name="group" />.
            </param>
      <param name="group">
              <see cref="T:System.Web.UI.Design.TemplateGroup" /> que se va a insertar en la colección.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                El valor del parámetro <paramref name="index" /> es menor que cero.
              O bien
              
                <paramref name="index" /> es mayor que la propiedad <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" />.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.Item(System.Int32)">
      <summary>
          Obtiene o establece un objeto <see cref="T:System.Web.UI.Design.TemplateGroup" /> en el índice especificado de la colección.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.TemplateGroup" /> que se encuentra en el <paramref name="index" /> de la colección.
        </returns>
      <param name="index">
              Índice de base cero del verbo <see cref="T:System.Web.UI.Design.TemplateGroup" /> que se va a obtener o establecer en la colección.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                El valor del parámetro <paramref name="value" /> es menor que cero.
              O bien
              
                <paramref name="value" /> es mayor que la propiedad <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" />.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Remove(System.Web.UI.Design.TemplateGroup)">
      <summary>
          Quita el objeto <see cref="T:System.Web.UI.Design.TemplateGroup" /> especificado de la colección. 
        </summary>
      <param name="group">
              <see cref="T:System.Web.UI.Design.TemplateGroup" /> que se va a quitar de la colección. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.RemoveAt(System.Int32)">
      <summary>
          Quita de la colección el objeto <see cref="T:System.Web.UI.Design.TemplateGroup" /> ubicado en el índice especificado.
        </summary>
      <param name="index">
              Índice de base cero en la colección <see cref="T:System.Web.UI.Design.TemplateGroup" /> que se va a quitar.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                El valor del parámetro <paramref name="index" /> es menor que cero.
              O bien
              
                <paramref name="index" /> es mayor que la propiedad <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" />.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.
        </summary>
      <param name="array">
              <see cref="T:System.Array" /> que es el destino de los grupos copiados. <see cref="T:System.Array" /> debe tener una indización de base cero.
            </param>
      <param name="index">
              Índice de base cero de <paramref name="array" /> donde se comienza a copiar.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#Count">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.Count" />.
        </summary>
      <returns>
          Número de elementos incluidos en <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.IsSynchronized" />.
        </summary>
      <returns>
          
            Es false si el acceso a <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> no está sincronizado (es seguro para subprocesos); en caso contrario, true.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#SyncRoot">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.SyncRoot" />.
        </summary>
      <returns>
          Objeto que se va a utilizar para sincronizar el acceso a <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Collections.IEnumerator" /> que se va a utilizar para recorrer en iteración la colección.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Add(System.Object)" />.
        </summary>
      <returns>
          Índice en que <paramref name="o" /> se agregó a la colección.
        </returns>
      <param name="o">
              <see cref="T:System.Web.UI.Design.TemplateGroup" /> que se va a agregar a la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Clear">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Clear" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Contains(System.Object)" />.
        </summary>
      <returns>
          
            Es true si <paramref name="o" /> está en la colección; de lo contrario, es false.
        </returns>
      <param name="o">
              <see cref="T:System.Web.UI.Design.TemplateGroup" /> que se va a buscar en la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.
        </summary>
      <returns>
          Índice de base cero de la primera aparición de <paramref name="o" /> en la colección; de lo contrario, devuelve -1 si <paramref name="o" /> no está en la colección.
        </returns>
      <param name="o">
              <see cref="T:System.Web.UI.Design.TemplateGroup" /> que se va a buscar en la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.
        </summary>
      <param name="index">
              Índice de base cero dentro de la colección donde se va a insertar <paramref name="o" />.
            </param>
      <param name="o">
              Objeto que se va a insertar en la colección.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IsFixedSize">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsFixedSize" />.
        </summary>
      <returns>
          
            Es false si <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> aumenta dinámicamente cuando se agregan nuevos objetos; de lo contrario, es true.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IsReadOnly">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsReadOnly" />.
        </summary>
      <returns>
          
            Es false si <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> se puede agregar, modificar y quitar; de lo contrario, es true.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>
          Para obtener una descripción de este miembro, vea la clase <see cref="T:System.Collections.IList" />.
        </summary>
      <returns>
          Objeto que se encuentra en <paramref name="index" /> en la colección.
        </returns>
      <param name="index">
              Índice de base cero del objeto de la colección que se va a obtener.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Remove(System.Object)" />.
        </summary>
      <param name="o">
              Objeto que se va a quitar de la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.
        </summary>
      <param name="index">
              Índice de base cero del objeto que se va a quitar de la colección.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.TemplateModeChangedEventArgs">
      <summary>
          Proporciona datos para eventos <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> que se provocan cuando cambia el modo de plantilla de un control en la superficie de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateModeChangedEventArgs.#ctor(System.Web.UI.Design.TemplateGroup)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TemplateModeChangedEventArgs" /> con el grupo de plantillas especificado.
        </summary>
      <param name="newTemplateGroup">
              Nuevo grupo de plantillas que se utiliza para inicializar <see cref="P:System.Web.UI.Design.TemplateModeChangedEventArgs.NewTemplateGroup" />.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateModeChangedEventArgs.NewTemplateGroup">
      <summary>
          Obtiene el grupo de plantillas que se ha creado al entrar en el modo de edición de plantillas.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.TemplateGroup" /> si se ha entrado en el modo de edición de plantillas con una nueva plantilla; en caso contrario, es null.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.TextControlDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño para los controles de servidor web que tienen una propiedad Text que se conserva como texto interno.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TextControlDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado que se usa para representar el control asociado en tiempo de diseño.
        </summary>
      <returns>
          Marcado que se utiliza para representar el control en tiempo de diseño.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.TextDataBindingHandler">
      <summary>
          Proporciona un controlador de enlace a datos para un control enlazado a datos en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TextDataBindingHandler.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TextDataBindingHandler" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TextDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>
          Enlaza datos con el control especificado.
        </summary>
      <param name="designerHost">
              Objeto que implementa <see cref="T:System.ComponentModel.Design.IDesignerHost" /> para el documento que contiene el control. 
            </param>
      <param name="control">
              <see cref="T:System.Web.UI.Control" /> al que se van a enlazar los datos. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.TransactedChangeCallback">
      <summary>
          Delegado que hace referencia al método en un objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> personalizado y que será llamado por el método <see cref="Overload:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange" /> para implementar los cambios de propiedad en el control de asociado del diseñador.
        </summary>
      <returns>
          
            true si la transacción finaliza correctamente; false si se debería deshacer la transacción.
        </returns>
      <param name="context">
              El método al que se llama cuando se invoca la transacción.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.TypeSchema">
      <summary>
          Representa la estructura o esquema de un tipo de objeto.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TypeSchema.#ctor(System.Type)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.TypeSchema" /> utilizando el objeto <see cref="T:System.Type" /> proporcionado.
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> que describe el error.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="type" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.TypeSchema.GetViews">
      <summary>
          Obtiene una matriz de descriptores de esquema para vistas en un origen de datos.
        </summary>
      <returns>
          Matriz de instancias de <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> o de instancias de una clase que implementa la interfaz <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.UrlBuilder">
      <summary>
          Inicia un editor de direcciones URL que permite al usuario seleccionar o crear una dirección URL. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String,System.String,System.String)">
      <summary>
          Crea una interfaz de usuario para crear o seleccionar una dirección URL.
        </summary>
      <returns>
          Dirección URL que ha devuelto la interfaz de usuario.
        </returns>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" /> cuyo sitio se utilizará para obtener acceso a servicios en tiempo de diseño. 
            </param>
      <param name="owner">
              <see cref="T:System.Windows.Forms.Control" /> que se utiliza como elemento primario de la ventana del selector. 
            </param>
      <param name="initialUrl">
              Dirección URL inicial que se mostrará en la ventana del selector. 
            </param>
      <param name="caption">
              Título de la ventana del selector. 
            </param>
      <param name="filter">
              Cadena de filtro que se utiliza para filtrar de forma opcional los archivos mostrados en la ventana del selector. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>
          Crea una interfaz de usuario para crear o seleccionar una dirección URL utilizando el objeto <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> especificado.
        </summary>
      <returns>
          Dirección URL que ha devuelto la interfaz de usuario.
        </returns>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" /> cuyo sitio se utilizará para obtener acceso a servicios en tiempo de diseño. 
            </param>
      <param name="owner">
              <see cref="T:System.Windows.Forms.Control" /> que se utiliza como elemento primario de la ventana del selector. 
            </param>
      <param name="initialUrl">
              Dirección URL inicial que se mostrará en la ventana del selector. 
            </param>
      <param name="caption">
              Título de la ventana del selector. 
            </param>
      <param name="filter">
              Cadena de filtro que se utiliza para filtrar de forma opcional los archivos mostrados en la ventana del selector. 
            </param>
      <param name="options">
              <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> que indica las opciones de selección de direcciones URL. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.IServiceProvider,System.Windows.Forms.Control,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>
          Crea una interfaz de usuario para crear o seleccionar una dirección URL utilizando el objeto <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> especificado.
        </summary>
      <returns>
          Dirección URL que ha devuelto la interfaz de usuario.
        </returns>
      <param name="serviceProvider">
              <see cref="T:System.IServiceProvider" /> que se utilizará para obtener acceso a servicios en tiempo de diseño.
            </param>
      <param name="owner">
              <see cref="T:System.Windows.Forms.Control" /> que se utiliza como elemento primario de la ventana del selector.
            </param>
      <param name="initialUrl">
              Dirección URL inicial que se mostrará en la ventana del selector.
            </param>
      <param name="caption">
              Título de la ventana del selector.
            </param>
      <param name="filter">
              Cadena de filtro que se utiliza para filtrar de forma opcional los archivos mostrados en la ventana del selector.
            </param>
      <param name="options">
              <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> que indica las opciones de selección de direcciones URL.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.UrlBuilderOptions">
      <summary>
          Define identificadores para los valores de configuración de <see cref="T:System.Web.UI.Design.UrlBuilder" />.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.UrlBuilderOptions.None">
      <summary>
          No se utilizan opciones adicionales para <see cref="T:System.Web.UI.Design.UrlBuilder" />.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.UrlBuilderOptions.NoAbsolute">
      <summary>
          Se crea una dirección URL que hace referencia a una ruta de acceso relativa a la ruta de acceso actual, en lugar de una dirección URL que haga referencia a una ruta de acceso absoluta completa.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.UrlEditor">
      <summary>
          Proporciona una interfaz de usuario para seleccionar una dirección URL.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.UrlEditor" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Caption">
      <summary>
          Obtiene el título que se va a mostrar en el cuadro de diálogo de selección.
        </summary>
      <returns>
          Título que se va a mostrar en el cuadro de diálogo de selección.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Edite el valor del objeto especificado utilizando el estilo del editor proporcionado por el método <see cref="M:System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.
        </summary>
      <returns>
          Nuevo valor del objeto. Si el valor del objeto no ha cambiado, este método debe devolver el mismo objeto que se pasó.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que puede utilizarse para obtener más información de contexto. 
            </param>
      <param name="provider">
              Objeto de proveedor de servicios mediante el que se pueden obtener los servicios de edición. 
            </param>
      <param name="value">
              Instancia del valor que se va a editar. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Filter">
      <summary>
          Obtiene la cadena de filtro de nombres de archivo para el editor. Esta última se utiliza para determinar los elementos que aparecen en la lista de archivos del cuadro de diálogo.
        </summary>
      <returns>
          Cadena que contiene información sobre las opciones de filtrado de archivos disponibles en el cuadro de diálogo.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de edición del método <see cref="M:System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición proporcionado. Si no se admite el método, este método devolverá <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que puede utilizarse para obtener más información de contexto. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Options">
      <summary>
          Indica las opciones que el generador de direcciones URL va a utilizar.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> que indica las opciones que el generador de direcciones URL va a utilizar.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.UserControlDesigner">
      <summary>
          Proporciona funciones de diseñador para los controles de usuario.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.UserControlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.UserControlDesigner" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.UserControlDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones para el diseñador de controles de usuarios.
        </summary>
      <returns>
          Una colección <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que contiene las etiquetas de la lista de acciones para el diseñador de controles.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlDesigner.AllowResize">
      <summary>
          Obtiene un valor que indica si se puede cambiar el tamaño del control de usuario.
        </summary>
      <returns>
          
            false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.UserControlDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el código HTML usado para representar el control de usuario en tiempo de diseño.
        </summary>
      <returns>
          Marcado que se utiliza para representar el control en tiempo de diseño.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              La propiedad <see cref="P:System.Web.UI.Control.ID" /> de un control secundario está vacía o es null.
            </exception>
    </member>
    <member name="T:System.Web.UI.Design.UserControlFileEditor">
      <summary>
          Proporciona un cuadro de diálogo para seleccionar los archivos que se van a editar en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.UserControlFileEditor.#ctor">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.UserControlFileEditor" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.UserControlFileEditor.Caption">
      <summary>
          Obtiene el título del cuadro de diálogo.
        </summary>
      <returns>
          El título de la ventana de editor.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlFileEditor.Filter">
      <summary>
          Obtiene la cadena de filtro de nombre de archivo utilizada para determinar los elementos que aparecen en la lista de archivos del cuadro de diálogo.
        </summary>
      <returns>
          Una cadena que filtra la lista de archivos disponible en el cuadro de diálogo, como "*.txt."
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.ViewEvent">
      <summary>
          Representa el tipo de evento que se ha producido en tiempo de diseño en una vista de un control. Esta clase no se puede heredar. 
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.Click">
      <summary>
          Indica que se ha provocado un evento de vista por haber hecho clic con el mouse en una región del diseñador.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.Paint">
      <summary>
          Indica que se ha provocado un evento de vista por dibujar un control en la superficie de diseño.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.TemplateModeChanged">
      <summary>
          Indica que se ha producido un evento de vista por cambiar el modo de plantilla de un diseñador de controles.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.ViewEventArgs">
      <summary>
          Proporciona los datos del evento <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ViewEventArgs.#ctor(System.Web.UI.Design.ViewEvent,System.Web.UI.Design.DesignerRegion,System.EventArgs)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ViewEventArgs" /> para el tipo de evento de vista en la superficie de diseño. 
        </summary>
      <param name="eventType">
              Tipo de acción que ha provocado el evento; se utiliza para inicializar la propiedad <see cref="P:System.Web.UI.Design.ViewEventArgs.EventType" />.
            </param>
      <param name="region">
              Región del diseñador a la que se aplica la acción; se utiliza para inicializar la propiedad <see cref="P:System.Web.UI.Design.ViewEventArgs.Region" />.
            </param>
      <param name="eventArgs">
              Argumentos del evento asociados a <paramref name="eventType" />; se utilizan para inicializar la propiedad <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" />.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.EventArgs">
      <summary>
          Obtiene los argumentos del evento que están asociados a la acción que ha provocado el evento.
        </summary>
      <returns>
          Propiedad <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" /> que contiene datos de evento adicionales que son específicos del tipo de evento.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.EventType">
      <summary>
          Obtiene el tipo de acción que ha provocado el evento.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.ViewEvent" /> que especifica el tipo de acción que ha provocado el evento.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.Region">
      <summary>
          Obtiene la región del diseñador a la que se aplica el evento.
        </summary>
      <returns>
          Región <see cref="T:System.Web.UI.Design.DesignerRegion" /> a la que se aplica la acción.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.ViewEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> provocado por las herramientas de diseño visual, como Visual Studio 2005, que implementan la interfaz <see cref="T:System.Web.UI.Design.IControlDesignerView" />. Esta clase no se puede heredar.
        </summary>
      <param name="sender">
              Origen del evento.
            </param>
      <param name="e">
              Objeto <see cref="T:System.Web.UI.Design.ViewEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.ViewFlags">
      <summary>
          Indica qué características se habilitan con el método <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> de un diseñador.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.CustomPaint">
      <summary>
          Habilita los eventos de dibujo para mostrar un control personalizado en tiempo de diseño.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.DesignTimeHtmlRequiresLoadComplete">
      <summary>
          Pospone todos los eventos hasta que se cargue el control completamente.
        </summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.TemplateEditing">
      <summary>
          Habilita la edición de plantillas en tiempo de diseño.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.ViewRendering">
      <summary>
          Contiene el marcado en tiempo de diseño para el contenido y las regiones.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.ViewRendering.#ctor(System.String,System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ViewRendering" /> utilizando el contenido y las regiones especificados.
        </summary>
      <param name="content">
              Formato HTML.
            </param>
      <param name="regions">
              Colección que contiene las regiones.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.ViewRendering.#ctor(System.String,System.Web.UI.Design.DesignerRegionCollection,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ViewRendering" /> utilizando el contenido, las regiones y el modo de visibilidad especificados.
        </summary>
      <param name="content">
              Formato HTML.
            </param>
      <param name="regions">
              Colección de regiones.
            </param>
      <param name="Visible">
              Valor que indica si el control está representado.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Content">
      <summary>
          Obtiene el formato HTML en tiempo de diseño.
        </summary>
      <returns>
          Formato HTML para la presentación en tiempo de diseño.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Regions">
      <summary>
          Obtiene una colección de objetos <see cref="T:System.Web.UI.Design.DesignerRegion" /> en tiempo de diseño.
        </summary>
      <returns>
          Una colección de regiones.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Visible">
      <summary>
          Obtiene un valor que indica si el control está visible.
        </summary>
      <returns>
          
            true si el control está representado; de lo contrario, false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControlToolboxItem">
      <summary>
          Proporciona una clase base para el <see cref="T:System.Drawing.Design.ToolboxItem" /> de un control de servidor Web.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControlToolboxItem" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> utilizando el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.
        </summary>
      <param name="info">
              Objeto SerializationInfo que contiene información necesaria para crear instancias del control Web a través de la deserialización.
            </param>
      <param name="context">
              Objeto StreamingContext.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor(System.Type)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> utilizando el tipo proporcionado.
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> de la herramienta de este elemento del cuadro de herramientas. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>
          Crea objetos a partir de cada tipo contenido en esta clase <see cref="T:System.Drawing.Design.ToolboxItem" /> y los agrega al diseñador especificado.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> creados.
        </returns>
      <param name="host">
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> para el documento de diseño actual. 
            </param>
      <exception cref="T:System.Exception">
              El método <see cref="M:System.Web.UI.Design.WebControlToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)" /> sólo está disponible en Formularios Windows Forms.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Carga el estado del elemento de cuadro de herramientas a partir del objeto de información de serialización especificado.
        </summary>
      <param name="info">
              Clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que describe la clase <see cref="T:System.Web.UI.Design.WebControlToolboxItem" />.
            </param>
      <param name="context">
              Clase <see cref="T:System.Runtime.Serialization.StreamingContext" /> que indica las características de la secuencia de serialización. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolAttributeValue(System.ComponentModel.Design.IDesignerHost,System.Type)">
      <summary>
          Obtiene el valor del tipo de atributo especificado del elemento del cuadro de herramientas.
        </summary>
      <returns>
          Valor del tipo de atributo especificado.
        </returns>
      <param name="host">
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> para el documento de diseño actual. 
            </param>
      <param name="attributeType">
              Tipo de atributo cuyo valor se va a recuperar. 
            </param>
      <exception cref="T:System.ArgumentException">
              El parámetro <paramref name="attributeType" /> no es un atributo <see cref="T:System.Web.UI.PersistChildrenAttribute" />. 
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolHtml(System.ComponentModel.Design.IDesignerHost)">
      <summary>
          Obtiene el código HTML para el control Web que crea la herramienta.
        </summary>
      <returns>
          Código HTML para el control Web que crea la herramienta.
        </returns>
      <param name="host">
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> para el documento de diseño actual. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolType(System.ComponentModel.Design.IDesignerHost)">
      <summary>
          Obtiene el tipo de este elemento de cuadro de herramientas.
        </summary>
      <returns>
          La declaración de tipo <see cref="T:System.Type" /> de este elemento de cuadro de herramientas.
        </returns>
      <param name="host">
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> para el documento de diseño actual. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Initialize(System.Type)">
      <summary>
          Inicializa este elemento de cuadro de herramientas.
        </summary>
      <param name="type">
              La declaración de tipo <see cref="T:System.Type" /> del elemento de cuadro de herramientas de control de servidor Web. 
            </param>
      <param name="type">
              <see cref="T:System.Type" /> que crea el elemento del cuadro de herramientas. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Guarda el estado del elemento de cuadro de herramientas en el objeto de información de serialización especificado.
        </summary>
      <param name="info">
              Clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilizada para guardar el estado de <see cref="T:System.Web.UI.Design.WebControlToolboxItem" />.
            </param>
      <param name="context">
              Clase <see cref="T:System.Runtime.Serialization.StreamingContext" /> que indica las características de la secuencia de serialización.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsDesignerActionService">
      <summary>
          Establece un servicio en tiempo de diseño que administra la colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> para un componente.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsDesignerActionService.#ctor(System.IServiceProvider)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebFormsDesignerActionService" /> utilizando la referencia proporcionada al host de diseño.
        </summary>
      <param name="serviceProvider">
              Referencia al host de diseño.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsDesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>
          Obtiene las listas de elementos de etiquetas inteligentes que se asocian a un componente.
        </summary>
      <param name="component">
              Referencia al control asociado al diseñador.
            </param>
      <param name="actionLists">
              <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> a la que se van a agregar las etiquetas inteligentes asociadas.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsReferenceManager">
      <summary>
          Proporciona una clase base para tener acceso a los tipos, directivas y controles del documento del proyecto Web actual. Esta clase se debe heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetRegisterDirectives">
      <summary>
          Obtiene las directivas de Registro del documento de proyecto actual.
        </summary>
      <returns>
          Colección de cadenas que representa las directivas de Registro definidas en el documento actual.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetTagPrefix(System.Type)">
      <summary>
          Obtiene el prefijo de etiqueta para el tipo de objeto especificado.
        </summary>
      <returns>
          El prefijo de etiqueta para el tipo de objeto especificado, si se encuentra; de lo contrario, null.
        </returns>
      <param name="objectType">
              Tipo del objeto.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetType(System.String,System.String)">
      <summary>
          Obtiene el tipo de objeto con el prefijo y nombre de etiqueta especificados.
        </summary>
      <returns>
          El <see cref="T:System.Type" /> del objeto con el prefijo y nombre de etiqueta especificados, si existe; en caso contrario, es null.
        </returns>
      <param name="tagPrefix">
              El prefijo de etiqueta del tipo que se va a recuperar.
            </param>
      <param name="tagName">
              El nombre de etiqueta del tipo que se va a recuperar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath(System.String,System.String)">
      <summary>
          Obtiene la ruta de acceso URL relativa del control de usuario con el prefijo y nombre de etiqueta especificados.
        </summary>
      <returns>
          Cadena que representa la ruta de acceso URL relativa para el tipo de control de usuario especificado, si existe; en caso contrario, es null.
        </returns>
      <param name="tagPrefix">
              El prefijo de etiqueta del control de usuario que se va a recuperar.
            </param>
      <param name="tagName">
              Nombre de etiqueta del control de usuario que se va a recuperar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.RegisterTagPrefix(System.Type)">
      <summary>
          Agrega un prefijo de etiqueta para el tipo especificado.
        </summary>
      <returns>
          Cadena de prefijo de etiqueta.
        </returns>
      <param name="objectType">
              El tipo al que se va a agregar un prefijo de etiqueta en el documento actual.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsRootDesigner">
      <summary>
          Proporciona una clase base para la funcionalidad en tiempo de diseño de una página de formularios Web Forms y permite tener acceso y manipular los componentes y controles que se encuentran en la página de formularios Web Forms en tiempo de diseño. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument(System.Web.UI.Design.ClientScriptItem)">
      <summary>
          Cuando se reemplaza en una clase derivada, agrega un elemento de secuencia de comandos de cliente a la página de formularios Web Forms actual.
        </summary>
      <param name="scriptItem">
              <see cref="T:System.Web.UI.Design.ClientScriptItem" /> que se va a agregar a la página de formularios Web Forms.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.AddControlToDocument(System.Web.UI.Control,System.Web.UI.Control,System.Web.UI.Design.ControlLocation)">
      <summary>
          Cuando se reemplaza en una clase derivada, agrega un control de servidor Web a la página de formularios Web Forms.
        </summary>
      <returns>
          Identificador del control que se ha agregado.
        </returns>
      <param name="newControl">
              Control que se va a agregar a la página de formularios Web Forms.
            </param>
      <param name="referenceControl">
              Control en relación con el cual se agrega <paramref name="newControl" />.
            </param>
      <param name="location">
              Valor <see cref="T:System.Web.UI.Design.ControlLocation" /> que indica la ubicación para <paramref name="newControl" /> en relación con <paramref name="referenceControl" />.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.Component">
      <summary>
          Obtiene o establece el componente que el diseñador está diseñando.
        </summary>
      <returns>
          Componente administrado por el diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.CreateDesignerActionService(System.IServiceProvider)">
      <summary>
          Devuelve un objeto <see cref="T:System.ComponentModel.Design.DesignerActionService" /> en tiempo de diseño.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionService" />.
        </returns>
      <param name="serviceProvider">
              Un host de diseño, como Visual Studio 2005, convertido en <see cref="T:System.IServiceProvider" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.CreateUrlResolutionService">
      <summary>
          Devuelve un objeto <see cref="T:System.Web.UI.IUrlResolutionService" /> que resuelve direcciones URL relativas.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.IUrlResolutionService" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.CurrentCulture">
      <summary>
          Obtiene la información de referencia cultural para el subproceso actual.
        </summary>
      <returns>
          <see cref="T:System.Globalization.CultureInfo" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados utilizados por <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> y, de forma opcional, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto recursos administrados como no administrados, y false para liberar únicamente recursos no administrados.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.DocumentUrl">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene la dirección URL en la que se encuentra la página de formularios Web Forms. 
        </summary>
      <returns>
          Dirección URL en la que se encuentra la página de formularios Web Forms; de lo contrario, null, si la página de formularios Web Forms no tiene una dirección URL asociada.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Finalize">
      <summary>
          Libera los recursos del objeto <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> actual antes de que lo reclame el recolector de elementos no utilizados.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GenerateEmptyDesignTimeHtml(System.Web.UI.Control)">
      <summary>
          Genera formato HTML vacío para un control en tiempo de diseño.
        </summary>
      <returns>
          Formato HTML para un control vacío.
        </returns>
      <param name="control">
              Control para el que se va a generar el formato HTML.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GenerateErrorDesignTimeHtml(System.Web.UI.Control,System.Exception,System.String)">
      <summary>
          Genera formato HTML que se utiliza para mostrar un mensaje de error en tiempo de diseño utilizando el control, la excepción y el mensaje especificados.
        </summary>
      <returns>
          Formato HTML para un control e información de excepción.
        </returns>
      <param name="control">
              Control que produjo la excepción.
              O bien 
              
                null.
            </param>
      <param name="e">
              Excepción. 
              O bien
              
                null.
            </param>
      <param name="errorMessage">
              Mensaje que se va a agregar al mensaje de excepción.
              O bien 
              Cadena vacía (“”).
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument">
      <summary>
          Cuando se reemplaza en una clase derivada, devuelve un objeto <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" /> que contiene todos los elementos de secuencia de comandos de cliente de la página.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)">
      <summary>
          Cuando se reemplaza en una clase derivada, devuelve la vista en tiempo de diseño actual y el formato HTML para el control especificado.
        </summary>
      <param name="control">
              Control para el que se debe proporcionar la vista y la etiqueta.
            </param>
      <param name="view">
              Cuando finaliza el método <see cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)" />, <paramref name="view" /> contiene un objeto IControlDesignerView que proporciona acceso a la representación visual y el contenido de un control en tiempo de diseño. <paramref name="view" /> se pasa sin inicializarse.
            </param>
      <param name="tag">
              Cuando finaliza el método <see cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)" />, <paramref name="tag" /> contiene un objeto IControlDesignerTag que proporciona acceso al elemento HTML del diseñador de controles del control. <paramref name="tag" /> se pasa sin inicializarse.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetService(System.Type)">
      <summary>
          Devuelve el servicio solicitado.
        </summary>
      <returns>
          Servicio solicitado o null si no se puede resolver el servicio.
        </returns>
      <param name="serviceType">
              Tipo de servicio que se va a recuperar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>
          Devuelve un objeto de vista que se determina con el objeto <see cref="T:System.ComponentModel.Design.ViewTechnology" /> proporcionado.
        </summary>
      <returns>
          Objeto que contiene la vista actual del componente.
        </returns>
      <param name="viewTechnology">
              <see cref="T:System.ComponentModel.Design.ViewTechnology" /> que se obtiene de la propiedad <see cref="P:System.Web.UI.Design.WebFormsRootDesigner.SupportedTechnologies" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el objeto <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> mediante el componente especificado.
        </summary>
      <param name="component">
              Componente que diseña el diseñador.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.IsDesignerViewLocked">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene un valor que indica si la vista del diseñador está bloqueada.
        </summary>
      <returns>
          
            Es true si la vista del diseñador está bloqueada; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.IsLoading">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene un valor que indica si la página de formularios Web Forms todavía se está cargando.
        </summary>
      <returns>
          
            true, si la página de formularios Web Forms se está cargando; de lo contrario, false.
        </returns>
    </member>
    <member name="E:System.Web.UI.Design.WebFormsRootDesigner.LoadComplete">
      <summary>
          Tiene lugar cuando el diseñador finaliza la carga de la página de formularios Web Forms.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.OnLoadComplete(System.EventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.Web.UI.Design.WebFormsRootDesigner.LoadComplete" /> cuando la página de formularios Web Forms está completamente cargada.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>
          Permite a un diseñador cambiar o quitar elementos en el conjunto de atributos que el diseñador expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="attributes">
              Atributos para la clase del componente.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>
          Permite a un diseñador cambiar o quitar elementos en el conjunto de eventos que el diseñador expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="events">
              Eventos para la clase del componente.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>
          Permite a un diseñador cambiar o quitar elementos en el conjunto de propiedades que el diseñador expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="properties">
              Propiedades para la clase del componente.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>
          Permite a un diseñador agregar elementos al conjunto de atributos que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="attributes">
              Atributos para la clase del componente.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>
          Permite a un diseñador agregar elementos al conjunto de eventos que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="events">
              Eventos para la clase del componente.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Permite a un diseñador agregar elementos al conjunto de propiedades que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="properties">
              Propiedades para la clase del componente.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene un objeto <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> con información sobre la página de formularios Web Forms actual.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> con información sobre la página de formularios Web Forms actual.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.RemoveClientScriptFromDocument(System.String)">
      <summary>
          Quita del documento la secuencia de comandos de cliente especificada en tiempo de diseño.
        </summary>
      <param name="clientScriptId">
              El identificador para la secuencia de comandos de cliente previamente registrada.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.RemoveControlFromDocument(System.Web.UI.Control)">
      <summary>
          Cuando se reemplaza en una clase derivada, quita el control especificado de la página de formularios Web Forms.
        </summary>
      <param name="control">
              Control que se va a quitar de la página de formularios Web Forms.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.ResolveUrl(System.String)">
      <summary>
          Convierte una dirección URL relativa en una dirección URL completa.
        </summary>
      <returns>
          Dirección URL completa resuelta a partir de <paramref name="relativeUrl" />.
        </returns>
      <param name="relativeUrl">
              Dirección URL relativa para un recurso del sitio.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="relativeUrl" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.SetControlID(System.Web.UI.Control,System.String)">
      <summary>
          Establece la propiedad ID del control especificado con la cadena especificada.
        </summary>
      <param name="control">
              Control en el que se va a establecer el identificador.
            </param>
      <param name="id">
              Cadena que se va a establecer como el identificador del control.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.SupportedTechnologies">
      <summary>
          Obtiene una matriz de tecnologías que el componente diseñador admite para su presentación.
        </summary>
      <returns>
          Matriz de valores <see cref="T:System.ComponentModel.Design.ViewTechnology" /> admitidos.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesigner#Verbs">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.Design.IDesigner.Verbs" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)" />.
        </summary>
      <param name="viewTechnology">
              
              
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#IDisposable#Dispose">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.IDisposable.Dispose" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.Verbs">
      <summary>
          Obtiene los verbos en tiempo de diseño admitidos por el diseñador.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.ComponentModel.Design.DesignerVerb" /> admitidos por el diseñador; null si el componente no tiene verbos.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlDataFileEditor">
      <summary>
          Proporciona una interfaz de usuario en tiempo de diseño para seleccionar archivos de datos XML.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlDataFileEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.XmlDataFileEditor" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.XmlDataFileEditor.Caption">
      <summary>
          Obtiene el título que se va a mostrar en el cuadro de diálogo de selección.
        </summary>
      <returns>
          El texto del título que se va a mostrar en el cuadro de diálogo de selección.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlDataFileEditor.Filter">
      <summary>
          Obtiene las opciones de filtrado de la URL para el editor, que se utilizan para filtrar los elementos que aparecen en el cuadro de diálogo de selección de la URL.
        </summary>
      <returns>
          Cadena que representa una o más opciones de filtrado de la URL para el cuadro de diálogo.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlDocumentSchema">
      <summary>
          Representa la estructura o el esquema de un objeto <see cref="T:System.Xml.XmlDocument" />. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlDocumentSchema.#ctor(System.Xml.XmlDocument,System.String)">
      <summary>
          Crea una instancia de la clase <see cref="T:System.Web.UI.Design.XmlDocumentSchema" /> utilizando un objeto <see cref="T:System.Xml.XmlDocument" /> especificado y una cadena XPath.
        </summary>
      <param name="xmlDocument">
              Instancia de un objeto <see cref="T:System.Xml.XmlDocument" />.
            </param>
      <param name="xPath">
              Cadena XPath que identifica los nodos secundarios de la raíz del documento.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.XmlDocumentSchema.GetViews">
      <summary>
          Obtiene una matriz que contiene información sobre cada nodo secundario empezando por el nodo identificado por el parámetro <paramref name="xPath" /> en el constructor, o cada nodo secundario empezando por la raíz del documento si el parámetro <paramref name="xPath" /> está vacío.
        </summary>
      <returns>
          Una matriz de objetos <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlFileEditor">
      <summary>
          Proporciona una interfaz de usuario para seleccionar un archivo XML utilizando un cuadro <see cref="T:System.Windows.Forms.OpenFileDialog" /> estándar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.XmlFileEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Modifica el valor del objeto especificado mediante el proveedor de servicios y el contexto especificados.
        </summary>
      <returns>
          Nuevo valor del objeto. En caso de que el valor del objeto no cambie, el método devolverá el mismo objeto que se ha pasado.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              Objeto de proveedor de servicios mediante el que se pueden obtener los servicios de edición. 
            </param>
      <param name="value">
              Instancia del valor que se va a modificar. 
            </param>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              <see cref="T:System.IServiceProvider" /> que puede utilizar este editor para obtener servicios. 
            </param>
      <param name="value">
              Objeto que se va a modificar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de edición asociado a este editor mediante el objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> especificado.
        </summary>
      <returns>
          Valor de enumeración <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición proporcionado. Si no se admite el método en el contexto especificado, éste devolverá el identificador <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.XmlUrlEditor">
      <summary>
          Proporciona una interfaz de usuario para seleccionar una dirección URL que indica la ubicación de un archivo XML.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlUrlEditor.#ctor">
      <summary>
          Inicializa una instancia de la clase <see cref="T:System.Web.UI.Design.XmlUrlEditor" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Caption">
      <summary>
          Obtiene el título que se va a mostrar en la ventana del cuadro de diálogo de selección.
        </summary>
      <returns>
          Título que se va a mostrar en la ventana del cuadro de diálogo de selección.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Filter">
      <summary>
          Obtiene la cadena de filtro de nombres de archivo para el editor. Esta última se utiliza para determinar los elementos que aparecen en la lista de archivos del cuadro de diálogo.
        </summary>
      <returns>
          Cadena que contiene información sobre las opciones de filtrado de archivos disponibles en el cuadro de diálogo.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Options">
      <summary>
          Indica las opciones que el generador de direcciones URL va a utilizar.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> que indica las opciones que el generador de direcciones URL va a utilizar.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.XsdSchemaFileEditor">
      <summary>
          Proporciona una interfaz de usuario en tiempo de diseño para seleccionar archivos de definición de esquema XML.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.XsdSchemaFileEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.XsdSchemaFileEditor" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.XsdSchemaFileEditor.Caption">
      <summary>
          Obtiene el título que se va a mostrar en el cuadro de diálogo de selección.
        </summary>
      <returns>
          El texto del título que se va a mostrar en el cuadro de diálogo de selección.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.XsdSchemaFileEditor.Filter">
      <summary>
          Obtiene las opciones de filtrado de la URL para el editor, que se utilizan para filtrar los elementos que aparecen en el cuadro de diálogo de selección de la URL.
        </summary>
      <returns>
          Cadena que representa una o más opciones de filtrado de la URL para el cuadro de diálogo.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.XslTransformFileEditor">
      <summary>
          Proporciona una interfaz de usuario en tiempo de diseño para seleccionar un archivo de transformación XML.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.XslTransformFileEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.XslTransformFileEditor" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.XslTransformFileEditor.Caption">
      <summary>
          Obtiene el título que se va a mostrar en el cuadro de diálogo de selección.
        </summary>
      <returns>
          El texto del título que se va a mostrar en el cuadro de diálogo de selección.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.XslTransformFileEditor.Filter">
      <summary>
          Obtiene las opciones de filtro de dirección URL para el editor, que se utilizan para filtrar los elementos que aparecen en el cuadro de diálogo de selección de direcciones URL.
        </summary>
      <returns>
          Una cadena que representa una o varias opciones de filtro de dirección URL del cuadro de diálogo.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.XslUrlEditor">
      <summary>
          Proporciona una interfaz de usuario para seleccionar una dirección URL que indica la ubicación de un archivo XSL.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.XslUrlEditor.#ctor">
      <summary>
          Inicializa una instancia de la clase <see cref="T:System.Web.UI.Design.XslUrlEditor" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Caption">
      <summary>
          Obtiene o establece el título que se va a mostrar en la ventana del cuadro de diálogo de selección.
        </summary>
      <returns>
          El título que se va a mostrar en la ventana del cuadro de diálogo de selección.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Filter">
      <summary>
          Obtiene la cadena de filtro de nombres de archivo para el editor. Esta última se utiliza para determinar los elementos que aparecen en la lista de archivos del cuadro de diálogo.
        </summary>
      <returns>
          Una cadena que contiene información sobre las opciones de filtrado de archivos disponibles en el cuadro de diálogo.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Options">
      <summary>
          Indica las opciones que el generador de direcciones URL va a utilizar.
        </summary>
      <returns>
          Una enumeración <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> que indica las opciones que el generador de direcciones URL va a utilizar.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.AccessDataSourceDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control de servidor Web <see cref="T:System.Web.UI.WebControls.AccessDataSource" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.AccessDataSource" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.DataFile">
      <summary>
          Implementa una propiedad de diseñador para prevalecer sobre la propiedad <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> del control asociado.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el nombre y la ruta de acceso del archivo de datos asociado a <see cref="T:System.Web.UI.WebControls.AccessDataSource" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.GetConnectionString">
      <summary>
          Obtiene la cadena de conexión que es válida en tiempo de diseño para el control que está asociado a este diseñador.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene la cadena de conexión en tiempo de diseño para el <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> asociado.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Lo utiliza el diseñador para quitar o agregar propiedades en la cuadrícula Propiedades, o para crear copias sombra de las propiedades del control asociado.
        </summary>
      <param name="properties">
              Colección que implementa <see cref="T:System.Collections.IDictionary" /> de las propiedades agregadas y con copia sombra. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.AdRotatorDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.WebControls.AdRotator" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AdRotatorDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.AdRotatorDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AdRotatorDesigner.GetDesignTimeHtml">
      <summary>
          Genera el marcado usa para representar el control en la superficie de diseño.
        </summary>
      <returns>
          El marcado que representa el control en la superficie de diseño.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para los controles derivados de la clase <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.ConnectToDataSource">
      <summary>
          Cuando se reemplaza en una clase derivada, normalmente anula el enlace de los eventos del origen de datos anterior y, después adjunta los eventos nuevos al nuevo origen de datos. 
        </summary>
      <returns>
          
            Es true si se realizó una conexión a un nuevo origen de datos, normalmente; es false si los orígenes de datos anterior y nuevo son el mismo.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.CreateDataSource">
      <summary>
          Cuando se reemplaza en una clase derivada, crea un origen de datos nuevo para el objeto <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>
          Cuando se reemplaza en una clase derivada, realiza las acciones necesarias para configurar el control asociado que se deriva de la clase <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />.
        </summary>
      <param name="dataBoundControl">
              El constructor <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> al que está asociado este diseñador.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource">
      <summary>
          Obtiene o establece el valor de la propiedad <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> para el control asociado.
        </summary>
      <returns>
          La expresión de enlace de datos utilizada por el control asociado derivado de <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSourceID">
      <summary>
          Obtiene o establece el valor de la propiedad <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> del objeto <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> subyacente.
        </summary>
      <returns>
          El Id. de la clase <see cref="T:System.Web.UI.DataSourceControl" /> asociada al <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> subyacente.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DisconnectFromDataSource">
      <summary>
          Cuando se reemplaza en una clase derivada, elimina los enlaces de los eventos del origen de datos actual. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados utilizados por el objeto <see cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" /> y, de forma opcional, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto los recursos administrados como los no administrados, y false para liberar únicamente los recursos no administrados.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetDesignTimeHtml">
      <summary>
          Genera el marcado que se utiliza para representar el control asociado en tiempo de diseño. 
        </summary>
      <returns>
          El marcado utilizado para representar el control en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetEmptyDesignTimeHtml">
      <summary>
          Proporciona el marcado utilizado para representar el control en tiempo de diseño, si el control está vacío o si no se puede recuperar el origen de datos. 
        </summary>
      <returns>
          El marcado utilizado para representar el control en tiempo de diseño con un origen de datos vacío.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
          Proporciona el marcado que se usa para representar el control en tiempo de diseño cuando se produce un error.
        </summary>
      <returns>
          El marcado que se usa para representar el control en tiempo de diseño cuando se produce un error.
        </returns>
      <param name="e">
              <see cref="T:System.Exception" /> que se ha producido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, modificar y diseñar el control asociado.
        </summary>
      <param name="component">
              Un control derivado de <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> que implementa <see cref="T:System.ComponentModel.IComponent" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnDataSourceChanged(System.Boolean)">
      <summary>
          Se le llama cuando cambia el origen de datos del objeto <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> asociado. 
        </summary>
      <param name="forceUpdateView">
              
                Es true para forzar la actualización de marcado en tiempo de diseño; de lo contrario, es false.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnSchemaRefreshed">
      <summary>
          Se le llama cuando el origen de datos del objeto <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> asociado carga un nuevo esquema. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Lo utiliza el diseñador para quitar o agregar propiedades adicionales para la presentación en la cuadrícula Propiedades, o realizar copias sombra de las propiedades del control asociado.
        </summary>
      <param name="properties">
              El <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades que se filtran.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.ShowCreateDataSourceDialog(System.Web.UI.Design.ControlDesigner,System.Type,System.Boolean,System.String@)">
      <summary>
          En un host de diseño, como Visual Studio 2005, muestra un cuadro de diálogo para ayudar al usuario crear un origen de datos.
        </summary>
      <returns>
          Objeto <see cref="T:System.Windows.Forms.DialogResult" />.
        </returns>
      <param name="controlDesigner">
              Una referencia a este diseñador.
            </param>
      <param name="dataSourceType">
              El tipo del origen de datos.
            </param>
      <param name="configure">
              
                Es true para permitir la edición de la configuración o false para deshabilitar la edición de la configuración.
            </param>
      <param name="dataSourceID">
              El Id. de un control <see cref="T:System.Web.UI.DataSourceControl" /> de la página.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataListComponentEditor">
      <summary>
          Proporciona una clase base de editor de componentes para los controles de servidor Web derivados de la clase <see cref="T:System.Web.UI.WebControls.BaseDataList" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.#ctor(System.Int32)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.BaseDataListComponentEditor" />.
        </summary>
      <param name="initialPage">
              Índice de la página inicial que se va a mostrar en la matriz de tipos de control de página. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Windows.Forms.IWin32Window)">
      <summary>
          Edita el componente especificado mediante el descriptor de contexto y la ventana principal que se han especificado.
        </summary>
      <returns>
          
            Es true si el componente se editó correctamente; de lo contrario, es false.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede usar para obtener más información del contexto. 
            </param>
      <param name="obj">
              <see cref="T:System.Object" /> que implementa <see cref="T:System.ComponentModel.IComponent" />, que representa el componente que se va a editar. 
            </param>
      <param name="parent">
              <see cref="T:System.Windows.Forms.IWin32Window" /> que representa la ventana principal. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.GetInitialComponentEditorPageIndex">
      <summary>
          Obtiene el índice de la página inicial que se va a mostrar en el editor de componentes.
        </summary>
      <returns>
          Índice de la página inicial en la matriz.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataListDesigner">
      <summary>
          Proporciona una clase base para los componentes que proporcionan compatibilidad en tiempo de diseño con los controles de servidor Web derivados de la clase <see cref="T:System.Web.UI.WebControls.BaseDataList" /> en un host del diseñador. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.BaseDataListDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones para este diseñador.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataKeyField">
      <summary>
          Obtiene o establece el valor del campo de clave de datos del control asociado.
        </summary>
      <returns>
          Valor <see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" /> del control asociado.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataMember">
      <summary>
          Obtiene o establece el valor del campo de miembro de datos del control asociado.
        </summary>
      <returns>
          Valor <see cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" /> del control asociado.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSource">
      <summary>
          Obtiene o establece el valor de la propiedad del origen de datos del control asociado.
        </summary>
      <returns>
          Valor <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> del control asociado.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSourceDesigner">
      <summary>
          Obtiene el diseñador del origen de datos, cuando se selecciona uno para el enlace de datos.
        </summary>
      <returns>
          Diseñador del origen de datos del control asociado.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSourceID">
      <summary>
          Obtiene o establece la versión del diseñador de la propiedad de id. del origen de datos, y se utiliza para realizar una copia sombra de la propiedad correspondiente del control asociado.
        </summary>
      <returns>
          <see cref="T:System.String" /> que es el id. del origen de datos del control asociado.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DesignerView">
      <summary>
          Obtiene la vista predeterminada del origen de datos enlazado al control asociado. 
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> que representa la vista predeterminada del origen de datos. 
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados utilizados por el diseñador y, de forma opcional, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetDesignTimeDataSource(System.Collections.IEnumerable,System.Int32,System.Boolean@)">
      <summary>
          Genera un objeto que se puede utilizar como origen de datos en tiempo de diseño.
        </summary>
      <returns>
          Objeto que implementa una interfaz <see cref="T:System.Collections.IEnumerable" /> que actúa como origen de datos para su uso en tiempo de diseño.
        </returns>
      <param name="selectedDataSource">
              Objeto que implementa <see cref="T:System.Collections.IEnumerable" />, que se utiliza como plantilla para el formato de datos. 
            </param>
      <param name="minimumRows">
              Número mínimo de filas de datos de muestra que deben contener los datos del origen de datos. 
            </param>
      <param name="dummyDataSource">
              
                Es true si el origen de datos devuelto contiene datos ficticios; es false si el origen de datos devuelto contiene datos de un origen de datos real. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetDesignTimeDataSource(System.Int32,System.Boolean@)">
      <summary>
          Genera un objeto que se puede utilizar como origen de datos en tiempo de diseño.
        </summary>
      <returns>
          Objeto que implementa una interfaz <see cref="T:System.Collections.IEnumerable" /> que actúa como origen de datos para su uso en tiempo de diseño.
        </returns>
      <param name="minimumRows">
              Número mínimo de filas de datos de muestra que debe contener el origen de datos. 
            </param>
      <param name="dummyDataSource">
              
                Es true si el origen de datos devuelto contiene datos ficticios; es false si el origen de datos devuelto contiene datos de un origen de datos real. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetResolvedSelectedDataSource">
      <summary>
          Obtiene el componente de origen de datos desde el contenedor de control asociado, resuelto en un miembro de datos concreto.
        </summary>
      <returns>
          Objeto que implementa una interfaz <see cref="T:System.Collections.IEnumerable" /> que contiene el <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> en tiempo de diseño del control asociado, resuelto en el parámetro <see cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" />; de lo contrario, si no se encuentra ningún origen de datos, es null.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetSelectedDataSource">
      <summary>
          Obtiene el componente de origen de datos del contenedor del control asociado.
        </summary>
      <returns>
          Objeto que implementa una interfaz <see cref="T:System.Collections.IEnumerable" /> que contiene la propiedad <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> en tiempo de diseño del control asociado; de lo contrario, si no se encuentra ningún origen de datos, es null.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetTemplateContainerDataSource(System.String)">
      <summary>
          Obtiene el origen de datos del contenedor de la plantilla.
        </summary>
      <returns>
          Objeto que implementa una interfaz <see cref="T:System.Collections.IEnumerable" /> que contiene una propiedad <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> en tiempo de diseño.
        </returns>
      <param name="templateName">
              <see cref="T:System.String" /> que especifica el nombre de la plantilla para la que se va a obtener el origen de datos.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, modificar y diseñar el control asociado.
        </summary>
      <param name="component">
              Control derivado de <see cref="T:System.Web.UI.WebControls.BaseDataList" />, que implementa <see cref="T:System.ComponentModel.IComponent" />. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.InvokePropertyBuilder(System.Int32)">
      <summary>
          Invoca un editor de componentes para el control asociado.
        </summary>
      <param name="initialPage">
              Índice de la página con la que se inicializará el editor de componentes. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnAutoFormat(System.Object,System.EventArgs)">
      <summary>
          Controla el evento AutoFormat.
        </summary>
      <param name="sender">
              <see cref="T:System.Object" /> que provocó el evento.
            </param>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>
          Se llama cuando se ha aplicado un esquema de formato automático al control asociado.
        </summary>
      <param name="appliedAutoFormat">
              Objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> que define un estilo.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
          Se llama cuando hay un cambio en el control asociado.
        </summary>
      <param name="sender">
              <see cref="T:System.Object" /> que es el origen del evento.
            </param>
      <param name="e">
              <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnDataSourceChanged">
      <summary>
          Se llama cuando ha cambiado el origen de datos del control asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnPropertyBuilder(System.Object,System.EventArgs)">
      <summary>
          Representa el método que controla el evento del generador de propiedades.
        </summary>
      <param name="sender">
              <see cref="T:System.Object" /> que es el origen del evento. 
            </param>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnSchemaRefreshed">
      <summary>
          Se llama a este método cuando cambia el esquema del origen de datos correspondiente al control asociado. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnStylesChanged">
      <summary>
          Se puede reemplazar para implementar funcionalidad que es necesaria cuando ha cambiado un estilo del control asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnTemplateEditingVerbsChanged">
      <summary>
          Se puede reemplazar para implementar funcionalidad que es necesaria cuando han cambiado los verbos de edición de plantillas del diseñador.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Lo utiliza el diseñador para quitar o agregar propiedades en la presentación de la cuadrícula Propiedades, o para realizar copias sombra de las propiedades del control asociado. 
        </summary>
      <param name="properties">
              Colección que implementa una interfaz <see cref="T:System.Collections.IDictionary" /> de las propiedades agregadas y con copia sombra. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" />.
        </summary>
      <returns>
          
            Es true si se puede actualizar el esquema; de lo contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" />.
        </summary>
      <param name="preferSilent">
              
                true para deshabilitar los eventos de enlace de datos hasta después de que se haya actualizado el esquema; false para habilitar los eventos.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para los controles de servidor Web derivados de la clase <see cref="T:System.Web.UI.WebControls.BaseValidator" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el formato que se utiliza para representar el control asociado en tiempo de diseño. 
        </summary>
      <returns>
          Una cadena que contiene el formato utilizado para representar el control <see cref="T:System.Web.UI.WebControls.BaseValidator" /> en tiempo de diseño.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BulletedListDesigner">
      <summary>
          Se utiliza para proporcionar compatibilidad en tiempo de diseño en un diseñador visual para el control de servidor Web <see cref="T:System.Web.UI.WebControls.BulletedList" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BulletedListDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.BulletedListDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BulletedListDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>
          Le permite al diseñador filtrar el conjunto de eventos que el control asociado expondrá en tiempo de diseño.
        </summary>
      <param name="events">
              La <see cref="T:System.Collections.IDictionary" /> que contiene los objetos <see cref="T:System.ComponentModel.EventDescriptor" /> que representan los eventos del control. Las claves de <see cref="T:System.Collections.IDictionary" /> son los nombres de evento. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BulletedListDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia temporal en lugar del control real asociado al diseñador para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ButtonDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control de servidor Web <see cref="T:System.Web.UI.WebControls.Button" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ButtonDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.ButtonDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ButtonDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado que se utiliza para representar el control asociado en tiempo de diseño.
        </summary>
      <returns>
          Un objeto <see cref="T:System.String" /> que contiene el marcado utilizado para representar el control <see cref="T:System.Web.UI.WebControls.Button" /> en tiempo de diseño.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog">
      <summary>
          Proporciona un cuadro de diálogo Formato automático para un control de servidor Web <see cref="T:System.Web.UI.WebControls.Calendar" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.#ctor(System.Web.UI.WebControls.Calendar)">
      <summary>
          Crea una nueva instancia de AutoFormatPage asociada a una instancia de <see cref="T:System.Web.UI.WebControls.Calendar" /> para un host del diseñador.
        </summary>
      <param name="calendar">
              Instancia de <see cref="T:System.Web.UI.WebControls.Calendar" /> para la que se muestra AutoFormatPage.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.DoDelayLoadActions">
      <summary>
          Ejecuta cualquier inicialización demorada hasta el primer momento de inactividad 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnActivated(System.Object,System.EventArgs)">
      <summary>
          Se produce al activar <see cref="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog" />.
        </summary>
      <param name="source">
              Origen del evento. 
            </param>
      <param name="e">
              <see cref="T:System.EventArgs" /> que proporciona información sobre el evento. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnOKClicked(System.Object,System.EventArgs)">
      <summary>
          Controla los cambios en las opciones del esquema predefinidas 
        </summary>
      <param name="source">
              Origen del evento. 
            </param>
      <param name="e">
              <see cref="T:System.EventArgs" /> que proporciona información sobre el evento. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnSelChangedScheme(System.Object,System.EventArgs)">
      <summary>
          Controla los cambios en las opciones del esquema predefinidas 
        </summary>
      <param name="source">
              Origen del evento. 
            </param>
      <param name="e">
              <see cref="T:System.EventArgs" /> que proporciona información sobre el evento. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.SaveComponent">
      <summary>
          Guarda cualquier cambio en el componente 
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CalendarDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño para el control de servidor Web <see cref="T:System.Web.UI.WebControls.Calendar" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.CalendarDesigner" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CalendarDesigner.AutoFormats">
      <summary>
          Obtiene todos los objetos <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> disponibles del control.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> que contiene los objetos <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> disponibles del control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador con el componente especificado.
        </summary>
      <param name="component">
              El objeto <see cref="T:System.ComponentModel.IComponent" /> de este diseñador. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.OnAutoFormat(System.Object,System.EventArgs)">
      <summary>
          Se le llama cuando se ha aplicado un esquema de autoformato al control.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que contiene los datos de evento. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control de servidor Web <see cref="T:System.Web.UI.WebControls.ChangePassword" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones para este diseñador.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.AutoFormats">
      <summary>
          Obtiene la colección de esquemas de formato automáticos que se mostrarán en el cuadro de diálogo Formato automático.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> que contiene los esquemas predefinidos para <see cref="T:System.Web.UI.WebControls.ChangePassword" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado que se utiliza para representar el control asociado en tiempo de diseño.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el marcado utilizado para representar el <see cref="T:System.Web.UI.WebControls.ChangePassword" /> en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Obtiene el marcado que se utiliza para representar el control asociado en tiempo de diseño y rellena una colección de regiones del diseñador. 
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el marcado utilizado para representar el <see cref="T:System.Web.UI.WebControls.ChangePassword" /> en tiempo de diseño.
        </returns>
      <param name="regions">
              <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> al que se ha agregado una definición de la vista actual del control asociado.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>
          Obtiene el formulario almacenado de la plantilla actual del control asociado.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el formulario almacenado de la plantilla actual del <see cref="T:System.Web.UI.WebControls.ChangePassword" /> asociado.
        </returns>
      <param name="region">
              <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> no utilizado por este <see cref="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" /> reemplazado.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
          Obtiene el marcado que se representa en un marcador de posición que contiene información sobre el error que se produjo al intentar crear o representar el control asociado en tiempo de diseño.
        </summary>
      <returns>
          Marcado del marcador de posición que contiene información sobre la excepción especificada.
        </returns>
      <param name="e">
              <see cref="T:System.Exception" /> que se inició al crear o representar el control asociado. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, editar y diseñar el control asociado.
        </summary>
      <param name="component">
              <see cref="T:System.Web.UI.WebControls.ChangePassword" /> que implementa <see cref="T:System.ComponentModel.IComponent" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Lo utiliza el diseñador para quitar o agregar propiedades adicionales para la presentación en la cuadrícula Propiedades, o realizar copias sombra de las propiedades del control asociado.
        </summary>
      <param name="properties">
              Colección que implementa el <see cref="T:System.Collections.IDictionary" /> de las propiedades agregadas y con copia sombra. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Establece el valor de una plantilla del control asociado.
        </summary>
      <param name="region">
              <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> para el que se va a establecer contenido.
            </param>
      <param name="content">
              <see cref="T:System.String" /> que contiene un control almacenado o una plantilla.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.TemplateGroups">
      <summary>
          Obtiene una colección de grupos de plantillas para las plantillas del control asociado a este diseñador.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> que contiene un elemento para cada plantilla en el <see cref="T:System.Web.UI.WebControls.ChangePassword" /> asociado.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia temporal en lugar del control real que está asociado al diseñador para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CheckBoxDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño para el control de servidor Web <see cref="T:System.Web.UI.WebControls.CheckBox" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CheckBoxDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.CheckBoxDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CheckBoxDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado que se utiliza para representar el control en tiempo de diseño.
        </summary>
      <returns>
          Marcado que se utiliza para representar el control en tiempo de diseño.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CompositeControlDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño para aquellos controles que implementan los métodos de la clase abstracta <see cref="T:System.Web.UI.WebControls.CompositeControl" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.CompositeControlDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.CreateChildControls">
      <summary>
          Crea los controles secundarios de este control <see cref="T:System.Web.UI.WebControls.CompositeControl" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el HTML usado para representar el control en tiempo de diseño.
        </summary>
      <returns>
          HTML usado para representar el control en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador con el objeto <see cref="T:System.ComponentModel.IComponent" /> especificado.
        </summary>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" />, que es el control asociado a este diseñador.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ContentDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño para el control de servidor Web <see cref="T:System.Web.UI.WebControls.Content" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.ContentDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentDesigner.ActionLists">
      <summary>
          Obtiene el objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> para este diseñador.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentDesigner.AllowResize">
      <summary>
          Obtiene un valor que indica si el control puede cambiar de tamaño en la superficie del diseñador visual.
        </summary>
      <returns>
          
            Es true si se puede cambiar el tamaño del control; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Obtiene el marcado que se utiliza para representar el control en tiempo de diseño desde el objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> especificado.
        </summary>
      <returns>
          Marcado que se utiliza para representar el control en tiempo de diseño.
        </returns>
      <param name="regions">
              <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> asociado al marcado en tiempo de diseño generado por <see cref="M:System.Web.UI.Design.WebControls.ContentDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>
          Obtiene el contenido del objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
        </summary>
      <returns>
          Cadena de persistencia para el contenido del <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
        </returns>
      <param name="region">
              <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> del que se va a obtener el contenido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetPersistenceContent">
      <summary>
          Obtiene el marcado interno del control.
        </summary>
      <returns>
          Marcado interno del control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>
          Cuando se reemplaza en una clase derivada, permite que un diseñador cambie o quite elementos del conjunto de propiedades que se expone a través de un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="properties">
              Objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representan las propiedades de la clase del componente. Las claves del diccionario de propiedades son nombres de propiedad.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>
          Cuando se reemplaza en una clase derivada, permite que un diseñador agregue elementos al conjunto de eventos que se expone a través de un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="events">
              Objetos <see cref="T:System.ComponentModel.EventDescriptor" /> que representan los eventos de la clase del componente. Las claves del diccionario de eventos son nombres de evento.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Establece el contenido del objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
        </summary>
      <param name="region">
              <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> donde se va a establecer el contenido.
            </param>
      <param name="content">
              Cadena de persistencia para el contenido <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño para el control de servidor Web <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.AllowResize">
      <summary>
          Obtiene un valor que indica si se puede cambiar el tamaño del control.
        </summary>
      <returns>
          
            Es true si se puede cambiar el tamaño del control; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el código HTML que se utiliza para representar el control en tiempo de diseño.
        </summary>
      <returns>
          Formato HTML que se utiliza para representar el control en tiempo de diseño.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El componente raíz no es una instancia de <see cref="T:System.Web.UI.MasterPage" />.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Obtiene el código HTML usado para representar el control en tiempo de diseño mediante el objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />.
        </summary>
      <returns>
          El código HTML usado para representar el control en tiempo de diseño.
        </returns>
      <param name="regions">
              Un objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> que contiene las áreas que se van a usar para generar HTML en tiempo de diseño.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El componente raíz no es una instancia de <see cref="T:System.Web.UI.MasterPage" />.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>
          Obtiene el contenido del objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
        </summary>
      <returns>
          El contenido del objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
        </returns>
      <param name="region">
              Objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> cuyo contenido se va a extraer.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetPersistenceContent">
      <summary>
          Obtiene el código HTML interno con persistencia del control.
        </summary>
      <returns>
          Código HTML interno con persistencia del control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Establece el contenido del objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
        </summary>
      <param name="region">
              Instancia de <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> que se va a establecer.
            </param>
      <param name="content">
              Contenido nuevo de <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CreateUserWizardDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño para el control de servidor Web <see cref="T:System.Web.UI.WebControls.CreateUserWizard" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.CreateUserWizardDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.ActionLists">
      <summary>
          Obtiene el objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> para este diseñador.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.AddDesignerRegions(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Crea un objeto <see cref="T:System.Web.UI.Design.DesignerRegion" /> por cada paso asociado al control de asistente subyacente y, a continuación, lo agrega al objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> especificado.
        </summary>
      <param name="regions">
              La colección <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> a la que se agregan las áreas asociadas al control de asistente. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.AutoFormats">
      <summary>
          Obtiene el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> asociado a este diseñador.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.ConvertToCustomNavigationTemplate">
      <summary>
          Convierte los controles secundarios asociados al control wizard subyacente en una plantilla personalizada.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
          Obtiene el código HTML que proporciona información sobre la excepción especificada. Normalmente, se llama a este método después de encontrar un error en tiempo de diseño.
        </summary>
      <returns>
          Código HTML para la excepción especificada.
        </returns>
      <param name="e">
              Excepción que se ha producido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador y carga el componente especificado.
        </summary>
      <param name="component">
              Elemento del control que se va a diseñar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Expone las propiedades asociadas a cada paso predeterminado a través de la cuadrícula de propiedades en la herramienta de diseñador.
        </summary>
      <param name="properties">
              Objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representan las propiedades de la clase base del componente. Las claves del diccionario de propiedades son nombres de propiedad.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador utiliza el propio control <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> para generar código HTML en tiempo de diseño o si utiliza una copia temporalmente creada. 
        </summary>
      <returns>
          Siempre es  true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor">
      <summary>
          Proporciona un editor en un host de diseño como Visual Studio 2005 para editar el objeto <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> de un control de servidor Web <see cref="T:System.Web.UI.WebControls.CreateUserWizard" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor" /> con <see cref="T:System.Type" />.
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> de los elementos de la colección asociada al editor de la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.CanRemoveInstance(System.Object)">
      <summary>
          Devuelve un valor que indica si un objeto proporcionado puede quitarse de la colección.
        </summary>
      <returns>
          
            Es true si se puede quitar <see cref="T:System.Web.UI.WebControls.WizardStep" /> de la colección; de lo contrario, es false.
        </returns>
      <param name="value">
              Un objeto <see cref="T:System.Web.UI.WebControls.WizardStep" /> para determinar si puede quitarse de la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.CreateCollectionForm">
      <summary>
          Crea un cuadro de diálogo modal para editar el contenido de una colección de objetos <see cref="T:System.Web.UI.WebControls.CreateUserWizardStep" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.HelpTopic">
      <summary>
          Obtiene la palabra clave Help utilizada para mostrar el tema or temas de la Ayuda cuando los usuarios hagan clic en el botón Ayuda al presionar la tecla F1 en el cuadro de diálogo del editor.
        </summary>
      <returns>
          La palabra clave Help para que se muestre el tema de Ayuda o la lista de temas de Ayuda cuando se solicita ayuda desde el editor.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner">
      <summary>
          Proporciona una clase base para la compatibilidad en tiempo de diseño de los controles que derivan de <see cref="T:System.Web.UI.WebControls.DataBoundControl" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ActionLists">
      <summary>
          Obtiene el objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> para este diseñador.
        </summary>
      <returns>
          El objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ConnectToDataSource">
      <summary>
          Desconecta eventos del origen de datos anterior y los conecta al origen de datos actual.
        </summary>
      <returns>
          
            Es true si el control enlazado a datos está conectado a un nuevo origen de datos; es false si el origen de datos no ha cambiado.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.CreateDataSource">
      <summary>
          Invoca el cuadro de diálogo estándar para crear un nuevo control de origen de datos y establece el identificador de dicho control en la propiedad <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> del control enlazado a datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>
          Enlaza el objeto <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> al origen de datos.
        </summary>
      <param name="dataBoundControl">
              Objeto <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> que se va a enlazar al origen de datos.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember">
      <summary>
          Obtiene la propiedad <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> sombreada del control enlazado a datos subyacente.
        </summary>
      <returns>
          La propiedad <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> sombreada del control enlazado a datos subyacente.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataSourceDesigner">
      <summary>
          Obtiene el diseñador del origen de datos del control enlazado a datos subyacente.
        </summary>
      <returns>
          El diseñador del origen de datos del control enlazado a datos subyacente.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DesignerView">
      <summary>
          Obtiene el objeto <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> asociado al origen de datos de este diseñador.
        </summary>
      <returns>
          El objeto <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> asociado al origen de datos de este diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DisconnectFromDataSource">
      <summary>
          Desconecta el control enlazado a datos de los eventos de origen de datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados utilizados por el objeto <see cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" /> y, de forma opcional, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto los recursos administrados como los no administrados, y es false para liberar únicamente los recursos no administrados.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.GetDesignTimeDataSource">
      <summary>
          Obtiene el origen de datos en tiempo de diseño de la propiedad DataSourceDesigner o DataSource asociada.
        </summary>
      <returns>
          Un objeto que implementa una interfaz <see cref="T:System.Collections.IEnumerable" /> que hace referencia al origen de datos en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.GetSampleDataSource">
      <summary>
          Obtiene datos de ejemplo ficticios para representar el control enlazado a datos en la superficie de diseño si no se pueden crear datos de ejemplo a partir de la propiedad DataSourceDesigner o DataSource.
        </summary>
      <returns>
          Un objeto que implementa la interfaz <see cref="T:System.Collections.IEnumerable" /> que contiene los datos de ejemplo ficticios utilizados para representar el control enlazado a datos en la superficie de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Lo reemplaza el diseñador para sombrear las propiedades en tiempo de ejecución del control enlazado a datos con las propiedades correspondientes implementadas por el diseñador.
        </summary>
      <param name="properties">
              Objeto <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades que se van a filtrar.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.SampleRowCount">
      <summary>
          Obtiene el número de filas que el control enlazado a datos muestra en la superficie de diseño.
        </summary>
      <returns>
          El número de filas que el control enlazado a datos muestra en la superficie de diseño.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" />.
        </summary>
      <returns>
          
            Devuelve true si el diseñador puede actualizar el origen de datos; de lo contrario, devuelve false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" />. 
        </summary>
      <param name="preferSilent">
              Indica si deben suprimirse los eventos provocados durante la actualización del esquema.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> que describe el origen de datos.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataSourceProvider#GetResolvedSelectedDataSource">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource" />.
        </summary>
      <returns>
          Miembro de datos seleccionado del origen de datos seleccionado, si el control permite al usuario seleccionar un IListSource (como un objeto <see cref="T:System.Data.DataSet" />) para el origen de datos, y proporciona una propiedad <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> para seleccionar una lista particular (o el objeto <see cref="T:System.Data.DataTable" />) dentro del origen de datos.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataSourceProvider#GetSelectedDataSource">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource" />.
        </summary>
      <returns>
          Objeto que implementa una interfaz <see cref="T:System.Collections.IEnumerable" /> que contiene la propiedad <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> en tiempo de diseño del control asociado; de lo contrario, si no se encuentra ningún origen de datos, es null.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.UseDataSourcePickerActionList">
      <summary>
          Obtiene un valor que indica si el diseñador debe incluir "Elija un origen de datos" en su lista de acciones.
        </summary>
      <returns>
          
            true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor">
      <summary>
          Proporciona una interfaz de usuario de edición (interfaz de usuario) para un campo de control de datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Edita el valor especificado, utilizando los objetos <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> <see cref="T:System.IServiceProvider" /> especificados.
        </summary>
      <returns>
          El valor final del objeto después de haber sido editado.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el contexto del objeto que se va a editar.
            </param>
      <param name="provider">
              Objeto <see cref="T:System.IServiceProvider" /> que contiene una referencia al diseñador asociado.
            </param>
      <param name="value">
              Objeto que se va a modificar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de edición asociado a este editor mediante el objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> especificado.
        </summary>
      <returns>
          Valor <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que representa el estilo de edición de este editor. El valor predeterminado es Modal.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el contexto del objeto que se va a editar.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor">
      <summary>
          Proporciona una interfaz de usuario (IU) de edición para la colección de columnas de un control <see cref="T:System.Web.UI.WebControls.DataGrid" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Edita el valor especificado mediante el descriptor de contexto y el proveedor de servicios especificados.
        </summary>
      <returns>
          El valor final del objeto después de haber sido editado.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el contexto del objeto que se edita.
            </param>
      <param name="provider">
              Objeto <see cref="T:System.IServiceProvider" /> que contiene una referencia al diseñador asociado.
            </param>
      <param name="value">
              Objeto que se va a modificar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de edición asociado a este editor mediante el objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> especificado.
        </summary>
      <returns>
          Valor de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que representa el estilo de edición de este editor. El valor predeterminado es Modal.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el contexto del objeto que se edita.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridComponentEditor">
      <summary>
          Proporciona un editor de componentes para un control de servidor Web <see cref="T:System.Web.UI.WebControls.DataGrid" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.DataGridComponentEditor" /> y establece su página inicial en 0.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.#ctor(System.Int32)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.DataGridComponentEditor" /> y establece su página inicial en el índice especificado.
        </summary>
      <param name="initialPage">
              Índice de la página inicial. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.GetComponentEditorPages">
      <summary>
          Obtiene una matriz de objetos <see cref="T:System.Type" /> que corresponden a las páginas que se pueden editar mediante este editor.
        </summary>
      <returns>
          Una matriz de objetos <see cref="T:System.Type" /> que corresponden a las páginas que se pueden editar mediante este editor.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño para el control de servidor Web <see cref="T:System.Web.UI.WebControls.DataGrid" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.DataGridDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataGridDesigner.AutoFormats">
      <summary>
          Obtiene el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> asociado a este diseñador.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>
          Crea un marco de edición de plantillas utilizando el verbo especificado.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.
        </returns>
      <param name="verb">
              <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> para el que se va a crear el marco de edición de plantillas.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados utilizados por el objeto <see cref="T:System.Web.UI.Design.WebControls.DataGridDesigner" /> y, de forma opcional, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto los recursos administrados como los no administrados; es false para liberar únicamente los recursos no administrados. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetCachedTemplateEditingVerbs">
      <summary>
          Obtiene los verbos de edición de plantillas almacenados en caché que se encuentran disponibles para el diseñador.
        </summary>
      <returns>
          Una matriz de objetos <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> que son los verbos de edición de plantillas almacenados en memoria caché y que están disponibles para el diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el formato HTML que se utiliza para representar el control <see cref="T:System.Web.UI.WebControls.DataGrid" /> en tiempo de diseño.
        </summary>
      <returns>
          El formato HTML usado para representar el control <see cref="T:System.Web.UI.WebControls.DataGrid" /> en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetEmptyDesignTimeHtml">
      <summary>
          Obtiene el código HTML que se utiliza para representar un control vacío basado en plantillas en tiempo de diseño.
        </summary>
      <returns>
          El código HTML que se utiliza para representar un control vacío basado en plantillas en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
          Obtiene el código HTML que se muestra en tiempo de diseño para la excepción especificada cuando se detecta un error al representarse el control.
        </summary>
      <returns>
          El código HTML que se muestra en tiempo de diseño para la excepción especificada.
        </returns>
      <param name="e">
              Excepción que se ha producido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>
          Obtiene la propiedad del elemento de datos del contenedor de plantillas.
        </summary>
      <returns>
          Propiedad de elementos de datos del contenedor de la plantilla.
        </returns>
      <param name="templateName">
              Nombre de la plantilla. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>
          Obtiene el contenido de la plantilla.
        </summary>
      <returns>
          Contenido de la plantilla.
        </returns>
      <param name="editingFrame">
              <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> cuyo contenido se va a obtener. 
            </param>
      <param name="templateName">
              Nombre de la plantilla. 
            </param>
      <param name="allowEditing">
              
                Es true si el contenido de la plantilla se puede editar, y false si el contenido es de sólo lectura. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplatePropertyParentType(System.String)">
      <summary>
          Obtiene el objeto <see cref="T:System.Type" /> correspondiente al elemento primario de la plantilla especificada.
        </summary>
      <returns>
          El objeto <see cref="T:System.Type" /> correspondiente al elemento primario de la plantilla especificada.
        </returns>
      <param name="templateName">
              Nombre de la plantilla.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador con el control <see cref="T:System.Web.UI.WebControls.DataGrid" /> especificado.
        </summary>
      <param name="component">
              Elemento del control que se va a diseñar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.OnColumnsChanged">
      <summary>
          Se invoca cuando cambian las columnas de la plantilla.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.OnTemplateEditingVerbsChanged">
      <summary>
          Se invoca cuando cambian los verbos de edición de plantillas.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>
          Establece el contenido de la plantilla y el marco especificados.
        </summary>
      <param name="editingFrame">
              <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> para el que se va a establecer el contenido. 
            </param>
      <param name="templateName">
              Nombre de la plantilla. 
            </param>
      <param name="templateContent">
              Nuevo contenido de la plantilla.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataListComponentEditor">
      <summary>
          Proporciona un editor de componentes para un control <see cref="T:System.Web.UI.WebControls.DataList" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.DataListComponentEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.#ctor(System.Int32)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.DataListComponentEditor" /> y establece su página inicial en el índice especificado.
        </summary>
      <param name="initialPage">
              Índice de la página inicial.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.GetComponentEditorPages">
      <summary>
          Obtiene una matriz de objetos <see cref="T:System.Type" /> que corresponden a las páginas que se pueden modificar utilizando este editor.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Type" /> que corresponden a las páginas que se pueden modificar utilizando este editor.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataListDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño del control de servidor Web <see cref="T:System.Web.UI.WebControls.DataList" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.AllowResize">
      <summary>
          Obtiene un valor que indica si se puede cambiar el tamaño del control <see cref="T:System.Web.UI.WebControls.DataList" />.
        </summary>
      <returns>
          
            Es true si la lista de datos tiene plantillas; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.AutoFormats">
      <summary>
          Obtiene el objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> asociado a este diseñador.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>
          Crea un marco de edición de plantillas utilizando el verbo especificado.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.
        </returns>
      <param name="verb">
              <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> para el que se va a crear el marco de edición de plantillas.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados utilizados por el objeto <see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> y, de forma opcional, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto los recursos administrados como los no administrados; es false para liberar únicamente los recursos no administrados. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetCachedTemplateEditingVerbs">
      <summary>
          Obtiene los verbos de edición de plantillas almacenados en caché que se encuentran disponibles para el diseñador.
        </summary>
      <returns>
          Una matriz de objetos <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> que son los verbos de edición de plantillas almacenados en memoria caché y que están disponibles para el diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el código HTML utilizado para representar el control <see cref="T:System.Web.UI.WebControls.DataList" /> en tiempo de diseño.
        </summary>
      <returns>
          HTML utilizado para representar el control <see cref="T:System.Web.UI.WebControls.DataList" /> en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetEmptyDesignTimeHtml">
      <summary>
          Obtiene el código HTML que se utiliza para representar a un control vacío basado en plantillas en tiempo de diseño.
        </summary>
      <returns>
          Código HTML que se utiliza para representar a un control vacío basado en plantillas en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
          Obtiene el código HTML que se va a mostrar en tiempo de diseño para la excepción especificada cuando se detecte un error al representar el control.
        </summary>
      <returns>
          El código HTML que se muestra en tiempo de diseño para la excepción especificada.
        </returns>
      <param name="e">
              Excepción que se ha producido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>
          Obtiene la propiedad <see cref="P:System.Web.UI.WebControls.DataListItem.System#Web#UI#IDataItemContainer#DataItem" /> del contenedor de plantillas.
        </summary>
      <returns>
          Propiedad <see cref="P:System.Web.UI.WebControls.DataListItem.System#Web#UI#IDataItemContainer#DataItem" /> del contenedor de la plantilla.
        </returns>
      <param name="templateName">
              Nombre de la plantilla. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>
          Obtiene el contenido de la plantilla.
        </summary>
      <returns>
          Contenido de la plantilla.
        </returns>
      <param name="editingFrame">
              Instancia de <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> cuyo contenido se va a obtener.
            </param>
      <param name="templateName">
              Nombre de la plantilla. 
            </param>
      <param name="allowEditing">
              
                Es true si el contenido de la plantilla se puede editar, y false si el contenido es de sólo lectura. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador con el componente especificado.
        </summary>
      <param name="component">
              Elemento del control que se va a diseñar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.OnSchemaRefreshed">
      <summary>
          Se invoca cuando el origen de datos al que está enlazado el control subyacente carga un nuevo esquema.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.OnTemplateEditingVerbsChanged">
      <summary>
          Se invoca cuando cambian los verbos de edición de plantillas.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>
          Establece el contenido de la plantilla y el marco especificados.
        </summary>
      <param name="editingFrame">
              Instancia de <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> cuyo contenido se va a establecer.
            </param>
      <param name="templateName">
              Nombre de la plantilla. 
            </param>
      <param name="templateContent">
              Nuevo contenido de la plantilla. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.TemplatesExist">
      <summary>
          Obtiene un valor que indica si hay plantillas definidas para el control asociado.
        </summary>
      <returns>
          
            Es true si el control asociado tiene plantillas definidas; de lo contrario, es false.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataProviderNameConverter">
      <summary>
          Crea una lista seleccionable por el usuario de objetos de datos de ActiveX® (ADO) con los nombres de los proveedores de .NET Framework (ADO.NET). 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.DataProviderNameConverter" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Devuelve una lista de los objetos de datos de ActiveX® (ADO) disponibles para los nombres de los proveedores de .NET Framework (ADO.NET).
        </summary>
      <returns>
          Una colección <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contiene los nombres de los proveedores disponibles de ADO.NET.
        </returns>
      <param name="context">
              Objeto que implementa la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información sobre un contexto a un convertidor de tipos para que este pueda realizar una conversión.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene un valor que indica si los objetos de datos de ActiveX® (ADO) devueltos para los nombres de los proveedores de .NET Framework (ADO.NET) constituyen una lista exclusiva de posibles valores.
        </summary>
      <returns>
          Siempre es false.
        </returns>
      <param name="context">
              Objeto que implementa la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información sobre un contexto a un convertidor de tipos para que este pueda realizar una conversión.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene un valor que indica si este objeto devuelve un conjunto estándar de objetos de datos de ActiveX® (ADO) para los nombres de los proveedores de .NET Framework (ADO.NET) que se pueden escoger en una lista.
        </summary>
      <returns>
          Siempre es true.
        </returns>
      <param name="context">
              Objeto que implementa la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información sobre un contexto a un convertidor de tipos para que este pueda realizar una conversión.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataSourceIDConverter">
      <summary>
          Crea una lista seleccionable por el usuario de nombres de origen de datos. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
          Obtiene un valor que indica si el convertidor puede convertir un objeto del tipo de origen especificado al tipo nativo del convertidor. 
        </summary>
      <returns>
          
            Es true si <paramref name="sourceType" /> es una cadena; en caso contrario, es false.
        </returns>
      <param name="context">
              Objeto que implementa la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información sobre un contexto a un convertidor de tipos para que este pueda realizar una conversión.
            </param>
      <param name="sourceType">
              Tipo (<see cref="T:System.Type" />) del objeto para el que se solicita la conversión.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
          Convierte el objeto especificado en el tipo nativo del convertidor. 
        </summary>
      <returns>
          El parámetro <paramref name="value" /> se devuelve como una cadena. 
        </returns>
      <param name="context">
              Objeto que implementa la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información sobre un contexto a un convertidor de tipos para que este pueda realizar una conversión.
            </param>
      <param name="culture">
              Un objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica la referencia cultural del parámetro <paramref name="value" />.
            </param>
      <param name="value">
              Objeto que se va a convertir.
            </param>
      <exception cref="T:System.NotSupportedException">
              
                <paramref name="value" /> es distinto de una cadena o null. 
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Devuelve una lista de los nombres de orígenes de datos disponibles.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contiene los nombres de los controles que implementan la interfaz <see cref="T:System.Web.UI.IDataSource" /> y están disponibles para su uso en el contexto determinado.
        </returns>
      <param name="context">
              Objeto que implementa la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información sobre un contexto a un convertidor de tipos para que este pueda realizar una conversión.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene un valor que indica si los nombres de orígenes de datos constituyen una lista exclusiva de valores posibles.
        </summary>
      <returns>
          Siempre es false.
        </returns>
      <param name="context">
              Objeto que implementa la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información sobre un contexto a un convertidor de tipos para que este pueda realizar una conversión.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene un valor que indica si este objeto devuelve un conjunto estándar de nombres de origen de datos que se pueden seleccionar de una lista.
        </summary>
      <returns>
          Siempre es true.
        </returns>
      <param name="context">
              Objeto que implementa la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información sobre un contexto a un convertidor de tipos para que este pueda realizar una conversión.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>
          Obtiene un valor que indica si el componente especificado es un origen de datos válido.
        </summary>
      <returns>
          
            true si <paramref name="component" /> es un origen de datos válido; de lo contrario, false.
        </returns>
      <param name="component">
              Objeto que implementa la interfaz <see cref="T:System.ComponentModel.IComponent" />.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DetailsViewDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.WebControls.DetailsView" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.#ctor">
      <summary>
          Inicializa una instancia nueva de la clase <see cref="T:System.Web.UI.Design.WebControls.DetailsViewDesigner" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones para este diseñador.
        </summary>
      <returns>
          El objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.AutoFormats">
      <summary>
          Obtiene la colección de esquemas de formato automático que se mostrará en el cuadro de diálogo Formato automático.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> que contiene los esquemas predefinidos de <see cref="T:System.Web.UI.WebControls.DetailsView" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>
          Enlaza el control asociado al origen de datos en tiempo de diseño.
        </summary>
      <param name="dataBoundControl">
              El control <see cref="T:System.Web.UI.WebControls.DetailsView" /> que se enlazará al origen de datos en tiempo de diseño.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado que se utiliza para representar el control asociado en tiempo de diseño. 
        </summary>
      <returns>
          Un tipo <see cref="T:System.String" /> que contiene el marcado utilizado para representar el control <see cref="T:System.Web.UI.WebControls.DetailsView" /> en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Obtiene el marcado que se utiliza para representar el control asociado en tiempo de diseño y rellena una colección de regiones del diseñador. 
        </summary>
      <returns>
          Un objeto <see cref="T:System.String" /> que contiene el marcado utilizado para representar el control <see cref="T:System.Web.UI.WebControls.DetailsView" /> en tiempo de diseño.
        </returns>
      <param name="regions">
              Un objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> al que se agregarán definiciones de las regiones seleccionables y sobre las que se puede hacer clic en la vista en tiempo de diseño del control.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>
          Devuelve el contenido de una región modificable de la vista en tiempo de diseño del control asociado.
        </summary>
      <returns>
          
            <see cref="F:System.String.Empty" />.
        </returns>
      <param name="region">
              El objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> del cual se va a recuperar contenido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, modificar y diseñar el control asociado.
        </summary>
      <param name="component">
              Un objeto <see cref="T:System.Web.UI.WebControls.DetailsView" /> que implementa una interfaz <see cref="T:System.ComponentModel.IComponent" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>
          Se llama a este método cuando se hace clic en una región de la vista en tiempo de diseño del control asociado.
        </summary>
      <param name="e">
              Un objeto <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> que define la región del control en la que se hizo clic.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.OnSchemaRefreshed">
      <summary>
          Se llama a este método cuando cambia el esquema del origen de datos correspondiente al control asociado. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Lo utiliza el diseñador para quitar o agregar propiedades adicionales en la cuadrícula Propiedades o crear copias sombra de las propiedades del control asociado.
        </summary>
      <param name="properties">
              Colección que implementa la interfaz <see cref="T:System.Collections.IDictionary" /> de las propiedades agregadas y con copia sombra. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.SampleRowCount">
      <summary>
          Especifica el número de filas de muestra que mostrará el control asociado.
        </summary>
      <returns>
          El número de filas de muestra que se mostrarán.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Especifica el contenido de una región modificable de la vista en tiempo de diseño del control asociado.
        </summary>
      <param name="region">
              El objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> que se va a actualizar.
            </param>
      <param name="content">
              El objeto <see cref="T:System.String" /> que se va a escribir en <paramref name="region" />.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.TemplateGroups">
      <summary>
          Obtiene una colección de grupos de plantillas para los campos del control asociado.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> que contiene un elemento por cada campo con plantilla del control <see cref="T:System.Web.UI.WebControls.DetailsView" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia temporal, en lugar del control real que está asociado al diseñador, para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor">
      <summary>
          Proporciona un editor de componentes para las colecciones de objetos de correo incrustados en un objeto <see cref="T:System.Web.UI.WebControls.MailDefinition" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor" />.
        </summary>
      <param name="type">
              La <see cref="T:System.Type" /> de la colección que se va a editar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Modifica el valor del objeto especificado mediante el proveedor de servicios y el contexto especificados.
        </summary>
      <returns>
          El nuevo <paramref name="value" />; de lo contrario, si el valor del objeto no ha cambiado, <paramref name="value" /> sin modificar.
        </returns>
      <param name="context">
              Una <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              Un objeto que implementa una <see cref="T:System.IServiceProvider" /> a través de la cual se pueden obtener los servicios de edición. 
            </param>
      <param name="value">
              Objeto cuyo valor se va a editar. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.FormViewDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.WebControls.FormView" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.FormViewDesigner" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones para este diseñador.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.AutoFormats">
      <summary>
          Obtiene la colección de esquemas de formato automático que se mostrará en el cuadro de diálogo Formato automático.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> que contiene los esquemas predefinidos para <see cref="T:System.Web.UI.WebControls.FormView" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado que se utiliza para representar el control asociado en tiempo de diseño. 
        </summary>
      <returns>
          Objeto <see cref="T:System.String" /> que contiene el marcado que se utiliza para representar el control <see cref="T:System.Web.UI.WebControls.FormView" /> en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.GetEmptyDesignTimeHtml">
      <summary>
          Obtiene el texto de marcado que se utiliza para representar un marcador para el control asociado en tiempo de diseño.
        </summary>
      <returns>
          Una <see cref="T:System.String" /> que contiene texto de marcado que representa un marcador de posición en la superficie de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, modificar y diseñar el control asociado.
        </summary>
      <param name="component">
              <see cref="T:System.Web.UI.WebControls.FormView" /> que implementa un <see cref="T:System.ComponentModel.IComponent" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.OnSchemaRefreshed">
      <summary>
          Se llama a este método cuando cambia el esquema del origen de datos correspondiente al control asociado. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.SampleRowCount">
      <summary>
          Especifica el número de filas de ejemplo que mostrará el control asociado.
        </summary>
      <returns>
          Número de filas de ejemplo.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.TemplateGroups">
      <summary>
          Obtiene una colección de grupos de plantillas para los campos del control asociado.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> que contiene un elemento para cada campo con plantilla de <see cref="T:System.Web.UI.WebControls.FormView" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia temporal en lugar del control real asociado al diseñador para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre devuelve true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.GridViewDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.WebControls.GridView" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.GridViewDesigner" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones de este diseñador.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.AutoFormats">
      <summary>
          Obtiene la colección de esquemas de aplicación de formato predefinidos que se mostrará en el cuadro de diálogo Formato automático.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> que contiene los esquemas predefinidos del objeto <see cref="T:System.Web.UI.WebControls.GridView" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>
          Enlaza el control asociado al origen de datos en tiempo de diseño.
        </summary>
      <param name="dataBoundControl">
              Control <see cref="T:System.Web.UI.WebControls.GridView" /> que se va a enlazar al origen de datos en tiempo de diseño.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado que se utiliza para representar el control asociado en tiempo de diseño. 
        </summary>
      <returns>
          Objeto <see cref="T:System.String" /> que contiene el marcado que se utiliza para representar el control <see cref="T:System.Web.UI.WebControls.GridView" /> en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Obtiene el marcado que se utiliza para representar el control asociado en tiempo de diseño y rellena una colección de regiones del diseñador.
        </summary>
      <returns>
          Objeto <see cref="T:System.String" /> que contiene el marcado que se utiliza para representar el control <see cref="T:System.Web.UI.WebControls.GridView" /> en tiempo de diseño.
        </returns>
      <param name="regions">
              Colección <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> donde se agregan las definiciones de las regiones seleccionables y activables de la vista en tiempo de diseño del control.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>
          Devuelve el contenido de un área modificable de la vista en tiempo de diseño del control asociado.
        </summary>
      <returns>
          
            <see cref="F:System.String.Empty" />.
        </returns>
      <param name="region">
              Objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> a partir del cual se va a recuperar contenido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, editar y diseñar el control asociado.
        </summary>
      <param name="component">
              Objeto <see cref="T:System.Web.UI.WebControls.GridView" /> que implementa una interfaz <see cref="T:System.ComponentModel.IComponent" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>
          Se llama a este método cuando se hace clic en una región de la vista en tiempo de diseño del control asociado.
        </summary>
      <param name="e">
              Objeto <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> que define la región del control en la que se hizo clic.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.OnSchemaRefreshed">
      <summary>
          Se llama a este método cuando cambia el esquema del origen de datos correspondiente al control asociado. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          El diseñador utiliza este miembro para quitar propiedades o agregar propiedades adicionales a la presentación en la cuadrícula Propiedades, o para realizar copias sombra de las propiedades del control asociado.
        </summary>
      <param name="properties">
              Colección que implementa la interfaz <see cref="T:System.Collections.IDictionary" /> de las propiedades agregadas y con copia sombra.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.SampleRowCount">
      <summary>
          Especifica el número de filas de ejemplo que el control asociado va a mostrar.
        </summary>
      <returns>
          Número de filas de ejemplo.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Especifica el contenido de un área modificable de la vista en tiempo de diseño del control asociado.
        </summary>
      <param name="region">
              <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> que se va a actualizar.
            </param>
      <param name="content">
              Objeto <see cref="T:System.String" /> que se va a escribir en <paramref name="region" />.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.TemplateGroups">
      <summary>
          Obtiene una colección de grupos de plantillas para los campos del control asociado.
        </summary>
      <returns>
          Colección <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> que contiene un elemento por cada campo con plantilla del control <see cref="T:System.Web.UI.WebControls.GridView" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia temporal en lugar del control real asociado al diseñador para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HiddenFieldDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.WebControls.HiddenField" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.HiddenFieldDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el formato que se utiliza para representar el control asociado en tiempo de diseño. 
        </summary>
      <returns>
          Una cadena que contiene el formato utilizado para representar el control <see cref="T:System.Web.UI.WebControls.HiddenField" /> en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para poder ver, modificar y diseñar el control asociado.
        </summary>
      <param name="component">
              <see cref="T:System.Web.UI.WebControls.HiddenField" />, que implementa un <see cref="T:System.ComponentModel.IComponent" />.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un host del diseñador para el control <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones para este diseñador.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.ConnectToDataSource">
      <summary>
          Realiza las acciones necesarias para conectar con el origen de datos actual.
        </summary>
      <returns>
          
            Es true si se realizó una conexión a un nuevo origen de datos; false si el anterior origen de datos y el nuevo son el mismo.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.CreateDataSource">
      <summary>
          Crea un nuevo origen de datos para el control asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>
          Enlaza el control asociado al origen de datos en tiempo de diseño.
        </summary>
      <param name="dataBoundControl">
              El control <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> que se enlazará al origen de datos en tiempo de diseño.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DataSourceDesigner">
      <summary>
          Proporciona el acceso al diseñador del origen de datos, cuando se selecciona uno para el enlace de datos.
        </summary>
      <returns>
          El diseñador para el origen de datos del control asociado derivado de la clase <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />, que implementa la interfaz <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DesignerView">
      <summary>
          Obtiene la vista predeterminada del origen de datos enlazado al control asociado. 
        </summary>
      <returns>
          El objeto <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> que representa la vista predeterminada del origen de datos. 
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DisconnectFromDataSource">
      <summary>
          Realiza las acciones necesarias para desconectar del origen de datos actual.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.GetDesignTimeDataSource">
      <summary>
          Obtiene un origen de datos que se puede utilizar en tiempo de diseño para el control asociado.
        </summary>
      <returns>
          Un objeto que implementa la interfaz <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> que se puede utilizarse como origen de datos para los controles derivados de la clase <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.GetSampleDataSource">
      <summary>
          Construye un origen de datos de muestra que se puede utilizar en tiempo de diseño para el control asociado.
        </summary>
      <returns>
          Un objeto que implementa la interfaz <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> que se puede utilizarse como origen de datos para los controles derivados de la clase <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Lo utiliza el diseñador para quitar propiedades o agregar propiedades adicionales a la presentación en la cuadrícula Propiedades, o bien, para realizar copias sombra de las propiedades del control asociado.
        </summary>
      <param name="properties">
              Colección que implementa la interfaz <see cref="T:System.Collections.IDictionary" /> de las propiedades agregadas y con copia sombra. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.UseDataSourcePickerActionList">
      <summary>
          Se utiliza para determinar si el control debe representar sus listas de acciones predeterminadas, conteniendo una lista desplegable de Id. de orígenes de datos y tareas relacionadas.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter">
      <summary>
          Crea una lista seleccionable por el usuario de nombres de origen de datos jerárquicos. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>
          Obtiene un valor que indica si el componente especificado es un origen de datos válido.
        </summary>
      <returns>
          
            true si <paramref name="component" /> es un origen de datos válido; de lo contrario, false.
        </returns>
      <param name="component">
              Objeto que implementa <see cref="T:System.ComponentModel.IComponent" />.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor">
      <summary>
          Proporciona un editor de componente para objetos <see cref="T:System.Web.UI.WebControls.HotSpotCollection" /> de un <see cref="T:System.Web.UI.WebControls.ImageMap" /> o un control similar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" />.
        </summary>
      <param name="type">
              Tipo de la colección que se va a editar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.CanSelectMultipleInstances">
      <summary>
          Obtiene un valor que indica si varios elementos de la colección <see cref="T:System.Web.UI.WebControls.HotSpot" /> se pueden seleccionar a la vez.
        </summary>
      <returns>
          Siempre es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.CreateNewItemTypes">
      <summary>
          Obtiene los diversos tipos de datos que puede crear el editor de la colección.
        </summary>
      <returns>
          Matriz de tipos de los tipos de datos que <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> puede crear.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.HelpTopic">
      <summary>
          Obtiene el tema de Ayuda correspondiente al objeto <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" />.
        </summary>
      <returns>
          Cadena que especifica el tema de Ayuda que se debe mostrar.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HyperLinkDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control de servidor Web <see cref="T:System.Web.UI.WebControls.HyperLink" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.HyperLinkDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado que se utiliza para representar el control asociado en tiempo de diseño.
        </summary>
      <returns>
          Cadena que contiene el marcado que se utiliza para representar el control de hipervínculo asociado en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
          Se llama a este método cuando hay un cambio en el control asociado.
        </summary>
      <param name="sender">
              Objeto que es el origen del evento.
            </param>
      <param name="ce">
              Objeto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene los datos de eventos.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LabelDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control de servidor Web <see cref="T:System.Web.UI.WebControls.Label" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LabelDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.LabelDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LabelDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
          Se llama cuando hay un cambio en el control asociado.
        </summary>
      <param name="sender">
              El objeto que es el origen del evento.
            </param>
      <param name="ce">
              <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LinkButtonDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control de servidor Web <see cref="T:System.Web.UI.WebControls.LinkButton" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinkButtonDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.LinkButtonDesigner" />.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControlDataBindingHandler">
      <summary>
          Realiza el enlace de datos de un control de servidor Web <see cref="T:System.Web.UI.WebControls.ListControl" /> en un diseñador visual.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDataBindingHandler.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.ListControlDataBindingHandler" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>
          Realiza un enlace de datos sobre el control especificado.
        </summary>
      <param name="designerHost">
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> para el documento que contiene el control. 
            </param>
      <param name="control">
              <see cref="T:System.Web.UI.Control" /> que se va a enlazar. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControlDesigner">
      <summary>
          Sirve de clase base para los diseñadores que proporcionan compatibilidad en tiempo de diseño en el diseñador Web visual para los controles que se derivan de la clase abstracta <see cref="T:System.Web.UI.WebControls.ListControl" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.ListControlDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones del diseñador.
        </summary>
      <returns>
          Colección <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociada al diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>
          Enlaza el control especificado al origen de datos en tiempo de diseño. 
        </summary>
      <param name="dataBoundControl">
              Control asociado que se deriva de <see cref="T:System.Web.UI.WebControls.ListControl" />, o una copia del control.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField">
      <summary>
          Obtiene o establece el campo de texto de datos del control.
        </summary>
      <returns>
          Propiedad <see cref="P:System.Web.UI.WebControls.ListControl.DataTextField" /> del control de lista.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField">
      <summary>
          Obtiene o establece el campo de valor de datos del control.
        </summary>
      <returns>
          Propiedad <see cref="P:System.Web.UI.WebControls.ListControl.DataValueField" /> del control de lista.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el código HTML que se utiliza para representar el control en tiempo de diseño.
        </summary>
      <returns>
          Objeto <see cref="T:System.String" /> que contiene el marcado utilizado para representar el control que se deriva de <see cref="T:System.Web.UI.WebControls.ListControl" /> en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource">
      <summary>
          Obtiene el componente de origen de datos del contenedor del control asociado, que se resuelve en un miembro de datos específico.
        </summary>
      <returns>
          Interfaz <see cref="T:System.Collections.IEnumerable" /> que contiene la propiedad <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" /> en tiempo de diseño, que se resuelve en la propiedad <see cref="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember" /> del control asociado.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource">
      <summary>
          Obtiene el componente de origen de datos del contenedor del control asociado.
        </summary>
      <returns>
          Objeto que implementa una interfaz <see cref="T:System.Collections.IEnumerable" /> y que contiene la propiedad <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" /> en tiempo de diseño del control asociado.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, editar y diseñar el control asociado.
        </summary>
      <param name="component">
              Control derivado de <see cref="T:System.Web.UI.WebControls.ListControl" /> que implementa una interfaz <see cref="T:System.ComponentModel.IComponent" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged">
      <summary>
          Se le llama a este método cuando el origen de datos para el control asociado ha cambiado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged(System.Boolean)">
      <summary>
          Se le llama a este método cuando el origen de datos para el control asociado ha cambiado.
        </summary>
      <param name="forceUpdateView">
              Estructura <see cref="T:System.Boolean" /> que indica si el marcado en tiempo de diseño se va a actualizar de forma incondicional. Este parámetro se omite. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          El diseñador utiliza este miembro para quitar propiedades adicionales o agregar propiedades a la presentación en la cuadrícula Propiedades, o para realizar copias sombra de las propiedades del control asociado.
        </summary>
      <param name="properties">
              Colección que implementa la interfaz <see cref="T:System.Collections.IDictionary" /> de las propiedades agregadas o con copia sombra para exponérselas al control asociado en tiempo de diseño. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.UseDataSourcePickerActionList">
      <summary>
          Determina si el control asociado debe representar las listas de acciones predeterminadas.
        </summary>
      <returns>
          Siempre devuelve false.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor">
      <summary>
          Proporciona un editor de componentes para los objetos <see cref="T:System.Web.UI.WebControls.ListItemCollection" /> en un control derivado de <see cref="T:System.Web.UI.WebControls.ListControl" /> o un control similar.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor" />.
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> de la colección que se va a editar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.CanSelectMultipleInstances">
      <summary>
          Obtiene un valor que indica si se pueden seleccionar varios elementos <see cref="T:System.Web.UI.WebControls.ListItem" /> a la vez.
        </summary>
      <returns>
          Siempre es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.HelpTopic">
      <summary>
          Obtiene el tema de Ayuda que se va a mostrar para el objeto <see cref="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor" />.
        </summary>
      <returns>
          Una cadena <see cref="T:System.String" /> que especifica el tema de Ayuda que se va a mostrar.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LiteralDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control de servidor Web <see cref="T:System.Web.UI.WebControls.Literal" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LiteralDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.LiteralDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LiteralDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
          Se llama cuando hay un cambio en el control asociado.
        </summary>
      <param name="sender">
              El objeto que es el origen del evento.
            </param>
      <param name="ce">
              Objeto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control de servidor Web <see cref="T:System.Web.UI.WebControls.Login" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones para este diseñador.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.AutoFormats">
      <summary>
          Obtiene la colección de esquemas de formato predefinido que se mostrará en el cuadro de diálogo Formato automático.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> que contiene los esquemas predefinidos de <see cref="T:System.Web.UI.WebControls.Login" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Obtiene el marcado que se utiliza para representar el control asociado en tiempo de diseño y rellena una colección de regiones del diseñador.
        </summary>
      <returns>
          Una cadena que contiene el formato utilizado para representar el control <see cref="T:System.Web.UI.WebControls.Login" /> en tiempo de diseño.
        </returns>
      <param name="regions">
              <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> al que se agregan definiciones de las regiones seleccionables y en las que se puede hacer clic en la vista en tiempo de diseño del control.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>
          Devuelve una copia serializada de la plantilla utilizada para representar el control asociado en tiempo de diseño.
        </summary>
      <returns>
          Cadena que contiene una copia serializada de la plantilla utilizada para representar el control <see cref="T:System.Web.UI.WebControls.Login" /> asociado en tiempo de diseño.
        </returns>
      <param name="region">
              El objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> del cual se va a recuperar contenido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
          Proporciona el marcado que se usa para representar el control asociado en tiempo de diseño cuando se produce un error.
        </summary>
      <returns>
          Cadena que contiene el marcado utilizado para representar el control <see cref="T:System.Web.UI.WebControls.Login" /> asociado en tiempo de diseño cuando se ha producido un error.
        </returns>
      <param name="e">
              La excepción <see cref="T:System.Exception" /> que se ha producido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, modificar y diseñar el control asociado.
        </summary>
      <param name="component">
              Un objeto <see cref="T:System.Web.UI.WebControls.Login" /> que implementa una interfaz <see cref="T:System.ComponentModel.IComponent" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Lo utiliza el diseñador para quitar propiedades o agregar propiedades adicionales a la presentación en la cuadrícula Propiedades, o bien, para realizar copias sombra de las propiedades del control asociado.
        </summary>
      <param name="properties">
              Colección que implementa la interfaz <see cref="T:System.Collections.IDictionary" /> de las propiedades agregadas y con copia sombra. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Establece una región del control asociado a partir de una copia serializada de una plantilla de control.
        </summary>
      <param name="region">
              Un objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> que proporciona el nombre de la región a actualizar.
            </param>
      <param name="content">
              Cadena que contiene una plantilla serializada para el control asociado.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.TemplateGroups">
      <summary>
          Obtiene una colección de grupos de plantillas para los campos del control asociado.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> que contiene un elemento por cada campo con plantilla del control <see cref="T:System.Web.UI.WebControls.Login" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia temporal, en lugar del control real que está asociado al diseñador, para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginNameDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control de servidor Web <see cref="T:System.Web.UI.WebControls.LoginName" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginNameDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.LoginNameDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginNameDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
          Proporciona el marcado que se usa para representar el control asociado en tiempo de diseño cuando se produce un error.
        </summary>
      <returns>
          Cadena que contiene el marcado utilizado para representar el control <see cref="T:System.Web.UI.WebControls.LoginName" /> asociado en tiempo de diseño cuando se ha producido un error.
        </returns>
      <param name="e">
              <see cref="T:System.Exception" /> que se ha iniciado.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginNameDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia temporal en lugar del control real que está asociado al diseñador para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginStatusDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control de servidor Web <see cref="T:System.Web.UI.WebControls.LoginStatus" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.LoginStatusDesigner" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginStatusDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones para este diseñador.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado que se utiliza para representar el control asociado en tiempo de diseño. 
        </summary>
      <returns>
          Cadena que contiene el marcado utilizado para representar el <see cref="T:System.Web.UI.WebControls.LoginStatus" /> en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, editar y diseñar el control asociado.
        </summary>
      <param name="component">
              <see cref="T:System.Web.UI.WebControls.LoginStatus" /> que implementa un <see cref="T:System.ComponentModel.IComponent" />.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginStatusDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia temporal en lugar del control real que está asociado al diseñador para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginViewDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control de servidor Web <see cref="T:System.Web.UI.WebControls.LoginView" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.LoginViewDesigner" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones para este diseñador.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado que se utiliza para representar el control asociado en tiempo de diseño. 
        </summary>
      <returns>
          Cadena que contiene el marcado utilizado para representar el <see cref="T:System.Web.UI.WebControls.LoginView" /> en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Obtiene el marcado que se utiliza para representar el control asociado en tiempo de diseño y rellena una colección de regiones del diseñador. 
        </summary>
      <returns>
          Cadena que contiene el marcado utilizado para representar el <see cref="T:System.Web.UI.WebControls.LoginView" /> en tiempo de diseño.
        </returns>
      <param name="regions">
              <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> al que se agregan definiciones de las regiones seleccionables y en las que se puede hacer clic en la vista en tiempo de diseño de <see cref="T:System.Web.UI.WebControls.LoginView" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>
          Devuelve una copia serializada de la plantilla actual utilizada para representar el control asociado en tiempo de diseño.
        </summary>
      <returns>
          Cadena que contiene una copia serializada de la plantilla utilizada para representar el control <see cref="T:System.Web.UI.WebControls.LoginView" /> asociado en tiempo de diseño.
        </returns>
      <param name="region">
              <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> para la que se va a obtener contenido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml">
      <summary>
          Obtiene el marcado que representa un marcador de posición en tiempo de diseño para el control asociado cuando no se define la plantilla actual.
        </summary>
      <returns>
          Cadena que contiene texto de marcado que representa un marcador de posición en la superficie de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
          Proporciona el marcado que representa el control asociado en tiempo de diseño cuando se produce un error.
        </summary>
      <returns>
          Cadena que contiene el marcado utilizado para representar el control <see cref="T:System.Web.UI.WebControls.LoginView" /> asociado en tiempo de diseño cuando se ha producido un error.
        </returns>
      <param name="e">
              <see cref="T:System.Exception" /> que se ha iniciado.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, editar y diseñar el control asociado.
        </summary>
      <param name="component">
              <see cref="T:System.Web.UI.WebControls.LoginView" /> que implementa un <see cref="T:System.ComponentModel.IComponent" />.
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="component" /> no es una clase <see cref="T:System.Web.UI.WebControls.LoginView" /> ni una clase derivada de <see cref="T:System.Web.UI.WebControls.LoginView" />.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
          Llamado cuando hay un cambio en el control asociado con este diseñador.
        </summary>
      <param name="sender">
              Origen del evento.
            </param>
      <param name="e">
              <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Lo utiliza el diseñador para quitar propiedades o agregar propiedades a la presentación en la cuadrícula Propiedades, o bien, para realizar copias sombra de las propiedades del control asociado.
        </summary>
      <param name="properties">
              Colección que implementa el <see cref="T:System.Collections.IDictionary" /> de las propiedades agregadas o con copia sombra. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Establece una región del control asociado a partir de una copia serializada de una plantilla de control.
        </summary>
      <param name="region">
              <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> que proporciona el nombre de la región para actualizar.
            </param>
      <param name="content">
              Cadena que contiene una plantilla serializada para el control asociado.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups">
      <summary>
          Obtiene una colección de grupos de plantillas para los campos del control asociado.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> que contiene un elemento para cada plantilla del control <see cref="T:System.Web.UI.WebControls.LoginView" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia temporal en lugar del control real que está asociado al diseñador para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor">
      <summary>
          Proporciona un editor para seleccionar los archivos de cuerpo de mensaje de un objeto <see cref="T:System.Web.UI.WebControls.MailDefinition" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.Caption">
      <summary>
          Título que va a aparecer en el formulario <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" />.
        </summary>
      <returns>
          Cadena que constituye el título que va a aparecer en el formulario del editor.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.Filter">
      <summary>
          Lista de tipos de archivo que va a aceptar el objeto <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" />.
        </summary>
      <returns>
          Cadena que especifica un nombre descriptivo para cada tipo de archivo aceptado y las especificaciones de archivo para cada tipo.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuBindingsEditor">
      <summary>
          Proporciona un editor de componentes para la colección <see cref="P:System.Web.UI.WebControls.Menu.DataBindings" /> del control <see cref="T:System.Web.UI.WebControls.Menu" /> asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.MenuBindingsEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Edita el valor de la colección de enlaces de datos del control <see cref="T:System.Web.UI.WebControls.Menu" /> asociado.
        </summary>
      <returns>
          <paramref name="value" /> nuevo; de lo contrario, si el valor del objeto no ha cambiado, <paramref name="value" /> sin modificar.
        </returns>
      <param name="context">
              Objeto que implementa la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizada para adquirir información de contexto.
            </param>
      <param name="provider">
              Objeto que implementa la interfaz <see cref="T:System.IServiceProvider" />, a través de la cual se pueden obtener los servicios de edición.
            </param>
      <param name="value">
              Objeto cuyo valor se va a editar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de edición asociado a este editor.
        </summary>
      <returns>
          Siempre es <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal" />.
        </returns>
      <param name="context">
              Objeto que implementa la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el contexto del objeto que se va a editar.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.WebControls.Menu" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.MenuDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones para este diseñador.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.AutoFormats">
      <summary>
          Obtiene la colección de esquemas de formato predefinido que se muestra en el cuadro de diálogo Formato automático.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> que contiene los esquemas predefinidos de <see cref="T:System.Web.UI.WebControls.Menu" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.CanRefreshSchema">
      <summary>
          Obtiene un valor que indica si el proveedor puede actualizar el esquema.
        </summary>
      <returns>
          
            Es true si se puede actualizar el esquema; de lo contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>
          Enlaza el control asociado al origen de datos en tiempo de diseño.
        </summary>
      <param name="dataBoundControl">
              El control <see cref="T:System.Web.UI.WebControls.Menu" /> que se enlazará al origen de datos en tiempo de diseño.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado que se utiliza para representar el control asociado en tiempo de diseño. 
        </summary>
      <returns>
          Una cadena que contiene el formato utilizado para representar el control <see cref="T:System.Web.UI.WebControls.Menu" /> en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetEmptyDesignTimeHtml">
      <summary>
          Obtiene el marcado que representa un marcador de posición en tiempo de diseño para el control asociado cuando no se dispone de ningún tipo de marcado.
        </summary>
      <returns>
          Cadena que contiene texto de marcado que representa un marcador de posición en la superficie de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
          Proporciona el marcado que representa el control asociado en tiempo de diseño cuando se produce un error.
        </summary>
      <returns>
          Cadena que contiene el marcado utilizado para representar el control <see cref="T:System.Web.UI.WebControls.Menu" /> asociado en tiempo de diseño cuando se ha producido un error.
        </returns>
      <param name="e">
              El objeto <see cref="T:System.Exception" /> que se ha producido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetSampleDataSource">
      <summary>
          Crea un origen de datos de ejemplo para utilizarlo en tiempo de diseño para el control asociado.
        </summary>
      <returns>
          Un objeto que implementa <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> para utilizarlo como un origen de datos para el <see cref="T:System.Web.UI.WebControls.Menu" /> asociado.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, modificar y diseñar el control asociado.
        </summary>
      <param name="component">
              <see cref="T:System.Web.UI.WebControls.Menu" /> que implementa la interfaz <see cref="T:System.ComponentModel.IComponent" />.
            </param>
      <exception cref="T:System.ArgumentException">
              
                component no es un objeto <see cref="T:System.Web.UI.WebControls.Menu" /> ni una clase derivada de <see cref="T:System.Web.UI.WebControls.Menu" />.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.RefreshSchema(System.Boolean)">
      <summary>
          Actualiza el esquema de la vista de origen de datos para el control <see cref="T:System.Web.UI.WebControls.Menu" /> asociado.
        </summary>
      <param name="preferSilent">
              Si el valor es true, no se muestran mensajes de error cuando se producen excepciones al procesar; de lo contrario, se muestran mensajes de excepción.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.Schema">
      <summary>
          Obtiene un esquema que describe la vista de origen de datos para el control <see cref="T:System.Web.UI.WebControls.Menu" /> asociado.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> que describe la estructura del origen de datos.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>
          Para obtener una descripción de este miembro, vea la propiedad <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>
          Para obtener una descripción de este miembro, vea el método <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" />.
        </summary>
      <param name="preferSilent">
              
                true para indicar que no se deben mostrar mensajes de error cuando se producen excepciones durante el procesamiento; de lo contrario, false.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>
          Para obtener una descripción de este miembro, vea la propiedad <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.TemplateGroups">
      <summary>
          Obtiene una colección de grupos de plantillas para las plantillas del control asociado.
        </summary>
      <returns>
          Una colección <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> que contiene un elemento para cada plantilla del <see cref="T:System.Web.UI.WebControls.Menu" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia del control asociado o el control real para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuItemCollectionEditor">
      <summary>
          Proporciona un editor de componentes para la colección especificada por la propiedad <see cref="P:System.Web.UI.WebControls.Menu.Items" /> del control <see cref="T:System.Web.UI.WebControls.Menu" /> asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.MenuItemCollectionEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Edita el valor de la colección de elementos de menú del control asociado.
        </summary>
      <returns>
          <paramref name="value" /> nuevo; de lo contrario, si el valor del objeto no ha cambiado, <paramref name="value" /> sin modificar.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para adquirir información de contexto.
            </param>
      <param name="provider">
              Objeto que implementa un <see cref="T:System.IServiceProvider" /> a través del cual se pueden obtener los servicios de edición.
            </param>
      <param name="value">
              Objeto cuyo valor se va a editar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de edición asociado a este editor.
        </summary>
      <returns>
          Siempre devuelve <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal" />.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el contexto del objeto que se va a editar.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor">
      <summary>
          Proporciona un editor de componentes para los objetos <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> del control <see cref="T:System.Web.UI.WebControls.Menu" /> asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" />.
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> de la colección que se edita. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CanSelectMultipleInstances">
      <summary>
          Obtiene un valor que indica si pueden estar seleccionados varios elementos <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> a la vez en el editor.
        </summary>
      <returns>
          Siempre es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateCollectionForm">
      <summary>
          Crea un formulario que permite mostrar y editar el objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> actual.
        </summary>
      <returns>
          Una instancia de <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> que se utiliza como <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateInstance(System.Type)">
      <summary>
          Crea una nueva instancia del tipo de elemento de colección especificado.
        </summary>
      <returns>
          Nueva instancia del tipo especificado, <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />.
        </returns>
      <param name="itemType">
              <see cref="T:System.Type" /> del elemento que se crea. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateNewItemTypes">
      <summary>
          Obtiene los tipos de datos que puede crear el editor de esta colección.
        </summary>
      <returns>
          Una matriz de los tipos de datos que puede crear el <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MultiViewDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control de servidor Web <see cref="T:System.Web.UI.WebControls.MultiView" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MultiViewDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.MultiViewDesigner" />. 
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control de servidor Web <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.CanConfigure">
      <summary>
          Obtiene un valor que indica si se puede llamar al método <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure" />.
        </summary>
      <returns>
          
            Es true si se puede llamar al método <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure" />; es false en caso contrario.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.CanRefreshSchema">
      <summary>
          Obtiene un valor que indica si se puede llamar al método <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)" />.
        </summary>
      <returns>
          
            Es true si se puede llamar al método <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)" />; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure">
      <summary>
          Muestra el Asistente para configurar origen de datos en la superficie del diseñador visual.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.GetView(System.String)">
      <summary>
          Devuelve una vista de origen de datos con el nombre especificado.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> con el nombre especificado por <paramref name="viewName" />.
        </returns>
      <param name="viewName">
              Cadena que contiene el nombre de <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.GetViewNames">
      <summary>
          Devuelve una lista con nombres de vista de origen de datos para el control asociado.
        </summary>
      <returns>
          Una matriz de cadenas que contiene los nombres de los objetos <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> del control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> asociado.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Lo utiliza el diseñador para quitar propiedades o agregar propiedades adicionales a la cuadrícula Propiedades o para realizar copias sombra de las propiedades del control asociado.
        </summary>
      <param name="properties">
              Colección que implementa la interfaz <see cref="T:System.Collections.IDictionary" /> de las propiedades agregadas y sombreadas. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>
          Extrae los metadatos para el método Select del objeto comercial especificado por el control asociado.
        </summary>
      <param name="preferSilent">
              Si el valor es true, no se muestran mensajes de error cuando se producen excepciones al procesar; de lo contrario, se muestran mensajes de excepción.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.SelectMethod">
      <summary>
          Obtiene o establece el nombre del método que se va a ejecutar cuando se llama al método <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> del control asociado.
        </summary>
      <returns>
          Una cadena que contiene el nombre del método que se va a ejecutar cuando se llama a <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.TypeName">
      <summary>
          Obtiene o establece el nombre del tipo que contiene los métodos especificados en el control asociado.
        </summary>
      <returns>
          Una cadena que contiene el nombre del tipo que contiene los métodos que realizan las operaciones de eliminación, inserción, selección y actualización de bases de datos especificadas en el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> asociado.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView">
      <summary>
          Proporciona la vista en tiempo de diseño asociada a la clase <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.ObjectDataSourceDesigner,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" />. 
        </summary>
      <param name="owner">
              <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> propietario de este objeto <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" />.
            </param>
      <param name="viewName">
              Cadena que contiene el nombre de este objeto <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" />.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanDelete">
      <summary>
          Obtiene un valor que indica si el control de origen de datos asociado tal como está actualmente configurado puede realizar una operación de eliminación.
        </summary>
      <returns>
          
            Es true si el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> asociado puede realizar una operación de eliminación; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanInsert">
      <summary>
          Obtiene un valor que indica si el control de origen de datos asociado tal como está actualmente configurado puede realizar una operación de inserción.
        </summary>
      <returns>
          
            Es true si el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> asociado puede realizar una operación de inserción; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanPage">
      <summary>
          Obtiene un valor que indica si el control de origen de datos asociado puede realizar la paginación basada en el servidor.
        </summary>
      <returns>
          Siempre es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>
          Obtiene un valor que indica si el control de origen de datos asociado puede devolver el número total de filas que devuelve una consulta.
        </summary>
      <returns>
          Siempre es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanSort">
      <summary>
          Obtiene un valor que indica si el control de origen de datos asociado puede ordenar las filas.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanUpdate">
      <summary>
          Obtiene un valor que indica si el control de origen de datos asociado tal como está actualmente configurado puede realizar una operación de actualización.
        </summary>
      <returns>
          
            Es true si el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> asociado puede realizar una operación de actualización; de lo contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>
          Genera datos en tiempo de diseño que coinciden con el esquema del control de origen de datos asociado.
        </summary>
      <returns>
          Un ejemplo de los datos que representa el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> asociado; de lo contrario, es null si el diseñador no puede generar datos de ejemplo.
        </returns>
      <param name="minimumRows">
              Entero que contiene el número mínimo de filas que se van a recuperar.
            </param>
      <param name="isSampleData">
              Valor que indica si los datos devueltos son datos de ejemplo o datos reales.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.Schema">
      <summary>
          Obtiene un esquema que describe la vista de origen de datos representada por este objeto de vista.
        </summary>
      <returns>
          Un objeto que implementa <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> que describe la vista y las propiedades de los objetos en la lista; de lo contrario, es null si no está disponible.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PanelContainerDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.WebControls.Panel" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.PanelContainerDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)">
      <summary>
          Agrega representaciones de cadena de atributos de estilo a una colección que se va a utilizar en la representación del control en tiempo de diseño.
        </summary>
      <param name="styleAttributes">
              Colección de atributos de estilo que implementa la interfaz <see cref="T:System.Collections.IDictionary" />. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.FrameCaption">
      <summary>
          Obtiene el título que aparece en el control <see cref="T:System.Web.UI.WebControls.Panel" /> asociado.
        </summary>
      <returns>
          Cadena que contiene el título del panel.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.FrameStyle">
      <summary>
          Obtiene los estilos del control <see cref="T:System.Web.UI.WebControls.Panel" /> asociado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.WebControls.Style" /> que contiene los estilos en tiempo de diseño del control <see cref="T:System.Web.UI.WebControls.Panel" /> asociado.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, editar y diseñar el control asociado.
        </summary>
      <param name="component">
              Objeto <see cref="T:System.Web.UI.WebControls.Panel" /> que implementa una interfaz <see cref="T:System.ComponentModel.IComponent" />.
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="component" /> no es un control <see cref="T:System.Web.UI.WebControls.Panel" /> ni una clase que se derive de <see cref="T:System.Web.UI.WebControls.Panel" />.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia temporal en lugar del control real asociado al diseñador para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PanelDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.WebControls.Panel" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.PanelDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.MapPropertyToStyle(System.String,System.Object)">
      <summary>
          Asigna un valor y una propiedad especificados a un estilo de marcado determinado.
        </summary>
      <param name="propName">
              Cadena que contiene el nombre de una propiedad. 
            </param>
      <param name="varPropValue">
              Un objeto que es el valor de la propiedad. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.OnBehaviorAttached">
      <summary>
          Proporciona una notificación cuando un determinado comportamiento está asociado al diseñador.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ParameterCollectionEditor">
      <summary>
          Proporciona un editor de componentes para el objeto <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> especificado por las propiedades Parameters del control de origen de datos asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.ParameterCollectionEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Edita los elementos de los objetos <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> del control de origen de datos asociado.
        </summary>
      <returns>
          El nuevo <paramref name="value" />; de lo contrario, si el valor del objeto no ha cambiado, <paramref name="value" /> sin modificar.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para adquirir información de contexto. 
            </param>
      <param name="provider">
              Un objeto que implementa el proveedor <see cref="T:System.IServiceProvider" /> que permite obtener los servicios de edición. 
            </param>
      <param name="value">
              Objeto cuyo valor se va a editar. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="value" /> es null.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de edición asociado a este editor.
        </summary>
      <returns>
          Siempre es <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal" />. 
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el contexto del objeto que se edita.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl">
      <summary>
          Proporciona un objeto <see cref="T:System.Windows.Forms.UserControl" /> reutilizables para editar los objetos <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.#ctor(System.IServiceProvider)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl" /> con el <see cref="T:System.IServiceProvider" /> especificado.
        </summary>
      <param name="serviceProvider">
              Una interfaz <see cref="T:System.IServiceProvider" /> para el host de diseño actual, como Visual Studio 2005.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.AddParameters(System.Web.UI.WebControls.Parameter[])">
      <summary>
          Agrega una matriz de parámetros existentes al editor.
        </summary>
      <param name="parameters">
              Matriz <see cref="T:System.Web.UI.WebControls.Parameter" /> de los parámetros existentes que se van a agregar al editor.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ClearParameters">
      <summary>
          Quita todos los parámetros del editor.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.GetParameters">
      <summary>
          Obtiene todos los parámetros del editor.
        </summary>
      <returns>
          Una matriz <see cref="T:System.Web.UI.WebControls.Parameter" /> de todos los parámetros del editor.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.OnParametersChanged(System.Object,System.EventArgs)">
      <summary>
          Provoca el evento <see cref="E:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersChanged" /> cuando cambia el estado de un parámetro en el editor.
        </summary>
      <param name="sender">
              Origen del evento.
            </param>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersChanged">
      <summary>
          Se produce cuando cambia cualquier parámetro o una de sus propiedades.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersConfigured">
      <summary>
          Devuelve un valor que indica si están configurados todos los parámetros del editor.
        </summary>
      <returns>
          
            Es true si todos los parámetros del editor están configurados totalmente; de lo contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.SetAllowCollectionChanges(System.Boolean)">
      <summary>
          Controla si se pueden agregar y eliminar valores del editor.
        </summary>
      <param name="allowChanges">
              <see cref="T:System.Boolean" /> que indica si se pueden realizar adiciones y eliminaciones en <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que se está editando.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual con el control <see cref="T:System.Web.UI.WebControls.PasswordRecovery" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.ActionLists">
      <summary>
          Obtiene la colección de lista de acciones para el diseñador de controles.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que contiene los elementos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> para el diseñador de controles.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.AutoFormats">
      <summary>
          Obtiene la colección de esquemas de formato automático que se debe mostrar en el cuadro de diálogo Formato automático del control asociado en tiempo de diseño.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> que contiene los esquemas predefinidos del control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetDesignTimeHtml">
      <summary>
          Recupera el formato HTML que se usa para mostrar el control asociado en tiempo de diseño.
        </summary>
      <returns>
          El formato HTML que se utiliza para representar el control en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Recupera el formato HTML para mostrar todas las áreas en tiempo de diseño.
        </summary>
      <returns>
          El formato HTML en tiempo de diseño para el control asociado, incluyendo todas las regiones del diseñador de controles.
        </returns>
      <param name="regions">
              Una colección de regiones del diseñador de controles para el control asociado.
            </param>
      <param name="regions">
              Una colección de regiones del diseñador de controles para el control asociado.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>
          Devuelve el contenido de un área modificable de una vista del control asociado en tiempo de diseño.
        </summary>
      <returns>
          El contenido guardado de la región, si el diseñador de controles admite regiones modificables; de lo contrario, es una cadena vacía ("").
        </returns>
      <param name="region">
              Área cuyo contenido se obtiene.
            </param>
      <param name="region">
              Objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> para el que se obtendrá el contenido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
          Recupera el formato HTML que proporciona información sobre la excepción especificada.
        </summary>
      <returns>
          El formato HTML en tiempo de diseño de la excepción especificada.
        </returns>
      <param name="e">
              Excepción que se ha producido.
            </param>
      <param name="e">
              Excepción que se ha producido. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador y carga el componente especificado.
        </summary>
      <param name="component">
              El control que se va a diseñar.
            </param>
      <param name="component">
              El control que se va a diseñar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Utilizado por la clase del diseñador para agregar o quitar propiedades en la cuadrícula Propiedades en tiempo de diseño o para realizar una copia sombra de las propiedades del control asociado.
        </summary>
      <param name="properties">
              Propiedades para la clase del componente.
            </param>
      <param name="properties">
              Propiedades para la clase del componente. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Establece el contenido de un área modificable del control en tiempo de diseño.
        </summary>
      <param name="region">
              Área de diseño modificable contenida en el control. 
            </param>
      <param name="content">
              El contenido que se va a asignar a la región de diseño modificable.
            </param>
      <param name="region">
              Área de diseño modificable que contiene el control.
            </param>
      <param name="content">
              El contenido que se va a asignar a la región de diseño modificable.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.TemplateGroups">
      <summary>
          Obtiene una colección de grupos de plantillas, en cada uno de los cuales hay una o varias definiciones de plantilla
        </summary>
      <returns>
          Colección de objetos <see cref="T:System.Web.UI.Design.TemplateGroup" />. El valor predeterminado es un <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> vacío
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador de controles utiliza un control de vista previa temporal para generar el formato HTML en tiempo de diseño.
        </summary>
      <returns>
          
            true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PreviewControlDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para un control donde la superficie de diseño debe utilizar una vista previa del control asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PreviewControlDesigner.#ctor">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PreviewControlDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador de controles utiliza un control de vista previa temporal para generar el formato HTML en tiempo de diseño.
        </summary>
      <returns>
          
            true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RegexEditorDialog">
      <summary>
          Proporciona un cuadro de diálogo para editar las expresiones regulares que utiliza <see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.#ctor(System.ComponentModel.ISite)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" />.
        </summary>
      <param name="site">
              Sitio de este cuadro de diálogo. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdHelp_Click(System.Object,System.EventArgs)">
      <summary>
          Representa el método que controlará el evento de Ayuda del cuadro de diálogo.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que proporciona datos para el evento.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdOK_Click(System.Object,System.EventArgs)">
      <summary>
          Representa el método que controlará el evento de Aceptar del cuadro de diálogo.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdTestValidate_Click(System.Object,System.EventArgs)">
      <summary>
          Representa el método que controlará el evento de TestValidate del cuadro de diálogo.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.EventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados que utiliza la clase <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> y, opcionalmente, libera los recursos administrados.
        </summary>
      <param name="disposing">
              Valor que indica todos los recursos mantenidos por los objetos administrados a los que hace referencia <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.lstStandardExpressions_SelectedIndexChanged(System.Object,System.EventArgs)">
      <summary>
          Representa el método que controlará el evento SelectedIndexChanged del cuadro de diálogo.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.RegexTypeEditor_Activated(System.Object,System.EventArgs)">
      <summary>
          Representa el método que controlará el evento Activated del cuadro de diálogo.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RegexEditorDialog.RegularExpression">
      <summary>
          Obtiene o establece el nombre de la expresión regular que se va a editar.
        </summary>
      <returns>
          El nombre de la expresión regular.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.txtExpression_TextChanged(System.Object,System.EventArgs)">
      <summary>
          Representa el método que controlará el evento de TextChanged del cuadro de diálogo.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RegexTypeEditor">
      <summary>
          Proporciona una interfaz de usuario para la edición de expresiones regulares.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.#ctor">
      <summary>
          Cree una instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.RegexTypeEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Modifica el valor del objeto expresión regular dado mediante el proveedor de servicios y el contexto especificados.
        </summary>
      <returns>
          Nuevo valor del objeto. Si el valor del objeto no ha cambiado, este método devuelve el mismo objeto que recibió.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que puede proporcionar información de contexto adicional.
            </param>
      <param name="provider">
              Proveedor de servicios.
            </param>
      <param name="value">
              El objeto expresión regular cuyo valor se va a modificar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de editor utilizado por el método <see cref="M:System.Web.UI.Design.WebControls.RegexTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.
        </summary>
      <returns>
          Valor de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de editor utilizado por el método.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RepeaterDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño para el control <see cref="T:System.Web.UI.WebControls.Repeater" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.RepeaterDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones para el diseñador de controles.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que contiene los elementos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> para el diseñador de controles.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataMember">
      <summary>
          Obtiene o establece el nombre de una tabla o vista concreta en el objeto de origen de datos para enlazar al control <see cref="T:System.Web.UI.WebControls.Repeater" />.
        </summary>
      <returns>
          Nombre de la vista o tabla del origen de datos.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSource">
      <summary>
          Una expresión de enlace de datos que identifica el origen de datos para el control <see cref="T:System.Web.UI.WebControls.Repeater" /> asociado.
        </summary>
      <returns>
          Una expresión de enlace de datos.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSourceDesigner">
      <summary>
          Proporciona acceso al componente de diseñador asociado para el origen de datos.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.IDataSourceDesigner" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSourceID">
      <summary>
          Obtiene o establece la propiedad <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> del control asociado.
        </summary>
      <returns>
          El Id. del control de origen de datos del control asociado.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DesignerView">
      <summary>
          Obtiene el objeto <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> asociado al origen de datos de este diseñador.
        </summary>
      <returns>
          El objeto <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> asociado al origen de datos de este diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados utilizados por el objeto <see cref="T:System.Web.UI.Design.WebControls.RepeaterDesigner" /> y, de forma opcional, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto los recursos administrados como los no administrados; es false para liberar únicamente los recursos no administrados.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.ExecuteChooseDataSourcePostSteps">
      <summary>
          Un host de diseño como Visual Studio 2005 llama a este método después de que un usuario seleccione un origen de datos en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeDataSource(System.Collections.IEnumerable,System.Int32)">
      <summary>
          Devuelve datos del ejemplo en tiempo de diseño basados en los datos proporcionados y utilizando el número especificado de filas.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Collections.IEnumerable" /> que contiene en tiempo de diseño los datos del ejemplo que se utilizan.
        </returns>
      <param name="selectedDataSource">
              Un objeto <see cref="T:System.Collections.IEnumerable" /> que contiene los datos que se van a utilizar para crear en tiempo de diseño los datos del ejemplo similares.
            </param>
      <param name="minimumRows">
              Número mínimo de filas de datos de muestra que debe contener el origen de datos. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeDataSource(System.Int32)">
      <summary>
          Devuelve datos del ejemplo en tiempo de diseño basados en el método <see cref="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetResolvedSelectedDataSource" /> y utilizando el número especificado de filas.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Collections.IEnumerable" /> que contiene en tiempo de diseño los datos del ejemplo que se utilizan.
        </returns>
      <param name="minimumRows">
              Número mínimo de filas de datos de muestra que debe contener el origen de datos. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeHtml">
      <summary>
          Recupera el código HTML que se va a utilizar para la representación en tiempo de diseño del control.
        </summary>
      <returns>
          Formato HTML en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetEmptyDesignTimeHtml">
      <summary>
          Recupera el formato HTML para representar un control de servidor Web en tiempo de diseño que no tendrá ninguna representación visual en tiempo de ejecución.
        </summary>
      <returns>
          El formato HTML utilizado para representar un control en tiempo de diseño que de lo contrario no tendría ninguna representación visual. El valor predeterminado es un rectángulo que contiene el tipo y el Id. del componente.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
          Recupera el formato HTML que proporciona información sobre la excepción especificada.
        </summary>
      <returns>
          El formato HTML en tiempo de diseño de la excepción especificada.
        </returns>
      <param name="e">
              Excepción que se ha producido.
            </param>
      <param name="e">
              Excepción que se ha producido. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetResolvedSelectedDataSource">
      <summary>
          Obtiene el miembro de datos seleccionado del origen de datos seleccionado.
        </summary>
      <returns>
          <see cref="T:System.Collections.IEnumerable" /> que contiene una colección de valores utilizado para proporcionar los datos en tiempo de diseño. El valor predeterminado es null.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetSelectedDataSource">
      <summary>
          Recupera el componente de origen de datos seleccionado del contenedor del control <see cref="T:System.Web.UI.WebControls.Repeater" /> asociado.
        </summary>
      <returns>
          Devuelve el origen de datos seleccionado; o null si no se encuentra un origen de datos o si un origen de datos con el nombre seleccionado no existe.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador con el control <see cref="T:System.Web.UI.WebControls.Repeater" /> proporcionado.
        </summary>
      <param name="component">
              El control <see cref="T:System.Web.UI.WebControls.Repeater" /> asociado. 
            </param>
      <param name="component">
              El control que se va a diseñar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
          Se le llama cuando cambia el control asociado.
        </summary>
      <param name="source">
              Origen del evento.
            </param>
      <param name="ce">
              Datos del evento.
            </param>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="ce">
              Objeto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene los datos del evento. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.OnDataSourceChanged">
      <summary>
          Controla los cambios realizados en el origen de datos. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Filtre las propiedades para reemplazar el descriptor de la propiedad de origen de datos del motor en tiempo de ejecución con el del diseñador.
        </summary>
      <param name="properties">
              Propiedades para la clase del componente. 
            </param>
      <param name="properties">
              Propiedades para la clase del componente. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.TemplatesExist">
      <summary>
          Obtiene un valor que indica si el control asociado tiene definida alguna plantilla.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor">
      <summary>
          Proporciona un editor en tiempo de diseño para la clase <see cref="T:System.Web.UI.WebControls.RoleGroupCollection" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor.#ctor(System.Type)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor" />.
        </summary>
      <param name="type">
              Tipo de los objetos de la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor.CanSelectMultipleInstances">
      <summary>
          Proporciona un valor que indica si el editor permite la selección de varios elementos de la colección.
        </summary>
      <returns>
          
            false.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.#ctor">
      <summary>
          Cree una instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.CanRefreshSchema">
      <summary>
          Obtiene un valor que indica si se puede actualizar el esquema.
        </summary>
      <returns>
          Esta implementación siempre devuelve true.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.GetView(System.String)">
      <summary>
          Obtiene <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> de la vista especificada.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />.
        </returns>
      <param name="viewPath">
              La consulta XPath para la parte del origen de datos que se va a recuperar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.GetViewNames">
      <summary>
          Obtiene una matriz de nombres que representa las vistas con nombre del origen de datos.
        </summary>
      <returns>
          Esta implementación siempre devuelve una matriz de cadenas vacía.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador y carga el componente especificado.
        </summary>
      <param name="component">
              El control que se va a diseñar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
          Se le llama cuando cambia el componente asociado.
        </summary>
      <param name="sender">
              Objeto que provocó el evento.
            </param>
      <param name="e">
              Objeto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene información sobre el evento.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>
          Lo llama el host del diseñador para actualizar el esquema del origen de datos subyacente.
        </summary>
      <param name="preferSilent">
            </param>
      <param name="preferSilent">
              Este parámetro no se utiliza en esta implementación. Sin embargo, debe ser compatible con las clases derivadas.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanConfigure">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanRefreshSchema">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#Configure">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" />.
        </summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#DataSourceChanged">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetView(System.String)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)" />.
        </summary>
      <param name="viewName">
              El nombre de la vista que se va a obtener.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetViewNames">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#RefreshSchema(System.Boolean)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" />.
        </summary>
      <param name="preferSilent">
              
                true suprime los eventos del origen de datos hasta que finaliza la actualización.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#ResumeDataSourceEvents">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" />.
        </summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SchemaRefreshed">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SuppressDataSourceEvents">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" />.
        </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView">
      <summary>
          Proporciona una vista en tiempo de diseño de los datos para las clases <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> y <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner,System.String)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView" /> utilizando el nombre de vista y el objeto <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> proporcionados.
        </summary>
      <param name="owner">
              <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> principal.
            </param>
      <param name="viewName">
              Nombre de la vista para la que el origen de datos proporciona datos.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>
          Genera datos en tiempo de diseño que coinciden con el esquema del control de origen de datos asociado utilizando el número de filas proporcionado, y devuelve un valor booleano que indica si los datos son datos reales o de ejemplo.
        </summary>
      <returns>
          <see cref="T:System.Collections.IEnumerable" />.
        </returns>
      <param name="minimumRows">
              Número mínimo de filas que se van a recuperar o crear.
            </param>
      <param name="isSampleData">
              
                true para indicar datos de ejemplo; false para indicar datos reales.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.Schema">
      <summary>
          Obtiene un esquema que describe los datos representados por este objeto <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView" />.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> o un objeto que deriva de <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView">
      <summary>
          Proporciona una vista en tiempo de diseño de los datos jerárquicos para la clase <see cref="T:System.Web.SiteMap" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView" />.
        </summary>
      <param name="owner">
              <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> que es el diseñador para el objeto <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> asociado.
            </param>
      <param name="viewPath">
              Consulta XPath que define el bloque de datos que se va a utilizar para la vista.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>
          Genera datos en tiempo de diseño que coinciden con el esquema del control de origen de datos asociado y devuelve un valor que indica si los datos son datos reales o de ejemplo.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.IHierarchicalEnumerable" />.
        </returns>
      <param name="isSampleData">
              
                true para indicar que los datos devueltos son datos de ejemplo; false para indicar que los datos devueltos son datos reales.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.Schema">
      <summary>
          Obtiene un esquema que describe la vista de origen de datos representada por este objeto de vista.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.IDataSourceSchema" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapPathDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.WebControls.SiteMapPath" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.SiteMapPathDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.AutoFormats">
      <summary>
          Obtiene la colección de esquemas de formato automático para mostrarla en tiempo de diseño en el cuadro de diálogo Formato automático correspondiente al control asociado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> que contiene los esquemas predefinidos del control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el formato HTML usado para representar el control en tiempo de diseño.
        </summary>
      <returns>
          El formato HTML que se utiliza para representar el control en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
          Obtiene el formato HTML que proporciona información sobre la excepción especificada.
        </summary>
      <returns>
          El formato HTML en tiempo de diseño de la excepción especificada.
        </returns>
      <param name="e">
              
              
            </param>
      <param name="e">
              Excepción que se ha producido. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, editar y diseñar el control <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> asociado.
        </summary>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" /> que se puede convertir a <see cref="T:System.Web.UI.WebControls.SiteMapPath" />.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.TemplateGroups">
      <summary>
          Obtiene una colección de grupos de plantillas; cada uno de ellos contiene una o varias definiciones de plantilla.
        </summary>
      <returns>
          Colección de objetos <see cref="T:System.Web.UI.Design.TemplateGroup" />. El valor predeterminado es un <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> vacío
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador de controles utiliza un control de vista previa temporal para generar el formato HTML en tiempo de diseño.
        </summary>
      <returns>
          
            true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor">
      <summary>
          Proporciona una interfaz de usuario para seleccionar y editar una propiedad de cadena de conexión de un objeto <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> en tiempo de diseño. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.#ctor">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.GetProviderName(System.Object)">
      <summary>
          Devuelve la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> del objeto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.
        </summary>
      <returns>
          Propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> del objeto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, si <paramref name="instance" /> no es null; en caso contrario, una cadena vacía ("").
        </returns>
      <param name="instance">
              Objeto <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> al que se aplica la cadena de conexión.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.SetProviderName(System.Object,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>
          Establece la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> del objeto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.
        </summary>
      <param name="instance">
              Objeto <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> al que se aplica la cadena de conexión.
            </param>
      <param name="connection">
              Propiedad <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> asociada al objeto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.#ctor">
      <summary>
          Cree una instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CanConfigure">
      <summary>
          Obtiene un valor que indica si el host de diseño puede llamar al método <see cref="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.Configure" />.
        </summary>
      <returns>
          
            Devuelve true si el host de diseño admite la interfaz <see cref="T:System.ComponentModel.Design.Data.IDataEnvironment" />; de lo contrario, devuelve false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CanRefreshSchema">
      <summary>
          Obtiene un valor que indica si el host de diseño puede llamar al método <see cref="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.RefreshSchema(System.Boolean)" />.
        </summary>
      <returns>
          
            Es true si las propiedades <see cref="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ConnectionString" /> y <see cref="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectCommand" /> no están vacías; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.Configure">
      <summary>
          Inicia la utilidad de configuración de orígenes de datos en el host de diseño.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ConnectionString">
      <summary>
          Obtiene o establece la cadena que se utiliza para abrir una base de datos.
        </summary>
      <returns>
          La cadena utilizada para abrir una conexión de base de datos en tiempo de ejecución.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CreateView(System.String)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> utilizando el nombre especificado.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" />.
        </returns>
      <param name="viewName">
              Nombre de la vista que se va a crear.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.DeleteQuery">
      <summary>
          Indica que <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> es compatible con la eliminación de consultas.
        </summary>
      <returns>
          
            <see cref="F:System.Web.UI.DataSourceOperation.Delete" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.DeriveParameters(System.String,System.Data.Common.DbCommand)">
      <summary>
          Deriva los parámetros del comando de SQL especificado y agrega los objetos <see cref="T:System.Web.UI.WebControls.Parameter" /> correspondientes a la colección de parámetros del comando.
        </summary>
      <param name="providerName">
              El nombre del proveedor de datos.
            </param>
      <param name="command">
              Objeto <see cref="T:System.Data.Common.DbCommand" />.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetConnectionString">
      <summary>
          Obtiene la cadena de conexión que es válida en tiempo de diseño para el control que está asociado a este diseñador.
        </summary>
      <returns>
          Una cadena de conexión.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetView(System.String)">
      <summary>
          Recupera un objeto <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> identificado por el nombre de la vista.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> si se encuentra en el origen de datos; de lo contrario, null.
        </returns>
      <param name="viewName">
              El nombre de la vista que se va a obtener.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetViewNames">
      <summary>
          Obtiene una lista de las vistas disponibles.
        </summary>
      <returns>
          Una matriz de cadena que contiene los nombres de las vistas disponibles.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.InferParameterNames(System.ComponentModel.Design.Data.DesignerDataConnection,System.String,System.Web.UI.WebControls.SqlDataSourceCommandType)">
      <summary>
          Devuelve una matriz de parámetros utilizando la conexión especificada, el texto del comando y el tipo de comando.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Web.UI.WebControls.Parameter" />.
        </returns>
      <param name="connection">
              Un objeto <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" />.
            </param>
      <param name="commandText">
              El texto del comando.
            </param>
      <param name="commandType">
              <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> que indica el tipo de comando.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.InsertQuery">
      <summary>
          Indica que <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> es compatible con la inclusión de consultas.
        </summary>
      <returns>
          
            <see cref="F:System.Web.UI.DataSourceOperation.Insert" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Lo utiliza el diseñador para quitar o agregar propiedades en la cuadrícula Propiedades, o para crear copias sombra de las propiedades del control asociado.
        </summary>
      <param name="properties">
              Las propiedades que se van a filtrar.
            </param>
      <param name="properties">
              Propiedades para la clase del componente. 
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ProviderName">
      <summary>
          Obtiene o establece el nombre del proveedor de datos de .NET Framework que utiliza el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> asociado para conectar a un origen de datos subyacente.
        </summary>
      <returns>
          Una cadena que contiene el nombre del proveedor de datos.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>
          Actualiza el esquema del origen de datos subyacente.
        </summary>
      <param name="preferSilent">
              
                true suprime todos los eventos de origen de datos hasta que se actualice el esquema.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectCommand">
      <summary>
          Obtiene o establece la consulta SQL en el <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> asociado para seleccionar los datos de la base de datos subyacente.
        </summary>
      <returns>
          Una consulta de SQL.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectQuery">
      <summary>
          Indica que <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> es compatible con la selección de consultas.
        </summary>
      <returns>
          
            <see cref="F:System.Web.UI.DataSourceOperation.Select" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.UpdateQuery">
      <summary>
          Indica que <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> es compatible con la actualización de consultas.
        </summary>
      <returns>
          
            <see cref="F:System.Web.UI.DataSourceOperation.Update" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView">
      <summary>
          Proporciona una vista en tiempo de diseño de datos para la clase <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.SqlDataSourceDesigner,System.String)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> utilizando el diseñador de origen de datos proporcionado y el nombre de la vista.
        </summary>
      <param name="owner">
              <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> principal.
            </param>
      <param name="viewName">
              Nombre de la vista del origen de datos.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanDelete">
      <summary>
          Obtiene un valor que indica si el control <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> asociado al control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> actual admite el método <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />.
        </summary>
      <returns>
          
            true si se admite el método <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanInsert">
      <summary>
          Obtiene un valor que indica si el control <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> asociado al control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> actual admite el método <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />.
        </summary>
      <returns>
          
            true si se admite el método <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanPage">
      <summary>
          Obtiene un valor que indica si el control <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> asociado al control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> actual admite la paginación de los datos recuperados por el método <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />.
        </summary>
      <returns>
          
            true si se admite la paginación de los datos recuperados por el método <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>
          Obtiene un valor que indica si el control <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> asociado al control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> actual admite la recuperación del número total de filas de datos, en lugar de los propios datos.
        </summary>
      <returns>
          
            true si se admite la recuperación del número total de filas de datos; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanSort">
      <summary>
          Obtiene un valor que indica si el control <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> asociado al control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> actual admite una vista ordenada en el origen de datos subyacente.
        </summary>
      <returns>
          
            true si se admite una vista ordenada en el origen de datos subyacente; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanUpdate">
      <summary>
          Obtiene un valor que indica si el control <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> asociado al control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> actual admite el método <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />.
        </summary>
      <returns>
          
            true si se admite el método <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />; en caso contrario, false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>
          Genera datos en tiempo de diseño que coinciden con el esquema del control de origen de datos asociado utilizando el número de filas proporcionado y devuelve un valor que indica si los datos son un ejemplo o son datos reales.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.DataSourceView" /> que contiene datos que se mostrarán en tiempo de diseño.
        </returns>
      <param name="minimumRows">
              
              
            </param>
      <param name="isSampleData">
              
              
            </param>
      <param name="minimumRows">
              Número mínimo de filas que se debe devolver.
            </param>
      <param name="isSampleData">
              
                true para indicar que los datos devueltos son datos de ejemplo; false para indicar que los datos devueltos son datos activos.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.Schema">
      <summary>
          Obtiene un esquema que describe la vista del origen de datos representada por este objeto de vista.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.StyleCollectionEditor">
      <summary>
          Proporciona un editor en tiempo de diseño en un host de diseño, como Microsoft Visual Studio 2005, para un objeto <see cref="T:System.Web.UI.WebControls.StyleCollection" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.StyleCollectionEditor.#ctor(System.Type)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.StyleCollectionEditor" />.
        </summary>
      <param name="type">
              
              
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.StyleCollectionEditor.CreateInstance(System.Type)">
      <summary>
          Crea una nueva instancia del tipo de elemento de colección especificado.
        </summary>
      <returns>
          Una colección del tipo especificado.
        </returns>
      <param name="itemType">
               El <see cref="T:System.Type" /> del que se va a crear una instancia.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor">
      <summary>
          Proporciona un editor de componentes al objeto <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> en el control <see cref="T:System.Web.UI.WebControls.Menu" /> asociado.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" />.
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> de la colección que se va a editar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CanSelectMultipleInstances">
      <summary>
          Obtiene un valor que indica si varios elementos <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> se pueden seleccionar en el editor a la vez.
        </summary>
      <returns>
          Siempre es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateCollectionForm">
      <summary>
          Crea un formulario que permite mostrar y editar la colección <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> actual.
        </summary>
      <returns>
          Instancia de <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> que se debe utilizar como <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateInstance(System.Type)">
      <summary>
          Crea una nueva instancia del tipo de elemento de colección especificado.
        </summary>
      <returns>
          Nueva instancia del tipo especificado, que debe ser <see cref="T:System.Web.UI.WebControls.SubMenuStyle" />.
        </returns>
      <param name="itemType">
              <see cref="T:System.Type" /> del elemento que se va a crear. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateNewItemTypes">
      <summary>
          Obtiene los tipos de datos que puede crear el editor de la colección.
        </summary>
      <returns>
          Matriz de tipos de los tipos de datos que <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" /> puede crear.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SubstitutionDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.WebControls.Substitution" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubstitutionDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.SubstitutionDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubstitutionDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el formato HTML usado para representar el control en tiempo de diseño.
        </summary>
      <returns>
          El formato HTML que se utiliza para representar el control en tiempo de diseño.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor">
      <summary>
          Proporciona una interfaz de usuario para editar la colección de celdas de una fila de una tabla.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor" />.
        </summary>
      <param name="type">
              Tipo de la colección que se va a editar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.CanSelectMultipleInstances">
      <summary>
          Indica si pueden seleccionarse varias celdas de la tabla al mismo tiempo.
        </summary>
      <returns>
          
            Es true si se pueden seleccionar varias celdas al mismo tiempo; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.CreateInstance(System.Type)">
      <summary>
          Crea una instancia del editor que se utilizará con el tipo especificado.
        </summary>
      <returns>
          Objeto del tipo especificado.
        </returns>
      <param name="itemType">
              Tipo (<see cref="T:System.Type" />) del elemento que se va a crear. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño para el control de servidor Web <see cref="T:System.Web.UI.WebControls.Table" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.TableDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el código HTML que se utiliza para representar el control en tiempo de diseño.
        </summary>
      <returns>
          Código HTML utilizado para representar el control en tiempo de diseño.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor">
      <summary>
          Proporciona una interfaz de usuario para editar filas de una tabla.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor" />.
        </summary>
      <param name="type">
              Tipo de la colección que se va a editar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.CanSelectMultipleInstances">
      <summary>
          Indica si se pueden seleccionar varias instancias.
        </summary>
      <returns>
          
            Es true si se pueden seleccionar varios elementos de una sola vez; en caso contrario, es false. Esta implementación siempre devuelve false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.CreateInstance(System.Type)">
      <summary>
          Crea una instancia del tipo especificado.
        </summary>
      <returns>
          Objeto del tipo especificado.
        </returns>
      <param name="itemType">
              <see cref="T:System.Type" /> del elemento que se va a crear. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter">
      <summary>
          Proporciona un convertidor de tipos para convertir la propiedad <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" /> en otras representaciones y desde otras representaciones.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.#ctor">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
          Convierte el valor dado al tipo de este convertidor utilizando el contexto y la información de referencia cultural proporcionados.
        </summary>
      <returns>
          Objeto que representa el valor convertido.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.
            </param>
      <param name="culture">
              <see cref="T:System.Globalization.CultureInfo" /> que se va a utilizar como referencia cultural actual.
            </param>
      <param name="value">
              Objeto que se va a convertir.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
          Convierte el objeto al tipo especificado usando el contexto y la información de referencia cultural proporcionados.
        </summary>
      <returns>
          Objeto que representa el valor convertido.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.
            </param>
      <param name="culture">
              <see cref="T:System.Globalization.CultureInfo" /> que se va a utilizar como referencia cultural actual.
            </param>
      <param name="value">
              Objeto que se va a convertir.
            </param>
      <param name="destinationType">
              <see cref="T:System.Type" /> al que se va a convertir el parámetro <paramref name="value" />.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor">
      <summary>
          Proporciona un editor en tiempo de diseño en un host de diseño, como Microsoft Visual Studio 2005, para un objeto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.#ctor">
      <summary>
          Inicia una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Edita el valor del objeto especificado utilizando el objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> proporcionado y el host de diseño tal como lo representa la interfaz <see cref="T:System.IServiceProvider" />.
        </summary>
      <returns>
          Nuevo valor del objeto. Si el valor del objeto no ha cambiado, se debe devolver el mismo objeto que se pasó.
        </returns>
      <param name="context">
              
              
            </param>
      <param name="provider">
              
              
            </param>
      <param name="value">
              
              
            </param>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              <see cref="T:System.IServiceProvider" /> que puede utilizar este editor para obtener servicios. 
            </param>
      <param name="value">
              Objeto que se va a modificar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Recupera el estilo de edición utilizado por el método <see cref="Overload:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.EditValue" />.
        </summary>
      <returns>
          Valor de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de editor utilizado por el método <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />. Si <see cref="T:System.Drawing.Design.UITypeEditor" /> no admite este método, <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> devolverá <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.
        </returns>
      <param name="context">
            </param>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor">
      <summary>
          Proporciona un editor en tiempo de diseño en un host de diseño, como Microsoft Visual Studio 2005, para un objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor.#ctor(System.Type)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor" />.
        </summary>
      <param name="type">
              
              
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor.CreateCollectionItemType">
      <summary>
          Obtiene el tipo de datos que edita esta colección.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeViewBindingsEditor">
      <summary>
          Proporciona un editor de enlaces de datos en tiempo de diseño en un host de diseño, como Microsoft Visual Studio 2005, para un objeto <see cref="T:System.Web.UI.Design.WebControls.TreeViewDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.TreeViewBindingsEditor" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Modifica el valor del objeto especificado mediante el proveedor de servicios y el contexto especificados.
        </summary>
      <returns>
        </returns>
      <param name="context">
              
              
            </param>
      <param name="provider">
              
              
            </param>
      <param name="value">
              
              
            </param>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              <see cref="T:System.IServiceProvider" /> que puede utilizar este editor para obtener servicios. 
            </param>
      <param name="value">
              Objeto que se va a modificar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Recupera el estilo de edición utilizado por el método <see cref="Overload:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.EditValue" />.
        </summary>
      <returns>
        </returns>
      <param name="context">
              
              
            </param>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeViewDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual con el control <see cref="T:System.Web.UI.WebControls.TreeView" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.TreeViewDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.ActionLists">
      <summary>
          Obtiene la colección de lista de acciones para el diseñador de controles.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.AutoFormats">
      <summary>
          Obtiene la colección de esquemas de formato automático predefinidos que se debe mostrar en el cuadro de diálogo Formato automático del control asociado en tiempo de diseño.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> que contiene los esquemas predefinidos del control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.CreateLineImages">
      <summary>
          Muestra un cuadro de diálogo para editar las imágenes de las líneas para el control <see cref="T:System.Web.UI.WebControls.TreeView" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>
          Enlaza el control asociado al origen de datos en tiempo de diseño.
        </summary>
      <param name="dataBoundControl">
              
              
            </param>
      <param name="dataBoundControl">
              El control <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> que se enlazará al origen de datos en tiempo de diseño.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.EditBindings">
      <summary>
          Muestra un cuadro de diálogo para editar los enlaces de datos.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.EditNodes">
      <summary>
          Muestra un cuadro de diálogo para editar el objeto <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetDesignTimeHtml">
      <summary>
          Recupera el formato HTML que se usa para representar el control en tiempo de diseño.
        </summary>
      <returns>
          El marcado utilizado para representar el control en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetEmptyDesignTimeHtml">
      <summary>
          Recupera el texto del formato HTML que se usa para representar un marcador de posición para el control asociado en tiempo de diseño.
        </summary>
      <returns>
          El marcado utilizado para representar el control en tiempo de diseño con un origen de datos vacío.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
          Proporciona el marcado que representa el control asociado en tiempo de diseño cuando se ha producido un error.
        </summary>
      <returns>
          El marcado que se usa para representar el control en tiempo de diseño cuando se produce un error.
        </returns>
      <param name="e">
            </param>
      <param name="e">
              <see cref="T:System.Exception" /> que se ha producido.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetSampleDataSource">
      <summary>
          Construye un origen de datos de ejemplo que se puede utilizar en tiempo de diseño para el control asociado.
        </summary>
      <returns>
          Un objeto que implementa la interfaz <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> que se puede utilizarse como origen de datos para los controles derivados de la clase <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Cuando se reemplaza en una clase derivada, proporciona la inicialización personalizada del control <see cref="T:System.Web.UI.WebControls.TreeView" /> determinado.
        </summary>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" /> que se puede convertir en un control <see cref="T:System.Web.UI.WebControls.TreeView" />.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador de controles utiliza un control de vista previa temporal para generar el formato HTML en tiempo de diseño.
        </summary>
      <returns>
          
            Es true si el diseñador de controles utiliza una copia temporal del control para la vista previa en tiempo de diseño; de lo contrario, es false si el diseñador de controles utiliza la propiedad <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> para el control contenido en el diseñador de controles.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ViewDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.WebControls.View" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.ViewDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.GetDesignTimeHtml">
      <summary>
          Recupera el formato HTML usado para representar el control en tiempo de diseño.
        </summary>
      <returns>
          
          
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Recupera el formato HTML para mostrar el control y rellena la colección con las regiones del diseñador de controles actuales.
        </summary>
      <returns>
          
          
        </returns>
      <param name="regions">
              
              
            </param>
      <param name="regions">
              Colección de regiones del diseñador.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, editar y diseñar el control asociado.
        </summary>
      <param name="component">
              Objeto <see cref="T:System.ComponentModel.IComponent" />.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.WebControls.Wizard" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.ActionLists">
      <summary>
          Obtiene la colección de lista de acciones para el diseñador de controles.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que contiene los elementos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> personalizados para el diseñador de controles.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.AddDesignerRegions(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Agrega la colección de regiones que la colección de región del diseñador a las regiones del diseñador actuales.
        </summary>
      <param name="regions">
              Objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> que contiene las áreas que se van a agregar.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.AutoFormats">
      <summary>
          Obtiene la colección de esquemas de formato automático predefinidos para mostrarla en tiempo de diseño en el cuadro de diálogo Formato automático correspondiente al control asociado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ConvertToCustomNavigationTemplate">
      <summary>
          Crea una plantilla de navegación a partir del paso activo y lo guarda en la propiedad <see cref="P:System.Web.UI.WebControls.TemplatedWizardStep.CustomNavigationTemplate" /> del paso activo.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ConvertToTemplate(System.String,System.ComponentModel.IComponent,System.String,System.String[])">
      <summary>
          Convierte una selección de controles en una plantilla en el control asociado.
        </summary>
      <param name="description">
              Una descripción del efecto que se produce al permitir que se finalice la transacción, que el host de diseño utiliza para ofrecer al usuario la posibilidad de cancelar la operación.
            </param>
      <param name="component">
              Control wizard asociado a este diseñador.
            </param>
      <param name="templateName">
              El nombre de la plantilla al que se va a convertir.
            </param>
      <param name="keys">
              Una matriz de identificadores para los controles que se va a incluir en la plantilla.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.CreateChildControls">
      <summary>
          Crea los controles secundarios del control asociado.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.DisplaySideBar">
      <summary>
          Obtiene o establece una propiedad en el control de asistente asociado que indica si se ha de mostrar una barra lateral.
        </summary>
      <returns>
          
            true para mostrar la barra lateral; en caso contrario, false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado que se utiliza para representar el control en tiempo de diseño.
        </summary>
      <returns>
          HTML usado para representar el control en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Obtiene el marcado HTML para mostrar el control en tiempo de diseño y rellena la colección con las áreas del diseñador de controles actuales.
        </summary>
      <returns>
          El formato HTML en tiempo de diseño para el control asociado, incluyendo todas las regiones del diseñador de controles.
        </returns>
      <param name="regions">
              Utilice la base
            </param>
      <param name="regions">
              Una colección de regiones del diseñador de controles para el control asociado.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>
          Obtiene el contenido del área modificable del control en tiempo de diseño.
        </summary>
      <returns>
          El contenido guardado de la región, si el diseñador de controles admite regiones modificables; de lo contrario, es una cadena vacía ("").
        </returns>
      <param name="region">
              Un objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.
            </param>
      <param name="region">
              Objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> para el que se obtendrá el contenido.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="region" /> es null.
            </exception>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="region" /> no es un objeto de tipo <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.
            </exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador con el objeto <see cref="T:System.ComponentModel.IComponent" /> especificado.
        </summary>
      <param name="component">
              Utilice la base
            </param>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" />, que es el control asociado a este diseñador.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>
          Lo llama el host de diseño cuando el usuario hace clic en el control asociado en tiempo de diseño.
        </summary>
      <param name="e">
              Utilice la base
            </param>
      <param name="e">
              Objeto <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> que especifica la ubicación y, posiblemente, la región del diseñador de controles en la que el usuario hizo clic.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Agrega propiedades o quita propiedades de la cuadrícula Propiedades en un host de diseño, o proporciona nuevas configuraciones o propiedades en tiempo de diseño que se corresponden con las propiedades del control asociado.
        </summary>
      <param name="properties">
              Un objeto <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades de la clase del componente.
            </param>
      <param name="properties">
              Propiedades para la clase del componente. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ResetTemplate(System.String,System.ComponentModel.IComponent,System.String)">
      <summary>
          Restablece la plantilla especificada a su valor predeterminado.
        </summary>
      <param name="description">
              Una descripción del efecto que se produce al permitir que se finalice la transacción, que el host de diseño utiliza para ofrecer al usuario la posibilidad de cancelar la operación.
            </param>
      <param name="component">
              Control <see cref="T:System.Web.UI.WebControls.Wizard" /> asociado a este diseñador.
            </param>
      <param name="templateName">
              Nombre de la plantilla que se va a restablecer.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Especifica el contenido de una región modificable del control en tiempo de diseño.
        </summary>
      <param name="region">
              Área de diseño modificable contenida en el control.
            </param>
      <param name="content">
              El contenido que se va a asignar a la región de diseño modificable.
            </param>
      <param name="region">
              Área de diseño modificable que contiene el control.
            </param>
      <param name="content">
              El contenido que se va a asignar a la región de diseño modificable.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="region" /> es null.
            </exception>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="region" /> no es un objeto de tipo <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.
            </exception>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.TemplateGroups">
      <summary>
          Obtiene una colección de grupos de plantillas, en cada uno de los cuales hay una o varias definiciones de plantilla
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el host de diseño debe utilizar un control de vista previa.
        </summary>
      <returns>
          
            Es true para utilizar un control de vista previa; es false para utilizar el control asociado.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepCollectionEditor">
      <summary>
          Proporciona un editor en tiempo de diseño en un host de diseño, como Microsoft Visual Studio 2005, para un objeto <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.#ctor(System.Type)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WizardStepCollectionEditor" /> utilizando el objeto <see cref="T:System.Type" /> especificado.
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> de elementos de la colección.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CanSelectMultipleInstances">
      <summary>
          Indica si se pueden seleccionar varias instancias.
        </summary>
      <returns>
          
            Es true si se pueden seleccionar varios elementos de una sola vez; en caso contrario, es false. Esta implementación siempre devuelve false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateCollectionForm">
      <summary>
          Crea un formulario que permite mostrar y editar la colección actual.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> que se va a proporcionar como interfaz de usuario para modificar la colección.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateInstance(System.Type)">
      <summary>
          Crea una instancia de la colección del objeto <see cref="T:System.Type" /> especificado.
        </summary>
      <returns>
          Una colección del <paramref name="itemType" /> especificado.
        </returns>
      <param name="itemType">
              <see cref="T:System.Type" /> de la colección que se va a crear.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateNewItemTypes">
      <summary>
          Recupera los tipos de datos que esta colección puede contener.
        </summary>
      <returns>
          Una matriz de objetos <see cref="T:System.Type" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepEditableRegion">
      <summary>
          Define un área modificable de contenido dentro del marcado en tiempo de diseño de un paso del asistente para un objeto <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepEditableRegion.#ctor(System.Web.UI.Design.WebControls.WizardDesigner,System.Web.UI.WebControls.WizardStepBase)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WizardStepEditableRegion" /> utilizando el diseñador y el paso especificados.
        </summary>
      <param name="designer">
              <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> que es el diseñador primario para el asistente.
            </param>
      <param name="wizardStep">
              <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> que define el paso.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardStepEditableRegion.Step">
      <summary>
          Obtiene el paso del asistente en tiempo de diseño asociado.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion">
      <summary>
          Define un área modificable de contenido dentro del marcado en tiempo de diseño de una plantilla en un paso del asistente para un objeto <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion.#ctor(System.Web.UI.Design.TemplateDefinition,System.Web.UI.WebControls.WizardStepBase)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion" />.
        </summary>
      <param name="templateDefinition">
              Objeto <see cref="T:System.Web.UI.Design.TemplateDefinition" /> que define un elemento de plantilla en un paso del asistente en tiempo de diseño.
            </param>
      <param name="wizardStep">
              Objeto <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> que representa un paso mostrado en un control <see cref="T:System.Web.UI.WebControls.Wizard" />.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion.Step">
      <summary>
          Obtiene el paso del asistente en tiempo de diseño asociado.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.CanConfigure">
      <summary>
          Obtiene un valor que indica si se puede llamar al método <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure" />.
        </summary>
      <returns>
          
            Es true si se puede llamar al método <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure" />; de lo contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.CanRefreshSchema">
      <summary>
          Obtiene un valor que indica si se puede llamar al método <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" />.
        </summary>
      <returns>
          
            Es true si se puede llamar al método <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" />; de lo contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure">
      <summary>
          Inicia el asistente de configuración para el origen de datos subyacente.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data">
      <summary>
          Obtiene o establece un bloque de código XML al que se enlaza el control de origen de datos asociado.
        </summary>
      <returns>
          Una cadena de datos XML.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile">
      <summary>
          Obtiene o establece el nombre de un archivo XML al que se enlaza el control de origen de datos asociado.
        </summary>
      <returns>
          Un nombre de archivo XML.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.GetView(System.String)">
      <summary>
          Recupera el objeto de vista de origen de datos en tiempo de diseño para el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> asociado.
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />.
        </returns>
      <param name="viewPath">
              Ruta de la vista que se va a recuperar.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador y carga el componente especificado.
        </summary>
      <param name="component">
              El control que se va a diseñar. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Lo utiliza un componente de diseñador para agregar propiedades o quitar propiedades de la cuadrícula Propiedades en un host de diseño en tiempo de diseño, o para proporcionar nuevas propiedades en tiempo de diseño que pueden corresponderse con las propiedades del control asociado.
        </summary>
      <param name="properties">
              IDictionary de propiedades.
            </param>
      <param name="properties">
              Propiedades para la clase del componente. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>
          Actualiza el esquema de origen de datos, suprimiendo opcionalmente los eventos.
        </summary>
      <param name="preferSilent">
              
                Es true para suprimir los eventos de la interfaz de usuario del esquema; de lo contrario, es false.
            </param>
      <param name="preferSilent">
              Este parámetro no se utiliza en esta implementación. Sin embargo, debe ser compatible con las clases derivadas.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanConfigure">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure" />. 
        </summary>
      <returns>
          
            Devuelve true si se puede configurar el origen de datos; de lo contrario, devuelve false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanRefreshSchema">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema" />. 
        </summary>
      <returns>
          
            Devuelve true si se puede actualizar el esquema; de lo contrario, devuelve false.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#Configure">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" />.
        </summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#DataSourceChanged">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged" />. 
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetView(System.String)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)" />. 
        </summary>
      <returns>
          Objeto <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> que contiene información sobre la vista identificada, o null si no se encuentra una vista con el nombre especificado.
        </returns>
      <param name="viewName">
              Nombre de una vista en el origen de datos subyacente.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetViewNames">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames" />.
        </summary>
      <returns>
          Una matriz de nombres de las vistas del origen de datos.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#RefreshSchema(System.Boolean)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" />.
        </summary>
      <param name="preferSilent">
              Especifica si deben suprimirse los eventos provocados durante la actualización del esquema.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#ResumeDataSourceEvents">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" />.
        </summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SchemaRefreshed">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SuppressDataSourceEvents">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Transform">
      <summary>
          Obtiene o establece un bloque de XSL (Extensible Stylesheet Language) que define una transformación XSLT que se va a realizar en los datos XML contenidos en la propiedad <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> o en el archivo XML que indica la propiedad <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" />.
        </summary>
      <returns>
          Una cadena de datos XSL.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.TransformFile">
      <summary>
          Obtiene o establece el nombre de un archivo XSL (Extensible Stylesheet Language) (.xsl) que define una transformación XSLT que se va a realizar en los datos XML contenidos en la propiedad <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> o en el archivo XML que indica la propiedad <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" />.
        </summary>
      <returns>
          El nombre del archivo XSLT.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.XPath">
      <summary>
          Obtiene o establece una consulta XPath que se aplicará a los datos XML contenidos en la propiedad <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> o en el archivo XML indicado por la propiedad <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" />.
        </summary>
      <returns>
          Una consulta XPath.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño para el control de servidor Web <see cref="T:System.Web.UI.WebControls.Xml" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.XmlDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados utilizados por el control <see cref="T:System.Web.UI.Design.WebControls.XmlDesigner" /> y, de forma opcional, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto los recursos administrados como los no administrados, y es false para liberar únicamente los recursos no administrados. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.GetDesignTimeHtml">
      <summary>
          Recupera el formato HTML usado para representar el control en tiempo de diseño.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.GetEmptyDesignTimeHtml">
      <summary>
          Obtiene el código HTML utilizado para rellenar un control vacío.
        </summary>
      <returns>
          El código HTML utilizado para rellenar un control vacío.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador con el control al que está asociada esta instancia del diseñador.
        </summary>
      <param name="component">
              Control asociado. 
            </param>
      <param name="component">
              El control que se va a diseñar. 
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView">
      <summary>
          Proporciona una vista en tiempo de diseño de los datos para la clase <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.XmlDataSourceDesigner,System.String)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView" />.
        </summary>
      <param name="owner">
              <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> principal.
            </param>
      <param name="viewName">
              Nombre de la vista en el origen de datos.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>
          Genera datos en tiempo de diseño que coinciden con el esquema del control de origen de datos asociado y devuelve un valor que indica si los datos son datos reales o de ejemplo.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.DataSourceView" /> que contiene datos que se mostrarán en tiempo de diseño.
        </returns>
      <param name="minimumRows">
              
              
            </param>
      <param name="isSampleData">
              
              
            </param>
      <param name="minimumRows">
              Número mínimo de filas que se debe devolver.
            </param>
      <param name="isSampleData">
              
                true para indicar que los datos devueltos son datos de ejemplo; false para indicar que los datos devueltos son datos activos.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.Schema">
      <summary>
          Obtiene un esquema que describe la vista de origen de datos representada por este objeto de vista.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView">
      <summary>
          Proporciona una vista en tiempo de diseño de los datos jerárquicos para la clase <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.WebControls.XmlDataSourceDesigner,System.String)">
      <summary>
          Crea una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView" /> utilizando el diseñador proporcionado y XPath.
        </summary>
      <param name="owner">
              <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" />.
            </param>
      <param name="viewPath">
              Una cadena XPath que identifica los datos para la vista.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>
          Genera datos en tiempo de diseño que coinciden con el esquema del control de origen de datos asociado y devuelve un valor de tipo Boolean que indica si los datos son datos reales o de ejemplo.
        </summary>
      <returns>
          Esta implementación siempre devuelve null.
        </returns>
      <param name="isSampleData">
              
              
            </param>
      <param name="isSampleData">
              
                true para indicar que los datos devueltos son datos de ejemplo; false para indicar que los datos devueltos son datos reales.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.Schema">
      <summary>
          Obtiene un esquema que describe los datos representados por este objeto de vista.
        </summary>
      <returns>
          Esta implementación siempre devuelve null.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner">
      <summary>
          Proporciona la compatibilidad en tiempo de diseño para los controles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> y <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.CreateViewControl">
      <summary>
          Crea una copia del control <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> asociado para representar en tiempo de diseño.
        </summary>
      <returns>
          Copia del <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />. 
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.GetDesignTimeHtml">
      <summary>
          Comprueba que el control está en una zona de tipo <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> y que obtiene el marcado que se utiliza para representar el control en tiempo de diseño.
        </summary>
      <returns>
          El marcado utilizado para representar el control en tiempo de diseño o el marcado del error si el control no reside en <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Enlaza el diseñador al control derivado de <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> asociado.
        </summary>
      <param name="component">
              Control derivado de <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> asociado al diseñador.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner">
      <summary>
          Proporciona la compatibilidad en tiempo de diseño para los controles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.AutoFormats">
      <summary>
          Reemplaza la propiedad <see cref="P:System.Web.UI.Design.ControlDesigner.AutoFormats" /> para devolver <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> que es específica de la clase <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />.
        </summary>
      <returns>
          Un <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> especificado previamente con un esquema de CatalogZone predeterminado.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado utilizado para representar el control en tiempo de diseño llamando al método <see cref="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> con un argumento null.
        </summary>
      <returns>
          Una llamada de método a <see cref="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> con un argumento null como el parámetro.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Crea una <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> en el diseñador antes de generar el HTML del control en tiempo de diseño.
        </summary>
      <returns>
          <see cref="T:System.String" /> que representa el HTML del control en tiempo de diseño.
        </returns>
      <param name="regions">
              El objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />, si existe, asociado al control.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>
          Obtiene el contenido del objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
        </summary>
      <returns>
          <see cref="T:System.String" /> que representa el formulario conservado del contenido de la región del diseñador.
        </returns>
      <param name="region">
              Objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>
          Obtiene el marcado para representar un control vacío.
        </summary>
      <returns>
          Objeto <see cref="T:System.String" /> vacío.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Enlaza el diseñador al control <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> asociado.
        </summary>
      <param name="component">
              El control <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> asociado.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Establece el contenido del objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
        </summary>
      <param name="region">
              Objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
            </param>
      <param name="content">
              <see cref="T:System.String" /> que representa el contenido para entrar en la región especificada.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.TemplateGroups">
      <summary>
          Devuelve <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> que es específica de la clase <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />.
        </summary>
      <returns>
          Una <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> especificada previamente con configuración predeterminada para un entorno de CatalogZone.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner">
      <summary>
          Proporciona la compatibilidad en tiempo de diseño para los controles <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.AutoFormats">
      <summary>
          Reemplaza <see cref="P:System.Web.UI.Design.ControlDesigner.AutoFormats" /> para obtener un <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> predefinido que es específico de la clase <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" />.
        </summary>
      <returns>
          Un <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> predefinido con un esquema de ConnectionZone predeterminado.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado que se utiliza para representar el control en tiempo de diseño.
        </summary>
      <returns>
          <see cref="T:System.String" /> que es el marcado que se utiliza para representar el control en tiempo de diseño. 
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Enlaza el diseñador al control <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> especificado.
        </summary>
      <param name="component">
              Control <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> asociado al diseñador.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Oculta en tiempo de diseño un grupo preestablecido de propiedades.
        </summary>
      <param name="properties">
              <see cref="T:System.Collections.IDictionary" /> del conjunto de propiedades asociado al control.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner">
      <summary>
          Proporciona la compatibilidad en tiempo de diseño para los controles <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetDesignTimeHtml">
      <summary>
          Reemplaza el método primario para evitar la representación del control.
        </summary>
      <returns>
          O una cadena vacía ("") o el valor de <see cref="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetEmptyDesignTimeHtml" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetEmptyDesignTimeHtml">
      <summary>
          Obtiene el marcado para representar un control vacío en la superficie del diseño.
        </summary>
      <returns>
          Una cadena de marcado vacía.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Enlaza el diseñador al control <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> asociado y establece el indicador de vista <see cref="F:System.Web.UI.Design.ViewFlags.TemplateEditing" /> en true.
        </summary>
      <param name="component">
              Control <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> asociado al diseñador.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.TemplateGroups">
      <summary>
          Reemplaza el método primario para agregar un <see cref="T:System.Web.UI.Design.TemplateGroup" /> concreto a esta clase. 
        </summary>
      <returns>
          <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> asociada a esta clase.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner">
      <summary>
          Proporciona la compatibilidad en tiempo de diseño para los controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.CreateViewControl">
      <summary>
          Crea una copia del control <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> asociado para representar en tiempo de diseño.
        </summary>
      <returns>
          Copia del <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />. 
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.GetDesignTimeHtml">
      <summary>
          Comprueba que el control está en una zona de tipo <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> y que obtiene el marcado que se utiliza para representar el control en tiempo de diseño.
        </summary>
      <returns>
          El marcado utilizado para representar el control en tiempo de diseño o el marcado del error si el control no reside en <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Enlaza el diseñador al control <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> asociado.
        </summary>
      <param name="component">
              Control <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> asociado al diseñador.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner">
      <summary>
          Proporciona la compatibilidad en tiempo de diseño para los controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.AutoFormats">
      <summary>
          Reemplaza la propiedad <see cref="P:System.Web.UI.Design.ControlDesigner.AutoFormats" /> y devuelve un <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> para su uso con controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />. 
        </summary>
      <returns>
          Un <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> especificado previamente con un esquema de EditorZone predeterminado.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml">
      <summary>
          Invoca <see cref="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> con un parámetro null.
        </summary>
      <returns>
          <see cref="T:System.String" /> que representa en tiempo de diseño el marcado del control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Obtiene el marcado que se utiliza para representar el control en tiempo de diseño.
        </summary>
      <returns>
          <see cref="T:System.String" /> que representa en tiempo de diseño el marcado del control.
        </returns>
      <param name="regions">
              El objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />, si existe, asociado al control.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>
          Obtiene el contenido del objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
        </summary>
      <returns>
          <see cref="T:System.String" /> que representa el formulario conservado del contenido de la región del diseñador.
        </returns>
      <param name="region">
              Objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>
          Obtiene el marcado para representar un control vacío.
        </summary>
      <returns>
          Objeto <see cref="T:System.String" /> vacío.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Enlaza el diseñador al control <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> asociado.
        </summary>
      <param name="component">
              Control <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> asociado al diseñador.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Establece el contenido del objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
        </summary>
      <param name="region">
              Objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
            </param>
      <param name="content">
              <see cref="T:System.String" /> que representa el contenido para entrar en la región especificada.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.TemplateGroups">
      <summary>
          Devuelve un <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> concreto para el uso con controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />.
        </summary>
      <returns>
          Una <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> especificada previamente con configuración predeterminada para un entorno de EditorZone. 
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para un control <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.GetDesignTimeHtml">
      <summary>
          Recupera el código HTML que se utiliza para representar el control en tiempo de diseño.
        </summary>
      <returns>
          Formato HTML que se utiliza para representar el control en tiempo de diseño.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, editar y diseñar el control <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />.
        </summary>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" /> que se va a inicializar.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.PartDesigner">
      <summary>
          Extiende el comportamiento en tiempo de diseño para aquellos controles que implementan la clase abstracta <see cref="T:System.Web.UI.WebControls.WebParts.Part" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Crea una instancia del diseñador enlazada al control <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> asociado.
        </summary>
      <param name="component">
              Control <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> asociado a este diseñador.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.PartDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia temporal, en lugar del control real que está asociado al diseñador, para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner">
      <summary>
          Proporciona la compatibilidad mínima en tiempo de diseño para los controles <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene una cadena vacía (""), que indica que el entorno de diseño visual debería revertirse a la representación predeterminada del control.
        </summary>
      <returns>
          Objeto <see cref="T:System.String" /> vacío.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Enlaza el diseñador al control <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> asociado.
        </summary>
      <param name="component">
              Control <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> asociado al diseñador.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia temporal, en lugar del control real que está asociado al diseñador, para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner">
      <summary>
          Proporciona compatibilidad en tiempo de diseño en un diseñador visual para una zona de elementos Web.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner" />. 
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.ActionLists">
      <summary>
          Obtiene la colección de listas de acciones para el diseñador de zona.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> asociado a este diseñador.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Prepara el diseñador para ver, modificar y diseñar la zona de elementos Web.
        </summary>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" /> que se va a inicializar.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.ViewInBrowseMode">
      <summary>
          Obtiene o establece un valor que indica si se muestra la zona de elementos Web cuando el usuario está en el modo de presentación de exploración. 
        </summary>
      <returns>
          
            true si se muestra la zona de elementos Web cuando el usuario está en el modo de presentación de exploración; de lo contrario, false. 
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner">
      <summary>
          Proporciona la compatibilidad visual en tiempo de diseño para los controles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Enlaza el diseñador a un control y valida que el control sea un control <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.
        </summary>
      <param name="component">
              Control <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> asociado a este diseñador.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner">
      <summary>
          Proporciona la compatibilidad mínima en tiempo de diseño para los controles <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.GetDesignTimeHtml">
      <summary>
          Devuelve una cadena vacía (""), que indica que el entorno de diseño visual debería revertirse a la representación predeterminada del control.
        </summary>
      <returns>
          Objeto <see cref="T:System.String" /> vacío.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Enlaza el diseñador al control <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> asociado.
        </summary>
      <param name="component">
              Control <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> asociado al diseñador.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia temporal, en lugar del control real que está asociado al diseñador, para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner">
      <summary>
          Proporciona la compatibilidad en tiempo de diseño para los controles <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa una instancia del diseñador enlazada al control <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> asociado.
        </summary>
      <param name="component">
              Control <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> asociado a este diseñador.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Oculta la propiedad <see cref="P:System.Web.UI.WebControls.WebParts.WebZone.VerbStyle" /> en tiempo de diseño.
        </summary>
      <param name="properties">
              <see cref="T:System.Collections.IDictionary" /> del conjunto de propiedades asociado al control.
            </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner">
      <summary>
          Proporciona la compatibilidad en tiempo de diseño para los controles <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner" />.
        </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.AutoFormats">
      <summary>
          Se reemplaza a partir de <see cref="P:System.Web.UI.Design.ControlDesigner.AutoFormats" /> para devolver <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> concreto a la clase <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" />.
        </summary>
      <returns>
          Un <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> especificado previamente con un esquema de WebPartZone predeterminado.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml">
      <summary>
          Obtiene el marcado utilizado para representar el control en tiempo de diseño llamando al método <see cref="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> con un argumento null.
        </summary>
      <returns>
          Una llamada de método a <see cref="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> con un argumento null como el parámetro.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>
          Crea una <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> en el diseñador antes de generar el HTML del control en tiempo de diseño.
        </summary>
      <returns>
          <see cref="T:System.String" /> que representa el HTML del control en tiempo de diseño.
        </returns>
      <param name="regions">
              El objeto <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />, si existe, asociado al control.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>
          Obtiene el contenido del objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
        </summary>
      <returns>
          <see cref="T:System.String" /> que representa el formulario conservado del contenido de la región del diseñador.
        </returns>
      <param name="region">
              Objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>
          Proporciona una cadena vacía ("") si no hay ningún HTML en tiempo de diseño para el control asociado.
        </summary>
      <returns>
          Una cadena vacía.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Adjunta el diseñador al control <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> asociado.
        </summary>
      <param name="component">
              El control <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> asociado.
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>
          Establece el contenido del objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
        </summary>
      <param name="region">
              Objeto <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> especificado.
            </param>
      <param name="content">
              Un objeto <see cref="T:System.String" /> que representa el contenido de la región especificada.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.TemplateGroups">
      <summary>
          Devuelve una <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> concreta a la clase <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" />.
        </summary>
      <returns>
          Una <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> especificada previamente con configuración predeterminada para un entorno de WebPartZone.
        </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner">
      <summary>
          Proporciona la compatibilidad visual en tiempo de diseño para los controles <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" />.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Crea una instancia del diseñador enlazada al control <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> asociado.
        </summary>
      <param name="component">
              Control <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> asociado al diseñador.
            </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner.UsePreviewControl">
      <summary>
          Obtiene un valor que indica si el diseñador debe utilizar una copia temporal, en lugar del control real que está asociado al diseñador, para generar el marcado en tiempo de diseño.
        </summary>
      <returns>
          Siempre es true.
        </returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AnchorEditor">
      <summary>
          Proporciona una interfaz de usuario para configurar una propiedad <see cref="P:System.Windows.Forms.Control.Anchor" />.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.AnchorEditor" />. 
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Modifica el valor del objeto especificado mediante el proveedor de servicios y el contexto especificados.
        </summary>
      <returns>
          Nuevo valor del objeto. Si el valor del objeto no ha cambiado, este método debe devolver el mismo objeto que se pasó.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              <see cref="T:System.IServiceProvider" /> mediante la cual se pueden obtener servicios de edición. 
            </param>
      <param name="value">
              Instancia del valor que se va a editar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de editor utilizado por el método <see cref="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición proporcionado. Si no se admite el método, este método devolverá <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary>
          Importa controles ActiveX y genera un contenedor al que se puede tener acceso mediante un diseñador.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.AxImporter" />.
        </summary>
      <param name="options">
              <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> que indica las opciones que va a utilizar el importador de controles ActiveX. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedAssemblies">
      <summary>
          Obtiene los nombres de los ensamblados que se generan para el control.
        </summary>
      <returns>
          Matriz de los nombres de los ensamblados generados, o una matriz de cadena vacía si no se ha generado ningún ensamblado.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedSources">
      <summary>
          Obtiene los nombres de los archivos de código fuente que se generaron.
        </summary>
      <returns>
          Una matriz de nombres de archivo de los archivos de código fuente generados, o null si no existe ninguno.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedTypeLibAttributes">
      <summary>
          Obtiene los atributos de la biblioteca de tipos generada.
        </summary>
      <returns>
          Matriz de tipo <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> que indica los atributos de la biblioteca de tipos generada.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromFile(System.IO.FileInfo)">
      <summary>
          Genera un contenedor para un control ActiveX que se utilizará en el entorno en tiempo de diseño.
        </summary>
      <returns>
          Nombre completo de ensamblado para el tipo de control ActiveX para el que se ha generado el contenedor.
        </returns>
      <param name="file">
              <see cref="T:System.IO.FileInfo" /> que indica el archivo que contiene el control. 
            </param>
      <exception cref="T:System.Exception">
              No se pudo cargar una biblioteca de tipos desde el archivo <paramref name="file" />
            </exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromTypeLibrary(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>
          Genera un contenedor para un control ActiveX que se utilizará en el entorno en tiempo de diseño.
        </summary>
      <returns>
          Nombre completo de ensamblado para el tipo de control ActiveX para el que se ha generado el contenedor.
        </returns>
      <param name="typeLib">
              <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> que indica la biblioteca de tipos a partir de la cual se va a generar el control. 
            </param>
      <exception cref="T:System.Exception">
              No se encontró ningún control ActiveX registrado en <paramref name="typeLib" />.
            </exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromTypeLibrary(System.Runtime.InteropServices.UCOMITypeLib,System.Guid)">
      <summary>
          Genera un contenedor para un control ActiveX que se utilizará en el entorno en tiempo de diseño.
        </summary>
      <returns>
          Nombre completo de ensamblado para el tipo de control ActiveX para el que se ha generado el contenedor.
        </returns>
      <param name="typeLib">
              <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> que indica la biblioteca de tipos a partir de la cual se va a generar el control. 
            </param>
      <param name="clsid">
              <see cref="T:System.Guid" /> del contenedor del control. 
            </param>
      <exception cref="T:System.Exception">
              No se encontró ningún control ActiveX registrado en <paramref name="typeLib" />.
            </exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GetFileOfTypeLib(System.Runtime.InteropServices.TYPELIBATTR@)">
      <summary>
          Obtiene la ruta de acceso y el nombre de archivo de la biblioteca de tipos especificada.
        </summary>
      <returns>
          Ruta de acceso y nombre del archivo de la biblioteca de tipos especificada, o null si no se encuentra la biblioteca.
        </returns>
      <param name="tlibattr">
              <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> que indica la biblioteca de tipos de la cual se va a recuperar el nombre de archivo. 
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary>
          Proporciona métodos para resolver referencias a bibliotecas ActiveX, ensamblados o bibliotecas de tipos COM, o ensamblados administrados.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>
          Resuelve una referencia a la biblioteca de tipos especificada que contiene un control ActiveX.
        </summary>
      <returns>
          Ruta de acceso completa a un ensamblado.
        </returns>
      <param name="typeLib">
              Referencia a <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> que se va a resolver. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary>
          Resuelve una referencia al ensamblado especificado que contiene un componente COM.
        </summary>
      <returns>
          Ruta de acceso completa a un ensamblado.
        </returns>
      <param name="name">
              <see cref="T:System.Reflection.AssemblyName" /> que indica el ensamblado del que se va a resolver una referencia. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>
          Resuelve una referencia a la biblioteca de tipos especificada que contiene un componente COM.
        </summary>
      <returns>
          Ruta de acceso completa a un ensamblado.
        </returns>
      <param name="typeLib">
              Referencia a <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> que se va a resolver. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary>
          Resuelve una referencia al ensamblado especificado.
        </summary>
      <returns>
          Ruta de acceso completa a un ensamblado.
        </returns>
      <param name="assemName">
              Nombre del ensamblado del que se va a resolver una referencia. 
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary>
          Representa un conjunto de opciones de un <see cref="T:System.Windows.Forms.Design.AxImporter" />.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />. 
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary>
          Especifica si el ensamblado generado tiene un nombre seguro y se firmará más adelante.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary>
          Especifica si se deben generar los orígenes del contenedor de la biblioteca de tipos.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary>
          Especifica la ruta de acceso al archivo que contiene el contenedor de claves de nombre seguro de los ensamblados generados.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary>
          Especifica la ruta de acceso al archivo que contiene la clave de nombre seguro de los ensamblados generados.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary>
          Especifica el nombre seguro utilizado para los ensamblados generados.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary>
          Especifica si los errores se generan en el formato de Microsoft Build Engine (MSBuild).
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary>
          Indica si el logotipo de la herramienta ActiveX Importer se mostrará al importar el control.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary>
          Especifica la ruta de acceso al directorio donde se crearán los ensamblados generados.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary>
          Especifica el nombre de archivo donde se generará el contenedor de controles ActiveX.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary>
          Especifica si se van a sobrescribir los archivos existentes cuando se generen los ensamblados.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary>
          Especifica la clave pública utilizada para firmar los ensamblados generados.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary>
          Especifica el <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" /> que se va a utilizar para resolver los tipos y referencias al generar los ensamblados.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary>
          Especifica si la compilación se realizará en modo silencioso, que muestra menos información en tiempo de compilación.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary>
          Especifica si la compilación se realizará en modo detallado, que muestra más información en tiempo de compilación.
        </summary>
    </member>
    <member name="T:System.Windows.Forms.Design.AxParameterData">
      <summary>
          Representa un parámetro de un método de un control ActiveX alojado.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.Reflection.ParameterInfo)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.AxParameterData" /> utilizando la información del parámetro especificado.
        </summary>
      <param name="info">
              <see cref="T:System.Reflection.ParameterInfo" /> que indica la información del parámetro que se debe usar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.Reflection.ParameterInfo,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.AxParameterData" /> usando la información del parámetro especificado y si la deben omitir los parámetros de referencia.
        </summary>
      <param name="info">
              <see cref="T:System.Reflection.ParameterInfo" /> que indica la información del parámetro que se debe usar. 
            </param>
      <param name="ignoreByRefs">
              Valor que indica si se deben omitir los parámetros que pasa la referencia. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.AxParameterData" /> utilizando el nombre y el nombre del tipo que se hayan especificado.
        </summary>
      <param name="inname">
              Nombre del parámetro. 
            </param>
      <param name="typeName">
              Nombre del tipo de parámetro. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.String,System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.AxParameterData" /> utilizando el tipo y el nombre que se hayan especificado.
        </summary>
      <param name="inname">
              Nombre del parámetro. 
            </param>
      <param name="type">
              Tipo del parámetro. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.Convert(System.Reflection.ParameterInfo[])">
      <summary>
          Convierte la información de parámetro especificada en un objeto <see cref="T:System.Windows.Forms.Design.AxParameterData" />.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Windows.Forms.Design.AxParameterData" /> que representa la matriz especificada de objetos <see cref="T:System.Reflection.ParameterInfo" />.
        </returns>
      <param name="infos">
              Matriz de objetos <see cref="T:System.Reflection.ParameterInfo" /> que se deben convertir. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.Convert(System.Reflection.ParameterInfo[],System.Boolean)">
      <summary>
          Convierte la información del parámetro especificado en un objeto <see cref="T:System.Windows.Forms.Design.AxParameterData" />, en función del valor especificado que indica si la deben omitir los parámetros de referencia.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Windows.Forms.Design.AxParameterData" /> que representa la matriz especificada de objetos <see cref="T:System.Reflection.ParameterInfo" />.
        </returns>
      <param name="infos">
              Matriz de objetos <see cref="T:System.Reflection.ParameterInfo" /> que se deben convertir. 
            </param>
      <param name="ignoreByRefs">
              Valor que indica si se deben omitir los parámetros que pasa la referencia. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.Direction">
      <summary>
          Indica la dirección de los campos de asignación.
        </summary>
      <returns>
          <see cref="T:System.CodeDom.FieldDirection" /> que indica la dirección de los campos de asignación.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsByRef">
      <summary>
          Indica si la referencia pasa los datos del parámetro.
        </summary>
      <returns>
          
            Es true si la referencia pasa los datos del parámetro; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsIn">
      <summary>
          Indica si los datos del parámetro están dentro.
        </summary>
      <returns>
          
            Es true si los datos del parámetro están dentro; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsOptional">
      <summary>
          Indica si los datos del parámetro son opcionales.
        </summary>
      <returns>
          
            true si los datos del parámetro son opcionales; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsOut">
      <summary>
          Indica si los datos del parámetro están fuera.
        </summary>
      <returns>
          
            true si los datos del parámetro están fuera; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.Name">
      <summary>
          Obtiene o establece el nombre del parámetro.
        </summary>
      <returns>
          Nombre del parámetro.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.ParameterType">
      <summary>
          Obtiene el tipo que espera el parámetro.
        </summary>
      <returns>
          Tipo que espera el parámetro.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.TypeName">
      <summary>
          Obtiene el nombre del tipo que espera el parámetro.
        </summary>
      <returns>
          Nombre del tipo que espera el parámetro.
        </returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxWrapperGen">
      <summary>
          Genera un contenedor para los controles ActiveX que se utilizarán en el entorno en tiempo de diseño.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxWrapperGen.#ctor(System.Type)">
      <summary>
          Genera un contenedor de ActiveX para alojar un control ActiveX en tiempo de diseño.
        </summary>
      <param name="axType">
              Tipo de control ActiveX para el que generar un contenedor. 
            </param>
    </member>
    <member name="F:System.Windows.Forms.Design.AxWrapperGen.GeneratedSources">
      <summary>
          Este campo inicializa una variable <see cref="T:System.Collections.ArrayList" /> local denominada GeneratedSources.
        </summary>
    </member>
    <member name="T:System.Windows.Forms.Design.BorderSidesEditor">
      <summary>
          Proporciona un editor para establecer la propiedad <see cref="P:System.Windows.Forms.ToolStripStatusLabel.BorderSides" />.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.BorderSidesEditor" />. 
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Modifica el valor del objeto dado utilizando el estilo de editor proporcionado por <see cref="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.
        </summary>
      <returns>
          El objeto modificado.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información sobre el control o componente.
            </param>
      <param name="provider">
              <see cref="T:System.IServiceProvider" /> que proporciona soporte personalizado a otros objetos.
            </param>
      <param name="value">
              Valor del objeto que se va a modificar.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Recupera el estilo de edición del método EditValue.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />. Si no se admite el método, devuelve <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información sobre el control o componente.
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary>
          Clase base de diseñador para extender el comportamiento del modo de diseño de un documento de diseño raíz que admite componentes anidados.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" />. 
        </summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary>
          Obtiene el control del diseñador.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Control" /> que el diseñador está editando.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados que utiliza <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> y, opcionalmente, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>
          Obtiene un valor que indica si la herramienta especificada es compatible con el diseñador.
        </summary>
      <returns>
          
            Es true si la herramienta debe estar habilitada en el cuadro de herramientas; es false si el diseñador de documentos no sabe cómo utilizar la herramienta.
        </returns>
      <param name="tool">
              <see cref="T:System.Drawing.Design.ToolboxItem" /> cuya compatibilidad con el cuadro de herramientas se va a comprobar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador con el componente especificado.
        </summary>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" /> que se va a asociar al diseñador. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Ajusta el conjunto de propiedades que el componente expondrá mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="properties">
              <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades de la clase del componente. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="T:System.ComponentModel.Design.ViewTechnology" />.
        </summary>
      <returns>
          Objeto que representa la vista de este diseñador.
        </returns>
      <param name="technology">
              <see cref="T:System.ComponentModel.Design.ViewTechnology" /> que indica una tecnología de vista concreta.
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.
        </summary>
      <returns>
          Matriz de valores <see cref="T:System.ComponentModel.Design.ViewTechnology" /> admitidos.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.
        </summary>
      <returns>
          
            Es true si el conjunto de atributos filtrados se debe guardar en caché; false si el servicio de filtros debe volver a consultar.
        </returns>
      <param name="component">
              Componente cuyos atributos se van a filtrar.
            </param>
      <param name="attributes">
              Diccionario de atributos que pueden modificarse.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.
        </summary>
      <returns>
          
            Es true si el conjunto de eventos filtrados se debe guardar en caché; es false si el servicio de filtros debe volver a consultar.
        </returns>
      <param name="component">
              Componente cuyos eventos se van a filtrar.
            </param>
      <param name="events">
              Diccionario de eventos que pueden modificarse.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.
        </summary>
      <returns>
          
            Es true si el conjunto de propiedades filtradas se debe guardar en caché; es false si el servicio de filtros debe volver a consultar.
        </returns>
      <param name="component">
              Componente cuyas propiedades se van a filtrar.
            </param>
      <param name="properties">
              Diccionario de propiedades que pueden modificarse.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.
        </summary>
      <returns>
          
            true si la herramienta es compatible con el cuadro de herramientas y puede habilitarse; false si el diseñador de documentos no sabe cómo utilizar la herramienta.
        </returns>
      <param name="tool">
              <see cref="T:System.Drawing.Design.ToolboxItem" /> para el que se va a realizar una comprobación de compatibilidad con el cuadro de herramientas.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.
        </summary>
      <param name="tool">
              <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a seleccionar.
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary>
          Obtiene o establece un valor que indica si la bandeja de componentes del diseñador está en modo de organización automática.
        </summary>
      <returns>
          
            Es true si la bandeja de componentes del diseñador está en modo de organización automática; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary>
          Obtiene o establece un valor que indica si la bandeja de componentes del diseñador está en modo de iconos grandes.
        </summary>
      <returns>
          
            Es true si la bandeja de componentes del diseñador está en modo de iconos grandes; en caso contrario, es false.
        </returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary>
          Proporciona el comportamiento de la bandeja de componentes de un diseñador. 
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ComponentTray" /> mediante el proveedor de servicios y el diseñador especificados.
        </summary>
      <param name="mainDesigner">
              <see cref="T:System.ComponentModel.Design.IDesigner" /> que es el diseñador principal o de documentos del proyecto actual. 
            </param>
      <param name="serviceProvider">
              <see cref="T:System.IServiceProvider" /> que se puede utilizar para obtener servicios en tiempo de diseño. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary>
          Agrega un componente a la bandeja.
        </summary>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" /> que se va a agregar a la bandeja. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary>
          Obtiene o establece un valor que indica si los elementos de la bandeja se alinean automáticamente.
        </summary>
      <returns>
          
            Es true si los elementos de la bandeja se organizan automáticamente; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>
          Obtiene un valor que indica si la herramienta especificada se puede utilizar para crear un componente nuevo.
        </summary>
      <returns>
          
            Es true si la herramienta especificada se puede utilizar para crear un componente; en caso contrario, es false.
        </returns>
      <param name="tool">
              <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a probar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary>
          Obtiene un valor que indica si el componente especificado se puede mostrar.
        </summary>
      <returns>
          
            Es true si el componente se puede mostrar; en caso contrario, es false.
        </returns>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" /> que se va a probar. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary>
          Obtiene el número de componentes que contiene la bandeja.
        </summary>
      <returns>
          Número de componentes de la bandeja.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>
          Crea un componente a partir del elemento de cuadro de herramientas especificado, lo agrega al documento actual y muestra una representación suya en la bandeja de componentes.
        </summary>
      <param name="tool">
              <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear un componente. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary>
          Muestra un mensaje de error al usuario con información acerca de la excepción especificada.
        </summary>
      <param name="e">
              Excepción acerca de la cual se va a mostrar información. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados utilizados por <see cref="T:System.Windows.Forms.Design.ComponentTray" /> y libera los recursos administrados de forma opcional.
        </summary>
      <param name="disposing">
              
                true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary>
          Obtiene la ubicación del componente especificado con relación a la esquina superior izquierda de la bandeja de componentes.
        </summary>
      <returns>
          <see cref="T:System.Drawing.Point" /> que indica las coordenadas del componente especificado, o un <see cref="T:System.Drawing.Point" /> vacío si el componente especificado no se encontró en la bandeja de componentes. En un <see cref="T:System.Drawing.Point" /> vacío, su propiedad <see cref="P:System.Drawing.Point.IsEmpty" /> es igual a true y, normalmente, sus propiedades <see cref="P:System.Drawing.Point.X" /> y <see cref="P:System.Drawing.Point.Y" /> son igual a cero.
        </returns>
      <param name="receiver">
              <see cref="T:System.ComponentModel.IComponent" /> cuya ubicación se va a recuperar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary>
          Este método, similar a <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />, devuelve el siguiente componente de la bandeja, dado un componente de inicio.
        </summary>
      <returns>
          El componente siguiente en la bandeja de componentes o null, si se encuentra el final de la lista (o el principio, si <paramref name="forward" /> es false).
        </returns>
      <param name="component">
              El componente por el que se empieza a enumerar.
            </param>
      <param name="forward">
              
                Es true para enumerar hacia delante en la lista; de lo contrario, es false para enumerar hacia atrás.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary>
          Obtiene el tipo de servicio solicitado.
        </summary>
      <returns>
          Instancia del servicio solicitado, o null si no se encuentra ningún servicio.
        </returns>
      <param name="serviceType">
              Tipo de servicio que se va a recuperar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary>
          Obtiene el valor de la propiedad extensora Location.
        </summary>
      <returns>
          <see cref="T:System.Drawing.Point" /> que representa la ubicación de <paramref name="receiver" />. 
        </returns>
      <param name="receiver">
              La interfaz <see cref="T:System.ComponentModel.IComponent" /> que recibe la propiedad extensora location.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary>
          Prueba si un componente aparece en la bandeja de componentes.
        </summary>
      <returns>
          
            Es true si se muestra <paramref name="comp" /> en la bandeja; de lo contrario, es false.
        </returns>
      <param name="comp">
              El componente cuya presencia en la bandeja de componentes se va a probar.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>
          Se le llama cuando se suelta un objeto arrastrado en la bandeja de componentes.
        </summary>
      <param name="de">
              Un <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>
          Se le llama cuando se arrastra un objeto y este entra en el área de la bandeja de componentes.
        </summary>
      <param name="de">
              Un <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary>
          Se le llama cuando se arrastra un objeto fuera del área de la bandeja de componentes.
        </summary>
      <param name="e">
              <see cref="T:System.EventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>
          Se le llama cuando se arrastra un objeto sobre la bandeja de componentes.
        </summary>
      <param name="de">
              Un <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>
          Se le llama durante una operación de arrastrar y colocar OLE para que la bandeja de componentes pueda ofrecer información al usuario sobre el resultado de colocar el objeto en un punto específico.
        </summary>
      <param name="gfevent">
              Un <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
          [Infraestructura que debe proporcionarse.]
        </summary>
      <param name="levent">
              <see cref="T:System.Windows.Forms.LayoutEventArgs" /> que contiene los datos de eventos. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary>
          Se le llama cuando se cancela una operación de selección mediante arrastre del mouse (ratón).
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>
          Se le llama cuando se hace doble clic en la bandeja de componentes.
        </summary>
      <param name="e">
              <see cref="T:System.EventArgs" /> que proporciona datos para el evento.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
          Se le llama cuando se presiona un botón del mouse (ratón).
        </summary>
      <param name="e">
              Un <see cref="T:System.Windows.Forms.MouseEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
          Se le llama cuando cambia la posición del cursor del mouse (ratón).
        </summary>
      <param name="e">
              Un <see cref="T:System.Windows.Forms.MouseEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
          Se le llama cuando se libera el botón del mouse (ratón).
        </summary>
      <param name="e">
              Un <see cref="T:System.Windows.Forms.MouseEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
          Se le llama cuando es necesario actualizar la vista de la bandeja de componentes.
        </summary>
      <param name="pe">
              Un <see cref="T:System.Windows.Forms.PaintEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary>
          Se le llama para establecer el cursor del mouse (ratón).
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary>
          Quita el componente especificado de la bandeja.
        </summary>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" /> que se quita de la bandeja. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>
          Establece el componente especificado en la ubicación especificada.
        </summary>
      <param name="receiver">
              <see cref="T:System.ComponentModel.IComponent" /> cuya ubicación se va a establecer. 
            </param>
      <param name="location">
              <see cref="T:System.Drawing.Point" /> que indica la nueva ubicación del componente especificado. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>
          Establece el valor de la propiedad extensora Location.
        </summary>
      <param name="receiver">
              La interfaz <see cref="T:System.ComponentModel.IComponent" /> que recibe la propiedad extensora location.
            </param>
      <param name="location">
              <see cref="T:System.Drawing.Point" /> que representa la ubicación de <paramref name="receiver" />. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary>
          Obtiene o establece un valor que indica si la bandeja muestra un icono grande para representar cada componente de la bandeja.
        </summary>
      <returns>
          
            Es true si se muestran iconos grandes; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />.
        </summary>
      <returns>
          
            truesi este objeto puede proporcionar propiedades extensoras al objeto especificado; en caso contrario, false.
        </returns>
      <param name="component">
              <see cref="T:System.Object" /> para recibir las propiedades Extender.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary>
          Procesa los mensajes de Windows.
        </summary>
      <param name="m">
              El <see cref="T:System.Windows.Forms.Message" /> que se va a procesar. 
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary>
          Extiende el comportamiento en modo de diseño de un <see cref="T:System.Windows.Forms.Control" />.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ControlDesigner" />. 
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary>
          Especifica el objeto de accesibilidad para el diseñador.
        </summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary>
          Obtiene <see cref="T:System.Windows.Forms.AccessibleObject" /> asignado al control.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> asignado al control.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary>
          Obtiene la colección de componentes asociados al componente administrado por el diseñador.
        </summary>
      <returns>
          Componentes asociados al componente administrado por el diseñador.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary>
          Obtiene o establece un valor que indica si la asignación del controlador de cambio de tamaño depende del valor de la propiedad <see cref="P:System.Windows.Forms.Control.AutoSize" />. 
        </summary>
      <returns>
          
            Es true si la asignación del controlador de cambio de tamaño depende del valor de las propiedades <see cref="P:System.Windows.Forms.Control.AutoSize" /> y AutoSizeMode; de lo contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary>
          Procesa los mensajes de Windows.
        </summary>
      <param name="m">
              El <see cref="T:System.Windows.Forms.Message" /> que se va a procesar. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary>
          Obtiene el <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> del entorno de diseño.
        </summary>
      <returns>
          El <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> o null si el servicio no está disponible.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary>
          Indica si el control del diseñador especificado puede ser el principal de este control de diseñador.
        </summary>
      <returns>
          
            Es true si el control administrado por el diseñador especificado puede ser principal del control que administra este diseñador; en caso contrario, es false.
        </returns>
      <param name="parentDesigner">
              <see cref="T:System.ComponentModel.Design.IDesigner" /> que administra el control que se va a comprobar. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary>
          Obtiene el control que diseña el diseñador.
        </summary>
      <returns>
          Control que diseña el diseñador.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary>
          Proporciona procesamiento predeterminado para los mensajes de Windows.
        </summary>
      <param name="m">
              El <see cref="T:System.Windows.Forms.Message" /> que se va a procesar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary>
          Muestra información al usuario acerca de la excepción especificada.
        </summary>
      <param name="e">
              La <see cref="T:System.Exception" /> que se va a mostrar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados utilizados por <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> y libera los recursos administrados de forma opcional.
        </summary>
      <param name="disposing">
              
                true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary>
          Habilita la funcionalidad en tiempo de diseño para un control secundario.
        </summary>
      <returns>
          
            Es true si el control secundario se puede habilitar para el tiempo de diseño; es false si la infraestructura host no lo permite.
        </returns>
      <param name="child">
              El control secundario para el que se habilitará el modo de diseño.
            </param>
      <param name="name">
              El nombre de <paramref name="child" /> tal y como se expone al usuario final.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="child" /> o <paramref name="name" /> es null.
            </exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary>
          Habilita o deshabilita la compatibilidad con arrastrar y colocar del control que se está diseñando.
        </summary>
      <param name="value">
              
                Es true para habilitar en el control la compatibilidad con arrastrar y colocar; es false si el control no admitirá la operación de arrastrar y colocar. El valor predeterminado es false. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary>
          Obtiene un valor que indica si se pueden dibujar rectángulos de arrastre en este componente del diseñador.
        </summary>
      <returns>
          
            Es true si se pueden dibujar rectángulos de arrastre; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>
          Devuelve <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> que representa los límites de este control.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.
        </returns>
      <param name="selectionType">
              Un valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica el estado de la selección.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>
          Obtiene una colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que representan los bordes de selección y los identificadores de agarre de un control estándar.
        </summary>
      <returns>
          Una colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </returns>
      <param name="selectionType">
              Un valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica el estado de la selección.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>
          Indica si el control debe controlar un clic con el mouse (ratón) en el punto especificado.
        </summary>
      <returns>
          
            Es true si el control controla un clic en el punto especificado; en caso contrario, es false.
        </returns>
      <param name="point">
              <see cref="T:System.Drawing.Point" /> que indica la posición en que se ha hecho clic con el mouse, en coordenadas de la pantalla. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary>
          Dirige los mensajes desde los controles secundarios del control especificado al diseñador.
        </summary>
      <param name="firstChild">
              Primer <see cref="T:System.Windows.Forms.Control" /> secundario que se va a procesar. Este método se puede llamar a sí mismo de forma recursiva para los secundarios del control. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary>
          Obtiene el <see cref="T:System.ComponentModel.InheritanceAttribute" /> del diseñador.
        </summary>
      <returns>
          
            Es <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> si el diseñador es un diseñador raíz; de lo contrario, es el valor de la propiedad <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> del diseñador primario.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador con el componente especificado.
        </summary>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" /> que se va a asociar al diseñador. Este componente siempre debe ser una instancia o derivar de <see cref="T:System.Windows.Forms.Control" />. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>
          Vuelve a inicializar un componente existente.
        </summary>
      <param name="defaultValues">
              Un diccionario de valores predeterminados de nombre y valor que se van a aplicar a propiedades. Puede ser null si no se especifican valores predeterminados.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>
          Inicializa un componente recién creado.
        </summary>
      <param name="defaultValues">
              Un diccionario de valores predeterminados de nombre y valor que se van a aplicar a propiedades. Puede ser null si no se especifican valores predeterminados.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary>
          Devuelve al diseñador de controles internos el índice especificado en <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.
        </summary>
      <returns>
          Un <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> que se encuentra en el índice especificado.
        </returns>
      <param name="internalControlIndex">
              Un índice especificado para seleccionar el diseñador de controles internos. Este índice se basa en cero.
            </param>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary>
          Define un <see cref="T:System.Drawing.Point" /> local que representa los valores de un <see cref="T:System.Drawing.Point" /> no válido.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary>
          Devuelve el número de diseñadores de controles internos en <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.
        </summary>
      <returns>
          El número de diseñadores de controles internos en <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>
          Muestra el menú contextual y permite realizar otros procesos adicionales cuando el menú contextual está a punto de mostrarse.
        </summary>
      <param name="x">
              Coordenada x donde se va a mostrar el menú contextual. 
            </param>
      <param name="y">
              Coordenada y donde se va a mostrar el menú contextual. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary>
          Permite realizar otros procesos adicionales inmediatamente después de crear el identificador del control.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>
          Recibe una llamada para limpiar una operación de arrastrar y colocar.
        </summary>
      <param name="de">
              Un <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>
          Recibe una llamada cuando se coloca un objeto de arrastrar y colocar en la vista del diseñador del control.
        </summary>
      <param name="de">
              Un <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>
          Recibe una llamada cuando una operación de arrastrar y colocar entra en la vista del diseñador del control.
        </summary>
      <param name="de">
              Un <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>
          Recibe una llamada cuando una operación de arrastrar y colocar sale de la vista del diseñador del control.
        </summary>
      <param name="e">
              <see cref="T:System.EventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>
          Recibe una llamada cuando se arrastra un objeto de arrastrar y colocar en la vista del diseñador del control.
        </summary>
      <param name="de">
              Un <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>
          Recibe una llamada mientras se está realizando una operación de arrastrar y colocar para proporcionar guías visuales basadas en la ubicación del mouse cuando se está realizando una operación de arrastre.
        </summary>
      <param name="e">
              Un <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>
          Recibe una llamada cuando se presiona el botón primario del mouse (ratón) y se mantiene presionado mientras está sobre el componente.
        </summary>
      <param name="x">
              Posición x del mouse, en coordenadas de pantalla. 
            </param>
      <param name="y">
              Posición y del mouse, en coordenadas de pantalla. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>
          Recibe una llamada al final de una operación de arrastrar y colocar para terminar o cancelar la operación.
        </summary>
      <param name="cancel">
              
                Es true para cancelar la operación de arrastrar; es false para confirmarla. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>
          Recibe una llamada en cada movimiento del mouse durante una operación de arrastrar y colocar.
        </summary>
      <param name="x">
              Posición x del mouse, en coordenadas de pantalla. 
            </param>
      <param name="y">
              Posición y del mouse, en coordenadas de pantalla. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary>
          Recibe una llamada cuando el mouse entra en el control por primera vez.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary>
          Recibe una llamada después de que el mouse se desplace sobre el control.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary>
          Recibe una llamada cuando el mouse entra en el control por primera vez.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>
          Recibe una llamada cuando el control que el diseñador está administrando tiene su superficie dibujada, de manera que el diseñador pueda dibujar otros adornos en la parte superior del control.
        </summary>
      <param name="pe">
              <see cref="T:System.Windows.Forms.PaintEventArgs" /> que el diseñador puede utilizar para dibujar en el control. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary>
          Se le llama cuando se inicializa el diseñador.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary>
          Recibe una llamada cada vez que es necesario establecer el cursor.
        </summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary>
          Obtiene el componente principal de <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.
        </summary>
      <returns>
          El componente principal para <see cref="T:System.Windows.Forms.Design.ControlDesigner" />; de lo contrario, es null si no hay ningún componente principal.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary>
          Obtiene un valor que indica si <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> permitirá la alineación de las líneas de ajuste durante una operación de arrastre.
        </summary>
      <returns>
          
            Es true si <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> permitirá la alineación de las líneas de ajuste durante una operación de arrastre cuando el control de arrastre primario esté sobre este diseñador; de lo contrario, es false.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Ajusta el conjunto de propiedades que el componente expone mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="properties">
              <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades de la clase del componente. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary>
          Obtiene las reglas de selección que indican las posibilidades de movimiento de un componente.
        </summary>
      <returns>
          Una combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.Design.SelectionRules" />.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary>
          Obtiene una lista de objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> que representan los puntos de alineación significativos de este control.
        </summary>
      <returns>
          Una lista de objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> que representan los puntos de alineación significativos de este control.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary>
          Dirige los mensajes para los secundarios del control especificado a cada uno de los controles en lugar de a un diseñador principal.
        </summary>
      <param name="firstChild">
              Primer <see cref="T:System.Windows.Forms.Control" /> secundario que se va a procesar. Este método se puede llamar a sí mismo de forma recursiva para los secundarios del control. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>
          Procesa los mensajes de Windows y, de forma opcional, los enruta al control.
        </summary>
      <param name="m">
              El <see cref="T:System.Windows.Forms.Message" /> que se va a procesar. 
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary>
          Proporciona un <see cref="T:System.Windows.Forms.AccessibleObject" /> para <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> con el diseñador y control especificados.
        </summary>
      <param name="designer">
              <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> para el objeto accesible. 
            </param>
      <param name="control">
              <see cref="T:System.Windows.Forms.Control" /> para el objeto accesible. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary>
          Obtiene los puntos que definen los límites del objeto accesible para el diseñador.
        </summary>
      <returns>
          <see cref="T:System.Drawing.Rectangle" /> que indica los límites del objeto accesible para el diseñador.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary>
          Obtiene una cadena que describe la acción predeterminada del objeto especificado.
        </summary>
      <returns>
          Descripción de la acción predeterminada para un objeto especificado.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary>
          Obtiene una cadena que describe la apariencia visual del objeto especificado.
        </summary>
      <returns>
          Descripción para el usuario de la apariencia visual del objeto o null si el objeto no tiene descripción.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary>
          Recupera el secundario accesible correspondiente al índice especificado.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> que representa el secundario accesible correspondiente al índice especificado.
        </returns>
      <param name="index">
              Índice de base cero del secundario accesible.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary>
          Recupera el número de secundarios que pertenecen a un objeto accesible.
        </summary>
      <returns>
          Número de secundarios que pertenecen a un objeto accesible.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary>
          Recupera el objeto que tiene el foco de teclado.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> que especifica el secundario que tiene el foco actualmente. Este método devuelve el objeto de llamada si el propio objeto tiene el foco. Devuelve null si ningún objeto tiene el foco.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary>
          Recupera el secundario seleccionado actualmente.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> que representa el secundario seleccionado actualmente. Este método devuelve el objeto de llamada si el propio objeto está seleccionado. Devuelve null si no hay ningún secundario seleccionado actualmente y el propio objeto no tiene el foco.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary>
          Recupera el objeto secundario que se encuentra en las coordenadas de pantalla especificadas.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> que representa el objeto secundario en las coordenadas de pantalla dadas. Este método devuelve el objeto de llamada si el propio objeto está en la ubicación especificada. Devuelve null si no hay ningún objeto en la ubicación probada.
        </returns>
      <param name="x">
              Coordenada horizontal de la pantalla.
            </param>
      <param name="y">
              Coordenada vertical de la pantalla.
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary>
          Obtiene o establece el nombre del objeto.
        </summary>
      <returns>
          Nombre del objeto o null si no se ha establecido la propiedad.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary>
          Obtiene el primario de un objeto accesible.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> que representa el primario de un objeto accesible o null si no hay ningún objeto primario.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary>
          Obtiene la función de este objeto accesible.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Windows.Forms.AccessibleRole" /> o <see cref="F:System.Windows.Forms.AccessibleRole.None" /> si no se ha especificado ninguna función.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary>
          Obtiene el estado de este objeto accesible.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Windows.Forms.AccessibleStates" /> o <see cref="F:System.Windows.Forms.AccessibleStates.None" /> si no se ha establecido el estado.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary>
          Obtiene o establece el valor de un objeto accesible.
        </summary>
      <returns>
          Valor de un objeto accesible o null si el objeto no tiene ningún valor establecido.
        </returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary>
          Proporciona acceso para obtener y establecer los valores de las opciones de un diseñador.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.DesignerOptions" />. 
        </summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary>
          Obtiene o establece un valor que habilita o deshabilita la edición en contexto para los controles <see cref="T:System.Windows.Forms.ToolStrip" />.
        </summary>
      <returns>
          
            Es true si la edición en contexto para los controles <see cref="T:System.Windows.Forms.ToolStrip" /> está habilitada; de lo contrario, es false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary>
          Obtiene o establece un <see cref="T:System.Drawing.Size" /> que representa las dimensiones de una unidad de la cuadrícula. 
        </summary>
      <returns>
          Un <see cref="T:System.Drawing.Size" /> que representa las dimensiones de una unidad de la cuadrícula.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary>
          Obtiene o establece un valor que especifica si un diseñador muestra automáticamente el panel de etiquetas inteligentes de un componente durante su creación. 
        </summary>
      <returns>
          
            Es true para permitir que el panel de etiquetas inteligentes de un componente se abra automáticamente durante su creación; de lo contrario, es false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary>
          Obtiene o establece un valor que habilita o deshabilita la cuadrícula en el diseñador. 
        </summary>
      <returns>
          
            Es true si la cuadrícula está habilitada; de lo contrario, es false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary>
          Obtiene o establece un valor que habilita o deshabilita si los controles se colocan automáticamente en las coordenadas de la cuadrícula. 
        </summary>
      <returns>
          
            Es true si el ajuste está habilitado; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary>
          Obtiene o establece un valor que habilita o deshabilita la caché de componentes. 
        </summary>
      <returns>
          
            Es true si la caché de componentes está habilitada; de lo contrario, es false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary>
          Obtiene o establece un valor que habilita o deshabilita las etiquetas inteligentes en el diseñador.
        </summary>
      <returns>
          
            Es true si las etiquetas inteligentes están habilitadas en el diseñador; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary>
          Obtiene o establece un valor que habilita o deshabilita las líneas de ajuste en el diseñador.
        </summary>
      <returns>
          
            Es true si las líneas de ajuste del diseñador están habilitadas; de lo contrario, es false.
        </returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DockEditor">
      <summary>
          Proporciona una interfaz de usuario para especificar una propiedad <see cref="P:System.Windows.Forms.Control.Dock" />.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.DockEditor" />. 
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Modifica el valor del objeto especificado utilizando el estilo de editor proporcionado por GetEditorStyle. Se proporciona un proveedor de servicios para poder obtener todos los servicios de edición necesarios.
        </summary>
      <returns>
          Nuevo valor del objeto. Si el valor del objeto no ha cambiado, este método debe devolver el mismo objeto que se pasó.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              Objeto de proveedor de servicios mediante el que se pueden obtener los servicios de edición. 
            </param>
      <param name="value">
              Instancia del valor que se va a modificar. 
            </param>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              <see cref="T:System.IServiceProvider" /> que puede utilizar este editor para obtener servicios. 
            </param>
      <param name="value">
              Objeto que se va a modificar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Recupera el estilo de edición del método EditValue. Si no se admite el método, devolverá None.
        </summary>
      <returns>
          Valor enum que indica el estilo de edición proporcionado.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary>
          Clase de diseñador base para extender el comportamiento del modo de diseño de un <see cref="T:System.Windows.Forms.Control" /> que admite controles anidados y debe recibir mensajes de desplazamiento, así como para proporcionarle una vista de modo de diseño en el nivel raíz.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.DocumentDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados que utiliza <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> y, opcionalmente, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>
          Comprueba la existencia de un servicio de editor de menús y, si no hay, crea uno.
        </summary>
      <param name="c">
              <see cref="T:System.ComponentModel.IComponent" /> que garantiza que hay un servicio de menús contextuales. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>
          Obtiene <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> que representa los objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </summary>
      <returns>
          Colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </returns>
      <param name="selectionType">
              Valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica el estado de selección.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>
          Indica si la herramienta especificada es compatible con el diseñador.
        </summary>
      <returns>
          
            Es true si la herramienta debe estar habilitada en el cuadro de herramientas; es false si el diseñador de documentos no sabe cómo utilizar la herramienta.
        </returns>
      <param name="tool">
              <see cref="T:System.Drawing.Design.ToolboxItem" /> cuya compatibilidad con el cuadro de herramientas se va a comprobar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador con el componente especificado.
        </summary>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" /> que se va a asociar al diseñador. 
            </param>
    </member>
    <member name="F:System.Windows.Forms.Design.DocumentDesigner.menuEditorService">
      <summary>
          Inicializa la variable menuEditorService en null.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>
          Se le llama cuando se debe mostrar el menú contextual.
        </summary>
      <param name="x">
              Coordenada de pantalla horizontal donde se va a mostrar el menú contextual. 
            </param>
      <param name="y">
              Coordenada de pantalla vertical donde se va a mostrar el menú contextual. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary>
          Se le llama inmediatamente después de crear el identificador del diseñador.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Ajusta el conjunto de propiedades que el componente expone mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="properties">
              <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades de la clase del componente. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary>
          Obtiene <see cref="T:System.Windows.Forms.Design.SelectionRules" /> para el diseñador.
        </summary>
      <returns>
          Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.Design.SelectionRules" />.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="T:System.ComponentModel.Design.ViewTechnology" />.
        </summary>
      <returns>
          Objeto que representa la vista de este diseñador.
        </returns>
      <param name="technology">
              <see cref="T:System.ComponentModel.Design.ViewTechnology" /> que indica una tecnología de vista concreta.
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.
        </summary>
      <returns>
          Matriz de valores <see cref="T:System.ComponentModel.Design.ViewTechnology" /> admitidos.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.
        </summary>
      <returns>
          
            true si la herramienta es compatible con el cuadro de herramientas y puede habilitarse; false si el diseñador de documentos no sabe cómo utilizar la herramienta.
        </returns>
      <param name="tool">
              <see cref="T:System.Drawing.Design.ToolboxItem" /> para el que se va a realizar una comprobación de compatibilidad con el cuadro de herramientas.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.
        </summary>
      <param name="tool">
              <see cref="T:System.Drawing.Design.ToolboxItem" /> que se va a seleccionar.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>
          Selecciona la herramienta especificada.
        </summary>
      <param name="tool">
              <see cref="T:System.Drawing.Design.ToolboxItem" /> para el que se va a crear un componente. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>
          Procesa los mensajes de Windows.
        </summary>
      <param name="m">
              <see cref="T:System.Windows.Forms.Message" /> que se va a procesar. 
            </param>
      <param name="m">
              <see cref="T:System.Windows.Forms.Message" /> que se va a procesar. 
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary>
          Proporciona una manera sistemática de administrar los controladores de eventos para el documento actual.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.EventHandlerService" />. 
        </summary>
      <param name="focusWnd">
              Control <see cref="T:System.Windows.Forms.Control" /> que se está diseñado.
            </param>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary>
          Inicia un evento OnEventHandlerChanged.
        </summary>
      <param name="e">
              La información de evento. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary>
          Obtiene el control al que están asociados los controladores de eventos.
        </summary>
      <returns>
          Control <see cref="T:System.Windows.Forms.Control" /> asociado mediante el constructor.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary>
          Obtiene el controlador de eventos actualmente activo del tipo especificado.
        </summary>
      <returns>
          Instancia del controlador o null si no hay ningún controlador del tipo solicitado.
        </returns>
      <param name="handlerType">
              Tipo del controlador que se va a obtener. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary>
          Extrae el controlador especificado de la pila.
        </summary>
      <param name="handler">
              Controlador que se va a quitar de la pila. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary>
          Inserta un nuevo controlador de eventos en la pila.
        </summary>
      <param name="handler">
              El controlador que se va a agregar a la pila. 
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.FileNameEditor">
      <summary>
          Proporciona una interfaz de usuario para seleccionar un nombre de archivo.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.FileNameEditor" />. 
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Edita el objeto especificado utilizando el estilo de editor proporcionado por el método <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.
        </summary>
      <returns>
          Nuevo valor del objeto. Si el valor del objeto no ha cambiado, este método debe devolver el mismo objeto que se pasó.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              Objeto de proveedor de servicios mediante el que se pueden obtener los servicios de edición. 
            </param>
      <param name="value">
              Instancia del valor que se va a modificar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de edición utilizado por el método <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición proporcionado.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
      <summary>
          Inicializa el cuadro de diálogo para abrir archivos cuando se crea.
        </summary>
      <param name="openFileDialog">
              <see cref="T:System.Windows.Forms.OpenFileDialog" /> que se va a utilizar para seleccionar un nombre de archivo. 
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor">
      <summary>
          Proporciona una interfaz de usuario para elegir una carpeta del sistema de archivos.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.FolderNameEditor" />. 
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Edita el objeto especificado utilizando el estilo de editor proporcionado por <see cref="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.
        </summary>
      <returns>
          El nuevo valor del objeto, o el valor anterior, si no se pudo actualizar el objeto.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              Proveedor de objetos de servicio. 
            </param>
      <param name="value">
              Valor que se va a establecer. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de edición utilizado por el método <see cref="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.
        </summary>
      <returns>
          Valor de enumeración <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición proporcionado.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser)">
      <summary>
          Inicializa el cuadro de diálogo del explorador de carpetas.
        </summary>
      <param name="folderBrowser">
              <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> para elegir una carpeta. 
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser">
      <summary>
          Representa un cuadro de diálogo que permite al usuario seleccionar una carpeta. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />. 
        </summary>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Description">
      <summary>
          Obtiene o establece una descripción que se va a mostrar por encima de las carpetas.
        </summary>
      <returns>
          Descripción que se va a mostrar sobre las carpetas.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.DirectoryPath">
      <summary>
          Obtiene la ruta de acceso al directorio del objeto seleccionada por el usuario.
        </summary>
      <returns>
          La ruta de acceso al directorio del objeto seleccionada por el usuario.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog">
      <summary>
          Muestra el cuadro de diálogo de explorador de carpetas.
        </summary>
      <returns>
          Control <see cref="T:System.Windows.Forms.DialogResult" /> del formulario.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary>
          Muestra el cuadro de diálogo de explorador de carpetas con el propietario especificado.
        </summary>
      <returns>
          Control <see cref="T:System.Windows.Forms.DialogResult" /> del formulario.
        </returns>
      <param name="owner">
              Ventana de nivel superior que poseerá el cuadro de diálogo modal (por ejemplo: System.Windows.Forms.Form). 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.StartLocation">
      <summary>
          Obtiene o establece la ubicación de inicio del nodo raíz.
        </summary>
      <returns>
          Control <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder" /> que indica la ubicación del explorador de carpetas que se va a explorar inicialmente.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Style">
      <summary>
          Estilos que el explorador de carpetas utilizará al explorar las carpetas. Esto debe ser una combinación de indicadores de la enumeración <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" />.
        </summary>
      <returns>
          Miembro de enumeración del control <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> que indica el comportamiento que debe utilizar el control <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.
        </returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder">
      <summary>
          Define los identificadores utilizados para indicar la carpeta raíz que se abrirá inicialmente en un explorador de carpetas.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Desktop">
      <summary>
          El escritorio del usuario.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Favorites">
      <summary>
          La lista de favoritos del usuario
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyComputer">
      <summary>
          El contenido del icono Mi PC.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyDocuments">
      <summary>
          La carpeta Mis documentos del usuario.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyPictures">
      <summary>
          La ubicación del usuario donde se almacenan las imágenes.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetAndDialUpConnections">
      <summary>
          Conexiones de red y acceso telefónico.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetworkNeighborhood">
      <summary>
          El entorno de red.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Printers">
      <summary>
          Una carpeta que contiene las impresoras instaladas.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Recent">
      <summary>
          Una carpeta que contiene los accesos directos a los archivos abiertos recientemente.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.SendTo">
      <summary>
          Una carpeta que contiene los accesos directos a las aplicaciones a las que se enviarán los documentos.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.StartMenu">
      <summary>
          El menú Inicio del usuario.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Templates">
      <summary>
          Las plantillas de archivo del usuario.
        </summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles">
      <summary>
          Define los identificadores utilizados para especificar el comportamiento de un objeto <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForComputer">
      <summary>
          El explorador de carpetas sólo podrá devolver equipos. Si el usuario selecciona cualquier otra cosa, el botón Aceptar aparecerá atenuado.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForEverything">
      <summary>
          El explorador de carpetas podrá devolver cualquiera de los objetos que es capaz de devolver.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForPrinter">
      <summary>
          El explorador de carpetas sólo podrá devolver impresoras. Si el usuario selecciona cualquier otra cosa, el botón Aceptar aparecerá atenuado.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToDomain">
      <summary>
          El explorador de carpetas no incluirá carpetas de red por debajo del nivel de dominio en el control de vista de árbol del cuadro de diálogo, ni permitirá navegar a ubicaciones de red fuera del dominio.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToFilesystem">
      <summary>
          El explorador de carpetas sólo podrá devolver directorios del sistemas de archivos local. Si el usuario selecciona carpetas que no forman parte del sistema de archivos local, el botón Aceptar aparecerá atenuado.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToSubfolders">
      <summary>
          El explorador de carpetas sólo devolverá objetos del sistema de archivos local que estén en la carpeta raíz o una de sus subcarpetas. Si el usuario selecciona una subcarpeta de la carpeta raíz que no forma parte del sistema de archivos local, el botón Aceptar aparecerá atenuado.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.ShowTextBox">
      <summary>
          El explorador de carpetas contiene un control <see cref="T:System.Windows.Forms.TextBox" /> en el cuadro de diálogo del explorador que permite al usuario escribir el nombre de un elemento.
        </summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary>
          Serializa los diccionarios de cadenas.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" />.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
          Deserializa en un objeto el objeto CodeDOM (Code Document Object Model) serializado especificado.
        </summary>
      <returns>
          Objeto CodeDOM deserializado.
        </returns>
      <param name="manager">
              Interfaz del administrador de serialización que se utiliza durante el proceso de deserialización.
            </param>
      <param name="codeObject">
              Objeto CodeDOM serializado que se va a deserializar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El parámetro <paramref name="manager" /> o el parámetro <paramref name="codeObject" /> es null.
            </exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
          Serializa el objeto especificado en un objeto CodeDOM (Code Document Object Model).
        </summary>
      <returns>
          Objeto CodeDOM que representa el objeto que se ha serializado.
        </returns>
      <param name="manager">
              Administrador de serialización que se va a utilizar durante la serialización.
            </param>
      <param name="value">
              Objeto que se va a serializar.
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListImageEditor">
      <summary>
          Proporciona un editor que puede realizar operaciones de búsqueda de archivos predeterminados para archivos de mapa de bits (.bmp) .
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ImageListImageEditor" />.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Edita el valor del objeto especificado utilizando el estilo de edición proporcionado por el método <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Object" /> que representa el nuevo valor. Si el valor del objeto no ha cambiado, el método <see cref="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> devuelve el objeto que se le ha pasado.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto. 
            </param>
      <param name="provider">
              Una interfaz <see cref="T:System.IServiceProvider" /> mediante la cual se pueden obtener servicios de edición. 
            </param>
      <param name="value">
              Un objeto <see cref="T:System.Object" /> que se está editando. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetFileDialogDescription">
      <summary>
          Obtiene la descripción del filtro predeterminado de la lista de archivos que proporciona este editor.
        </summary>
      <returns>
          La descripción del filtro predeterminado de la lista de archivos.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetImageExtenders">
      <summary>
          Obtiene una matriz de tipos de imagen compatibles.
        </summary>
      <returns>
          Una matriz de <see cref="T:System.Type" /> que representa los tipos de imagen compatibles.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene un valor que indica si este editor permite dibujar una representación del valor de un objeto.
        </summary>
      <returns>
          
            Es true si se implementa <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />; de lo contrario, es false.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>
          Dibuja un valor indicado por el <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> especificado.
        </summary>
      <param name="e">
              <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> que indica qué se va a dibujar y dónde.
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.IMenuEditorService">
      <summary>
          Proporciona acceso al servicio de edición de menús.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.GetMenu">
      <summary>
          Obtiene el menú actual.
        </summary>
      <returns>
          Objeto <see cref="T:System.Windows.Forms.Menu" /> actual.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.IsActive">
      <summary>
          Indica si el menú actual está activo.
        </summary>
      <returns>
          
            Es true si el menú está activo; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.MessageFilter(System.Windows.Forms.Message@)">
      <summary>
          Permite al servicio del editor interceptar los mensajes Win32.
        </summary>
      <returns>
          
            Es true si el mensaje está dirigido al control; en caso contrario, es false.
        </returns>
      <param name="m">
              El objeto <see cref="T:System.Windows.Forms.Message" />que se va procesar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetMenu(System.Windows.Forms.Menu)">
      <summary>
          Hace visible el menú especificado en el formulario.
        </summary>
      <param name="menu">
              El objeto <see cref="T:System.Windows.Forms.Menu" /> que se va a representar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetSelection(System.Windows.Forms.MenuItem)">
      <summary>
          Establece el elemento de menú seleccionado del menú actual.
        </summary>
      <param name="item">
              Objeto <see cref="T:System.Windows.Forms.MenuItem" /> para establecer como el elemento de menú actualmente seleccionado. 
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.MaskDescriptor">
      <summary>
          Define un conjunto de miembros para las clases derivadas con el fin de proporcionar opciones para el editor de tipos de interfaz de usuario de cuadro de texto enmascarado.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />.
        </summary>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Culture"></member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.Equals(System.Object)"></member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.GetHashCode"></member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor)"></member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor,System.String@)"></member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Mask">
      <summary>
          Obtiene la máscara que se está definiendo.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene la máscara que se está definiendo.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Name">
      <summary>
          Obtiene el nombre descriptivo de la máscara.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el nombre o una breve descripción de <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Sample">
      <summary>
          Obtiene un ejemplo de una cadena con formato para la máscara.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el texto al que se ha dado formato mediante <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.ToString"></member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType">
      <summary>
          Obtiene el tipo que proporciona la validación asociado a la máscara.
        </summary>
      <returns>
          <see cref="T:System.Type" /> contra el que se valida la cadena con formato.
        </returns>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary>
          Define un conjunto de campos <see cref="T:System.ComponentModel.Design.CommandID" />, cada uno de los cuales corresponde a una función de comando proporcionada por el entorno del host.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.MenuCommands" />. 
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que se puede utilizar para tener acceso al menú de la bandeja de componentes.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que se puede utilizar para tener acceso al menú contenedor.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que se puede utilizar para tener acceso a la página de propiedades del diseñador.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador para editar etiquetas.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que se puede utilizar para tener acceso al controlador de la tecla de cancelación.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que se puede utilizar para tener acceso al controlador de la tecla predeterminada.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla Fin.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla Inicio.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de invocación de etiqueta inteligente.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite mover hacia abajo.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite mover a la izquierda.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite mover a la derecha.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite mover hacia arriba.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite empujar hacia abajo.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite reducir el alto.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite aumentar el alto.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite empujar a la izquierda.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite empujar a la derecha.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite empujar hacia arriba.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite reducir el ancho.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite aumentar el ancho.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite invertir la cancelación.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite seleccionar lo siguiente.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite seleccionar lo anterior.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de las teclas MAYÚS-FIN.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de las teclas MAYÚS-INICIO.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite reducir el alto del tamaño.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite aumentar el alto del tamaño.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite reducir el ancho del tamaño.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla que permite aumentar el ancho del tamaño.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para tener acceso al controlador de la tecla de seleccionar el orden de tabulación.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que se puede utilizar para tener acceso al menú de selección.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para establecer el rectángulo de estado.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que puede utilizarse para establecer el texto del rectángulo de estado.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary>
          <see cref="T:System.ComponentModel.Design.CommandID" /> que se puede utilizar para tener acceso al menú de selección de la bandeja.
        </summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary>
          Extiende el comportamiento del modo de diseño de un <see cref="T:System.Windows.Forms.Control" /> que admite controles anidados.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary>
          Agrega las líneas de ajuste del relleno.
        </summary>
      <param name="snapLines">
              Control <see cref="T:System.Collections.ArrayList" /> que contiene los objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary>
          Obtiene un valor que indica si los controles seleccionados volverán a ser principales.
        </summary>
      <returns>
          
            Es true si los controles que se seleccionaron mediante lazo en la superficie del diseñador se volverán a hacer primarios de este control de diseñador.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary>
          Obtiene un valor que indica si se debe dibujar un cuadro de arrastre genérico al arrastrar un elemento del cuadro de herramientas sobre la superficie del diseñador.
        </summary>
      <returns>
          
            Es true si se debe dibujar un cuadro de arrastre genérico al arrastrar un elemento del cuadro de herramientas sobre la superficie del diseñador; en caso contrario, es false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary>
          Obtiene un valor que indica si se debe mantener el orden Z de los controles arrastrados cuando se colocan en un control <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.
        </summary>
      <returns>
          
            Es true si se debe mantener el orden Z de los controles arrastrados cuando se colocan en un control <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary>
          Indica si el control especificado puede ser secundario del control que administra este diseñador.
        </summary>
      <returns>
          
            Es true si el control especificado puede ser secundario del control que administra este diseñador; en caso contrario, es false.
        </returns>
      <param name="control">
              Control <see cref="T:System.Windows.Forms.Control" /> que se va a probar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary>
          Indica si el control administrado por el diseñador especificado puede ser secundario del control que administra este diseñador.
        </summary>
      <returns>
          
            Es true si el control administrado por el diseñador especificado puede ser secundario del control que administra este diseñador; en caso contrario, es false.
        </returns>
      <param name="controlDesigner">
              Diseñador del control que se va a probar. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary>
          Crea un componente o control a partir de la herramienta especificada y lo agrega al documento de diseño actual.
        </summary>
      <param name="tool">
              <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear un componente. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary>
          Crea un componente o control a partir de la herramienta especificada y lo agrega al documento de diseño actual en la ubicación especificada.
        </summary>
      <param name="tool">
              <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear un componente. 
            </param>
      <param name="location">
              <see cref="T:System.Drawing.Point" /> donde se centrará el componente, en coordenadas de pantalla de la vista en tiempo de diseño. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary>
          Crea un componente o control a partir de la herramienta especificada y lo agrega al documento de diseño actual dentro de los límites del rectángulo especificado.
        </summary>
      <param name="tool">
              <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear un componente. 
            </param>
      <param name="bounds">
              <see cref="T:System.Drawing.Rectangle" /> que indica la ubicación y tamaño del componente creado a partir de la herramienta. Los valores <see cref="P:System.Drawing.Rectangle.X" /> e <see cref="P:System.Drawing.Rectangle.Y" /> de <see cref="T:System.Drawing.Rectangle" /> indican las coordenadas de pantalla de la vista en tiempo de diseño de la esquina superior izquierda del componente. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
          Proporciona la funcionalidad central de todos los métodos <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" />.
        </summary>
      <returns>
          Matriz de los componentes creados a partir de la herramienta.
        </returns>
      <param name="tool">
              <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear un componente. 
            </param>
      <param name="x">
              La posición horizontal, en coordenadas de la vista en tiempo de diseño, de la ubicación del borde izquierdo de la herramienta, si se ha especificado un tamaño; la posición horizontal del centro de la herramienta, si no se ha especificado ningún tamaño. 
            </param>
      <param name="y">
              La posición vertical, en coordenadas de la vista en tiempo de diseño, de la ubicación del borde superior de la herramienta, si se ha especificado un tamaño; la posición vertical del centro de la herramienta, si no se ha especificado ningún tamaño. 
            </param>
      <param name="width">
              Ancho de la herramienta. Este parámetro se pasa por alto si el parámetro <paramref name="hasSize" /> se establece en false. 
            </param>
      <param name="height">
              Alto de la herramienta. Este parámetro se pasa por alto si el parámetro <paramref name="hasSize" /> se establece en false. 
            </param>
      <param name="hasLocation">
              
                Es true si se ha especificado la ubicación del componente; es false si el componente se debe colocar en el centro del control actualmente seleccionado. 
            </param>
      <param name="hasSize">
              
                Es true si se especifica el tamaño del componente; es false si se van a utilizar los valores del alto y ancho del componente. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary>
          Obtiene la ubicación predeterminada de un control agregado al diseñador.
        </summary>
      <returns>
          <see cref="T:System.Drawing.Point" /> que indica la ubicación predeterminada de un control agregado al diseñador.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados utilizados por el objeto <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> y, de forma opcional, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary>
          Obtiene o establece un valor que indica si se debe dibujar una cuadrícula en el control para este diseñador.
        </summary>
      <returns>
          
            Es true si se debe dibujar una cuadrícula en el control en el diseñador; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary>
          Obtiene un valor que indica si el diseñador dibuja rectángulos de arrastre.
        </summary>
      <returns>
          
            Es true si se dibujan rectángulos de arrastre; en caso contrario, es false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary>
          Obtiene el control del componente especificado desde el diseñador.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Control" /> al que pertenece el componente especificado.
        </returns>
      <param name="component">
              Componente del que se va a recuperar el control. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>
          Obtiene un glifo del cuerpo que representa los límites del control. 
        </summary>
      <returns>
          Un glifo del cuerpo que representa los límites del control.
        </returns>
      <param name="selectionType">
              Valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica el estado de la selección.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>
          Obtiene una colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que representan los bordes de selección y los identificadores de agarre de un control estándar.
        </summary>
      <returns>
          Colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </returns>
      <param name="selectionType">
              Valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica el estado de la selección.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary>
          Utilizado por clases derivadas para determinar si devuelve el control que se está dibujando o algún otro control <see cref="T:System.ComponentModel.Container" /> al agregarle un componente.
        </summary>
      <returns>
          Control <see cref="T:System.Windows.Forms.Control" /> principal para el componente.
        </returns>
      <param name="component">
              Componente para el cual se va a recuperar el control <see cref="T:System.Windows.Forms.Control" /> principal.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary>
          Actualiza la posición del rectángulo especificado y lo alinea en la cuadrícula si el modo de alineación en la cuadrícula está habilitado.
        </summary>
      <returns>
          Rectángulo que indica la posición del componente en coordenadas de pantalla de la vista en tiempo de diseño. Si no se realizan cambios, este método devuelve el rectángulo original.
        </returns>
      <param name="originalRect">
              <see cref="T:System.Drawing.Rectangle" /> que indica la posición inicial del componente que se va a actualizar. 
            </param>
      <param name="dragRect">
              <see cref="T:System.Drawing.Rectangle" /> que indica la nueva posición del componente. 
            </param>
      <param name="updateSize">
              
                Es true para actualizar el tamaño del rectángulo, si ha habido cambios; en caso contrario, es false. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary>
          Obtiene o establece el tamaño de cada cuadro de la cuadrícula que se dibuja cuando el diseñador está en modo de dibujo de cuadrícula.
        </summary>
      <returns>
          <see cref="T:System.Drawing.Size" /> que representa el tamaño de cada cuadro de la cuadrícula dibujada en un formulario o control de usuario.
        </returns>
      <exception cref="T:System.ArgumentException">
              
                <see cref="T:System.Drawing.Size" /> se encuentra fuera del intervalo permitido para la propiedad <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" />. El valor mínimo predeterminado es 2 y el valor máximo predeterminado es 200. 
            </exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador con el componente especificado.
        </summary>
      <param name="component">
              <see cref="T:System.ComponentModel.IComponent" /> que se va a asociar al diseñador. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>
        </summary>
      <param name="defaultValues">
              TBD
            </param>
      <param name="defaultValues">
              Un diccionario de valores predeterminados de nombre y valor que se van a aplicar a propiedades. Puede ser null si no se especifican valores predeterminados.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary>
          Crea una herramienta a partir del <see cref="T:System.Drawing.Design.ToolboxItem" /> especificado.
        </summary>
      <param name="toInvoke">
              <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> con el que se va a utilizar la herramienta. 
            </param>
      <param name="tool">
              <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear una herramienta. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary>
          Obtiene un valor que indica si el diseñador tiene una herramienta válida durante una operación de arrastre. 
        </summary>
      <returns>
          La herramienta que se está arrastrando, si se está creando un componente, o null si no hay ninguna herramienta.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>
          Llamado para limpiar una operación de arrastrar y colocar.
        </summary>
      <param name="de">
              Control <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>
          Se le llama cuando un objeto de arrastrar y colocar se coloca en la vista del diseñador del control.
        </summary>
      <param name="de">
              Control <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>
          Se le llama cuando un objeto de arrastrar y colocar entra en la vista del diseñador del control.
        </summary>
      <param name="de">
              Control <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>
          Se llama cuando un objeto de arrastrar y colocar sale de la vista del diseñador del control.
        </summary>
      <param name="e">
              <see cref="T:System.EventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>
          Se le llama cuando un objeto de arrastrar y colocar se arrastra sobre la vista del diseñador del control.
        </summary>
      <param name="de">
              Control <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>
          Se le llama cuando se presiona el botón primario del mouse (ratón) y se mantiene presionado mientras está sobre el componente.
        </summary>
      <param name="x">
              La coordenada x del mouse, en coordenadas de pantalla. 
            </param>
      <param name="y">
              La coordenada y del mouse, en coordenadas de pantalla. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>
          Se le llama al final de una operación de arrastrar y colocar para terminar o cancelar la operación.
        </summary>
      <param name="cancel">
              
                Es true para cancelar la operación de arrastrar; es false para confirmarla. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>
          Se le llama en cada movimiento del mouse durante una operación de arrastrar y colocar.
        </summary>
      <param name="x">
              La coordenada x del mouse, en coordenadas de pantalla. 
            </param>
      <param name="y">
              La coordenada y del mouse, en coordenadas de pantalla. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>
          Se llama cuando el control que el diseñador está administrando tiene su superficie dibujada, de manera que el diseñador pueda dibujar otros adornos en la parte superior del control.
        </summary>
      <param name="pe">
              Control <see cref="T:System.Windows.Forms.PaintEventArgs" /> que proporciona datos para el evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary>
          Permite cambiar el cursor actual del mouse.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Ajusta el conjunto de propiedades que el componente expondrá mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <param name="properties">
              <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades de la clase del componente. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary>
          Obtiene una lista de objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> que representan los puntos de alineación significativos de este control. 
        </summary>
      <returns>
          Lista de objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> que representan los puntos de alineación significativos de este control.
        </returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary>
          Clase base del diseñador para extender el comportamiento del modo de diseño de un <see cref="T:System.Windows.Forms.Control" /> que debe recibir mensajes de desplazamiento.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" />. 
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>
          Indica si el control debe controlar un clic con el mouse en el punto especificado.
        </summary>
      <returns>
          
            Es true si el control controla un clic en el punto especificado; en caso contrario, es false.
        </returns>
      <param name="pt">
              <see cref="T:System.Drawing.Point" /> que indica la posición en que se ha hecho clic con el mouse, en coordenadas de la pantalla. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>
          Procesa mensajes de Windows y pasa mensajes WM_HSCROLL y WM_VSCROLL al control en tiempo de diseño.
        </summary>
      <param name="m">
              <see cref="T:System.Windows.Forms.Message" /> que se va a procesar. 
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary>
          Define los identificadores que se utilizan para indicar las reglas de selección de un componente.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary>
          Indica que no hay atributos de selección especiales.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary>
          Indica que el componente admite una propiedad de ubicación que permite moverlo por la pantalla.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary>
          Indica que el componente tiene alguna forma de interfaz de usuario visible y que el servicio de selección está dibujando un borde de selección alrededor de su interfaz de usuario. Si un componente seleccionado ya tiene establecida esta regla, puede suponer que el componente implementa <see cref="T:System.ComponentModel.IComponent" /> y que está asociado a la instancia correspondiente del diseñador.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary>
          Indica que el componente está bloqueado en su contenedor. Reemplaza los identificadores de bit <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" /> y <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> de esta enumeración.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary>
          Indica que el componente permite cambiar su tamaño desde la parte superior.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary>
          Indica que el componente permite cambiar su tamaño desde la parte inferior.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary>
          Indica que el componente permite cambiar su tamaño desde la izquierda.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary>
          Indica que el componente permite cambiar su tamaño desde la derecha.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary>
          Indica si se puede cambiar el tamaño del componente en todas las direcciones.
        </summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ShortcutKeysEditor">
      <summary>
          Proporciona un editor para elegir teclas de método abreviado.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ShortcutKeysEditor" />.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
          Edita el valor del objeto especificado utilizando el estilo de editor proporcionado por el método <see cref="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.
        </summary>
      <returns>
          El nuevo valor de <see cref="T:System.Object" />.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
      <param name="provider">
              <see cref="T:System.IServiceProvider" /> que puede utilizar este editor para obtener servicios.
            </param>
      <param name="value">
              <see cref="T:System.Object" /> que se va a editar.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
          Obtiene el estilo de editor utilizado por el método <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" />.
        </summary>
      <returns>
          Un valor de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de editor utilizado por el método <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" />.
        </returns>
      <param name="context">
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary>
          Proporciona acceso para obtener y establecer los valores de las opciones de un diseñador de Windows Forms.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.
        </summary>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary>
          Obtiene el objeto <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> expuesto por el objeto <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> expuesto por el objeto <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary>
          Rellena una colección <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.
        </summary>
      <param name="options">
              Colección que se va a rellenar.
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary>
          Administra una colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> relacionados con la interfaz de usuario. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />. 
        </summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary>
          Obtiene o establece el <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> asociado a <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />. 
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> asociado a <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary>
          Obtiene o establece un valor que indica si <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> está habilitado.
        </summary>
      <returns>
          
            Es true si <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> está habilitado; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary>
          Obtiene la colección <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </summary>
      <returns>
          Una colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary>
          Obliga a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> a que actualice su ventana de adorno.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary>
          Obliga a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> a que actualice su ventana de adorno dentro del <see cref="T:System.Drawing.Rectangle" /> dado.
        </summary>
      <param name="rectangle">
              El área que se va a invalidar.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary>
          Obliga a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> a que actualice su ventana de adorno dentro de la <see cref="T:System.Drawing.Region" /> dada.
        </summary>
      <param name="region">
              <see cref="T:System.Drawing.Region" /> que se va a invalidar.
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary>
          Representa los objetos <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> administrados por <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />. 
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> con el valor de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> especificado.
        </summary>
      <param name="callParentBehavior">
              
                Es true si se debe llamar al comportamiento primario si existe; de lo contrario, es false.
            </param>
      <param name="behaviorService">
              <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> que se va a utilizar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="callParentBehavior" /> es true y <paramref name="behaviorService" /> es null.
            </exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary>
          Obtiene el cursor que se debe mostrar para este comportamiento.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Cursor" /> que representa el cursor que se debe mostrar para este comportamiento.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary>
          Obtiene un valor que indica si se deben deshabilitar los objetos <see cref="T:System.ComponentModel.Design.MenuCommand" />.
        </summary>
      <returns>
          
            Es true si todos los objetos <see cref="T:System.ComponentModel.Design.MenuCommand" /> que recibe el diseñador deben tener los estados establecidos en Enabled = false cuando este <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> está activo; de lo contrario, es false.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>
          Intercepta comandos.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.Design.MenuCommand" />. De manera predeterminada, <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> devuelve null.
        </returns>
      <param name="commandId">
              Un objeto <see cref="T:System.ComponentModel.Design.CommandID" />.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>
          Permite un comportamiento personalizado de arrastrar y colocar.
        </summary>
      <param name="g">
              Un objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en el que se invocará el comportamiento de arrastrar y colocar.
            </param>
      <param name="e">
              <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos de eventos. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>
          Permite un comportamiento personalizado de arrastrar y entrar.
        </summary>
      <param name="g">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en el que se invocará el comportamiento de arrastrar y entrar.
            </param>
      <param name="e">
              <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos de eventos. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>
          Permite un comportamiento personalizado de arrastrar y salir.
        </summary>
      <param name="g">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en el que se invocará el comportamiento de arrastrar y salir.
            </param>
      <param name="e">
              <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos de eventos. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>
          Permite un comportamiento personalizado de arrastrar por encima.
        </summary>
      <param name="g">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en el que se invocará el comportamiento de arrastrar por encima.
            </param>
      <param name="e">
              <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos de eventos. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>
          Permite un comportamiento personalizado de información de arrastrar y colocar.
        </summary>
      <param name="g">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en el que se invocará el comportamiento de arrastrar y colocar.
            </param>
      <param name="e">
              <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> que contiene los datos de eventos.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>
          Lo llama la ventana de adorno cuando pierde la captura del mouse.
        </summary>
      <param name="g">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en el que se invocará el comportamiento de arrastrar y colocar.
            </param>
      <param name="e">
              <see cref="T:System.EventArgs" /> que contiene los datos del evento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>
          Se le llama cuando cualquier mensaje de doble clic entra en la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.
        </summary>
      <returns>
          
            Es true si se controló el mensaje; de lo contrario, es false.
        </returns>
      <param name="g">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
            </param>
      <param name="button">
              Un valor <see cref="T:System.Windows.Forms.MouseButtons" /> que indica en qué botón se ha hecho clic.
            </param>
      <param name="mouseLoc">
              La ubicación en la que se hizo clic. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>
          Se le llama cuando cualquier mensaje de mouse hacia abajo entra en la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.
        </summary>
      <returns>
          
            Es true si se controló el mensaje; de lo contrario, es false.
        </returns>
      <param name="g">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. 
            </param>
      <param name="button">
              Un valor <see cref="T:System.Windows.Forms.MouseButtons" /> que indica en qué botón se ha hecho clic.
            </param>
      <param name="mouseLoc">
              La ubicación en la que se hizo clic. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>
          Se le llama cuando cualquier mensaje de entrada del mouse entra en la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.
        </summary>
      <returns>
          
            Es true si se controló el mensaje; de lo contrario, es false.
        </returns>
      <param name="g">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary>
          Se le llama cuando cualquier mensaje de de desplazamiento del mouse entra en la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.
        </summary>
      <returns>
          
            Es true si se controló el mensaje; de lo contrario, es false.
        </returns>
      <param name="g">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. 
            </param>
      <param name="mouseLoc">
              La ubicación en la que se produjo el desplazamiento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>
          Se le llama cuando cualquier mensaje de salida del mouse entra en la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.
        </summary>
      <returns>
          
            Es true si se controló el mensaje; de lo contrario, es false.
        </returns>
      <param name="g">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>
          Se le llama cuando cualquier mensaje de movimiento del mouse entra en la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.
        </summary>
      <returns>
          
            Es true si se controló el mensaje; de lo contrario, es false.
        </returns>
      <param name="g">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. 
            </param>
      <param name="button">
              Un valor <see cref="T:System.Windows.Forms.MouseButtons" /> que indica en qué botón se ha hecho clic.
            </param>
      <param name="mouseLoc">
              La ubicación en la que se produjo el movimiento. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary>
          Se le llama cuando cualquier mensaje de mouse hacia arriba entra en la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.
        </summary>
      <returns>
          
            Es true si se controló el mensaje; de lo contrario, es false.
        </returns>
      <param name="g">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. 
            </param>
      <param name="button">
              Un valor <see cref="T:System.Windows.Forms.MouseButtons" /> que indica en qué botón se ha hecho clic.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>
          Envía este evento de arrastrar y colocar de la ventana de adorno al <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> adecuado o al <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> cuya prueba de detección se ha realizado.
        </summary>
      <param name="g">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. 
            </param>
      <param name="e">
              <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> que contiene los datos de eventos. 
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary>
          Proporciona los datos de los eventos <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> y <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" />.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />.
        </summary>
      <param name="dragComponents">
              <see cref="T:System.Collections.ICollection" /> de objetos <see cref="T:System.ComponentModel.IComponent" /> que se arrastran actualmente.
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary>
          Obtiene la lista de objetos <see cref="T:System.ComponentModel.IComponent" /> que se arrastran actualmente.
        </summary>
      <returns>
          <see cref="T:System.Collections.ICollection" /> de objetos <see cref="T:System.ComponentModel.IComponent" /> que se arrastran actualmente.
        </returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary>
          Representa los métodos que controlarán los eventos <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> y <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> de un <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />. Esta clase no se puede heredar.
        </summary>
      <param name="sender">
              Origen del evento.
            </param>
      <param name="e">
              <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary>
          Administra la interfaz de usuario en el diseñador. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary>
          Obtiene <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary>
          Obtiene <see cref="T:System.Drawing.Graphics" /> para la ventana de adorno.
        </summary>
      <returns>
          <see cref="T:System.Drawing.Graphics" /> para la ventana de adorno.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary>
          Convierte un <see cref="T:System.Drawing.Point" /> de la ventana de adorno en coordenadas de pantalla.
        </summary>
      <returns>
          El valor <see cref="T:System.Drawing.Point" /> transformado, en coordenadas de pantalla.
        </returns>
      <param name="p">
              El valor <see cref="T:System.Drawing.Point" /> que se va a transformar.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary>
          Obtiene la ubicación de la ventana de adorno en coordenadas de pantalla.
        </summary>
      <returns>
          La ubicación, desde la esquina superior izquierda de la ventana de adorno, en coordenadas de pantalla.
        </returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary>
          Se produce cuando <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> inicia una operación de arrastrar y colocar.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary>
          Devuelve el <see cref="T:System.Drawing.Rectangle" /> delimitador de un <see cref="T:System.Windows.Forms.Control" />.
        </summary>
      <returns>
          El <see cref="T:System.Drawing.Rectangle" /> delimitador de un <see cref="T:System.Windows.Forms.Control" /> convertido a las coordenadas de la ventana de adorno.
        </returns>
      <param name="c">
              <see cref="T:System.Windows.Forms.Control" /> que se va a convertir.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary>
          Devuelve la ubicación de un <see cref="T:System.Windows.Forms.Control" /> convertida en las coordenadas de la ventana de adorno.
        </summary>
      <returns>
          Un valor <see cref="T:System.Drawing.Point" /> que indica la ubicación de <paramref name="c" /> en coordenadas de la ventana de adorno.
        </returns>
      <param name="c">
              <see cref="T:System.Windows.Forms.Control" /> que se va a convertir.
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary>
          Obtiene el <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> en la parte superior de la pila de comportamientos sin quitarlo.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> situado al principio de la pila de comportamientos.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary>
          Libera todos los recursos utilizados por <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />. 
        </summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary>
          Se produce cuando <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> finaliza una operación de arrastre.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>
          Devuelve el <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> situado inmediatamente detrás del <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> en la pila de comportamientos.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> situado inmediatamente detrás de <paramref name="behavior" /> en la pila de comportamientos o null si no hay ningún comportamiento detrás.
        </returns>
      <param name="behavior">
              <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que precede al <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que se va a devolver.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary>
          Invalida la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary>
          Invalida, dentro de la ventana de adorno, el área especificada de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.
        </summary>
      <param name="rect">
              El área rectangular que se va a invalidar.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary>
          Invalida, dentro de la ventana de adorno, el área especificada de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.
        </summary>
      <param name="r">
              La región que se va a invalidar.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary>
          Convierte un punto del sistema de coordenadas de un identificador en las coordenadas de la ventana de adorno.
        </summary>
      <returns>
          Un <see cref="T:System.Drawing.Point" /> en las coordenadas de la ventana de adorno.
        </returns>
      <param name="handle">
              El identificador de una ventana de adorno.
            </param>
      <param name="pt">
              Un <see cref="T:System.Drawing.Point" /> en el sistema de coordenadas de un identificador.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>
          Quita y devuelve el objeto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> situado al principio de la pila.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que se ha quitado de la pila.
        </returns>
      <param name="behavior">
              <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que se quitará de la pila.
            </param>
      <exception cref="T:System.InvalidOperationException">
              La pila de <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> está vacía.
            </exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>
          Inserta un <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> en la pila de comportamientos.
        </summary>
      <param name="behavior">
              <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que se va a insertar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="behavior" /> es null.
            </exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>
          Inserta un <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> en la pila de comportamientos y asigna la captura del mouse al comportamiento.
        </summary>
      <param name="behavior">
              <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que se va a insertar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="behavior" /> es null.
            </exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary>
          Convierte un punto en coordenadas de pantalla en las coordenadas de la ventana de adorno de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.
        </summary>
      <returns>
          El valor <see cref="T:System.Drawing.Point" /> transformado, en coordenadas de la ventana de adorno.
        </returns>
      <param name="p">
              El valor <see cref="T:System.Drawing.Point" /> que se va a transformar.
            </param>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary>
          Se produce cuando se debe actualizar la selección actual.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary>
          Sincroniza todos los glifos de selección.
        </summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary>
          Almacena los objetos <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> en una colección con establecimiento inflexible de tipos.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> con la matriz especificada.
        </summary>
      <param name="value">
              Una matriz de tipo <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> para rellenar la colección.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> con la referencia <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> especificada.
        </summary>
      <param name="behaviorService">
              Referencia <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> . 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> a partir de un control <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> ya existente.
        </summary>
      <param name="value">
              Control <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> desde el cual rellenar la colección. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>
          Agrega un control <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> con el valor especificado a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.
        </summary>
      <returns>
          Índice donde se insertó el nuevo elemento.
        </returns>
      <param name="value">
              Control <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> que se va a agregar al final de la colección.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>
          Copia los elementos de una matriz al final de la colección <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.
        </summary>
      <param name="value">
              Matriz de tipo <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> para copiar al final de la colección
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>
          Agrega el contenido de otra clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> al final de la colección.
        </summary>
      <param name="value">
              Control <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> que se va a agregar al final de la colección.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>
          Obtiene un valor que indica si <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> contiene el objeto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> especificado.
        </summary>
      <returns>
          
            Es true si la colección contiene <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />; en caso contrario, es false.
        </returns>
      <param name="value">
              Clase <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> que se va a localizar.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary>
          Copia los valores de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> en una instancia de <see cref="T:System.Array" /> unidimensional en el índice especificado.
        </summary>
      <param name="array">
              <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados desde la clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.
            </param>
      <param name="index">
              Índice de <paramref name="array" /> donde se inicia la copia.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary>
          Devuelve un enumerador que puede recorrer en iteración la instancia de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.
        </summary>
      <returns>
          <see cref="T:System.Collections.IEnumerator" /> correspondiente a la instancia de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>
          Devuelve el índice de <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> en <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.
        </summary>
      <returns>
          Índice de <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> de <paramref name="value" /> en <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> si se encuentra; en caso contrario, -1.
        </returns>
      <param name="value">
              Clase <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> que se va a localizar.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>
          Inserta <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> en <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> en el índice especificado.
        </summary>
      <param name="index">
              Índice basado en cero en el que debe insertarse <paramref name="value" />.
            </param>
      <param name="value">
              <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> que se va a insertar.
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary>
          Obtiene o establece el elemento que se encuentra en el índice especificado.
        </summary>
      <returns>
          Elemento <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> especificado por <paramref name="index" />.
        </returns>
      <param name="index">
              Índice de base cero del elemento.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>
          Quita un objeto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> específico de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.
        </summary>
      <param name="value">
              Clase <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> que se quita de la clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary>
          Admite la iteración sobre <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />. 
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" />. 
        </summary>
      <param name="mappings">
              Objeto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> para el cual se crea el enumerador. 
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary>
          Obtiene el elemento actual de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.
        </summary>
      <returns>
          Elemento actual de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary>
          Desplaza el enumerador al siguiente elemento de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.
        </summary>
      <returns>
          
            Es true si el enumerador ha avanzado correctamente hasta el siguiente elemento; es false si el enumerador ha alcanzado el final de la colección.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary>
          Establece el enumerador en su posición inicial (antes del primer elemento de la colección).
        </summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>
          Para obtener una descripción de este miembro, vea la propiedad <see cref="P:System.Collections.IEnumerator.Current" />.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> actual de la colección.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>
          Para obtener una descripción de este miembro, vea el método <see cref="M:System.Collections.IEnumerator.MoveNext" />.
        </summary>
      <returns>
          
            Es true si el enumerador ha avanzado correctamente hasta el siguiente elemento; es false si el enumerador ha alcanzado el final de la colección.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary>
          Para obtener una descripción de este miembro, vea el método <see cref="M:System.Collections.IEnumerator.Reset" />.
        </summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary>
          Asocia un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> a su componente.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.
        </summary>
      <param name="relatedComponent">
              El componente al que está asociado el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />. 
        </summary>
      <param name="relatedComponent">
              El componente al que está asociado el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
            </param>
      <param name="behavior">
              El <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> al que está asociado el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary>
          Indica si el <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> debe controlar un clic con el mouse en el punto especificado.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Cursor" /> si el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está asociado a <paramref name="p" />; de lo contrario, es null.
        </returns>
      <param name="p">
              Un punto para la prueba de detección.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>
          Proporciona la lógica de dibujo.
        </summary>
      <param name="pe">
              <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene el <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" />  de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary>
          Obtiene el componente asociado al <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </summary>
      <returns>
          <see cref="T:System.ComponentModel.IComponent" /> asociado al <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary>
          Asocia un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> a su control.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.
        </summary>
      <param name="bounds">
              Un <see cref="T:System.Drawing.Rectangle" /> que representa los límites del <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
            </param>
      <param name="cursor">
              Un <see cref="T:System.Windows.Forms.Cursor" /> que representa el cursor que se va a mostrar cuando el puntero del mouse se sitúa sobre el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
            </param>
      <param name="relatedComponent">
              El componente al que está asociado el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
            </param>
      <param name="behavior">
              El constructor <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> al que está asociado <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.
        </summary>
      <param name="bounds">
              Un <see cref="T:System.Drawing.Rectangle" /> que representa los límites del <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
            </param>
      <param name="cursor">
              Un <see cref="T:System.Windows.Forms.Cursor" /> que representa el cursor que se va a mostrar cuando el puntero del mouse se sitúa sobre el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
            </param>
      <param name="relatedComponent">
              El componente al que está asociado el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
            </param>
      <param name="designer">
              Un <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> al que está asociado el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary>
          Obtiene los límites del <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </summary>
      <returns>
          <see cref="T:System.Drawing.Rectangle" /> que representa los límites del <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary>
          Indica si el <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> debe controlar un clic con el mouse en el punto especificado.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Cursor" /> si el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está asociado a <paramref name="p" />; de lo contrario, es null.
        </returns>
      <param name="p">
              Un punto para la prueba de detección.
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary>
          Representa una única entidad de interfaz de usuario administrada por un <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. 
        </summary>
      <param name="behavior">
              <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> asociado a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. Puede ser null.
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary>
          Obtiene el <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> asociado al <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> asociado al <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> o null si no hay ningún comportamiento.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary>
          Obtiene los límites del <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </summary>
      <returns>
          <see cref="T:System.Drawing.Rectangle" /> que representa los límites del <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary>
          Proporciona la lógica de la prueba de detección.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Cursor" /> si el <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está asociado a <paramref name="p" />; de lo contrario, es null.
        </returns>
      <param name="p">
              Un punto para la prueba de detección.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>
          Proporciona la lógica de dibujo.
        </summary>
      <param name="pe">
              <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene los datos de eventos. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>
          Cambia el <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> asociado al <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </summary>
      <param name="behavior">
              <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que se va a asociar al <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary>
          Almacena los objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en una colección con establecimiento inflexible de tipos.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> con la matriz <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> especificada.
        </summary>
      <param name="value">
              Una matriz de tipo <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> para rellenar la colección.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> basada en otra clase <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.
        </summary>
      <param name="value">
              <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> para rellenar la colección.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>
          Agrega un objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> con el valor especificado a <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.
        </summary>
      <returns>
          Índice donde se insertó el nuevo elemento.
        </returns>
      <param name="value">
              Un control <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que se va a agregar al final de la colección.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>
          Copia los elementos de una matriz al final de la colección <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.
        </summary>
      <param name="value">
              Una matriz de tipo <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> para copiar al final de la colección
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>
          Agrega el contenido de otra <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> al final de la colección.
        </summary>
      <param name="value">
              Un <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> que se va a agregar al final de la colección.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>
          Obtiene un valor que indica si <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> contiene el objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> especificado.
        </summary>
      <returns>
          
            Es true si la colección contiene <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />; de lo contrario, es false.
        </returns>
      <param name="value">
              El <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que se va a buscar.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary>
          Copia los valores de <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> en una instancia de <see cref="T:System.Array" /> unidimensional en el índice especificado.
        </summary>
      <param name="array">
              <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados desde <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.
            </param>
      <param name="index">
              Índice de <paramref name="array" /> donde se inicia la copia. 
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>
          Devuelve el índice de un objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en la <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.
        </summary>
      <returns>
          El índice de <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> de <paramref name="value" /> en <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />, si se encuentra; de lo contrario, -1.
        </returns>
      <param name="value">
              El <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que se va a buscar.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>
          Inserta un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> en el índice especificado.
        </summary>
      <param name="index">
              Índice basado en cero en el que debe insertarse <paramref name="value" />. 
            </param>
      <param name="value">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que se va a insertar.
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary>
          Obtiene o establece el elemento que se encuentra en el índice especificado.
        </summary>
      <returns>
          El elemento <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> en el índice especificado.
        </returns>
      <param name="index">
              El índice de base cero del elemento.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>
          Quita un objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> específico de la colección <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.
        </summary>
      <param name="value">
              <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que se va a quitar de <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.
            </param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary>
          Describe el estado de selección del diseñador de <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary>
          <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> no se ha seleccionado.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary>
          <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> se ha seleccionado.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary>
          <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> es la selección principal. 
        </summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary>
          Representa los segmentos de línea horizontal y vertical que se crean dinámicamente en la interfaz de usuario para ayudar en el diseño de controles en un contenedor en tiempo de diseño. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> utilizando el tipo y el desplazamiento de la línea de ajuste especificados.
        </summary>
      <param name="type">
              <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> que se va a crear. Describe la posición relativa y la orientación de la línea de ajuste.
            </param>
      <param name="offset">
              La posición de la línea de ajuste, en píxeles, con respecto al origen superior izquierdo del control propietario.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> utilizando el tipo, el desplazamiento y el nombre de filtro de la línea de ajuste especificados. 
        </summary>
      <param name="type">
              <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> que se va a crear. Describe la posición relativa y la orientación de la línea de ajuste.
            </param>
      <param name="offset">
              La posición de la línea de ajuste, en píxeles, con respecto al origen superior izquierdo del control propietario.
            </param>
      <param name="filter">
              <see cref="T:System.String" /> que se utiliza para especificar una categoría de líneas de ajuste definida por el programador.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> utilizando el tipo, el desplazamiento, el nombre de filtro y la prioridad de la línea de ajuste especificados. 
        </summary>
      <param name="type">
              <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> que se va a crear. Describe la posición relativa y la orientación de la línea de ajuste.
            </param>
      <param name="offset">
              La posición de la línea de ajuste, en píxeles, con respecto al origen superior izquierdo del control propietario.
            </param>
      <param name="filter">
              <see cref="T:System.String" /> que se utiliza para especificar una categoría de líneas de ajuste definida por el programador.
            </param>
      <param name="priority">
              <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> de la línea de ajuste.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> utilizando el tipo, el desplazamiento y la prioridad de la línea de ajuste especificados. 
        </summary>
      <param name="type">
              <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> que se va a crear. Describe la posición relativa y la orientación de la línea de ajuste.
            </param>
      <param name="offset">
              La posición de la línea de ajuste, en píxeles, con respecto al origen superior izquierdo del control propietario.
            </param>
      <param name="priority">
              <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> de la línea de ajuste.
            </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary>
          Ajusta la propiedad <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> de la línea de ajuste.
        </summary>
      <param name="adjustment">
              El número de píxeles que cambiará el desplazamiento de la línea de ajuste.
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary>
          Obtiene la categoría de filtro definida por el programador asociada a esta línea de ajuste.
        </summary>
      <returns>
          <see cref="T:System.String" /> que define la categoría de filtro. El valor predeterminado es null.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary>
          Obtiene un valor que indica si la línea de ajuste tiene una orientación horizontal.
        </summary>
      <returns>
          
            Es true si la línea de ajuste es horizontal; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary>
          Obtiene un valor que indica si la línea de ajuste tiene una orientación vertical.
        </summary>
      <returns>
          
            Es true si la línea de ajuste es vertical; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary>
          Obtiene el número de píxeles que está desplazada la línea de ajuste con respecto al origen del control asociado.
        </summary>
      <returns>
          El desplazamiento, en píxeles, de la línea de ajuste. 
        </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary>
          Obtiene un valor que indica la importancia relativa de la línea de ajuste.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> que representa la categoría de prioridad de una línea de ajuste.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary>
          Devuelve un valor que indica si la <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> especificada debe ajustarse a otra <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.
        </summary>
      <returns>
          
            Es true si <paramref name="line1" /> debe ajustarse a <paramref name="line2" />; de lo contrario, es false.
        </returns>
      <param name="line1">
              La <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> especificada.
            </param>
      <param name="line2">
              <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> a la que se espera que se ajuste la <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> especificada.
            </param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary>
          Obtiene el tipo de una línea de ajuste, que indica la ubicación general y la orientación.
        </summary>
      <returns>
          <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> que representa la orientación y la ubicación general, con respecto a los bordes del control, de una línea de ajuste.
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary>
          Devuelve una representación de cadena de la línea de ajuste actual.
        </summary>
      <returns>
          Una <see cref="T:System.String" /> que representa la <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> actual.
        </returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary>
          Especifica la importancia relativa de una línea de ajuste.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary>
          La categoría de prioridad mínima.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary>
          La media categoría media.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary>
          La categoría de prioridad máxima.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary>
          La categoría de prioridad que es equivalente a la prioridad máxima de todas las líneas de ajuste actuales. Indica que esta categoría de línea de ajuste siempre debe estar activa.
        </summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary>
          Especifica la orientación y la ubicación relativa de una línea de ajuste.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary>
          Una línea de ajuste horizontal alineada normalmente al borde superior de un control.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary>
          Una línea de ajuste horizontal alineada normalmente al borde inferior de un control.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary>
          Una línea de ajuste vertical alineada normalmente al borde izquierdo de un control.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary>
          Una línea de ajuste vertical alineada normalmente al borde derecho de un control.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary>
          Una línea de ajuste horizontal no asociada normalmente a un borde de un control.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary>
          Una línea de ajuste vertical no asociada normalmente a un borde de un control.
        </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary>
          Una línea de ajuste horizontal asociada normalmente a una característica interna primaria de un control; por ejemplo, la base de la cadena de texto de un control <see cref="T:System.Windows.Forms.Label" />.
        </summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnResize(System.EventArgs)"></member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)"></member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])"></member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)"></member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])"></member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])"></member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])"></member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)"></member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)"></member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)"></member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnBehaviorAttached">
      <summary>
          Se le llama cuando el diseñador de controles está asociado a un objeto Behavior.
        </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetPersistInnerHtml">
      <summary>
          Obtiene el marcado que se ha de conservar para el contenido que está en el motor en tiempo de ejecución del control de servidor asociado.
        </summary>
      <returns>
          Código HTML interno que se ha de conservar.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.HidePropertiesInTemplateMode">
      <summary>
          Obtiene un valor que indica si las propiedades del control estarán ocultas cuando el control se encuentre en modo de edición de plantillas.
        </summary>
      <returns>
          
            Devuelve true si el control puede ocultarse en el modo de edición de plantillas; de lo contrario, devuelve false. Esta implementación base siempre devuelve true.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
          Permite que un diseñador filtre el conjunto de atributos de miembro que el componente está diseñando mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.
        </summary>
      <returns>
          Conjunto incrementado de atributos. Si el método no modifica ningún atributo, devuelve una referencia a su parámetro de entrada. Si realiza un cambio en los atributos, se debe crear una nueva matriz.
        </returns>
      <param name="properties">
              Atributos de miembro del componente. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.GetPersistInnerHtml">
      <summary>
          Obtiene el marcado que se ha de conservar para las etiquetas internas del control.
        </summary>
      <returns>
          El marcado para las etiquetas del control.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
          Inicializa el diseñador con el componente especificado.
        </summary>
      <param name="component">
              Objeto que implementa <see cref="T:System.ComponentModel.IComponent" /> para que este diseñador diseñe. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.UserControlDesigner.GetPersistInnerHtml">
      <summary>
          Este miembro invalida el método <see cref="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml" />.
        </summary>
      <returns>
          El formato HTML interno con persistencia del control.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlDesigner.ShouldCodeSerialize">
      <summary>
          Este miembro invalida la propiedad <see cref="P:System.Web.UI.Design.HtmlControlDesigner.ShouldCodeSerialize" />.
        </summary>
      <returns>
          
            true si debe crearse una declaración; en caso contrario, false.
          
          
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DesignTimeHtmlRequiresLoadComplete">
      <summary>
          Obtiene un valor que indica si se debe finalizar la carga para que se muestre el marcado en tiempo de diseño.
        </summary>
      <returns>
          
            Es true si debe finalizar la carga en tiempo de diseño para que se muestre el marcado en tiempo de diseño; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.Verbs">
      <summary>
          Obtiene la colección de verbos disponibles para este diseñador.
        </summary>
      <returns>
          Una colección que contiene los verbos disponibles para el diseñador.
          
          
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CalendarDesigner.Verbs">
      <summary>
          Obtiene o establece la colección de los verbos que están disponibles para este diseñador.
        </summary>
      <returns>
          Una colección que contiene los verbos que están disponibles para el diseñador.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataMember">
      <summary>
          Obtiene o establece el miembro de datos del control.
        </summary>
      <returns>
          La propiedad <see cref="P:System.Web.UI.WebControls.ListControl.DataMember" /> del control de lista.
        </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataSource">
      <summary>
          Obtiene o establece la propiedad de origen de datos del control.
        </summary>
      <returns>
          La propiedad <see cref="P:System.Web.UI.WebControls.ListControl.DataSource" /> del control de lista.
        </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
          Provoca el evento ComponentChanged.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="ce">
              Datos del evento. 
            </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableDesigner.GetPersistInnerHtml">
      <summary>
          Este miembro invalida el método <see cref="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml" />.
        </summary>
      <returns>
          El formato HTML interno con persistencia del control.
          
          
        </returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDoubleClick(System.EventArgs)"></member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNonDefault"></member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)"></member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseEnter"></member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseHover"></member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseLeave"></member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.WndProc(System.Windows.Forms.Message@)"></member>
  </members>
</doc>