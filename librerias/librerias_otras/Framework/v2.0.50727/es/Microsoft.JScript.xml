<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.JScript</name>
  </assembly>
  <members>
    <member name="T:Microsoft.JScript.ActivationObject">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.CreateField(System.String,System.Reflection.FieldAttributes,System.Object)"></member>
    <member name="F:Microsoft.JScript.ActivationObject.field_table"></member>
    <member name="M:Microsoft.JScript.ActivationObject.GetDefaultThisObject"></member>
    <member name="M:Microsoft.JScript.ActivationObject.GetField(System.String,System.Int32)"></member>
    <member name="M:Microsoft.JScript.ActivationObject.GetGlobalScope"></member>
    <member name="M:Microsoft.JScript.ActivationObject.GetLocalField(System.String)"></member>
    <member name="M:Microsoft.JScript.ActivationObject.GetMember(System.String,System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.ActivationObject.GetMembers(System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.ActivationObject.GetMemberValue(System.String,System.Int32)"></member>
    <member name="T:Microsoft.JScript.ActiveXObjectConstructor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ActiveXObjectConstructor.CreateInstance(System.Object[])"></member>
    <member name="M:Microsoft.JScript.ActiveXObjectConstructor.Invoke"></member>
    <member name="T:Microsoft.JScript.ArgumentsObject">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.ArgumentsObject.callee"></member>
    <member name="F:Microsoft.JScript.ArgumentsObject.caller"></member>
    <member name="F:Microsoft.JScript.ArgumentsObject.length"></member>
    <member name="T:Microsoft.JScript.ArrayConstructor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ArrayConstructor.ConstructArray(System.Object[])"></member>
    <member name="M:Microsoft.JScript.ArrayConstructor.CreateInstance(System.Object[])"></member>
    <member name="M:Microsoft.JScript.ArrayConstructor.Invoke(System.Object[])"></member>
    <member name="T:Microsoft.JScript.ArrayLiteral">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ArrayLiteral.#ctor(Microsoft.JScript.Context,Microsoft.JScript.ASTList)"></member>
    <member name="T:Microsoft.JScript.ArrayObject">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.ArrayObject.length"></member>
    <member name="M:Microsoft.JScript.ArrayObject.SpliceSlowly(System.UInt32,System.UInt32,System.Object[],Microsoft.JScript.ArrayObject,System.UInt32,System.UInt32)"></member>
    <member name="T:Microsoft.JScript.ArrayPrototype">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.concat(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object[])"></member>
    <member name="P:Microsoft.JScript.ArrayPrototype.constructor"></member>
    <member name="M:Microsoft.JScript.ArrayPrototype.join(System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.ArrayPrototype.pop(System.Object)"></member>
    <member name="M:Microsoft.JScript.ArrayPrototype.push(System.Object,System.Object[])"></member>
    <member name="M:Microsoft.JScript.ArrayPrototype.reverse(System.Object)"></member>
    <member name="M:Microsoft.JScript.ArrayPrototype.shift(System.Object)"></member>
    <member name="M:Microsoft.JScript.ArrayPrototype.slice(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Double,System.Object)"></member>
    <member name="M:Microsoft.JScript.ArrayPrototype.sort(System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.ArrayPrototype.splice(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Double,System.Double,System.Object[])"></member>
    <member name="M:Microsoft.JScript.ArrayPrototype.toLocaleString(System.Object)"></member>
    <member name="M:Microsoft.JScript.ArrayPrototype.toString(System.Object)"></member>
    <member name="M:Microsoft.JScript.ArrayPrototype.unshift(System.Object,System.Object[])"></member>
    <member name="T:Microsoft.JScript.ArrayWrapper">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ArrayWrapper.GetType"></member>
    <member name="P:Microsoft.JScript.ArrayWrapper.length"></member>
    <member name="T:Microsoft.JScript.AssemblyCustomAttributeList">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.AST">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.ASTList">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.BinaryOp">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.BinaryOp.GetOperator(System.Reflection.IReflect,System.Reflection.IReflect)"></member>
    <member name="F:Microsoft.JScript.BinaryOp.operand1"></member>
    <member name="F:Microsoft.JScript.BinaryOp.operand2"></member>
    <member name="F:Microsoft.JScript.BinaryOp.operatorMeth"></member>
    <member name="F:Microsoft.JScript.BinaryOp.operatorTok"></member>
    <member name="F:Microsoft.JScript.BinaryOp.type1"></member>
    <member name="F:Microsoft.JScript.BinaryOp.type2"></member>
    <member name="T:Microsoft.JScript.Binding">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.Binding.defaultMember"></member>
    <member name="M:Microsoft.JScript.Binding.GetObject"></member>
    <member name="M:Microsoft.JScript.Binding.HandleNoSuchMemberError"></member>
    <member name="F:Microsoft.JScript.Binding.isAssignmentToDefaultIndexedProperty"></member>
    <member name="F:Microsoft.JScript.Binding.isFullyResolved"></member>
    <member name="M:Microsoft.JScript.Binding.IsMissing(System.Object)"></member>
    <member name="F:Microsoft.JScript.Binding.isNonVirtual"></member>
    <member name="F:Microsoft.JScript.Binding.name"></member>
    <member name="M:Microsoft.JScript.Binding.ResolveRHValue"></member>
    <member name="M:Microsoft.JScript.Binding.TranslateToILObject(System.Reflection.Emit.ILGenerator,System.Type,System.Boolean)"></member>
    <member name="M:Microsoft.JScript.Binding.TranslateToILWithDupOfThisOb(System.Reflection.Emit.ILGenerator)"></member>
    <member name="T:Microsoft.JScript.BitwiseBinary">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.BitwiseBinary.#ctor(System.Int32)"></member>
    <member name="M:Microsoft.JScript.BitwiseBinary.EvaluateBitwiseBinary(System.Object,System.Object)"></member>
    <member name="T:Microsoft.JScript.Block">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.BlockScope">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.BlockScope.#ctor(Microsoft.JScript.ScriptObject,System.String,System.Int32)"></member>
    <member name="M:Microsoft.JScript.BlockScope.CreateField(System.String,System.Reflection.FieldAttributes,System.Object)"></member>
    <member name="T:Microsoft.JScript.BooleanConstructor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.BooleanConstructor.CreateInstance(System.Object[])"></member>
    <member name="M:Microsoft.JScript.BooleanConstructor.Invoke(System.Object)"></member>
    <member name="T:Microsoft.JScript.BooleanObject">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.BooleanObject.#ctor(Microsoft.JScript.ScriptObject,System.Type)"></member>
    <member name="M:Microsoft.JScript.BooleanObject.GetType"></member>
    <member name="T:Microsoft.JScript.BooleanPrototype">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.BooleanPrototype.#ctor(Microsoft.JScript.ObjectPrototype,System.Type)"></member>
    <member name="P:Microsoft.JScript.BooleanPrototype.constructor"></member>
    <member name="M:Microsoft.JScript.BooleanPrototype.toString(System.Object)"></member>
    <member name="M:Microsoft.JScript.BooleanPrototype.valueOf(System.Object)"></member>
    <member name="T:Microsoft.JScript.BreakOutOfFinally">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.BreakOutOfFinally.#ctor(System.Int32)"></member>
    <member name="M:Microsoft.JScript.BreakOutOfFinally.#ctor(System.String)"></member>
    <member name="M:Microsoft.JScript.BreakOutOfFinally.#ctor(System.String,System.Exception)"></member>
    <member name="M:Microsoft.JScript.BreakOutOfFinally.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="F:Microsoft.JScript.BreakOutOfFinally.target"></member>
    <member name="T:Microsoft.JScript.Closure">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Closure.#ctor(Microsoft.JScript.FunctionObject)"></member>
    <member name="F:Microsoft.JScript.Closure.arguments"></member>
    <member name="F:Microsoft.JScript.Closure.caller"></member>
    <member name="M:Microsoft.JScript.Closure.ToString"></member>
    <member name="T:Microsoft.JScript.CmdLineError">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NoError"></member>
    <member name="F:Microsoft.JScript.CmdLineError.AssemblyNotFound"></member>
    <member name="F:Microsoft.JScript.CmdLineError.CannotCreateEngine"></member>
    <member name="F:Microsoft.JScript.CmdLineError.CompilerConstant"></member>
    <member name="F:Microsoft.JScript.CmdLineError.DuplicateFileAsSourceAndAssembly"></member>
    <member name="F:Microsoft.JScript.CmdLineError.DuplicateResourceFile"></member>
    <member name="F:Microsoft.JScript.CmdLineError.DuplicateResourceName"></member>
    <member name="F:Microsoft.JScript.CmdLineError.DuplicateSourceFile"></member>
    <member name="F:Microsoft.JScript.CmdLineError.ErrorSavingCompiledState"></member>
    <member name="F:Microsoft.JScript.CmdLineError.IncompatibleTargets"></member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidAssembly"></member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidCharacters"></member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidCodePage"></member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidDefinition"></member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidForCompilerOptions"></member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidLocaleID"></member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidPlatform"></member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidTarget"></member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidSourceFile"></member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidVersion"></member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidWarningLevel"></member>
    <member name="F:Microsoft.JScript.CmdLineError.ManagedResourceNotFound"></member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingDefineArgument"></member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingExtension"></member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingLibArgument"></member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingReference"></member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingVersionInfo"></member>
    <member name="F:Microsoft.JScript.CmdLineError.MultipleOutputNames"></member>
    <member name="F:Microsoft.JScript.CmdLineError.MultipleTargets"></member>
    <member name="F:Microsoft.JScript.CmdLineError.MultipleWin32Resources"></member>
    <member name="F:Microsoft.JScript.CmdLineError.NestedResponseFiles"></member>
    <member name="F:Microsoft.JScript.CmdLineError.NoCodePage"></member>
    <member name="F:Microsoft.JScript.CmdLineError.NoFileName"></member>
    <member name="F:Microsoft.JScript.CmdLineError.NoInputSourcesSpecified"></member>
    <member name="F:Microsoft.JScript.CmdLineError.NoLocaleID"></member>
    <member name="F:Microsoft.JScript.CmdLineError.NoWarningLevel"></member>
    <member name="F:Microsoft.JScript.CmdLineError.ResourceNotFound"></member>
    <member name="F:Microsoft.JScript.CmdLineError.SourceFileTooBig"></member>
    <member name="F:Microsoft.JScript.CmdLineError.SourceNotFound"></member>
    <member name="F:Microsoft.JScript.CmdLineError.UnknownOption"></member>
    <member name="F:Microsoft.JScript.CmdLineError.Unspecified"></member>
    <member name="F:Microsoft.JScript.CmdLineError.LAST"></member>
    <member name="T:Microsoft.JScript.CmdLineException">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor"></member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(Microsoft.JScript.CmdLineError,System.Globalization.CultureInfo)"></member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(Microsoft.JScript.CmdLineError,System.String,System.Globalization.CultureInfo)"></member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(System.String)"></member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(System.String,System.Exception)"></member>
    <member name="M:Microsoft.JScript.CmdLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="P:Microsoft.JScript.CmdLineException.Message"></member>
    <member name="M:Microsoft.JScript.CmdLineException.ResourceKey(Microsoft.JScript.CmdLineError)"></member>
    <member name="T:Microsoft.JScript.CmdLineOptionParser">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.#ctor"></member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsArgumentOption(System.String,System.String)"></member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsArgumentOption(System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsBooleanOption(System.String,System.String)"></member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsBooleanOption(System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsSimpleOption(System.String,System.String)"></member>
    <member name="T:Microsoft.JScript.COMCharStream">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.#ctor(Microsoft.JScript.IMessageReceiver)"></member>
    <member name="P:Microsoft.JScript.COMCharStream.CanRead"></member>
    <member name="P:Microsoft.JScript.COMCharStream.CanSeek"></member>
    <member name="P:Microsoft.JScript.COMCharStream.CanWrite"></member>
    <member name="M:Microsoft.JScript.COMCharStream.Close"></member>
    <member name="M:Microsoft.JScript.COMCharStream.Flush"></member>
    <member name="P:Microsoft.JScript.COMCharStream.Length"></member>
    <member name="P:Microsoft.JScript.COMCharStream.Position"></member>
    <member name="M:Microsoft.JScript.COMCharStream.Read(System.Byte[],System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.JScript.COMCharStream.Seek(System.Int64,System.IO.SeekOrigin)"></member>
    <member name="M:Microsoft.JScript.COMCharStream.SetLength(System.Int64)"></member>
    <member name="M:Microsoft.JScript.COMCharStream.Write(System.Byte[],System.Int32,System.Int32)"></member>
    <member name="T:Microsoft.JScript.COMFieldInfo">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.#ctor"></member>
    <member name="P:Microsoft.JScript.COMFieldInfo.Attributes"></member>
    <member name="P:Microsoft.JScript.COMFieldInfo.DeclaringType"></member>
    <member name="P:Microsoft.JScript.COMFieldInfo.FieldHandle"></member>
    <member name="P:Microsoft.JScript.COMFieldInfo.FieldType"></member>
    <member name="M:Microsoft.JScript.COMFieldInfo.GetCOMMemberInfo"></member>
    <member name="M:Microsoft.JScript.COMFieldInfo.GetCustomAttributes(System.Boolean)"></member>
    <member name="M:Microsoft.JScript.COMFieldInfo.GetCustomAttributes(System.Type,System.Boolean)"></member>
    <member name="M:Microsoft.JScript.COMFieldInfo.GetValue(System.Object)"></member>
    <member name="M:Microsoft.JScript.COMFieldInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)"></member>
    <member name="M:Microsoft.JScript.COMFieldInfo.IsDefined(System.Type,System.Boolean)"></member>
    <member name="P:Microsoft.JScript.COMFieldInfo.MemberType"></member>
    <member name="P:Microsoft.JScript.COMFieldInfo.Name"></member>
    <member name="P:Microsoft.JScript.COMFieldInfo.ReflectedType"></member>
    <member name="M:Microsoft.JScript.COMFieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)"></member>
    <member name="T:Microsoft.JScript.COMMemberInfo">
      <summary>
          Se implementa mediante objetos que representan el valor de un miembro. Permite al llamador realizar las acciones en el valor. El valor se puede invocar como función con el método Call, recuperado con el método GetValue y establecido utilizando el método SetValue.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.COMMemberInfo.Call(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>
          Invoca el valor asociado al miembro como función. Su semántica es similar a <see cref="M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />.
        </summary>
      <returns>
          Un tipo Object que contiene el valor devuelto del método invocado, o bien un objeto reinicializado en el caso de un constructor o una referencia nula (Nothing en Visual Basic) si el tipo de valor devuelto del método es void. Antes de llamar al método o constructor, Invoke comprueba si el usuario tiene permiso de acceso y comprueba si los parámetros son válidos.
        </returns>
      <param name="invokeAttr">
              Máscara de bits que es una combinación de 0 o más indicadores de bits de BindingFlags, como DefaultBinding, NonPublic, etc. Si el enlazador es una referencia nula (Nothing en Visual Basic), a este parámetro se le asigna el valor BindingFlags.DefaultBinding; por tanto, se omite lo que se pase en él. 
            </param>
      <param name="binder">
              Objeto que permite el enlace, la conversión de tipos de argumentos, la invocación de miembros y la recuperación de objetos MemberInfo mediante reflexión. Si el enlazador es una referencia nula (Nothing en Visual Basic), se utiliza el enlazador predeterminado.
            </param>
      <param name="arguments">
              Lista de argumentos del método o constructor invocados. Esta matriz de objetos tiene el mismo número, orden y tipo que los parámetros del método o constructor que se va a invocar. Si no hay ningún parámetro, debe ser una referencia nula (Nothing en Visual Basic). 
              Si el método o constructor que representa esta instancia toma un parámetro ByRef, éste no necesita ningún atributo especial para que pueda invocar el método o constructor utilizando esta función. Cualquier objeto de esta matriz que no se inicialice explícitamente con un valor contendrá el valor predeterminado de este tipo de objeto. Para los elementos de tipo de referencia, este valor es una referencia nula (Nothing). Para los elementos de tipo de valor, este valor es 0, 0,0 o false, en función del tipo de elemento específico.
            </param>
      <param name="culture">
              Instancia de CultureInfo utilizada para regir la conversión de tipos. Si ésta es una referencia nula (Nothing en Visual Basic), se utiliza CultureInfo para el subproceso actual. (Esto es necesario para convertir un valor String que representa 1000, por ejemplo, a un valor Double, ya que 1000 se representa de forma diferente en distintas referencias culturales). 
            </param>
    </member>
    <member name="M:Microsoft.JScript.COMMemberInfo.GetValue(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>
          Devuelve el valor asociado al miembro. Su semántica es similar a PropertyInfo.GetValue.
        </summary>
      <returns>
          Un tipo Object que contiene el valor devuelto del método invocado, o bien un objeto reinicializado en el caso de un constructor o una referencia nula (Nothing en Visual Basic) si el tipo de valor devuelto del método es void. Antes de llamar al método o constructor, Invoke comprueba si el usuario tiene permiso de acceso y comprueba si los parámetros son válidos.
        </returns>
      <param name="invokeAttr">
              Máscara de bits que es una combinación de 0 o más indicadores de bits de BindingFlags, como DefaultBinding, NonPublic, etc. Si el enlazador es una referencia nula (Nothing en Visual Basic), a este parámetro se le asigna el valor BindingFlags.DefaultBinding; por tanto, se omite lo que se pase en él.
            </param>
      <param name="binder">
              Objeto que permite el enlace, la conversión de tipos de argumentos, la invocación de miembros y la recuperación de objetos MemberInfo mediante reflexión. Si el enlazador es una referencia nula (Nothing en Visual Basic), se utiliza el enlazador predeterminado. 
            </param>
      <param name="index">
              Lista de argumentos del método o constructor invocados. Esta matriz de objetos tiene el mismo número, orden y tipo que los parámetros del método o constructor que se va a invocar. Si no hay ningún parámetro, debe ser una referencia nula (Nothing en Visual Basic). 
              Si el método o constructor que representa esta instancia adopta un parámetro ByRef, éste no necesita ningún atributo especial para que pueda invocar el método o constructor utilizando esta función. Cualquier objeto de esta matriz que no se inicialice explícitamente con un valor contendrá el valor predeterminado de este tipo de objeto. Para los elementos de tipo de referencia, este valor es una referencia nula (Nothing). Para los elementos de tipo de valor, este valor es 0, 0,0 o false, en función del tipo de elemento específico.
            </param>
      <param name="culture">
              Instancia de CultureInfo utilizada para regir la conversión de tipos. Si ésta es una referencia nula (Nothing en Visual Basic), se utiliza CultureInfo para el subproceso actual. (Esto es necesario para convertir un valor String que representa 1000, por ejemplo, a un valor Double, ya que 1000 se representa de forma diferente en distintas referencias culturales). 
            </param>
    </member>
    <member name="M:Microsoft.JScript.COMMemberInfo.SetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>
          Establece el valor asociado al miembro. Su semántica es similar a PropertyInfo.SetValue.
        </summary>
      <param name="value">
              Objeto en el que debe invocarse el miembro o constructor. Si el método o el constructor es estático, se omite este argumento.
            </param>
      <param name="invokeAttr">
              Máscara de bits que es una combinación de 0 o más indicadores de bits de BindingFlags, como DefaultBinding, NonPublic, etc. Si el enlazador es una referencia nula (Nothing en Visual Basic), a este parámetro se le asigna el valor BindingFlags.DefaultBinding; por tanto, se omite lo que se pase en él. 
            </param>
      <param name="binder">
              Objeto que permite el enlace, la conversión de tipos de argumentos, la invocación de miembros y la recuperación de objetos MemberInfo mediante reflexión. Si el enlazador es una referencia nula (Nothing en Visual Basic), se utiliza el enlazador predeterminado. 
            </param>
      <param name="index">
              Lista de argumentos del método o constructor invocados. Esta matriz de objetos tiene el mismo número, orden y tipo que los parámetros del método o constructor que se va a invocar. Si no hay ningún parámetro, debe ser una referencia nula (Nothing en Visual Basic). 
              Si el método o constructor que representa esta instancia adopta un parámetro ByRef, éste no necesita ningún atributo especial para que pueda invocar el método o constructor utilizando esta función. Cualquier objeto de esta matriz que no se inicialice explícitamente con un valor contendrá el valor predeterminado de este tipo de objeto. Para los elementos de tipo de referencia, este valor es una referencia nula (Nothing). Para los elementos de tipo de valor, este valor es 0, 0,0 o false, en función del tipo de elemento específico.
            </param>
      <param name="culture">
              Instancia de CultureInfo utilizada para regir la conversión de tipos. Si ésta es una referencia nula (Nothing en Visual Basic), se utiliza CultureInfo para el subproceso actual. (Esto es necesario para convertir un valor String que representa 1000, por ejemplo, a un valor Double, ya que 1000 se representa de forma diferente en distintas referencias culturales).
            </param>
    </member>
    <member name="T:Microsoft.JScript.COMMethodInfo">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.#ctor"></member>
    <member name="F:Microsoft.JScript.COMMethodInfo._comObject"></member>
    <member name="F:Microsoft.JScript.COMMethodInfo._name"></member>
    <member name="P:Microsoft.JScript.COMMethodInfo.Attributes"></member>
    <member name="P:Microsoft.JScript.COMMethodInfo.DeclaringType"></member>
    <member name="F:Microsoft.JScript.COMMethodInfo.EmptyParams"></member>
    <member name="M:Microsoft.JScript.COMMethodInfo.GetBaseDefinition"></member>
    <member name="M:Microsoft.JScript.COMMethodInfo.GetCOMMemberInfo"></member>
    <member name="M:Microsoft.JScript.COMMethodInfo.GetMethodImplementationFlags"></member>
    <member name="M:Microsoft.JScript.COMMethodInfo.GetParameters"></member>
    <member name="M:Microsoft.JScript.COMMethodInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)"></member>
    <member name="M:Microsoft.JScript.COMMethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)"></member>
    <member name="P:Microsoft.JScript.COMMethodInfo.MemberType"></member>
    <member name="P:Microsoft.JScript.COMMethodInfo.MethodHandle"></member>
    <member name="P:Microsoft.JScript.COMMethodInfo.Name"></member>
    <member name="P:Microsoft.JScript.COMMethodInfo.ReflectedType"></member>
    <member name="P:Microsoft.JScript.COMMethodInfo.ReturnType"></member>
    <member name="P:Microsoft.JScript.COMMethodInfo.ReturnTypeCustomAttributes"></member>
    <member name="M:Microsoft.JScript.COMMethodInfo.ToString"></member>
    <member name="T:Microsoft.JScript.COMPropertyInfo">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.#ctor"></member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.Attributes"></member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.CanRead"></member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.CanWrite"></member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.DeclaringType"></member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetAccessors(System.Boolean)"></member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetCOMMemberInfo"></member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetCustomAttributes(System.Boolean)"></member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetCustomAttributes(System.Type,System.Boolean)"></member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetGetMethod(System.Boolean)"></member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetIndexParameters"></member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetSetMethod(System.Boolean)"></member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)"></member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)"></member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.IsDefined(System.Type,System.Boolean)"></member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.MemberType"></member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.Name"></member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.PropertyType"></member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.ReflectedType"></member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)"></member>
    <member name="T:Microsoft.JScript.Context">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.Context.EndColumn"></member>
    <member name="P:Microsoft.JScript.Context.EndLine"></member>
    <member name="P:Microsoft.JScript.Context.EndPosition"></member>
    <member name="M:Microsoft.JScript.Context.GetCode"></member>
    <member name="M:Microsoft.JScript.Context.GetToken"></member>
    <member name="P:Microsoft.JScript.Context.StartColumn"></member>
    <member name="P:Microsoft.JScript.Context.StartLine"></member>
    <member name="P:Microsoft.JScript.Context.StartPosition"></member>
    <member name="T:Microsoft.JScript.ContinueOutOfFinally">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.#ctor"></member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.#ctor(System.Int32)"></member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.#ctor(System.String)"></member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.#ctor(System.String,System.Exception)"></member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="F:Microsoft.JScript.ContinueOutOfFinally.target"></member>
    <member name="T:Microsoft.JScript.Convert">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Convert.#ctor"></member>
    <member name="M:Microsoft.JScript.Convert.CheckIfDoubleIsInteger(System.Double)"></member>
    <member name="M:Microsoft.JScript.Convert.CheckIfSingleIsInteger(System.Single)"></member>
    <member name="M:Microsoft.JScript.Convert.Coerce(System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.Convert.Coerce2(System.Object,System.TypeCode,System.Boolean)"></member>
    <member name="M:Microsoft.JScript.Convert.CoerceT(System.Object,System.Type,System.Boolean)"></member>
    <member name="M:Microsoft.JScript.Convert.IsBadIndex(Microsoft.JScript.AST)"></member>
    <member name="M:Microsoft.JScript.Convert.ThrowTypeMismatch(System.Object)"></member>
    <member name="M:Microsoft.JScript.Convert.ToBoolean(System.Double)"></member>
    <member name="M:Microsoft.JScript.Convert.ToBoolean(System.Object)"></member>
    <member name="M:Microsoft.JScript.Convert.ToBoolean(System.Object,System.Boolean)"></member>
    <member name="M:Microsoft.JScript.Convert.ToForInObject(System.Object,Microsoft.JScript.Vsa.VsaEngine)"></member>
    <member name="M:Microsoft.JScript.Convert.ToInt32(System.Object)"></member>
    <member name="M:Microsoft.JScript.Convert.ToNativeArray(System.Object,System.RuntimeTypeHandle)"></member>
    <member name="M:Microsoft.JScript.Convert.ToNumber(System.Object)"></member>
    <member name="M:Microsoft.JScript.Convert.ToNumber(System.String)"></member>
    <member name="M:Microsoft.JScript.Convert.ToObject(System.Object,Microsoft.JScript.Vsa.VsaEngine)"></member>
    <member name="M:Microsoft.JScript.Convert.ToObject2(System.Object,Microsoft.JScript.Vsa.VsaEngine)"></member>
    <member name="M:Microsoft.JScript.Convert.ToString(System.Boolean)"></member>
    <member name="M:Microsoft.JScript.Convert.ToString(System.Double)"></member>
    <member name="M:Microsoft.JScript.Convert.ToString(System.Object,System.Boolean)"></member>
    <member name="T:Microsoft.JScript.DateConstructor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.DateConstructor.CreateInstance(System.Object[])"></member>
    <member name="M:Microsoft.JScript.DateConstructor.Invoke"></member>
    <member name="M:Microsoft.JScript.DateConstructor.parse(System.String)"></member>
    <member name="M:Microsoft.JScript.DateConstructor.UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"></member>
    <member name="T:Microsoft.JScript.DateObject">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.DatePrototype">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.DatePrototype.constructor"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getDate(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getDay(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getFullYear(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getHours(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getMilliseconds(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getMinutes(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getMonth(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getSeconds(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getTime(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getTimezoneOffset(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCDate(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCDay(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCFullYear(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCHours(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCMilliseconds(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCMinutes(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCMonth(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCSeconds(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getVarDate(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.getYear(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setDate(System.Object,System.Double)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setFullYear(System.Object,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setHours(System.Object,System.Double,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setMilliseconds(System.Object,System.Double)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setMinutes(System.Object,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setMonth(System.Object,System.Double,System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setSeconds(System.Object,System.Double,System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setTime(System.Object,System.Double)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCDate(System.Object,System.Double)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCFullYear(System.Object,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCHours(System.Object,System.Double,System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCMilliseconds(System.Object,System.Double)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCMinutes(System.Object,System.Double,System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCMonth(System.Object,System.Double,System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCSeconds(System.Object,System.Double,System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.setYear(System.Object,System.Double)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.toDateString(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.toGMTString(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.toLocaleDateString(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.toLocaleString(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.toLocaleTimeString(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.toString(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.toTimeString(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.toUTCString(System.Object)"></member>
    <member name="M:Microsoft.JScript.DatePrototype.valueOf(System.Object)"></member>
    <member name="T:Microsoft.JScript.DebugBreak">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.DebugConvert">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.#ctor"></member>
    <member name="M:Microsoft.JScript.DebugConvert.BooleanToString(System.Boolean)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.ByteToString(System.Byte,System.Int32)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.DecimalToString(System.Decimal)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.DoubleToDateString(System.Double)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.DoubleToString(System.Double)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.Vsa.IVsaEngine)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.GetManagedCharObject(System.UInt16)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.GetManagedInt64Object(System.Int64)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.GetManagedObject(System.Object)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.GetManagedUInt64Object(System.UInt64)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.Int16ToString(System.Int16,System.Int32)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.Int32ToString(System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.Int64ToString(System.Int64,System.Int32)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.SByteToString(System.SByte,System.Int32)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.SingleToString(System.Single)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.StringToPrintable(System.String)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.UInt16ToString(System.UInt16,System.Int32)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.UInt32ToString(System.UInt32,System.Int32)"></member>
    <member name="M:Microsoft.JScript.DebugConvert.UInt64ToString(System.UInt64,System.Int32)"></member>
    <member name="T:Microsoft.JScript.DocumentContext">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.DynamicFieldInfo">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.DynamicFieldInfo.#ctor(System.String,System.Object)"></member>
    <member name="M:Microsoft.JScript.DynamicFieldInfo.#ctor(System.String,System.Object,System.String)"></member>
    <member name="F:Microsoft.JScript.DynamicFieldInfo.fieldTypeName"></member>
    <member name="F:Microsoft.JScript.DynamicFieldInfo.name"></member>
    <member name="F:Microsoft.JScript.DynamicFieldInfo.value"></member>
    <member name="T:Microsoft.JScript.Empty">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.Empty.Value"></member>
    <member name="T:Microsoft.JScript.EndOfFile">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.EnumeratorConstructor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorConstructor.CreateInstance(System.Object[])"></member>
    <member name="M:Microsoft.JScript.EnumeratorConstructor.Invoke"></member>
    <member name="T:Microsoft.JScript.EnumeratorObject">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.EnumeratorObject.enumerator"></member>
    <member name="M:Microsoft.JScript.EnumeratorObject.LoadObject"></member>
    <member name="T:Microsoft.JScript.EnumeratorPrototype">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorPrototype.atEnd(System.Object)"></member>
    <member name="P:Microsoft.JScript.EnumeratorPrototype.constructor"></member>
    <member name="M:Microsoft.JScript.EnumeratorPrototype.item(System.Object)"></member>
    <member name="M:Microsoft.JScript.EnumeratorPrototype.moveFirst(System.Object)"></member>
    <member name="M:Microsoft.JScript.EnumeratorPrototype.moveNext(System.Object)"></member>
    <member name="T:Microsoft.JScript.Equality">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Equality.#ctor(System.Int32)"></member>
    <member name="M:Microsoft.JScript.Equality.EvaluateEquality(System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.Equality.JScriptEquals(System.Object,System.Object)"></member>
    <member name="T:Microsoft.JScript.ErrorConstructor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ErrorConstructor.CreateInstance(System.Object[])"></member>
    <member name="M:Microsoft.JScript.ErrorConstructor.Invoke(System.Object[])"></member>
    <member name="T:Microsoft.JScript.ErrorObject">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorObject.description">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorObject.message">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorObject.number">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ErrorObject.op_Explicit(Microsoft.JScript.ErrorObject)~System.Exception">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="err">
            </param>
    </member>
    <member name="M:Microsoft.JScript.ErrorObject.ToException(Microsoft.JScript.ErrorObject)"></member>
    <member name="T:Microsoft.JScript.ErrorPrototype">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.ErrorPrototype.constructor">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="F:Microsoft.JScript.ErrorPrototype.name">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ErrorPrototype.toString(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
    </member>
    <member name="T:Microsoft.JScript.ErrorType">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.OtherError">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.EvalError">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.RangeError">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.ReferenceError">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.SyntaxError">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.TypeError">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.URIError">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.Eval">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Eval.JScriptEvaluate(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="source">
            </param>
      <param name="engine">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Eval.JScriptEvaluate(System.Object,System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="source">
            </param>
      <param name="unsafeOption">
            </param>
      <param name="engine">
            </param>
    </member>
    <member name="T:Microsoft.JScript.EvalErrorObject">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.Expando">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Expando.#ctor">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.FieldAccessor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.FieldAccessor.#ctor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.FieldAccessor.GetValue(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
    </member>
    <member name="M:Microsoft.JScript.FieldAccessor.SetValue(System.Object,System.Object)">
      <summary>
        </summary>
      <param name="thisob">
            </param>
      <param name="value">
            </param>
    </member>
    <member name="T:Microsoft.JScript.ForIn">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ForIn.JScriptGetEnumerator(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="coll">
            </param>
    </member>
    <member name="T:Microsoft.JScript.FunctionConstructor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionConstructor.CreateInstance(System.Object[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="args">
            </param>
    </member>
    <member name="M:Microsoft.JScript.FunctionConstructor.Invoke(System.Object[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="args">
            </param>
    </member>
    <member name="T:Microsoft.JScript.FunctionDeclaration">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionDeclaration.JScriptFunctionDeclaration(System.RuntimeTypeHandle,System.String,System.String,System.String[],Microsoft.JScript.JSLocalField[],System.Boolean,System.Boolean,System.String,System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="handle">
            </param>
      <param name="name">
            </param>
      <param name="method_name">
            </param>
      <param name="formal_parameters">
            </param>
      <param name="fields">
            </param>
      <param name="must_save_stack_locals">
            </param>
      <param name="hasArgumentsObject">
            </param>
      <param name="text">
            </param>
      <param name="declaringObject">
            </param>
      <param name="engine">
            </param>
    </member>
    <member name="T:Microsoft.JScript.FunctionExpression">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionExpression.JScriptFunctionExpression(System.RuntimeTypeHandle,System.String,System.String,System.String[],Microsoft.JScript.JSLocalField[],System.Boolean,System.Boolean,System.String,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="handle">
            </param>
      <param name="name">
            </param>
      <param name="method_name">
            </param>
      <param name="formal_params">
            </param>
      <param name="fields">
            </param>
      <param name="must_save_stack_locals">
            </param>
      <param name="hasArgumentsObject">
            </param>
      <param name="text">
            </param>
      <param name="engine">
            </param>
    </member>
    <member name="T:Microsoft.JScript.FunctionObject">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionObject.ToString">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.FunctionPrototype">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionPrototype.apply(System.Object,System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
      <param name="thisarg">
            </param>
      <param name="argArray">
            </param>
    </member>
    <member name="M:Microsoft.JScript.FunctionPrototype.call(System.Object,System.Object,System.Object[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
      <param name="thisarg">
            </param>
      <param name="args">
            </param>
    </member>
    <member name="P:Microsoft.JScript.FunctionPrototype.constructor">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.FunctionPrototype.toString(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
    </member>
    <member name="T:Microsoft.JScript.FunctionWrapper">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionWrapper.ToString">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.GlobalObject">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.ActiveXObject">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Array">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.boolean">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Boolean">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.byte">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.char">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.CollectGarbage"></member>
    <member name="P:Microsoft.JScript.GlobalObject.Date">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.decimal">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.decodeURI(System.Object)"></member>
    <member name="M:Microsoft.JScript.GlobalObject.decodeURIComponent(System.Object)"></member>
    <member name="P:Microsoft.JScript.GlobalObject.double">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.encodeURI(System.Object)"></member>
    <member name="M:Microsoft.JScript.GlobalObject.encodeURIComponent(System.Object)"></member>
    <member name="P:Microsoft.JScript.GlobalObject.Enumerator">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Error">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.escape(System.Object)"></member>
    <member name="M:Microsoft.JScript.GlobalObject.eval(System.Object)"></member>
    <member name="P:Microsoft.JScript.GlobalObject.EvalError">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.float"></member>
    <member name="P:Microsoft.JScript.GlobalObject.Function"></member>
    <member name="M:Microsoft.JScript.GlobalObject.GetObject(System.Object,System.Object)"></member>
    <member name="F:Microsoft.JScript.GlobalObject.Infinity"></member>
    <member name="P:Microsoft.JScript.GlobalObject.int"></member>
    <member name="M:Microsoft.JScript.GlobalObject.isFinite(System.Double)"></member>
    <member name="M:Microsoft.JScript.GlobalObject.isNaN(System.Object)"></member>
    <member name="P:Microsoft.JScript.GlobalObject.long"></member>
    <member name="P:Microsoft.JScript.GlobalObject.Math"></member>
    <member name="F:Microsoft.JScript.GlobalObject.NaN"></member>
    <member name="P:Microsoft.JScript.GlobalObject.Number"></member>
    <member name="P:Microsoft.JScript.GlobalObject.Object"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalActiveXObjectField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalArrayField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalBooleanField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalDateField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalEnumeratorField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalErrorField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalEvalErrorField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalFunctionField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalNumberField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalObjectField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalObjectPrototypeField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalRangeErrorField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalReferenceErrorField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalRegExpField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalStringField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalSyntaxErrorField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalTypeErrorField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalURIErrorField"></member>
    <member name="F:Microsoft.JScript.GlobalObject.originalVBArrayField"></member>
    <member name="M:Microsoft.JScript.GlobalObject.parseFloat(System.Object)"></member>
    <member name="M:Microsoft.JScript.GlobalObject.parseInt(System.Object,System.Object)"></member>
    <member name="P:Microsoft.JScript.GlobalObject.RangeError"></member>
    <member name="P:Microsoft.JScript.GlobalObject.ReferenceError"></member>
    <member name="P:Microsoft.JScript.GlobalObject.RegExp"></member>
    <member name="P:Microsoft.JScript.GlobalObject.sbyte"></member>
    <member name="M:Microsoft.JScript.GlobalObject.ScriptEngine"></member>
    <member name="M:Microsoft.JScript.GlobalObject.ScriptEngineBuildVersion"></member>
    <member name="M:Microsoft.JScript.GlobalObject.ScriptEngineMajorVersion"></member>
    <member name="M:Microsoft.JScript.GlobalObject.ScriptEngineMinorVersion"></member>
    <member name="P:Microsoft.JScript.GlobalObject.short"></member>
    <member name="P:Microsoft.JScript.GlobalObject.String"></member>
    <member name="P:Microsoft.JScript.GlobalObject.SyntaxError"></member>
    <member name="P:Microsoft.JScript.GlobalObject.TypeError"></member>
    <member name="P:Microsoft.JScript.GlobalObject.uint"></member>
    <member name="P:Microsoft.JScript.GlobalObject.ulong"></member>
    <member name="F:Microsoft.JScript.GlobalObject.undefined"></member>
    <member name="M:Microsoft.JScript.GlobalObject.unescape(System.Object)"></member>
    <member name="P:Microsoft.JScript.GlobalObject.URIError"></member>
    <member name="P:Microsoft.JScript.GlobalObject.ushort"></member>
    <member name="P:Microsoft.JScript.GlobalObject.VBArray"></member>
    <member name="P:Microsoft.JScript.GlobalObject.void"></member>
    <member name="T:Microsoft.JScript.Globals">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Globals.ConstructArray(System.Object[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="args">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Globals.ConstructArrayLiteral(System.Object[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="args">
            </param>
    </member>
    <member name="F:Microsoft.JScript.Globals.contextEngine">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.GlobalScope">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.#ctor(Microsoft.JScript.GlobalScope,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <param name="parent">
            </param>
      <param name="engine">
            </param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.AddField(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetDefaultThisObject">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetField(System.String,System.Int32)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
      <param name="lexLevel">
            </param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetFields(System.Reflection.BindingFlags)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="bindingAttr">
            </param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetGlobalScope">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetLocalField(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
      <param name="bindingAttr">
            </param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetMembers(System.Reflection.BindingFlags)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="bindingAttr">
            </param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetMethods(System.Reflection.BindingFlags)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="bindingAttr">
            </param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetProperties(System.Reflection.BindingFlags)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="bindingAttr">
            </param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
      <param name="method">
            </param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)">
      <summary>
        </summary>
      <param name="m">
            </param>
    </member>
    <member name="T:Microsoft.JScript.Hide">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Hide.#ctor">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.IActivationObject">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetDefaultThisObject">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
      <param name="lexLevel">
            </param>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetGlobalScope">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
      <param name="lexlevel">
            </param>
    </member>
    <member name="T:Microsoft.JScript.IAuthorServices">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IAuthorServices.GetCodeSense">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.IAuthorServices.GetColorizer">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.IColorizeText">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IColorizeText.Colorize(System.String,Microsoft.JScript.SourceState)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="sourceCode">
            </param>
      <param name="state">
            </param>
    </member>
    <member name="M:Microsoft.JScript.IColorizeText.GetStateForText(System.String,Microsoft.JScript.SourceState)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="sourceCode">
            </param>
      <param name="currentState">
            </param>
    </member>
    <member name="T:Microsoft.JScript.IDebugConvert">
      <summary>
          Define un conjunto de métodos de utilidades para convertir objetos en valores primitivos, valores primitivos en cadenas y obtener los mensajes de error asociados a los códigos de error de JScript.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.BooleanToString(System.Boolean)">
      <summary>
          Convierte un valor bool en string utilizando la semántica de conversión de JScript.
        </summary>
      <returns>
          El <paramref name="value" /> convertido en string utilizando las reglas de conversión de JScript.
        </returns>
      <param name="value">
              Valor bool que se va a convertir en string.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.ByteToString(System.Byte,System.Int32)">
      <summary>
          Convierte un valor byte en string utilizando la semántica de conversión de JScript.
        </summary>
      <returns>
          El valor byte convertido en string utilizando las reglas de conversión de JScript para la <paramref name="radix" /> dada.
        </returns>
      <param name="value">
              Valor byte en el que se va a convertir string.
            </param>
      <param name="radix">
              La base que se va a utilizar para la conversión.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.DoubleToDateString(System.Double)">
      <summary>
          Convierte un valor double que representa un valor de fecha de JScript en una cadena de fecha utilizando la semántica de conversión de JScript.
        </summary>
      <returns>
          La fecha en formato de string representada por <paramref name="value" />.
        </returns>
      <param name="value">
              Valor double para convertir en una cadena de fecha.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.DoubleToString(System.Double)">
      <summary>
          Convierte un valor double en string utilizando la semántica de conversión de JScript.
        </summary>
      <returns>
          El <paramref name="value" /> convertido en string utilizando las reglas de conversión de JScript.
        </returns>
      <param name="value">
              Valor double que se va a convertir en string.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.Vsa.IVsaEngine)">
      <summary>
          Obtiene el mensaje de error asociado a un código de error HRESULT generado por el motor en tiempo de ejecución de JScript.
        </summary>
      <returns>
          El valor string del error asociado a HRESULT.
        </returns>
      <param name="hr">
              HRESULT devuelto desde JScript a un cliente clásico COM.
            </param>
      <param name="engine">
              Puntero a una instancia de <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> con la información de configuración regional utilizada para buscar el error.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetManagedCharObject(System.UInt16)">
      <summary>
          Devuelve un valor char al que se ha aplicado la conversión boxing que corresponde al punto de código Unicode dado.
        </summary>
      <returns>
          Valor char al que se ha aplicado la conversión boxing con el carácter en el punto de código Unicode especificado por <paramref name="i" />.
        </returns>
      <param name="i">
              Punto de código Unicode para el carácter.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetManagedInt64Object(System.Int64)">
      <summary>
          Devuelve un valor long al que se ha aplicado la conversión boxing que contiene el valor primitivo de long.
        </summary>
      <returns>
          El valor long al que se ha aplicado la conversión boxing que contiene el <paramref name="i" /> del valor primitivo de long.
        </returns>
      <param name="i">
              Valor long al que se va a aplicar la conversión boxing.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetManagedObject(System.Object)">
      <summary>
          Convierte el parámetro en una instancia de la referencia.
        </summary>
      <returns>
          El valor original si es un tipo de referencia o el valor correspondiente al que se le ha aplicado la conversión boxing si es un tipo de valor.
        </returns>
      <param name="value">
              Valor que se va a devolver como referencia.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetManagedUInt64Object(System.UInt64)">
      <summary>
          Devuelve un valor ulong al que se ha aplicado la conversión boxing que contiene el valor primitivo de ulong.
        </summary>
      <returns>
          Valor ulong al que se le va a aplicar la conversión boxing que contiene el <paramref name="i" /> del valor primitivo de ulong.
        </returns>
      <param name="i">
              Valor ulong al que se va a aplicar la conversión boxing.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.Int16ToString(System.Int16,System.Int32)">
      <summary>
          Convierte un valor short en string utilizando la semántica de conversión de JScript.
        </summary>
      <returns>
          El <paramref name="value" /> convertido en string utilizando las reglas de conversión de JScript para la <paramref name="radix" /> dada.
        </returns>
      <param name="value">
              Valor short que se va a convertir en string.
            </param>
      <param name="radix">
              La base que se va a utilizar para la conversión.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.Int32ToString(System.Int32,System.Int32)">
      <summary>
          Convierte un valor int en string utilizando la semántica de conversión de JScript.
        </summary>
      <returns>
          El <paramref name="value" /> convertido en string utilizando las reglas de conversión de JScript para la <paramref name="radix" /> dada.
        </returns>
      <param name="value">
              Valor int que se va a convertir en string.
            </param>
      <param name="radix">
              La base que se va a utilizar para la conversión.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.Int64ToString(System.Int64,System.Int32)">
      <summary>
          Convierte un valor long en string utilizando la semántica de conversión de JScript.
        </summary>
      <returns>
          El <paramref name="value" /> convertido en string utilizando las reglas de conversión de JScript para la <paramref name="radix" /> dada.
        </returns>
      <param name="value">
              Valor long que se va a convertir en string.
            </param>
      <param name="radix">
              La base que se va a utilizar para la conversión.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
          Devuelve el valor de string normalizado para una expresión regular construida a partir de los parámetros.
        </summary>
      <returns>
          El valor de string que representa la expresión regular construida a partir de los argumentos pasados.
        </returns>
      <param name="source">
              El valor de string que contiene el modelo de la expresión regular.
            </param>
      <param name="ignoreCase">
              
                Es true si la expresión regular debe omitir la distinción de mayúsculas y minúsculas.
            </param>
      <param name="global">
              
                Es true si la expresión regular debe coincidir con todas las instancias del modelo.
            </param>
      <param name="multiline">
              
                Es true si el modelo normal puede coincidir en varias líneas.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.SByteToString(System.SByte,System.Int32)">
      <summary>
          Convierte un valor sbyte en string utilizando la semántica de conversión de JScript.
        </summary>
      <returns>
          El <paramref name="value" /> convertido en string utilizando las reglas de conversión de JScript para la <paramref name="radix" /> dada.
        </returns>
      <param name="value">
              El valor sbyte en el que se va a convertir string.
            </param>
      <param name="radix">
              La base que se va a utilizar para la conversión.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.SingleToString(System.Single)">
      <summary>
          Convierte un valor único en una cadena utilizando la semántica de conversión de JScript.
        </summary>
      <returns>
          El <paramref name="value" /> convertido en string utilizando las reglas de conversión de JScript.
        </returns>
      <param name="value">
              Valor único que se va a convertir en string.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.StringToPrintable(System.String)">
      <summary>
          Convierte los caracteres no imprimibles de una string.
        </summary>
      <returns>
          El valor de string con todos los caracteres no imprimibles reemplazados por las secuencias de escape de cadena de JScript correspondientes.
        </returns>
      <param name="source">
              El valor de string al que se van a aplicar secuencias de escape.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)">
      <summary>
          Convierte un valor object en un valor primitivo utilizando la semántica de conversión de JScript.
        </summary>
      <returns>
          El object convertido en el tipo primitivo especificado utilizando la semántica de conversión de JScript.
        </returns>
      <param name="value">
              El object que se va a convertir en un valor primitivo.
            </param>
      <param name="typeCode">
              Tipo primitivo en el que se va a convertir.
            </param>
      <param name="truncationPermitted">
              Permite truncar el valor durante la conversión.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.UInt16ToString(System.UInt16,System.Int32)">
      <summary>
          Convierte un valor ushort en string utilizando la semántica de conversión de JScript.
        </summary>
      <returns>
          El <paramref name="value" /> convertido en string utilizando las reglas de conversión de JScript para la <paramref name="radix" /> dada.
        </returns>
      <param name="value">
              Valor ushort que se va a convertir en string.
            </param>
      <param name="radix">
              La base que se va a utilizar para la conversión.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.UInt32ToString(System.UInt32,System.Int32)">
      <summary>
          Convierte un valor uint en una cadena utilizando la semántica de conversión de JScript.
        </summary>
      <returns>
          El <paramref name="value" /> convertido en cadena utilizando las reglas de conversión de JScript para la <paramref name="radix" /> dada.
        </returns>
      <param name="value">
              Valor uint que se va a convertir en string.
            </param>
      <param name="radix">
              La base que se va a utilizar para la conversión.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.UInt64ToString(System.UInt64,System.Int32)">
      <summary>
          Convierte un valor ulong en string utilizando la semántica de conversión de JScript.
        </summary>
      <returns>
          El <paramref name="value" /> convertido en string utilizando las reglas de conversión de JScript para la <paramref name="radix" /> dada.
        </returns>
      <param name="value">
              Valor ulong que se va a convertir en string.
            </param>
      <param name="radix">
              La base que se va a utilizar para la conversión.
            </param>
    </member>
    <member name="T:Microsoft.JScript.IDebugConvert2">
      <summary>
          Permite que los clientes conviertan valores decimales en cadenas utilizando las semántica de conversión de JScript.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert2.DecimalToString(System.Decimal)">
      <summary>
          Convierte un valor decimal en el formato de string utilizando las reglas de conversión de JScript.
        </summary>
      <returns>
          El valor decimal convertido en el formato de string utilizando las reglas de conversión de JScript.
        </returns>
      <param name="value">
              El valor decimal en el que se va a convertir string.
            </param>
    </member>
    <member name="T:Microsoft.JScript.IDebuggerObject">
      <summary>
          Permite al motor en tiempo de ejecución de JScript detectar y procesar los objetos COM que directamente implementa los objetos de JScript o actúa como servidor proxy respecto a los objetos de JScript administrados.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.HasEnumerableMember(System.String)">
      <summary>
          Prueba para comprobar si el objeto tiene un miembro que se puede enumerar utilizando la instrucción for-in.
        </summary>
      <returns>
          Devuelve true si el miembro se puede enumerar utilizando la instrucción for-in.
        </returns>
      <param name="name">
              Nombre del miembro que se va a comprobar.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.IsCOMObject">
      <summary>
          Prueba para comprobar si el objeto representa un objeto COM verdadero o si es un servidor proxy a un objeto administrado.
        </summary>
      <returns>
          Devuelve true si el objeto realmente es un objeto COM y false si el objeto es un servidor proxy a un objeto administrado.
        </returns>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.IsEqual(Microsoft.JScript.IDebuggerObject)">
      <summary>
          Prueba para comprobar si el objeto es el igual al objeto pasado.
        </summary>
      <returns>
          Devuelve true si el objeto es el mismo objeto que el objeto pasado; en caso contrario, devuelve false.
        </returns>
      <param name="o">
              Objeto con el que se va a comparar.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.IsScriptFunction">
      <summary>
          Prueba para comprobar si el objeto es un servidor proxy a la función de JScript administrada.
        </summary>
      <returns>
          Devuelve true si el objeto es un servidor proxy a una función de JScript administrada; en caso contrario, devuelve false.
        </returns>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.IsScriptObject">
      <summary>
          Prueba para comprobar si el objeto es un servidor proxy al objeto de JScript administrado.
        </summary>
      <returns>
          Devuelve true si el objeto es un servidor proxy a un objeto de JScript administrado; en caso contrario, devuelve false.
        </returns>
    </member>
    <member name="T:Microsoft.JScript.IDebugScriptScope">
      <summary>
          Lo implementa el motor de VSA. Su método único permite al llamador establecer el valor de "this" asociado al ámbito global.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugScriptScope.SetThisValue(System.Object)">
      <summary>
          Permite al llamador establecer el valor de "this" asociado al ámbito global.
        </summary>
      <param name="thisValue">
              El valor utilizado como objeto "this" para el ámbito global.
            </param>
    </member>
    <member name="T:Microsoft.JScript.IDebugType">
      <summary>
          Permite que el motor en tiempo de ejecución de JScript detecte y procese los objetos COM que implementan directamente un tipo o constructor de JScript, o bien que actúan como proxy a un tipo administrado o a un constructor de JScript administrado.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugType.HasInstance(System.Object)">
      <summary>
          Prueba para comprobar si un objeto es una instancia del tipo o constructor determinados.
        </summary>
      <returns>
          Devuelve true si el objeto es una instancia del tipo que representa <see cref="T:Microsoft.JScript.IDebugType" />.
        </returns>
      <param name="o">
              Objeto que se va a probar.
            </param>
    </member>
    <member name="T:Microsoft.JScript.IDebugVsaScriptCodeItem">
      <summary>
          Normalmente se implementa mediante un objeto que representa un bloque de código. (Se puede crear un bloque de código mediante la obtención de un objeto de ámbito del motor de VSA y, a continuación, agregar un bloque de secuencias de comandos, expresiones o una instrucción al ámbito llamando a <see cref="M:Microsoft.JScript.IVsaScriptScope.AddItem" />.) Lo suele llamar un depurador que necesita evaluar una expresión (en una ventana de inspección, por ejemplo) o analizar información sobre un punto de interrupción representado como string.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
      <summary>
          Evalúa el bloque, la expresión o la instrucción representados por el elemento de código y devuelve el valor. En las expresiones, el valor es el resultado de la expresión. En los bloques e instrucciones, la expresión resultante es la última expresión calculada por el bloque o instrucción. 
        </summary>
      <returns>
          Devuelve un valor que representa la evaluación de la instrucción, expresión o bloque.
        </returns>
    </member>
    <member name="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
      <summary>
          Analiza las cadenas en nombre del depurador y devuelve la información analizada fuera. Puede que el depurador tenga un punto de interrupción escrito por el usuario con el formato functionname-arguments-ILoffset. Una cadena de punto de interrupción con nombre puede tener un formato complejo, por ejemplo, F.B(C.D[], int, arg : double ) : C.Abc + 123. . La lista de parámetros es opcional, como lo es el desplazamiento IL.
        </summary>
      <returns>
          Devuelve true si se analiza el punto de interrupción con nombre correctamente; en caso contrario, devuelve false.
        </returns>
      <param name="input">
              Cadena de punto de interrupción con nombre y con el formato correcto que proporciona una función, una lista de argumentos opcionales y el desplazamiento IL opcional.
            </param>
      <param name="functionName">
              Parámetro Out que devuelve el nombre de la función analizada fuera de la cadena de entrada, o bien la cadena vacía si la cadena de entrada no tiene el formato correcto.
            </param>
      <param name="nargs">
              Parámetro Out que devuelve el número de argumentos en la lista de argumentos opcionales. Devuelve cero si no hay ninguna lista de argumentos o si la cadena no tiene el formato correcto.
            </param>
      <param name="arguments">
              Parámetro Out que devuelve una lista separada por espacios de los nombres de los tipos de todos los argumentos de la lista de argumentos, o bien una cadena vacía si falta la lista de argumentos o la cadena de entrada no tiene el formato correcto.
            </param>
      <param name="returnType">
              Parámetro Out que devuelve una cadena que contiene el tipo de valor devuelto de la función citada en la entrada, o bien la cadena vacía si faltaba el tipo de valor devuelto o la cadena de entrada no tenía el formato correcto.
            </param>
      <param name="offset">
              Entero largo sin signo que da el desplazamiento IL a partir de la cadena de entrada, o bien cero si no hubo ningún desplazamiento o la cadena no tenía el formato correcto.
            </param>
    </member>
    <member name="T:Microsoft.JScript.IDefineEvent">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IDefineEvent.AddEvent(System.String,System.Int32)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="__unnamed0">
            </param>
      <param name="code">
            </param>
    </member>
    <member name="T:Microsoft.JScript.IEngine2">
      <summary>
          Lo implementa el motor. Proporciona una interfaz para utilizar la funcionalidad adicional proporcionada por el motor de JScript.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.Clone(System.AppDomain)">
      <summary>
          Se supone que se crea un nuevo motor idéntico que se ejecuta en un nuevo dominio de la aplicación, con el mismo estado compilado y los mismos elementos con nombre; no obstante, nunca se implementó en JScript. La implementación de JScript produce simplemente una NotImplementedException.
        </summary>
      <returns>
          Motor clonado.
        </returns>
      <param name="domain">
              El dominio de la aplicación en el que crear el motor clonado.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.CompileEmpty">
      <summary>
          Desencadena la compilación de todos los estados que están actualmente en el motor. Todas las referencias, los elementos de código, los elementos de host y los recursos se ejecutan a través del compilador.  
        </summary>
      <returns>
          
            Es true si la compilación se llevó a cabo correctamente; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.ConnectEvents">
      <summary>
          Se supone que indica al motor que puede enlazar los orígenes de los eventos registrados que tienen eventos en cualquier controlador de eventos global. Nunca se implementó en JScript .NET. Sin embargo, no produce ninguna NotImplementedException. 
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.DisconnectEvents">
      <summary>
          Similar a <see cref="M:Microsoft.JScript.IEngine2.ConnectEvents" />, se supone que indica al motor que elimine los orígenes de los eventos de los controladores de eventos; sin embargo, no se implementó.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.GetAssembly">
      <summary>
          Devuelve el ensamblado compilado generado por el paso de compilación. 
        </summary>
      <returns>
          Ensamblado compilado.
        </returns>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.GetGlobalScope">
      <summary>
          Devuelve el objeto de ámbito global.
        </summary>
      <returns>
          Objeto de ámbito global.
        </returns>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.GetModule">
      <summary>
          Devuelve el módulo de código del ensamblado compilado.
        </summary>
      <returns>
          Módulo de código del ensamblado compilado.
        </returns>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.InitVsaEngine(System.String,Microsoft.Vsa.IVsaSite)">
      <summary>
          Inicializa el motor de VSA. Normalmente, debe establecer manualmente el moniker raíz y el sitio, pero esta función lo hace convenientemente por el usuario.
        </summary>
      <param name="rootMoniker">
              Para obtener una descripción detallada del formulario legal del moniker raíz, vea <see cref="P:Microsoft.Vsa.IVsaEngine.RootMoniker" />.
            </param>
      <param name="site">
              Vea <see cref="P:Microsoft.Vsa.IVsaEngine.Site" />.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.Interrupt">
      <summary>
          Llama a Thread.Abort en el subproceso que está ejecutando el código de secuencias de comandos. Se debe llamar en un subproceso distinto del utilizado para ejecutar el código; de lo contrario, anula su propio subproceso.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.RegisterEventSource(System.String)">
      <summary>
          Se supone que asigna el nombre de un elemento con nombre que se marca como origen de eventos; por tanto, el método <see cref="M:Microsoft.JScript.IEngine2.ConnectEvents" /> conoce los eventos que va a enlazar. Sin embargo, no se ha implementado.
        </summary>
      <param name="name">
              El nombre de un elemento agregado que origina eventos.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.Restart">
      <summary>
          Llamado por el depurador cuando necesita restablecer el motor a un estado limpio antes de una nueva evaluación de expresión. Restablece los elementos agregados y el ámbito global a su estado original.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.Run(System.AppDomain)">
      <summary>
          Se supone que permite ejecutar el código compilado en el dominio de la aplicación elegida. No se ha implementado y, en su lugar, produce una NotImplementedException.
        </summary>
      <param name="domain">
              El dominio de la aplicación en el que se va a ejecutar el código compilado.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.RunEmpty">
      <summary>
          Ejecuta el código compilado en el dominio de la aplicación actual.
        </summary>
    </member>
    <member name="T:Microsoft.JScript.IErrorHandler">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IErrorHandler.OnCompilerError(Microsoft.JScript.IVsaFullErrorInfo)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="error">
            </param>
    </member>
    <member name="T:Microsoft.JScript.IMessageReceiver">
      <summary>
          Define una interfaz utilizada por el JScript en tiempo de ejecución para generar cualquier cadena pasada a la función de impresión integrada.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IMessageReceiver.Message(System.String)">
      <summary>
          Presenta string al usuario.
        </summary>
      <param name="strValue">
              La cadena que se va a presentar al usuario. El implementador puede registrarla en un archivo, imprimirla en la consola, etc.
            </param>
    </member>
    <member name="T:Microsoft.JScript.IMethodsCompletionInfo">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.Import">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Import.JScriptImport(System.String,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <param name="name">
            </param>
      <param name="engine">
            </param>
    </member>
    <member name="T:Microsoft.JScript.In">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.In.JScriptIn(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="v1">
            </param>
      <param name="v2">
            </param>
    </member>
    <member name="T:Microsoft.JScript.INeedEngine">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.INeedEngine.GetEngine">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.INeedEngine.SetEngine(Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <param name="engine">
            </param>
    </member>
    <member name="T:Microsoft.JScript.Instanceof">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Instanceof.JScriptInstanceof(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="v1">
            </param>
      <param name="v2">
            </param>
    </member>
    <member name="T:Microsoft.JScript.IObjectCompletionInfo">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.IParseText">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IParseText.Parse(System.String,Microsoft.JScript.IErrorHandler)">
      <summary>
        </summary>
      <param name="code">
            </param>
      <param name="error">
            </param>
    </member>
    <member name="T:Microsoft.JScript.IRedirectOutput">
      <summary>
          Permite al llamador establecer el <see cref="T:Microsoft.JScript.IMessageReceiver" /> utilizado para mostrar las cadenas que se pasan a la función de impresión integrada de JScript.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IRedirectOutput.SetOutputStream(Microsoft.JScript.IMessageReceiver)">
      <summary>
          Redirige la secuencia de salida a la función de impresión.
        </summary>
      <param name="output">
              Objeto que puede presentar las cadenas pasadas a la función de impresión a través de la interfaz <see cref="T:Microsoft.JScript.IMessageReceiver" />. 
            </param>
    </member>
    <member name="T:Microsoft.JScript.ISite2">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ISite2.GetParentChain(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="obj">
            </param>
    </member>
    <member name="T:Microsoft.JScript.ITokenColorInfo">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.ITokenColorInfo.Color">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.ITokenColorInfo.EndPosition">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.ITokenColorInfo.StartPosition"></member>
    <member name="T:Microsoft.JScript.ITokenEnumerator">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ITokenEnumerator.GetNext">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.ITokenEnumerator.Reset">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.IVsaFullErrorInfo">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.IVsaFullErrorInfo.EndLine">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.IVsaScriptCodeItem">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptCodeItem.Execute">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.IVsaScriptCodeItem.StartColumn">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.IVsaScriptCodeItem.StartLine">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.IVsaScriptScope">
      <summary>
          Representa un objeto del ámbito. El objeto del ámbito global del motor de VSA implementa esta interfaz, que se puede obtener llamando a <see cref="M:Microsoft.JScript.IEngine2.GetGlobalScope" /> en el motor de VSA. También puede crear nuevos sub-ámbitos llamando a <see cref="M:Microsoft.JScript.IVsaScriptScope.GetItem(System.String)" /> en un objeto de ámbito existente.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.AddItem(System.String,Microsoft.Vsa.VsaItemType)">
      <summary>
          Se utiliza como generador de elementos secundarios que se pueden agregar a un ámbito, por ejemplo, bloques de secuencias de comandos, expresiones, instrucciones, objetos host, ámbitos host y ámbitos de secuencias de comandos. 
        </summary>
      <returns>
        </returns>
      <param name="itemName">
              Nombre de una cadena para el nuevo elemento. El nombre no debe estar en uso; en caso contrario, se produce una <see cref="F:Microsoft.Vsa.VsaError.ItemNameInUse" /><see cref="T:Microsoft.Vsa.VsaException" />.
            </param>
      <param name="type">
              Se corrigió VsaItemType Enumeration y se agregaron nuevos tipos de elemento. La implementación de JScript acepta los valores <see cref="T:Microsoft.JScript.VSAITEMTYPE2" /> y rechaza los elementos <see cref="T:Microsoft.Vsa.VsaItemType" />
            </param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.CreateDynamicItem(System.String,Microsoft.Vsa.VsaItemType)">
      <summary>
          Se comporta exactamente igual que <see cref="M:Microsoft.JScript.IVsaScriptScope.AddItem(System.String,Microsoft.Vsa.VsaItemType)" />, con la restricción adicional de que el motor de VSA debe estar en estado de ejecución.
        </summary>
      <returns>
        </returns>
      <param name="itemName">
              Cadena del nombre del elemento.
            </param>
      <param name="type">
              Tipo de elemento.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.GetItem(System.String)">
      <summary>
          Devuelve el elemento con nombre agregado con <see cref="M:Microsoft.JScript.IVsaScriptScope.AddItem(System.String,Microsoft.Vsa.VsaItemType)" /> o null si no se puede encontrar ninguno.
        </summary>
      <returns>
        </returns>
      <param name="itemName">
              El nombre del elemento agregado con <see cref="M:Microsoft.JScript.IVsaScriptScope.AddItem(System.String,Microsoft.Vsa.VsaItemType)" />.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.GetItemAtIndex(System.Int32)">
      <summary>
          Igual que <see cref="M:Microsoft.JScript.IVsaScriptScope.GetItem(System.String)" />, sólo que toma el índice de tipo entero en vez del nombre.
        </summary>
      <returns>
          El elemento con nombre en el índice dado.
        </returns>
      <param name="index">
              Índice del elemento que se va a devolver. Si el índice está fuera del intervalo, se produce una <see cref="T:Microsoft.Vsa.VsaException" /><see cref="F:Microsoft.Vsa.VsaError.ItemNotFound" />. Los elementos se indizan en el orden en que se agregaron. El índice es de base cero.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.GetItemCount">
      <summary>
          Devuelve el número de elementos con nombre, que es uno más que el índice legal máximo de <see cref="M:Microsoft.JScript.Vsa.VsaEngine.GetItemAtIndex(System.Int32)" />.
        </summary>
      <returns>
          Devuelve el número de elementos con nombre.
        </returns>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.GetObject">
      <summary>
          Obtiene el objeto de ámbito más global de cualquier ámbito en la cadena de ámbito actual, incluido entrar en los objetos de ámbito que proporcionó el host.
        </summary>
      <returns>
          El objeto de ámbito más global.
        </returns>
    </member>
    <member name="P:Microsoft.JScript.IVsaScriptScope.Parent">
      <summary>
          Obtiene el ámbito principal si ha creado un sub-ámbito. El ámbito de nivel más alto (global) devuelve un elemento primario null.
        </summary>
      <returns>
          Ámbito principal.
        </returns>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.RemoveItem(Microsoft.Vsa.IVsaItem)">
      <summary>
          Quita el elemento con nombre dado del ámbito.
        </summary>
      <param name="item">
              Un elemento agregado al ámbito con <see cref="M:Microsoft.JScript.IVsaScriptScope.AddItem(System.String,Microsoft.Vsa.VsaItemType)" />. Si el elemento no es un miembro de este ámbito, se produce una <see cref="T:Microsoft.Vsa.VsaException" /><see cref="F:Microsoft.Vsa.VsaError.ItemNotFound" />.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.RemoveItem(System.String)">
      <summary>
          Quita el elemento con nombre dado del ámbito.
        </summary>
      <param name="itemName">
              El nombre del elemento agregado con <see cref="M:Microsoft.JScript.IVsaScriptScope.AddItem(System.String,Microsoft.Vsa.VsaItemType)" /> para quitar. Si no hay ningún elemento tal con nombre, se produce una <see cref="T:Microsoft.Vsa.VsaException" /><see cref="F:Microsoft.Vsa.VsaError.ItemNotFound" />.
            </param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.RemoveItemAtIndex(System.Int32)">
      <summary>
          Quita el elemento con nombre del índice especificado.
        </summary>
      <param name="index">
              Índice de base cero de la lista de elementos con nombre. Si es mayor o igual que el número de elementos, se produce una <see cref="T:Microsoft.Vsa.VsaException" /><see cref="F:Microsoft.Vsa.VsaError.ItemNotFound" />.
            </param>
    </member>
    <member name="T:Microsoft.JScript.IWrappedMember">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.IWrappedMember.GetWrappedObject">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.JSAuthor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JSAuthor.#ctor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JSAuthor.GetCodeSense">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSAuthor.GetColorizer">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.JSBuiltin">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.None"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_concat">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_join">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_pop">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_push">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_reverse">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_shift">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_slice">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_sort">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_splice">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_toLocaleString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_toString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_unshift">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Boolean_toString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Boolean_valueOf"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getDate"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getDay"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getFullYear"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getHours"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getMilliseconds"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getMinutes"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getMonth"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getSeconds"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getTime"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getTimezoneOffset"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCDate"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCDay"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCFullYear"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCHours"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCMilliseconds"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCMinutes"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCMonth"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCSeconds"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getVarDate"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getYear"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_parse"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setDate"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setFullYear"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setHours"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setMinutes"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setMilliseconds"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setMonth"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setSeconds"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setTime"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCDate"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCFullYear"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCHours"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCMinutes"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCMilliseconds"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCMonth"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCSeconds"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setYear"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toDateString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toGMTString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toLocaleDateString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toLocaleString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toLocaleTimeString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toTimeString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toUTCString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_UTC"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_valueOf"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Enumerator_atEnd"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Enumerator_item"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Enumerator_moveFirst"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Enumerator_moveNext"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Error_toString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Function_apply"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Function_call"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Function_toString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_CollectGarbage"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_decodeURI"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_decodeURIComponent"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_encodeURI"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_encodeURIComponent"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_escape"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_eval"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_GetObject"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_isNaN"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_isFinite"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_parseFloat"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_parseInt"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_ScriptEngine"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_ScriptEngineBuildVersion"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_ScriptEngineMajorVersion"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_ScriptEngineMinorVersion"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_unescape"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_abs"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_acos"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_asin"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_atan"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_atan2"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_ceil"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_cos"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_exp"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_floor"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_log"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_max"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_min"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_pow"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_random"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_round"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_sin"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_sqrt"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_tan"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toExponential"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toFixed"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toLocaleString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toPrecision"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_valueOf"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_hasOwnProperty"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_isPrototypeOf"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_propertyIsEnumerable"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_toLocaleString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_toString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_valueOf"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.RegExp_compile"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.RegExp_exec"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.RegExp_test"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.RegExp_toString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_anchor"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_big"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_blink"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_bold"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_charAt"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_charCodeAt"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_concat"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_fixed"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_fontcolor"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_fontsize"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_fromCharCode"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_indexOf"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_italics"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_lastIndexOf"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_link"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_localeCompare"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_match"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_replace"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_search"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_slice"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_small"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_split"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_strike"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_sub"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_substr"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_substring"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_sup"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toLocaleLowerCase"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toLocaleUpperCase"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toLowerCase"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toString"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toUpperCase"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_valueOf"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_dimensions"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_getItem"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_lbound"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_toArray"></member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_ubound"></member>
    <member name="T:Microsoft.JScript.JSConstructor">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.Attributes">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.DeclaringType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.GetCustomAttributes(System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="inherit">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="t">
            </param>
      <param name="inherit">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.GetMethodImplementationFlags">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.GetParameters">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="obj">
            </param>
      <param name="options">
            </param>
      <param name="binder">
            </param>
      <param name="parameters">
            </param>
      <param name="culture">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="options">
            </param>
      <param name="binder">
            </param>
      <param name="parameters">
            </param>
      <param name="culture">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.IsDefined(System.Type,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="type">
            </param>
      <param name="inherit">
            </param>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.MemberType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.MethodHandle">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.Name">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.ReflectedType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.JScriptCodeProvider">
      <summary>
          Proporciona acceso a instancias del generador de código y del compilador de código de JScript.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JScriptCodeProvider.#ctor"></member>
    <member name="M:Microsoft.JScript.JScriptCodeProvider.CreateCompiler">
      <summary>
          Proporciona acceso a instancias del generador de código y del compilador de código de JScript.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JScriptCodeProvider.CreateGenerator">
      <summary>
          Proporciona acceso a instancias del generador de código y del compilador de código de JScript.
        </summary>
    </member>
    <member name="P:Microsoft.JScript.JScriptCodeProvider.FileExtension">
      <summary>
          Proporciona acceso a instancias del generador de código y del compilador de código de JScript.
        </summary>
    </member>
    <member name="T:Microsoft.JScript.JScriptException">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor"></member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor(Microsoft.JScript.JSError)">
      <summary>
        </summary>
      <param name="errorNumber">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        </summary>
      <param name="info">
            </param>
      <param name="context">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor(System.String)"></member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor(System.String,System.Exception)"></member>
    <member name="P:Microsoft.JScript.JScriptException.Column">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Description">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.EndColumn">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.EndLine">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.ErrorNumber">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="P:Microsoft.JScript.JScriptException.Line">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.LineText"></member>
    <member name="P:Microsoft.JScript.JScriptException.Message"></member>
    <member name="P:Microsoft.JScript.JScriptException.Microsoft#Vsa#IVsaError#Description"></member>
    <member name="P:Microsoft.JScript.JScriptException.Microsoft#Vsa#IVsaError#Number"></member>
    <member name="P:Microsoft.JScript.JScriptException.Number"></member>
    <member name="P:Microsoft.JScript.JScriptException.Severity"></member>
    <member name="P:Microsoft.JScript.JScriptException.SourceItem"></member>
    <member name="P:Microsoft.JScript.JScriptException.SourceMoniker"></member>
    <member name="P:Microsoft.JScript.JScriptException.StackTrace"></member>
    <member name="P:Microsoft.JScript.JScriptException.StartColumn"></member>
    <member name="T:Microsoft.JScript.JSError">
      <summary>
          Contiene los códigos de error asociados a los mensajes de error de JScript.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoError">
      <summary>
          0
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCall">
      <summary>
          Argumento o llamada a procedimiento no válidos.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OutOfMemory">
      <summary>
          Memoria insuficiente.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeMismatch">
      <summary>
          No coinciden los tipos.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OutOfStack">
      <summary>
          Espacio de pila insuficiente.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InternalError">
      <summary>
          Se ha producido un error interno.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FileNotFound">
      <summary>
          Archivo no encontrado.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedObject">
      <summary>
          Se requiere un objeto.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CantCreateObject">
      <summary>
          No se puede crear el objeto.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OLENoPropOrMethod">
      <summary>
          El objeto no admite esta propiedad o método.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ActionNotSupported">
      <summary>
          El objeto no admite esta acción.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotCollection">
      <summary>
          Este objeto no es una colección.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SyntaxError">
      <summary>
          Se detectó un error de sintaxis.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoColon">
      <summary>
          Se espera ":".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoSemicolon">
      <summary>
          Se espera ";".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoLeftParen">
      <summary>
          Se espera "(".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightParen">
      <summary>
          Se espera "," o ")".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightBracket">
      <summary>
          Se espera "]".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoLeftCurly">
      <summary>
          Se espera "{".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightCurly">
      <summary>
          Se espera "}".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoIdentifier">
      <summary>
          Identificador esperado.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoEqual">
      <summary>
          Se espera "=".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalChar">
      <summary>
          Carácter no válido.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UnterminatedString">
      <summary>
          La constante de cadena no está completa.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoCommentEnd">
      <summary>
          El comentario no está completo.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadReturn">
      <summary>
          Instrucción Return fuera de la función.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadBreak">
      <summary>
          No puede tener break fuera del bucle.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadContinue">
      <summary>
          No puede tener continue fuera del bucle.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadHexDigit">
      <summary>
          Se esperaba un dígito hexadecimal.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoWhile">
      <summary>
          Se esperaba while.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadLabel">
      <summary>
          Ya se definió la etiqueta.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoLabel">
      <summary>
          No se encuentra la etiqueta.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DupDefault">
      <summary>
          
            default sólo puede aparecer una vez en una instrucción switch.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoMemberIdentifier">
      <summary>
          Identificador esperado o string.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoCcEnd">
      <summary>
          Se esperaba @end.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcOff">
      <summary>
          La compilación condicional está desactiva.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotConst">
      <summary>
          Se esperaba una constante.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoAt">
      <summary>
          Se esperaba @.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoCatch">
      <summary>
          Se esperaba catch.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidElse">
      <summary>
          La instrucción else no es válida; no se definió la instrucción if.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoComma">
      <summary>
          Se espera ",".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DupVisibility">
      <summary>
          El modificador de visibilidad ya se ha definido.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalVisibility">
      <summary>
          Modificador de visibilidad no válido.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadSwitch">
      <summary>
          Falta la instrucción case o default.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcInvalidEnd">
      <summary>
          La instrucción @end no es válida; no se definió la instrucción @if.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcInvalidElse">
      <summary>
          La instrucción @else no es válida; no se definió la instrucción @if.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcInvalidElif">
      <summary>
          La instrucción @elif no es válida; no se definió la instrucción @if.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ErrEOF">
      <summary>
          Se esperaban más caracteres de código fuente.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IncompatibleVisibility">
      <summary>
          Modificador de visibilidad no compatible.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ClassNotAllowed">
      <summary>
          No se permite la definición de clases en este contexto.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedCompileTimeConstant">
      <summary>
          Una expresión debe ser una constante en tiempo de compilación.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DuplicateName">
      <summary>
          Identificador en uso.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedType">
      <summary>
          Se espera un nombre de tipo.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotInsideClass">
      <summary>
          Sólo es válido dentro de una definición de clase.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidPositionDirective">
      <summary>
          Se descubrió una directiva de posición desconocida.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MustBeEOL">
      <summary>
          Es posible que la directiva no esté seguida por otro código en la misma línea.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.WrongDirective">
      <summary>
          Directiva del depurador incorrecta o posición incorrecta para la directiva.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotNestPositionDirective">
      <summary>
          La directiva de posición debe estar terminada antes de que se pueda iniciar otra.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CircularDefinition">
      <summary>
          Definición circular.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.Deprecated">
      <summary>
          Obsoleto.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalUseOfThis">
      <summary>
          No es válido utilizar this en el contexto actual.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotAccessible">
      <summary>
          No se puede tener acceso desde este ámbito.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotUseNameOfClass">
      <summary>
          Sólo una función de constructor puede tener el mismo nombre que la clase en la que aparece.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MustImplementMethod">
      <summary>
          Una class debe proporcionar la implementación.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedInterface">
      <summary>
          Se esperaba un nombre de interfaz.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UnreachableCatch">
      <summary>
          Nunca se alcanzará la cláusula Catch.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeCannotBeExtended">
      <summary>
          No se puede extender el tipo.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UndeclaredVariable">
      <summary>
          No se ha declarado la variable.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.VariableLeftUninitialized">
      <summary>
          El hecho de dejar variables sin inicializar es peligroso y ralentiza su uso. ¿Realmente desea dejar esta variable sin inicializar?
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.KeywordUsedAsIdentifier">
      <summary>
          "xxxx" es una nueva palabra reservada y no se debe utilizar como identificador.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotAllowedInSuperConstructorCall">
      <summary>
          No se permite en una llamada al constructor de clase super.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotMeantToBeCalledDirectly">
      <summary>
          No se debe llamar a este método directamente. Probablemente forma parte de una definición de propiedad.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.GetAndSetAreInconsistent">
      <summary>
          Los métodos get y set de esta propiedad no coinciden entre sí.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCustomAttribute">
      <summary>
          Una clase attribute personalizada se debe derivar de <see cref="T:System.Attribute" />.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCustomAttributeArgument">
      <summary>
          Sólo se permiten tipos primitivos en una lista de argumentos de constructor de atributo personalizada.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCustomAttributeClassOrCtor">
      <summary>
          Clase o constructor de atributo personalizado desconocido.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TooManyParameters">
      <summary>
          Hay demasiados parámetros reales. Se omitirán los parámetros de exceso.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AmbiguousBindingBecauseOfWith">
      <summary>
          La instrucción With utiliza este nombre de forma ambigua.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AmbiguousBindingBecauseOfEval">
      <summary>
          La presencia de Eval convierte el uso de este nombre en ambiguo.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoSuchMember">
      <summary>
          Los objetos de este tipo no tienen tal miembro.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ItemNotAllowedOnExpandoClass">
      <summary>
          No se puede definir el elemento de propiedad en una clase <see cref="T:Microsoft.JScript.Expando" />. Este elemento se reserva para los campos <see cref="T:Microsoft.JScript.Expando" />.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MethodNotAllowedOnExpandoClass">
      <summary>
          No se pueden definir get_Item o set_Item en una clase <see cref="T:Microsoft.JScript.Expando" />. Los métodos están reservados para los campos <see cref="T:Microsoft.JScript.Expando" />.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MethodClashOnExpandoSuperClass">
      <summary>
          Una clase base que define get_Item o set_Item no puede crear la clase <see cref="T:Microsoft.JScript.Expando" />. Los métodos están reservados para los campos <see cref="T:Microsoft.JScript.Expando" />.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BaseClassIsExpandoAlready">
      <summary>
          Ya hay una clase base marcada como <see cref="T:Microsoft.JScript.Expando" />; la especificación actual se omitirá.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AbstractCannotBePrivate">
      <summary>
          Un método abstract no puede ser privado.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotIndexable">
      <summary>
          Los objetos de este tipo no son indizables.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticMissingInStaticInit">
      <summary>
          El inicializador estático debe especificar la palabra clave static.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MissingConstructForAttributes">
      <summary>
          La lista de atributos no se aplica al contexto actual.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OnlyClassesAllowed">
      <summary>
          Sólo se permiten clases dentro de package.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoClassShouldNotImpleEnumerable">
      <summary>
          
            La clase <see cref="T:Microsoft.JScript.Expando" /> no debe implementar IEnumerable ni GetEnumerator. La interfaz está implícitamente definida en las clases <see cref="T:Microsoft.JScript.Expando" />.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonCLSCompliantMember">
      <summary>
          El miembro especificado no es compatible con CLS.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotDeletable">
      <summary>
          No se pueden eliminar "xxxx".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PackageExpected">
      <summary>
          Se esperaba un nombre de paquete.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UselessExpression">
      <summary>
          La expresión no tiene efecto.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.HidesParentMember">
      <summary>
          
            La clase base ya contiene un miembro con este nombre.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotChangeVisibility">
      <summary>
          No se puede cambiar la especificación de visibilidad de un método base.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.HidesAbstractInBase">
      <summary>
          El método oculta abstract en una clase base.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NewNotSpecifiedInMethodDeclaration">
      <summary>
          Un método coincide con un método en una clase base. Debe especificar override o hide.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MethodInBaseIsNotVirtual">
      <summary>
          Se omite un método de una clase base que sea final o no virtualoverride. Especifique hide.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoMethodInBaseToNew">
      <summary>
          No hay ningún miembro en una clase base para especificar como hide.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DifferentReturnTypeFromBase">
      <summary>
          El método de la clase base tiene un tipo de valor devuelto diferente.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ClashWithProperty">
      <summary>
          Conflictos con la propiedad.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OverrideAndHideUsedTogether">
      <summary>
          No se pueden utilizar juntos override e hide en una declaración de miembro.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidLanguageOption">
      <summary>
          Debe especificar la opción de lenguaje "fast" o "versionSafe".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoMethodInBaseToOverride">
      <summary>
          No hay ningún miembro en una clase base para especificar como override.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotValidForConstructor">
      <summary>
          No es válido para un constructor.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotReturnValueFromVoidFunction">
      <summary>
          No puede devolver ningún valor a partir de una función void o constructor.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AmbiguousMatch">
      <summary>
          Varios métodos o propiedades coinciden con esta lista de parámetros.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AmbiguousConstructorCall">
      <summary>
          Varios constructores coinciden con esta lista de parámetros.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SuperClassConstructorNotAccessible">
      <summary>
          No se tiene acceso al constructor de superclase desde este ámbito.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OctalLiteralsAreDeprecated">
      <summary>
          Los literales octales se dejan de utilizar.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.VariableMightBeUnitialized">
      <summary>
          La variable podría no inicializarse.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotOKToCallSuper">
      <summary>
          No es válido para llamar a un constructor super desde esta ubicación.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalUseOfSuper">
      <summary>
          No es válido utilizar la palabra clave super de esta forma.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadWayToLeaveFinally">
      <summary>
          Es lento y potencialmente confuso dejar un bloque finally de esta forma.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoCommaOrTypeDefinitionError">
      <summary>
          Se espera "," o la declaración de tipo no válida; escriba" &lt;Identificador&gt;: &lt;Tipo&gt;" pero no" &lt;Tipo&gt; &lt;identificador&gt;".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AbstractWithBody">
      <summary>
          Una función abstracta no puede tener cuerpo.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightParenOrComma">
      <summary>
          Se espera "," o ")".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightBracketOrComma">
      <summary>
          Se espera "," o "]".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpressionExpected">
      <summary>
          Expresión esperada.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UnexpectedSemicolon">
      <summary>
          Inesperado ";".
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TooManyTokensSkipped">
      <summary>
          Se han omitido demasiados símbolos (token) en el proceso de recuperación de errores. El archivo no puede ser un archivo de JScript .NET.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadVariableDeclaration">
      <summary>
          Posible declaración de variable no válida, falta var o error de sintaxis desconocido.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadFunctionDeclaration">
      <summary>
          Posible declaración de función no válida, falta la función o no se reconoce el error de sintaxis.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadPropertyDeclaration">
      <summary>
          Declaración de propiedades no válida. El captador no debe tener argumentos y el establecedor deben tener un argumento.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DoesNotHaveAnAddress">
      <summary>
          La expresión no tiene ninguna dirección.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TooFewParameters">
      <summary>
          No se han proporcionado todos los parámetros necesarios.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UselessAssignment">
      <summary>
          La asignación crea una propiedad <see cref="T:Microsoft.JScript.Expando" /> que no se tiene en cuenta.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SuspectAssignment">
      <summary>
          ¿Realmente desea escribir una asignación aquí?
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SuspectSemicolon">
      <summary>
          ¿Realmente desea tener una instrucción vacía para esta bifurcación de la instrucción if?
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ImpossibleConversion">
      <summary>
          La conversión especificada no es posible.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FinalPrecludesAbstract">
      <summary>
          
            final y abstract no se pueden utilizar conjuntamente.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedInstance">
      <summary>
          Debe ser una instancia.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotBeAbstract">
      <summary>
          No puede ser abstract a menos que la clase se marque como abstract.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidBaseTypeForEnum">
      <summary>
          
            El tipo base de una enum debe ser un tipo integral primitivo.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotInstantiateAbstractClass">
      <summary>
          No es posible construir una instancia de una clase abstract.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ArrayMayBeCopied">
      <summary>
          Asignar una matriz de JScript a <see cref="T:System.Array" /> puede provocar que se copie la matriz.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AbstractCannotBeStatic">
      <summary>
          Los métodos static no pueden ser abstract.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticIsAlreadyFinal">
      <summary>
          Los métodos estáticos no pueden ser final.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticMethodsCannotOverride">
      <summary>
          Los métodos static no pueden reemplazar los métodos de clase base.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticMethodsCannotHide">
      <summary>
          Los métodos static no pueden ocultar los métodos de clase base.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoPrecludesOverride">
      <summary>
          
            Los métodos <see cref="T:Microsoft.JScript.Expando" /> no pueden reemplazar los métodos de clase base.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalParamArrayAttribute">
      <summary>
          Una lista de argumentos de variable debe ser de un tipo de matriz.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoPrecludesAbstract">
      <summary>
          
            Los métodos <see cref="T:Microsoft.JScript.Expando" /> no pueden ser abstract.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ShouldBeAbstract">
      <summary>
          Una función sin un cuerpo debe ser abstract.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadModifierInInterface">
      <summary>
          Este modificador no se puede utilizar en un miembro de interfaz.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.VarIllegalInInterface">
      <summary>
          Las variables no se pueden declarar en una interfaz.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InterfaceIllegalInInterface">
      <summary>
          Las interfaces no se pueden declarar en interface.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoVarInEnum">
      <summary>
          
            Las declaraciones de miembro enum no deben utilizar la palabra clave var.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidImport">
      <summary>
          La instrucción de importación no es válida en este contexto.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.EnumNotAllowed">
      <summary>
          
            Definición de enum no permitida en este contexto.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCustomAttributeTarget">
      <summary>
          Este atributo no es válido para este tipo de declaración.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PackageInWrongContext">
      <summary>
          No se permite la definición de paquete en este contexto.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ConstructorMayNotHaveReturnType">
      <summary>
          Una función de constructor no puede tener ningún tipo de valor devuelto.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OnlyClassesAndPackagesAllowed">
      <summary>
          Sólo se permiten clases y paquetes dentro de una biblioteca.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidDebugDirective">
      <summary>
          Directiva de depuración no válida.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CustomAttributeUsedMoreThanOnce">
      <summary>
          Este tipo de atributo debe ser único.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NestedInstanceTypeCannotBeExtendedByStatic">
      <summary>
          Un tipo anidado no estático sólo se puede extender a un tipo anidado no estático en la misma class.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PropertyLevelAttributesMustBeOnGetter">
      <summary>
          Un atributo que se va a aplicar a una propiedad se debe especificar en el captador de la propiedad, si la hay.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadThrow">
      <summary>
          throw debe tener un argumento cuando no está dentro del bloque catch de una instrucción try.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ParamListNotLast">
      <summary>
          Una lista de argumentos variable debe ser el último argumento.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoSuchType">
      <summary>
          No se encontró el tipo. ¿Falta una referencia de ensamblado?
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadOctalLiteral">
      <summary>
          Literal octal incorrecto tratado como literal decimal.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InstanceNotAccessibleFromStatic">
      <summary>
          No se puede tener acceso a un miembro no estático desde un ámbito static.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticRequiresTypeName">
      <summary>
          Se debe tener acceso a un miembro estático con el nombre de clase.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonStaticWithTypeName">
      <summary>
          No se puede tener acceso a un miembro no estático con el nombre de clase.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoSuchStaticMember">
      <summary>
          El tipo no tiene un miembro static.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SuspectLoopCondition">
      <summary>
          ¿Realmente desea escribir una asignación aquí?
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpectedAssembly">
      <summary>
          Ensamblado esperado.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AssemblyAttributesMustBeGlobal">
      <summary>
          Los atributos personalizados del ensamblado no pueden formar parte de otra construcción.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoPrecludesStatic">
      <summary>
          
            Los métodos <see cref="T:Microsoft.JScript.Expando" /> no pueden ser static.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DuplicateMethod">
      <summary>
          Este método tiene el mismo nombre, tipos de parámetro y de valor devuelto que otro método de esta clase.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotAnExpandoFunction">
      <summary>
          Los miembros de clase utilizados como constructores se deben marcar como funciones <see cref="T:Microsoft.JScript.Expando" />.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotValidVersionString">
      <summary>
          No es una cadena de la versión válida.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExecutablesCannotBeLocalized">
      <summary>
          Los archivos ejecutables no se pueden adaptar y no deben tener referencia cultural.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StringConcatIsSlow">
      <summary>
          El operador más proporciona un medio lento de concatenar cadenas. En su lugar, considere la posibilidad de utilizar <see cref="T:System.Text.StringBuilder" />.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcInvalidInDebugger">
      <summary>
          Las directivas de compilación condicional y variables no se pueden utilizar en el depurador.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoMustBePublic">
      <summary>
          
            Los métodos <see cref="T:Microsoft.JScript.Expando" /> deben ser públicos.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DelegatesShouldNotBeExplicitlyConstructed">
      <summary>
          Los delegados no se deben construir explícitamente, use simplemente el nombre del método.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ImplicitlyReferencedAssemblyNotFound">
      <summary>
          El ensamblado al que se hace referencia depende de otro ensamblado al que no se hace referencia o que no se pudo encontrar.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PossibleBadConversion">
      <summary>
          Esta conversión puede fallar en tiempo de ejecución.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PossibleBadConversionFromString">
      <summary>
          Convertir una cadena en un número o booleano es un proceso lento y puede fallar en tiempo de ejecución.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidResource">
      <summary>
          Éste no es un archivo .resources válido.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.WrongUseOfAddressOf">
      <summary>
          La dirección del operador sólo se puede utilizar en una lista de argumentos.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonCLSCompliantType">
      <summary>
          El tipo especificado no es compatible con CLS.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MemberTypeCLSCompliantMismatch">
      <summary>
          No se puede marcar el miembro de clase como compatible con CLS porque la clase no está marcada como CLS.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeAssemblyCLSCompliantMismatch">
      <summary>
          No se puede marcar el tipo como compatible con CLS porque el ensamblado no está marcado como CLS.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IncompatibleAssemblyReference">
      <summary>
          El ensamblado al que se hace referencia no es compatible.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidAssemblyKeyFile">
      <summary>
          Se ha utilizado un archivo de claves de ensamblado no válido.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeNameTooLong"></member>
    <member name="F:Microsoft.JScript.JSError.MemberInitializerCannotContainFuncExpr">
      <summary>
          Un inicializador de miembro no puede contener una expresión de función.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CantAssignThis">
      <summary>
          No puede asignar a this.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NumberExpected">
      <summary>
          Se espera un número.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FunctionExpected">
      <summary>
          Se esperaba una función.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotAssignToFunctionResult">
      <summary>
          No se puede asignar al resultado de una función.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StringExpected">
      <summary>
          Se esperaba una cadena.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DateExpected">
      <summary>
          Se esperaba un objeto de fecha.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ObjectExpected">
      <summary>
          Se espera un objeto.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalAssignment">
      <summary>
          Asignación no válida.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UndefinedIdentifier">
      <summary>
          Identificador indefinido.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BooleanExpected">
      <summary>
          No se encontró ningún valor booleano.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.VBArrayExpected">
      <summary>
          Se esperaba VBArray.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.EnumeratorExpected">
      <summary>
          Se esperaba un objeto enumerador.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.RegExpExpected">
      <summary>
          Se esperaba un objeto de expresión regular.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.RegExpSyntax">
      <summary>
          Error de sintaxis en expresión regular.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UncaughtException">
      <summary>
          Excepción producida y no detectada.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidPrototype">
      <summary>
          Esta función no tiene ningún objeto prototipo válido.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.URIEncodeError">
      <summary>
          El URI que se desea codificar contiene un carácter no válido.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.URIDecodeError">
      <summary>
          El URI que desea descodificar no es una codificación válida.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FractionOutOfRange">
      <summary>
          El número de dígitos fraccionarios está fuera del intervalo.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PrecisionOutOfRange">
      <summary>
          La precisión está fuera del intervalo.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ArrayLengthConstructIncorrect">
      <summary>
          La longitud de la matriz debe ser un entero positivo finito.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ArrayLengthAssignIncorrect">
      <summary>
          A la longitud de la matriz se le debe asignar un número positivo finito.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedArrayObject">
      <summary>
          Un "|" no es un objeto de matriz. Se esperaba un objeto Array.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoConstructor">
      <summary>
          No existe tal constructor.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalEval">
      <summary>
          No se puede llamar a Eval a través de un alias.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotYetImplemented">
      <summary>
          Sin implementar todavía.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MustProvideNameForNamedParameter">
      <summary>
          No se puede proporcionar un nombre de parámetro con nombre null o vacío.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DuplicateNamedParameter">
      <summary>
          Nombre de parámetro con nombre duplicado.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MissingNameParameter">
      <summary>
          El nombre del parámetro con nombre especificado no es uno de los parámetros formales.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MoreNamedParametersThanArguments">
      <summary>
          No se han especificado suficientes argumentos. El número de nombres de parámetro no puede superar el número de argumentos pasados.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonSupportedInDebugger">
      <summary>
          La expresión no se puede evaluar en el depurador.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AssignmentToReadOnly">
      <summary>
          Asignación a un campo o propiedad de sólo lectura.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.WriteOnlyProperty">
      <summary>
          Propiedad a la que sólo puede asignar los valores.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IncorrectNumberOfIndices">
      <summary>
          El número de índices no coincide con el rango de la matriz.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.RefParamsNonSupportedInDebugger">
      <summary>
          No se puede llamar a métodos con parámetros ref en el depurador.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotCallSecurityMethodLateBound">
      <summary>
          No se puede llamar a los métodos de seguridad Deny, PermitOnly y Assert utilizando el enlace en tiempo de ejecución.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotUseStaticSecurityAttribute">
      <summary>
          JScript no admite atributos de seguridad estáticos.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonClsException"></member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalAborted">
      <summary>
          Evaluación de la función anulada.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalTimedout">
      <summary>
          Se superó el tiempo de espera de evaluación de la función.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalThreadSuspended">
      <summary>
          Error al evaluar la función. Subproceso suspendido.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalThreadSleepWaitJoin">
      <summary>
          Error al evaluar la función. El subproceso está inactivo, esperando en un objeto o esperando a que termine otro subproceso.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalBadThreadState">
      <summary>
          Error al evaluar la función, el subproceso no es correcto.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalBadThreadNotStarted">
      <summary>
          Error al evaluar la función y no se ha iniciado el subproceso.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoFuncEvalAllowed">
      <summary>
          Evaluación de función anulada. Para activar la evaluación de propiedad, vaya a la carpeta Depuración, en el cuadro de diálogo Opciones del menú Herramientas.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalBadLocation">
      <summary>
          No se puede realizar la evaluación de la función si se detiene en este punto el programa.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalWebMethod">
      <summary>
          No se puede llamar a un método Web en el depurador.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticVarNotAvailable">
      <summary>
          No existe ninguna variable estática disponible.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeObjectNotAvailable">
      <summary>
          No está disponible el objeto de tipo para este tipo.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExceptionFromHResult">
      <summary>
          Excepción de HRESULT.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SideEffectsDisallowed"></member>
    <member name="T:Microsoft.JScript.JSField">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JSField.#ctor">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.JSField.Attributes">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.DeclaringType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.FieldHandle">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.FieldType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSField.GetCustomAttributes(System.Boolean)"></member>
    <member name="M:Microsoft.JScript.JSField.GetCustomAttributes(System.Type,System.Boolean)"></member>
    <member name="M:Microsoft.JScript.JSField.IsDefined(System.Type,System.Boolean)"></member>
    <member name="P:Microsoft.JScript.JSField.MemberType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.Name">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.ReflectedType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.JSFieldInfo">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.Attributes">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.DeclaringType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.FieldHandle">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.FieldType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="inherit">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="t">
            </param>
      <param name="inherit">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.GetValue(System.Object)"></member>
    <member name="M:Microsoft.JScript.JSFieldInfo.IsDefined(System.Type,System.Boolean)"></member>
    <member name="P:Microsoft.JScript.JSFieldInfo.MemberType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.Name">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.ReflectedType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)"></member>
    <member name="T:Microsoft.JScript.JSFunctionAttribute">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JSFunctionAttribute.#ctor(Microsoft.JScript.JSFunctionAttributeEnum)">
      <summary>
        </summary>
      <param name="value">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSFunctionAttribute.#ctor(Microsoft.JScript.JSFunctionAttributeEnum,Microsoft.JScript.JSBuiltin)">
      <summary>
        </summary>
      <param name="value">
            </param>
      <param name="builtinFunction">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSFunctionAttribute.GetAttributeValue">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.JSFunctionAttributeEnum">
      <summary>
          Se utiliza con el atributo personalizado JSFunctionAttribute para anotar las convenciones de llamada de las funciones generadas por el compilador de JScript. Los parámetros asociados con <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasArguments" />, <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasEngine" /> y <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasThisObject" /> son implícitos y los proporciona automáticamente el motor en tiempo de ejecución de JScript cuando se llama a la función desde el código de JScript.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.None">
      <summary>
          Método normal de .NET sin convenciones de llamada especiales. Normalmente no se utiliza ya que en este caso que no se emite JSFunctionAttribute.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasArguments">
      <summary>
          El tercer parámetro de la función es del tipo Object. El llamador debe pasar un objeto que implemente el objeto de argumentos de JScript; normalmente es una instancia de <see cref="T:Microsoft.JScript.ArgumentsObject" />. 
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasThisObject">
      <summary>
          El primer parámetro de la función es del tipo Object. El llamador debe pasar una instancia del objeto que representa el objeto de JScript para la función.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.IsNested">
      <summary>
          Se anida en otra función de JScript.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasStackFrame">
      <summary>
          Copia las variables locales en un objeto de marco de pila mantenido por el motor en tiempo de ejecución de JScript antes de realizar una llamada. Vuelve a copiar las variables del objeto de marco de pila en los valores locales cuando el control se devuelve a la función.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasVarArgs">
      <summary>
          La función toma un número variable de argumentos. El último parámetro es de matriz de tipos de Object, que contiene los argumentos que se especifican explícitamente.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasEngine">
      <summary>
          El segundo parámetro de la función es del tipo <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />. El llamador debe pasar una instancia del objeto <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />, del que la función puede recuperar la infraestructura en tiempo de ejecución.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.IsExpandoMethod">
      <summary>
          Método expando Modifier definido en una clase. 
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.IsInstanceNestedClassConstructor">
      <summary>
          Constructor para una clase de instancia anidada. El primer parámetro de la función es una instancia de la clase principal.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.ClassicFunction">
      <summary>
          Agregado que establece <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasArguments" />, <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasEngine" /> y <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasThisObject" />.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.NestedFunction">
      <summary>
          No se utiliza.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.ClassicNestedFunction">
      <summary>
          Agregado que establece <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.ClassicFunction" /> y <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.NestedFunction" />.
        </summary>
    </member>
    <member name="T:Microsoft.JScript.JSLocalField">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JSLocalField.#ctor(System.String,System.RuntimeTypeHandle,System.Int32)">
      <summary>
        </summary>
      <param name="name">
            </param>
      <param name="handle">
            </param>
      <param name="slotNumber">
            </param>
    </member>
    <member name="P:Microsoft.JScript.JSLocalField.FieldType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSLocalField.GetValue(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="obj">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSLocalField.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
      <summary>
        </summary>
      <param name="obj">
            </param>
      <param name="value">
            </param>
      <param name="invokeAttr">
            </param>
      <param name="binder">
            </param>
      <param name="locale">
            </param>
    </member>
    <member name="T:Microsoft.JScript.JSMethod">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.GetBaseDefinition">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.GetCustomAttributes(System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="inherit">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="t">
            </param>
      <param name="inherit">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.GetMethodImplementationFlags"></member>
    <member name="M:Microsoft.JScript.JSMethod.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)"></member>
    <member name="M:Microsoft.JScript.JSMethod.IsDefined(System.Type,System.Boolean)"></member>
    <member name="P:Microsoft.JScript.JSMethod.MemberType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethod.MethodHandle">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethod.ReflectedType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethod.ReturnTypeCustomAttributes">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.JSMethodInfo">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.Attributes">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.DeclaringType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetBaseDefinition">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetCustomAttributes(System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="inherit">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="type">
            </param>
      <param name="inherit">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetMethodImplementationFlags"></member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetParameters"></member>
    <member name="M:Microsoft.JScript.JSMethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)"></member>
    <member name="M:Microsoft.JScript.JSMethodInfo.IsDefined(System.Type,System.Boolean)"></member>
    <member name="P:Microsoft.JScript.JSMethodInfo.MemberType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.MethodHandle">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.Name">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.ReflectedType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.ReturnType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.ReturnTypeCustomAttributes">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.ToString"></member>
    <member name="T:Microsoft.JScript.JSObject">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JSObject.#ctor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JSObject.AddField(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
    </member>
    <member name="F:Microsoft.JScript.JSObject.field_table"></member>
    <member name="M:Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
      <param name="bindingAttr">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="bindingAttr">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)">
      <summary>
        </summary>
      <param name="name">
            </param>
      <param name="value">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
      <param name="method">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)"></member>
    <member name="M:Microsoft.JScript.JSObject.ToString"></member>
    <member name="T:Microsoft.JScript.JSParser">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JSParser.#ctor(Microsoft.JScript.Context)">
      <summary>
        </summary>
      <param name="context">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSParser.Parse">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSParser.ParseEvalBody">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.JSPrototypeObject">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSPrototypeObject.constructor">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.JSScanner">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.#ctor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.#ctor(Microsoft.JScript.Context)">
      <summary>
        </summary>
      <param name="sourceContext">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetCurrentLine">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetCurrentPosition(System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="absolute">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetNextToken">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetSourceCode">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetStartLinePosition">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetStringLiteral">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GotEndOfLine">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.IsKeyword(Microsoft.JScript.JSToken)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="token">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.IsOperator(Microsoft.JScript.JSToken)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="token">
            </param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.SetAuthoringMode(System.Boolean)"></member>
    <member name="M:Microsoft.JScript.JSScanner.SetSource(Microsoft.JScript.Context)"></member>
    <member name="M:Microsoft.JScript.JSScanner.SkipMultiLineComment"></member>
    <member name="T:Microsoft.JScript.JSToken">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.None"></member>
    <member name="F:Microsoft.JScript.JSToken.EndOfFile"></member>
    <member name="F:Microsoft.JScript.JSToken.If"></member>
    <member name="F:Microsoft.JScript.JSToken.For"></member>
    <member name="F:Microsoft.JScript.JSToken.Do"></member>
    <member name="F:Microsoft.JScript.JSToken.While"></member>
    <member name="F:Microsoft.JScript.JSToken.Continue"></member>
    <member name="F:Microsoft.JScript.JSToken.Break">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Return"></member>
    <member name="F:Microsoft.JScript.JSToken.Import"></member>
    <member name="F:Microsoft.JScript.JSToken.With"></member>
    <member name="F:Microsoft.JScript.JSToken.Switch"></member>
    <member name="F:Microsoft.JScript.JSToken.Throw"></member>
    <member name="F:Microsoft.JScript.JSToken.Try"></member>
    <member name="F:Microsoft.JScript.JSToken.Package"></member>
    <member name="F:Microsoft.JScript.JSToken.Internal"></member>
    <member name="F:Microsoft.JScript.JSToken.Abstract">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Public"></member>
    <member name="F:Microsoft.JScript.JSToken.Static"></member>
    <member name="F:Microsoft.JScript.JSToken.Private"></member>
    <member name="F:Microsoft.JScript.JSToken.Protected"></member>
    <member name="F:Microsoft.JScript.JSToken.Final"></member>
    <member name="F:Microsoft.JScript.JSToken.Event"></member>
    <member name="F:Microsoft.JScript.JSToken.Var"></member>
    <member name="F:Microsoft.JScript.JSToken.Const"></member>
    <member name="F:Microsoft.JScript.JSToken.Class"></member>
    <member name="F:Microsoft.JScript.JSToken.Function"></member>
    <member name="F:Microsoft.JScript.JSToken.LeftCurly"></member>
    <member name="F:Microsoft.JScript.JSToken.Semicolon"></member>
    <member name="F:Microsoft.JScript.JSToken.Null"></member>
    <member name="F:Microsoft.JScript.JSToken.True"></member>
    <member name="F:Microsoft.JScript.JSToken.False"></member>
    <member name="F:Microsoft.JScript.JSToken.This"></member>
    <member name="F:Microsoft.JScript.JSToken.Identifier"></member>
    <member name="F:Microsoft.JScript.JSToken.StringLiteral"></member>
    <member name="F:Microsoft.JScript.JSToken.IntegerLiteral"></member>
    <member name="F:Microsoft.JScript.JSToken.NumericLiteral"></member>
    <member name="F:Microsoft.JScript.JSToken.LeftParen"></member>
    <member name="F:Microsoft.JScript.JSToken.LeftBracket"></member>
    <member name="F:Microsoft.JScript.JSToken.AccessField">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.FirstOp"></member>
    <member name="F:Microsoft.JScript.JSToken.LogicalNot"></member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseNot">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Delete"></member>
    <member name="F:Microsoft.JScript.JSToken.Void"></member>
    <member name="F:Microsoft.JScript.JSToken.Typeof"></member>
    <member name="F:Microsoft.JScript.JSToken.Increment"></member>
    <member name="F:Microsoft.JScript.JSToken.Decrement"></member>
    <member name="F:Microsoft.JScript.JSToken.FirstBinaryOp"></member>
    <member name="F:Microsoft.JScript.JSToken.Plus"></member>
    <member name="F:Microsoft.JScript.JSToken.Minus"></member>
    <member name="F:Microsoft.JScript.JSToken.LogicalOr"></member>
    <member name="F:Microsoft.JScript.JSToken.LogicalAnd"></member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseOr">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseXor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseAnd">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Equal"></member>
    <member name="F:Microsoft.JScript.JSToken.NotEqual"></member>
    <member name="F:Microsoft.JScript.JSToken.StrictEqual"></member>
    <member name="F:Microsoft.JScript.JSToken.StrictNotEqual"></member>
    <member name="F:Microsoft.JScript.JSToken.GreaterThan"></member>
    <member name="F:Microsoft.JScript.JSToken.LessThan"></member>
    <member name="F:Microsoft.JScript.JSToken.LessThanEqual"></member>
    <member name="F:Microsoft.JScript.JSToken.GreaterThanEqual"></member>
    <member name="F:Microsoft.JScript.JSToken.LeftShift"></member>
    <member name="F:Microsoft.JScript.JSToken.RightShift"></member>
    <member name="F:Microsoft.JScript.JSToken.UnsignedRightShift"></member>
    <member name="F:Microsoft.JScript.JSToken.Multiply"></member>
    <member name="F:Microsoft.JScript.JSToken.Divide"></member>
    <member name="F:Microsoft.JScript.JSToken.Modulo"></member>
    <member name="F:Microsoft.JScript.JSToken.LastPPOperator"></member>
    <member name="F:Microsoft.JScript.JSToken.Instanceof"></member>
    <member name="F:Microsoft.JScript.JSToken.In"></member>
    <member name="F:Microsoft.JScript.JSToken.Assign">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.PlusAssign"></member>
    <member name="F:Microsoft.JScript.JSToken.MinusAssign"></member>
    <member name="F:Microsoft.JScript.JSToken.MultiplyAssign"></member>
    <member name="F:Microsoft.JScript.JSToken.DivideAssign"></member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseAndAssign">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseOrAssign">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseXorAssign">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.ModuloAssign"></member>
    <member name="F:Microsoft.JScript.JSToken.LeftShiftAssign"></member>
    <member name="F:Microsoft.JScript.JSToken.RightShiftAssign"></member>
    <member name="F:Microsoft.JScript.JSToken.UnsignedRightShiftAssign"></member>
    <member name="F:Microsoft.JScript.JSToken.LastAssign"></member>
    <member name="F:Microsoft.JScript.JSToken.LastBinaryOp"></member>
    <member name="F:Microsoft.JScript.JSToken.ConditionalIf"></member>
    <member name="F:Microsoft.JScript.JSToken.Colon"></member>
    <member name="F:Microsoft.JScript.JSToken.Comma"></member>
    <member name="F:Microsoft.JScript.JSToken.LastOp"></member>
    <member name="F:Microsoft.JScript.JSToken.Case">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Catch">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Debugger"></member>
    <member name="F:Microsoft.JScript.JSToken.Default"></member>
    <member name="F:Microsoft.JScript.JSToken.Else"></member>
    <member name="F:Microsoft.JScript.JSToken.Export"></member>
    <member name="F:Microsoft.JScript.JSToken.Extends"></member>
    <member name="F:Microsoft.JScript.JSToken.Finally"></member>
    <member name="F:Microsoft.JScript.JSToken.Get"></member>
    <member name="F:Microsoft.JScript.JSToken.Implements"></member>
    <member name="F:Microsoft.JScript.JSToken.Interface"></member>
    <member name="F:Microsoft.JScript.JSToken.New"></member>
    <member name="F:Microsoft.JScript.JSToken.Set"></member>
    <member name="F:Microsoft.JScript.JSToken.Super"></member>
    <member name="F:Microsoft.JScript.JSToken.RightParen"></member>
    <member name="F:Microsoft.JScript.JSToken.RightCurly"></member>
    <member name="F:Microsoft.JScript.JSToken.RightBracket"></member>
    <member name="F:Microsoft.JScript.JSToken.PreProcessorConstant"></member>
    <member name="F:Microsoft.JScript.JSToken.Comment"></member>
    <member name="F:Microsoft.JScript.JSToken.UnterminatedComment"></member>
    <member name="F:Microsoft.JScript.JSToken.Assert">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Boolean">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Byte">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Char">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Decimal"></member>
    <member name="F:Microsoft.JScript.JSToken.Double"></member>
    <member name="F:Microsoft.JScript.JSToken.DoubleColon"></member>
    <member name="F:Microsoft.JScript.JSToken.Enum"></member>
    <member name="F:Microsoft.JScript.JSToken.Ensure"></member>
    <member name="F:Microsoft.JScript.JSToken.Float"></member>
    <member name="F:Microsoft.JScript.JSToken.Goto"></member>
    <member name="F:Microsoft.JScript.JSToken.Int"></member>
    <member name="F:Microsoft.JScript.JSToken.Invariant"></member>
    <member name="F:Microsoft.JScript.JSToken.Long"></member>
    <member name="F:Microsoft.JScript.JSToken.Namespace"></member>
    <member name="F:Microsoft.JScript.JSToken.Native"></member>
    <member name="F:Microsoft.JScript.JSToken.Require"></member>
    <member name="F:Microsoft.JScript.JSToken.Sbyte"></member>
    <member name="F:Microsoft.JScript.JSToken.Short"></member>
    <member name="F:Microsoft.JScript.JSToken.Synchronized"></member>
    <member name="F:Microsoft.JScript.JSToken.Transient"></member>
    <member name="F:Microsoft.JScript.JSToken.Throws"></member>
    <member name="F:Microsoft.JScript.JSToken.ParamArray"></member>
    <member name="F:Microsoft.JScript.JSToken.Volatile"></member>
    <member name="F:Microsoft.JScript.JSToken.Ushort"></member>
    <member name="F:Microsoft.JScript.JSToken.Uint"></member>
    <member name="F:Microsoft.JScript.JSToken.Ulong"></member>
    <member name="F:Microsoft.JScript.JSToken.Use"></member>
    <member name="F:Microsoft.JScript.JSToken.EndOfLine"></member>
    <member name="F:Microsoft.JScript.JSToken.PreProcessDirective"></member>
    <member name="T:Microsoft.JScript.JSVariableField">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.JSVariableField.Attributes">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSVariableField.DeclaringType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.JSVariableField.FieldType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.JSVariableField.GetCustomAttributes(System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="inherit">
            </param>
    </member>
    <member name="P:Microsoft.JScript.JSVariableField.Name">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.LateBinding">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.#ctor(System.String)">
      <summary>
        </summary>
      <param name="name">
            </param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.#ctor(System.String,System.Object)">
      <summary>
        </summary>
      <param name="name">
            </param>
      <param name="obj">
            </param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.Call(System.Object[],System.Boolean,System.Boolean,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="arguments">
            </param>
      <param name="construct">
            </param>
      <param name="brackets">
            </param>
      <param name="engine">
            </param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.CallValue(System.Object,System.Object,System.Object[],System.Boolean,System.Boolean,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <param name="thisob">
            </param>
      <param name="val">
            </param>
      <param name="arguments">
            </param>
      <param name="construct">
            </param>
      <param name="brackets">
            </param>
      <param name="engine">
            </param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.CallValue2(System.Object,System.Object,System.Object[],System.Boolean,System.Boolean,Microsoft.JScript.Vsa.VsaEngine)"></member>
    <member name="M:Microsoft.JScript.LateBinding.Delete"></member>
    <member name="M:Microsoft.JScript.LateBinding.DeleteMember(System.Object,System.String)"></member>
    <member name="M:Microsoft.JScript.LateBinding.GetNonMissingValue"></member>
    <member name="M:Microsoft.JScript.LateBinding.GetValue2"></member>
    <member name="F:Microsoft.JScript.LateBinding.obj"></member>
    <member name="M:Microsoft.JScript.LateBinding.SetIndexedPropertyValueStatic(System.Object,System.Object[],System.Object)"></member>
    <member name="M:Microsoft.JScript.LateBinding.SetValue(System.Object)"></member>
    <member name="T:Microsoft.JScript.LenientArrayPrototype">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.concat">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.constructor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.join">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.pop">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.push">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.reverse">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.shift">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.slice">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.sort">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.splice">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.toLocaleString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.toString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.unshift">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.LenientBooleanPrototype">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientBooleanPrototype.constructor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientBooleanPrototype.toString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientBooleanPrototype.valueOf">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.LenientDateConstructor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDateConstructor.parse">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDateConstructor.UTC">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.LenientDatePrototype">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.constructor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getDate">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getDay">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getFullYear">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getHours">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getMilliseconds">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getMinutes">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getMonth">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getSeconds">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getTime">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getTimezoneOffset">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCDate">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCDay">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCFullYear">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCHours">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCMilliseconds">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCMinutes">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCMonth">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCSeconds">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getVarDate">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getYear">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setDate">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setFullYear">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setHours">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setMilliseconds">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setMinutes">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setMonth">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setSeconds">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setTime">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCDate">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCFullYear">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCHours">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCMilliseconds">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCMinutes">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCMonth">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCSeconds">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setYear">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toDateString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toGMTString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toLocaleDateString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toLocaleString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toLocaleTimeString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toTimeString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toUTCString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.valueOf">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.LenientEnumeratorPrototype">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.atEnd">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.constructor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.item">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.moveFirst">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.moveNext">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.LenientErrorPrototype">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientErrorPrototype.constructor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientErrorPrototype.name">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientErrorPrototype.toString">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.LenientFunctionPrototype">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientFunctionPrototype.apply">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientFunctionPrototype.call">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientFunctionPrototype.constructor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientFunctionPrototype.toString">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.LenientGlobalObject">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.ActiveXObject">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Array">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.boolean"></member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Boolean">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.byte"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.char"></member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Date">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.decimal"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.decodeURI"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.decodeURIComponent"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.double"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.encodeURI"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.encodeURIComponent"></member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Enumerator">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Error">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.escape"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.eval"></member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.EvalError">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.float"></member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Function">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.GetObject"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.Infinity"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.int"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.isFinite"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.isNaN"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.long"></member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Math">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.NaN"></member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Number">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Object">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.parseFloat"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.parseInt"></member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.RangeError">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.ReferenceError"></member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.RegExp"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.sbyte"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ScriptEngine"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ScriptEngineBuildVersion"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ScriptEngineMajorVersion"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ScriptEngineMinorVersion"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.short"></member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.String"></member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.SyntaxError"></member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.TypeError"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.uint"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ulong"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.undefined"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.unescape"></member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.URIError"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ushort"></member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.VBArray"></member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.void"></member>
    <member name="T:Microsoft.JScript.LenientMathObject">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.abs">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.acos">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.asin">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.atan">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.atan2">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.ceil">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.cos">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.E">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.exp">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.floor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.LN10">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.LN2">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.log">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.LOG10E">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.LOG2E">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.max">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.min">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.PI">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.pow">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.random">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.round">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.sin">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.sqrt">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.SQRT1_2">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.SQRT2">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.tan">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.LenientNumberPrototype">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.constructor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toExponential">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toFixed">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toLocaleString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toPrecision">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.valueOf">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.LenientObjectPrototype">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.constructor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.hasOwnProperty">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.isPrototypeOf">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.propertyIsEnumerable">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.toLocaleString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.toString">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.valueOf">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.LenientRegExpPrototype">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.compile">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.constructor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.exec">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.test">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.toString">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.LenientStringConstructor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringConstructor.fromCharCode">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.LenientStringPrototype">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.anchor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.big">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.blink">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.bold">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.charAt">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.charCodeAt">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.concat">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.constructor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.fixed">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.fontcolor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.fontsize">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.indexOf">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.italics">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.lastIndexOf">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.link">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.localeCompare">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.match">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.replace">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.search">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.slice">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.small">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.split">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.strike">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.sub">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.substr">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.substring"></member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.sup"></member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toLocaleLowerCase"></member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toLocaleUpperCase"></member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toLowerCase"></member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toString"></member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toUpperCase"></member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.valueOf"></member>
    <member name="T:Microsoft.JScript.LenientVBArrayPrototype">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.constructor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.dimensions">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.getItem">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.lbound">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.toArray">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.ubound">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.MathObject">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.MathObject.abs(System.Double)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="d">
            </param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.acos(System.Double)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="x">
            </param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.asin(System.Double)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="x">
            </param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.atan(System.Double)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="x">
            </param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.atan2(System.Double,System.Double)"></member>
    <member name="M:Microsoft.JScript.MathObject.ceil(System.Double)"></member>
    <member name="M:Microsoft.JScript.MathObject.cos(System.Double)"></member>
    <member name="F:Microsoft.JScript.MathObject.E"></member>
    <member name="M:Microsoft.JScript.MathObject.exp(System.Double)"></member>
    <member name="M:Microsoft.JScript.MathObject.floor(System.Double)"></member>
    <member name="F:Microsoft.JScript.MathObject.LN10"></member>
    <member name="F:Microsoft.JScript.MathObject.LN2"></member>
    <member name="M:Microsoft.JScript.MathObject.log(System.Double)"></member>
    <member name="F:Microsoft.JScript.MathObject.LOG10E"></member>
    <member name="F:Microsoft.JScript.MathObject.LOG2E"></member>
    <member name="M:Microsoft.JScript.MathObject.max(System.Object,System.Object,System.Object[])"></member>
    <member name="M:Microsoft.JScript.MathObject.min(System.Object,System.Object,System.Object[])"></member>
    <member name="F:Microsoft.JScript.MathObject.PI"></member>
    <member name="M:Microsoft.JScript.MathObject.pow(System.Double,System.Double)"></member>
    <member name="M:Microsoft.JScript.MathObject.random"></member>
    <member name="M:Microsoft.JScript.MathObject.round(System.Double)"></member>
    <member name="M:Microsoft.JScript.MathObject.sin(System.Double)"></member>
    <member name="M:Microsoft.JScript.MathObject.sqrt(System.Double)"></member>
    <member name="F:Microsoft.JScript.MathObject.SQRT1_2"></member>
    <member name="F:Microsoft.JScript.MathObject.SQRT2"></member>
    <member name="M:Microsoft.JScript.MathObject.tan(System.Double)"></member>
    <member name="T:Microsoft.JScript.MemberInfoInitializer">
      <summary>
          Inicializa instancias de <see cref="T:Microsoft.JScript.COMFieldInfo" />, <see cref="T:Microsoft.JScript.COMMethodInfo" /> y <see cref="T:Microsoft.JScript.COMPropertyInfo" /> con el nombre del miembro y un objeto que representa el valor almacenado en el miembro. El objeto se puede recuperar utilizando <see cref="M:Microsoft.JScript.MemberInfoInitializer.GetCOMMemberInfo" />.
        </summary>
    </member>
    <member name="M:Microsoft.JScript.MemberInfoInitializer.GetCOMMemberInfo">
      <summary>
          Devuelve el objeto pasado como parámetro <paramref name="COMMemberInfo" /> al método <see cref="M:Microsoft.JScript.MemberInfoInitializer.Initialize(System.String,Microsoft.JScript.COMMemberInfo)" />.
        </summary>
      <returns>
          Devuelve un objeto <see cref="T:Microsoft.JScript.COMMemberInfo" />.
        </returns>
    </member>
    <member name="M:Microsoft.JScript.MemberInfoInitializer.Initialize(System.String,Microsoft.JScript.COMMemberInfo)">
      <summary>
          Inicializa el objeto con el nombre del miembro y un objeto que representa el valor del miembro.
        </summary>
      <param name="name">
              Nombre del miembro.
            </param>
      <param name="dispatch">
              Instancia de <see cref="T:Microsoft.JScript.COMMemberInfo" /> que representa el valor del miembro.
            </param>
    </member>
    <member name="T:Microsoft.JScript.MemberInfoList">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.MethodInvoker">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.MethodInvoker.#ctor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.MethodInvoker.Invoke(System.Object,System.Object[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
      <param name="parameters">
            </param>
    </member>
    <member name="T:Microsoft.JScript.Missing">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.Missing.Value">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.Namespace">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Namespace.GetNamespace(System.String,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
      <param name="engine">
            </param>
    </member>
    <member name="T:Microsoft.JScript.NoContextException">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.NoContextException.#ctor"></member>
    <member name="M:Microsoft.JScript.NoContextException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.JScript.NoContextException.#ctor(System.String)"></member>
    <member name="M:Microsoft.JScript.NoContextException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.JScript.NotRecommended">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.NotRecommended.#ctor(System.String)">
      <summary>
        </summary>
      <param name="message">
            </param>
    </member>
    <member name="P:Microsoft.JScript.NotRecommended.IsError">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.NotRecommended.Message">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.NumberConstructor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.NumberConstructor.CreateInstance(System.Object[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="args">
            </param>
    </member>
    <member name="M:Microsoft.JScript.NumberConstructor.Invoke(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="arg">
            </param>
    </member>
    <member name="F:Microsoft.JScript.NumberConstructor.MAX_VALUE">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.NumberConstructor.MIN_VALUE"></member>
    <member name="F:Microsoft.JScript.NumberConstructor.NaN"></member>
    <member name="F:Microsoft.JScript.NumberConstructor.NEGATIVE_INFINITY"></member>
    <member name="F:Microsoft.JScript.NumberConstructor.POSITIVE_INFINITY"></member>
    <member name="T:Microsoft.JScript.NumberObject">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.NumberObject.#ctor(Microsoft.JScript.ScriptObject,System.Object)">
      <summary>
        </summary>
      <param name="parent">
            </param>
      <param name="value">
            </param>
    </member>
    <member name="M:Microsoft.JScript.NumberObject.GetType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.NumberPrototype">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.NumberPrototype.constructor">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.toExponential(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
      <param name="fractionDigits">
            </param>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.toFixed(System.Object,System.Double)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
      <param name="fractionDigits">
            </param>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.toLocaleString(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.toPrecision(System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.NumberPrototype.toString(System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.NumberPrototype.valueOf(System.Object)"></member>
    <member name="T:Microsoft.JScript.NumericBinary">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.NumericBinary.#ctor(System.Int32)">
      <summary>
        </summary>
      <param name="operatorTok">
            </param>
    </member>
    <member name="M:Microsoft.JScript.NumericBinary.DoOp(System.Object,System.Object,Microsoft.JScript.JSToken)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="v1">
            </param>
      <param name="v2">
            </param>
      <param name="operatorTok">
            </param>
    </member>
    <member name="M:Microsoft.JScript.NumericBinary.EvaluateNumericBinary(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="v1">
            </param>
      <param name="v2">
            </param>
    </member>
    <member name="T:Microsoft.JScript.NumericUnary">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.NumericUnary.#ctor(System.Int32)">
      <summary>
        </summary>
      <param name="operatorTok">
            </param>
    </member>
    <member name="M:Microsoft.JScript.NumericUnary.EvaluateUnary(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="v">
            </param>
    </member>
    <member name="T:Microsoft.JScript.ObjectConstructor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ObjectConstructor.ConstructObject">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.ObjectConstructor.CreateInstance(System.Object[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="args">
            </param>
    </member>
    <member name="M:Microsoft.JScript.ObjectConstructor.Invoke(System.Object[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="args">
            </param>
    </member>
    <member name="T:Microsoft.JScript.ObjectPrototype">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.ObjectPrototype.constructor">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.hasOwnProperty(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
      <param name="name">
            </param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.isPrototypeOf(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
      <param name="ob">
            </param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.propertyIsEnumerable(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
      <param name="name">
            </param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.toLocaleString(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.toString(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.valueOf(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
    </member>
    <member name="T:Microsoft.JScript.Override">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Override.#ctor">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.Package">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Package.JScriptPackage(System.String,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <param name="rootName">
            </param>
      <param name="engine">
            </param>
    </member>
    <member name="T:Microsoft.JScript.ParserException">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.Plus">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Plus.#ctor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Plus.DoOp(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="v1">
            </param>
      <param name="v2">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Plus.EvaluatePlus(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="v1">
            </param>
      <param name="v2">
            </param>
    </member>
    <member name="T:Microsoft.JScript.PostOrPrefixOperator">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.PostOrPrefixOperator.#ctor(System.Int32)">
      <summary>
        </summary>
      <param name="operatorTok">
            </param>
    </member>
    <member name="M:Microsoft.JScript.PostOrPrefixOperator.EvaluatePostOrPrefix(System.Object@)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="v">
            </param>
    </member>
    <member name="T:Microsoft.JScript.RangeErrorObject">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.ReferenceAttribute">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ReferenceAttribute.#ctor(System.String)">
      <summary>
        </summary>
      <param name="reference">
            </param>
    </member>
    <member name="F:Microsoft.JScript.ReferenceAttribute.reference">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.ReferenceErrorObject">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.RegExpConstructor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.RegExpConstructor.Construct(System.String,System.Boolean,System.Boolean,System.Boolean)"></member>
    <member name="M:Microsoft.JScript.RegExpConstructor.CreateInstance(System.Object[])"></member>
    <member name="P:Microsoft.JScript.RegExpConstructor.index">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.input">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.RegExpConstructor.Invoke(System.Object[])"></member>
    <member name="P:Microsoft.JScript.RegExpConstructor.lastIndex">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.lastMatch">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.lastParen">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.leftContext">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.rightContext">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.RegExpMatch">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.RegExpObject">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.global">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.ignoreCase">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.lastIndex">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.multiline">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.source">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.RegExpObject.ToString">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.RegExpPrototype">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.RegExpPrototype.compile(System.Object,System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
      <param name="source">
            </param>
      <param name="flags">
            </param>
    </member>
    <member name="P:Microsoft.JScript.RegExpPrototype.constructor">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.RegExpPrototype.exec(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
      <param name="input">
            </param>
    </member>
    <member name="M:Microsoft.JScript.RegExpPrototype.test(System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.RegExpPrototype.toString(System.Object)"></member>
    <member name="T:Microsoft.JScript.Relational">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Relational.#ctor(System.Int32)">
      <summary>
        </summary>
      <param name="operatorTok">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Relational.EvaluateRelational(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="v1">
            </param>
      <param name="v2">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Relational.JScriptCompare(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="v1">
            </param>
      <param name="v2">
            </param>
    </member>
    <member name="T:Microsoft.JScript.ReturnOutOfFinally">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ReturnOutOfFinally.#ctor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ReturnOutOfFinally.#ctor(System.String)"></member>
    <member name="M:Microsoft.JScript.ReturnOutOfFinally.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.JScript.Runtime">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Runtime.DoubleToInt64(System.Double)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="val">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Runtime.Equals(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="v1">
            </param>
      <param name="v2">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Runtime.UncheckedDecimalToInt64(System.Decimal)"></member>
    <member name="T:Microsoft.JScript.ScriptBlock">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.ScriptFunction">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.#ctor(Microsoft.JScript.ScriptObject,System.String)">
      <summary>
        </summary>
      <param name="parent">
            </param>
      <param name="name">
            </param>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.CreateInstance(System.Object[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="args">
            </param>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject"></member>
    <member name="F:Microsoft.JScript.ScriptFunction.ilength"></member>
    <member name="M:Microsoft.JScript.ScriptFunction.Invoke(System.Object,System.Object[])"></member>
    <member name="M:Microsoft.JScript.ScriptFunction.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])"></member>
    <member name="P:Microsoft.JScript.ScriptFunction.length">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.ScriptFunction.prototype">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.ToString"></member>
    <member name="T:Microsoft.JScript.ScriptObject">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.ScriptObject.engine"></member>
    <member name="M:Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMember(System.String,System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMembers(System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])"></member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.ScriptObject.GetParent"></member>
    <member name="M:Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])"></member>
    <member name="M:Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])"></member>
    <member name="P:Microsoft.JScript.ScriptObject.Item(System.Double)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="index">
            </param>
    </member>
    <member name="P:Microsoft.JScript.ScriptObject.Item(System.Int32)"></member>
    <member name="P:Microsoft.JScript.ScriptObject.Item(System.Object[])"></member>
    <member name="P:Microsoft.JScript.ScriptObject.Item(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
    </member>
    <member name="F:Microsoft.JScript.ScriptObject.parent"></member>
    <member name="P:Microsoft.JScript.ScriptObject.UnderlyingSystemType"></member>
    <member name="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)"></member>
    <member name="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)"></member>
    <member name="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)"></member>
    <member name="T:Microsoft.JScript.ScriptStream">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.#ctor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.ScriptStream.Error">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.ScriptStream.Out">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.PrintStackTrace">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.PrintStackTrace(System.Exception)">
      <summary>
        </summary>
      <param name="e">
            </param>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.Write(System.String)">
      <summary>
        </summary>
      <param name="str">
            </param>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.WriteLine(System.String)">
      <summary>
        </summary>
      <param name="str">
            </param>
    </member>
    <member name="T:Microsoft.JScript.SimpleHashtable">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.SimpleHashtable.#ctor(System.UInt32)">
      <summary>
        </summary>
      <param name="threshold">
            </param>
    </member>
    <member name="M:Microsoft.JScript.SimpleHashtable.GetEnumerator">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.SimpleHashtable.Item(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="key">
            </param>
    </member>
    <member name="M:Microsoft.JScript.SimpleHashtable.Remove(System.Object)">
      <summary>
        </summary>
      <param name="key">
            </param>
    </member>
    <member name="T:Microsoft.JScript.SourceState">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.SourceState.STATE_COLOR_NORMAL">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.SourceState.STATE_COLOR_COMMENT">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.SourceState.STATE_COLOR_STRING">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.StackFrame">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.StackFrame.closureInstance"></member>
    <member name="M:Microsoft.JScript.StackFrame.GetDefaultThisObject">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetField(System.String,System.Int32)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
      <param name="lexLevel">
            </param>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetGlobalScope">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
      <param name="bindingAttr">
            </param>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetMembers(System.Reflection.BindingFlags)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="bindingAttr">
            </param>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetMemberValue(System.String,System.Int32)"></member>
    <member name="F:Microsoft.JScript.StackFrame.localVars"></member>
    <member name="M:Microsoft.JScript.StackFrame.Microsoft#JScript#IActivationObject#GetLocalField(System.String)"></member>
    <member name="M:Microsoft.JScript.StackFrame.PushStackFrameForMethod(System.Object,Microsoft.JScript.JSLocalField[],Microsoft.JScript.Vsa.VsaEngine)"></member>
    <member name="M:Microsoft.JScript.StackFrame.PushStackFrameForStaticMethod(System.RuntimeTypeHandle,Microsoft.JScript.JSLocalField[],Microsoft.JScript.Vsa.VsaEngine)"></member>
    <member name="T:Microsoft.JScript.StrictEquality">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.StrictEquality.JScriptStrictEquals(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="v1">
            </param>
      <param name="v2">
            </param>
    </member>
    <member name="T:Microsoft.JScript.StringConstructor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.StringConstructor.CreateInstance(System.Object[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="args">
            </param>
    </member>
    <member name="M:Microsoft.JScript.StringConstructor.fromCharCode(System.Object[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="args">
            </param>
    </member>
    <member name="M:Microsoft.JScript.StringConstructor.Invoke(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="arg">
            </param>
    </member>
    <member name="T:Microsoft.JScript.StringObject">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.StringObject.#ctor(Microsoft.JScript.ScriptObject,System.String)">
      <summary>
        </summary>
      <param name="prototype">
            </param>
      <param name="value">
            </param>
    </member>
    <member name="M:Microsoft.JScript.StringObject.Equals(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="ob">
            </param>
    </member>
    <member name="M:Microsoft.JScript.StringObject.GetHashCode">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.StringObject.GetType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.StringObject.length">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.StringPrototype">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.anchor(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
      <param name="anchorName">
            </param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.big(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.blink(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.bold(System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.charAt(System.Object,System.Double)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.charCodeAt(System.Object,System.Double)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.concat(System.Object,System.Object[])"></member>
    <member name="P:Microsoft.JScript.StringPrototype.constructor">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.fixed(System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.fontcolor(System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.fontsize(System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.indexOf(System.Object,System.Object,System.Double)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.italics(System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.lastIndexOf(System.Object,System.Object,System.Double)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.link(System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.localeCompare(System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.match(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.replace(System.Object,System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.search(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.slice(System.Object,System.Double,System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.small(System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.split(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object,System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.strike(System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.sub(System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.substr(System.Object,System.Double,System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.substring(System.Object,System.Double,System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.sup(System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.toLocaleLowerCase(System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.toLocaleUpperCase(System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.toLowerCase(System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.toString(System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.toUpperCase(System.Object)"></member>
    <member name="M:Microsoft.JScript.StringPrototype.valueOf(System.Object)"></member>
    <member name="T:Microsoft.JScript.SuperTypeMembersSorter">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.SyntaxErrorObject">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.Throw">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Throw.JScriptThrow(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="value">
            </param>
    </member>
    <member name="T:Microsoft.JScript.TokenColor">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_TEXT">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_IDENTIFIER">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_KEYWORD">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_COMMENT">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_OPERATOR">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_NUMBER">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_STRING">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_CONDITIONAL_COMP">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.Try">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Try.JScriptExceptionValue(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="e">
            </param>
      <param name="engine">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Try.PushHandlerScope(Microsoft.JScript.Vsa.VsaEngine,System.String,System.Int32)">
      <summary>
        </summary>
      <param name="engine">
            </param>
      <param name="id">
            </param>
      <param name="scopeId">
            </param>
    </member>
    <member name="T:Microsoft.JScript.TypedArray">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.#ctor(System.Reflection.IReflect,System.Int32)">
      <summary>
        </summary>
      <param name="elementType">
            </param>
      <param name="rank">
            </param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.Equals(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="obj">
            </param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetField(System.String,System.Reflection.BindingFlags)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
      <param name="bindingAttr">
            </param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetFields(System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.TypedArray.GetHashCode"></member>
    <member name="M:Microsoft.JScript.TypedArray.GetMember(System.String,System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.TypedArray.GetMembers(System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.TypedArray.GetMethod(System.String,System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.TypedArray.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])"></member>
    <member name="M:Microsoft.JScript.TypedArray.GetMethods(System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.TypedArray.GetProperties(System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.TypedArray.GetProperty(System.String,System.Reflection.BindingFlags)"></member>
    <member name="M:Microsoft.JScript.TypedArray.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])"></member>
    <member name="M:Microsoft.JScript.TypedArray.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])"></member>
    <member name="M:Microsoft.JScript.TypedArray.ToString"></member>
    <member name="P:Microsoft.JScript.TypedArray.UnderlyingSystemType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.JScript.TypeErrorObject">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.Typeof">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Typeof.JScriptTypeof(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="value">
            </param>
    </member>
    <member name="T:Microsoft.JScript.TypeReflector">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
      <param name="bindingAttr">
            </param>
    </member>
    <member name="M:Microsoft.JScript.TypeReflector.GetMembers(System.Reflection.BindingFlags)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="bindingAttr">
            </param>
    </member>
    <member name="T:Microsoft.JScript.UnaryOp">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.UnaryOp.operand">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.URIErrorObject">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.VBArrayConstructor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.VBArrayConstructor.CreateInstance(System.Object[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="args">
            </param>
    </member>
    <member name="T:Microsoft.JScript.VBArrayObject">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.VBArrayObject.#ctor(Microsoft.JScript.VBArrayPrototype,System.Array)">
      <summary>
        </summary>
      <param name="parent">
            </param>
      <param name="array">
            </param>
    </member>
    <member name="T:Microsoft.JScript.VBArrayPrototype">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.VBArrayPrototype.constructor">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.dimensions(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.getItem(System.Object,System.Object[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
      <param name="args">
            </param>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.lbound(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
      <param name="dimension">
            </param>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.toArray(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="thisob">
            </param>
      <param name="engine">
            </param>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.ubound(System.Object,System.Object)"></member>
    <member name="T:Microsoft.JScript.VsaItem">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.VsaItem.flag">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.VsaItem.GetOption(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
    </member>
    <member name="F:Microsoft.JScript.VsaItem.isDirty">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.VsaItem.IsDirty">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.VsaItem.ItemType">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="F:Microsoft.JScript.VsaItem.name">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.VsaItem.Name">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.VsaItem.SetOption(System.String,System.Object)">
      <summary>
        </summary>
      <param name="name">
            </param>
      <param name="value">
            </param>
    </member>
    <member name="F:Microsoft.JScript.VsaItem.type">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.VsaItems">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.#ctor(Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <param name="engine">
            </param>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.Close">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.JScript.VsaItems.Count">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.CreateItem(System.String,Microsoft.Vsa.VsaItemType,Microsoft.Vsa.VsaItemFlag)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="name">
            </param>
      <param name="itemType">
            </param>
      <param name="itemFlag">
            </param>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.GetEnumerator">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:Microsoft.JScript.VsaItems.Item(System.Int32)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="index">
            </param>
    </member>
    <member name="P:Microsoft.JScript.VsaItems.Item(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="itemName">
            </param>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.Remove(System.Int32)"></member>
    <member name="M:Microsoft.JScript.VsaItems.Remove(System.String)"></member>
    <member name="T:Microsoft.JScript.VSAITEMTYPE2">
      <summary>
          La implementación de JScript acepta los valores de enumeración de <see cref="T:Microsoft.JScript.VSAITEMTYPE2" /> y rechaza los elementos <see cref="T:Microsoft.Vsa.VsaItemType" />. Para obtener más información, vea <see cref="M:Microsoft.JScript.IVsaScriptScope.AddItem(System.String,Microsoft.Vsa.VsaItemType)" />.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.None">
      <summary>
          No representa nada.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.HOSTOBJECT">
      <summary>
          Representa un objeto host.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.HOSTSCOPE">
      <summary>
          Representa el ámbito.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.HOSTSCOPEANDOBJECT">
      <summary>
          Representa tanto el ámbito como el objeto.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.SCRIPTSCOPE">
      <summary>
          Representa el ámbito de la secuencia de comandos.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.SCRIPTBLOCK">
      <summary>
          Representa el bloque de secuencia de comandos.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.STATEMENT">
      <summary>
          Representa una instrucción sencilla.
        </summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.EXPRESSION">
      <summary>
          Representa una expresión.
        </summary>
    </member>
    <member name="T:Microsoft.JScript.With">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.With.JScriptWith(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="withOb">
            </param>
      <param name="engine">
            </param>
    </member>
    <member name="T:Microsoft.JScript.Vsa.ResInfo">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.ResInfo.#ctor(System.String,System.Boolean)">
      <summary>
        </summary>
      <param name="resinfo">
            </param>
      <param name="isLinked">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.ResInfo.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
        </summary>
      <param name="filename">
            </param>
      <param name="name">
            </param>
      <param name="isPublic">
            </param>
      <param name="isLinked">
            </param>
    </member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.filename">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.fullpath">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.isLinked">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.isPublic">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.name">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.JScript.Vsa.VsaEngine">
      <summary>
          Implementa la interfaz <see cref="T:Microsoft.Vsa.IVsaEngine" />. 
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.#ctor"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.#ctor(System.Boolean)"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Clone(System.AppDomain)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="domain">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CompileEmpty">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.ConnectEvents">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngine">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScope(System.Boolean,System.String[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="fast">
            </param>
      <param name="assemblyNames">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScopeWithType(System.Boolean,System.String[],System.RuntimeTypeHandle)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="fast">
            </param>
      <param name="assemblyNames">
            </param>
      <param name="callingTypeHandle">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace(System.Boolean,System.String[],System.RuntimeTypeHandle,System.String)"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineWithType(System.RuntimeTypeHandle)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="callingTypeHandle">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.DisconnectEvents">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetAssembly">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetGlobalScope">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetItem(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="itemName">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetItemAtIndex(System.Int32)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="index">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetItemCount">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetMainScope">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetModule">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalArrayConstructor">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalObjectConstructor">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalRegExpConstructor">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.InitVsaEngine(System.String,Microsoft.Vsa.IVsaSite)">
      <summary>
        </summary>
      <param name="rootMoniker">
            </param>
      <param name="site">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Interrupt">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.IsValidIdentifier(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="ident">
            </param>
    </member>
    <member name="P:Microsoft.JScript.Vsa.VsaEngine.LenientGlobalObject">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.PopScriptObject">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.PushScriptObject(Microsoft.JScript.ScriptObject)">
      <summary>
        </summary>
      <param name="obj">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.RegisterEventSource(System.String)">
      <summary>
        </summary>
      <param name="name">
            </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Reset">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Restart">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Run(System.AppDomain)"></member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.RunEmpty">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.ScriptObjectStackTop">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.SetOutputStream(Microsoft.JScript.IMessageReceiver)">
      <summary>
        </summary>
      <param name="output">
            </param>
    </member>
    <member name="T:Microsoft.Vsa.BaseVsaEngine">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.AppDomain"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.ApplicationBase"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.applicationPath"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.Assembly"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.assemblyVersion"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.Close"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.Compile"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.compiledRootNamespace"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.DoClose"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.DoCompile"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.DoLoadSourceState(Microsoft.Vsa.IVsaPersistSite)"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.DoSaveCompiledState(System.Byte[]@,System.Byte[]@)"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.DoSaveSourceState(Microsoft.Vsa.IVsaPersistSite)"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.engineMoniker"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.engineName"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.engineSite"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.Error(Microsoft.Vsa.VsaError)"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.errorLocale"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.Evidence"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.executionEvidence"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.failedCompilation"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.genDebugInfo"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.GenerateDebugInfo"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.GetCustomOption(System.String)"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.GetOption(System.String)"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.haveCompiledState"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.InitNew"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.isClosed"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.IsCompiled"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.isDebugInfoSupported"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.IsDirty"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.isEngineCompiled"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.isEngineDirty"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.isEngineInitialized"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.isEngineRunning"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.IsRunning"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.IsValidIdentifier(System.String)"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.IsValidNamespaceName(System.String)"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.Items"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.Language"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.LCID"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.LoadCompiledState"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.loadedAssembly"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.LoadSourceState(Microsoft.Vsa.IVsaPersistSite)"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.Name"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.nameTable"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.Preconditions(Microsoft.Vsa.BaseVsaEngine.Pre)"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.Reset"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.ResetCompiledState"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.RevokeCache"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.RootMoniker"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.rootNamespace"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.RootNamespace"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.Run"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.SaveCompiledState(System.Byte[]@,System.Byte[]@)"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.SaveSourceState(Microsoft.Vsa.IVsaPersistSite)"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.scriptLanguage"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.SetCustomOption(System.String,System.Object)"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.SetOption(System.String,System.Object)"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.Site"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.startupClass"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.startupInstance"></member>
    <member name="M:Microsoft.Vsa.BaseVsaEngine.ValidateRootMoniker(System.String)"></member>
    <member name="P:Microsoft.Vsa.BaseVsaEngine.Version"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.vsaItems"></member>
    <member name="T:Microsoft.Vsa.BaseVsaEngine.Pre">
      <summary>
        </summary>
    </member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.Pre.None"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.Pre.EngineNotClosed"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.Pre.SupportForDebug"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.Pre.EngineCompiled"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.Pre.EngineRunning"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.Pre.EngineNotRunning"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.Pre.RootMonikerSet"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.Pre.RootMonikerNotSet"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.Pre.RootNamespaceSet"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.Pre.SiteSet"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.Pre.SiteNotSet"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.Pre.EngineInitialised"></member>
    <member name="F:Microsoft.Vsa.BaseVsaEngine.Pre.EngineNotInitialised"></member>
    <member name="T:Microsoft.Vsa.BaseVsaSite">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.Vsa.BaseVsaSite.#ctor"></member>
    <member name="P:Microsoft.Vsa.BaseVsaSite.Assembly"></member>
    <member name="P:Microsoft.Vsa.BaseVsaSite.DebugInfo"></member>
    <member name="M:Microsoft.Vsa.BaseVsaSite.GetCompiledState(System.Byte[]@,System.Byte[]@)"></member>
    <member name="M:Microsoft.Vsa.BaseVsaSite.GetEventSourceInstance(System.String,System.String)"></member>
    <member name="M:Microsoft.Vsa.BaseVsaSite.GetGlobalInstance(System.String)"></member>
    <member name="M:Microsoft.Vsa.BaseVsaSite.Notify(System.String,System.Object)"></member>
    <member name="M:Microsoft.Vsa.BaseVsaSite.OnCompilerError(Microsoft.Vsa.IVsaError)"></member>
    <member name="T:Microsoft.Vsa.BaseVsaStartup">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.Vsa.BaseVsaStartup.#ctor"></member>
    <member name="M:Microsoft.Vsa.BaseVsaStartup.SetSite(Microsoft.Vsa.IVsaSite)"></member>
    <member name="M:Microsoft.Vsa.BaseVsaStartup.Shutdown"></member>
    <member name="F:Microsoft.Vsa.BaseVsaStartup.site"></member>
    <member name="M:Microsoft.Vsa.BaseVsaStartup.Startup"></member>
  </members>
</doc>