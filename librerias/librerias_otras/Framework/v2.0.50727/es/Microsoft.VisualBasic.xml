<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary>
          Indica el estilo de ventana que se va a utilizar para el programa invocado al llamar a la función Shell.
        </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary>
          Se oculta la ventana y el foco se pasa a la ventana oculta. Este miembro es equivalente a la constante vbHide de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary>
          La ventana tiene el foco y vuelve a su tamaño y posición originales. Este miembro es equivalente a la constante vbNormalFocus de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary>
          La ventana se muestra como un icono con foco. Este miembro es equivalente a la constante vbMinimizedFocus de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary>
          La ventana se maximiza con foco. Este miembro es equivalente a la constante vbMaximizedFocus de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary>
          La ventana se restaura a su tamaño y posición más recientes. La ventana activa actualmente permanece activa. Este miembro es equivalente a la constante vbNormalNoFocus de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary>
          La ventana se muestra como un icono. La ventana activa actualmente permanece activa. Este miembro es equivalente a la constante vbMinimizedNoFocus de Visual Basic.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.AudioPlayMode">
      <summary>
          Indica cómo reproducir sonidos al llamar a métodos de audio.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.WaitToComplete">
      <summary>
          Hace que el método My.Computer.Audio.Play reproduzca el sonido y espera hasta que dicha reproducción finaliza antes de que el código de llamada continúe.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.Background">
      <summary>
          Hace que el método My.Computer.Audio.Play reproduzca el sonido en segundo plano. El código de llamada continúa ejecutándose.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.BackgroundLoop">
      <summary>
          Hace que el método My.Computer.Audio.Play reproduzca el sonido en segundo plano hasta que se llame a My.Computer.Audio.Stop Method. El código de llamada continúa ejecutándose.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary>
          Indica el tipo de procedimiento que se invoca al llamar a la función CallByName.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary>
          Se invoca un método.  Este miembro es equivalente a la constante vbMethod de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary>
          Se recupera el valor de una propiedad.  Este miembro es equivalente a la constante vbGet de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary>
          Se determina el valor de una propiedad de objeto. Este miembro es equivalente a la constante vbLet de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary>
          Se determina el valor de una propiedad.  Este miembro es equivalente a la constante vbSet de Visual Basic.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary>
          Una Collection de Visual Basic es un conjunto ordenado de elementos a los que se puede hacer referencia como una unidad.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary>
          Crea y devuelve un nuevo Collection Object (Visual Basic) de Visual Basic.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary>
          Agrega un elemento a un objeto Collection.
        </summary>
      <param name="Item">
              Es necesario. Objeto de cualquier tipo que especifica el elemento que se va a agregar a la colección.
            </param>
      <param name="Key">
              Es opcional. Expresión única de tipo String que especifica una cadena de clave que se puede utilizar en lugar de un índice de posición para obtener acceso a este nuevo elemento de la colección.
            </param>
      <param name="Before">
              Es opcional. Expresión que especifica una posición relativa en la colección. El elemento que se va a agregar se coloca en la colección delante del elemento identificado por el argumento <paramref name="Before" />. Si <paramref name="Before" /> es una expresión numérica, debe ser un número comprendido entre 1 y el valor de Count Property (Collection Object) de la colección. Si <paramref name="Before" /> es una expresión de tipo String, debe corresponder a la cadena de clave especificada cuando se agregó a la colección el elemento al que se hace referencia. No se puede especificar los dos parámetros <paramref name="Before" /> y <paramref name="After" />.
            </param>
      <param name="After">
              Es opcional. Expresión que especifica una posición relativa en la colección. El elemento que se va a agregar se coloca en la colección detrás del elemento identificado por el argumento <paramref name="After" />. Si <paramref name="After" /> es una expresión numérica, debe ser un número comprendido entre 1 y el valor de la propiedad Count de la colección. Si <paramref name="After" /> es una expresión de tipo String, debe corresponder a la cadena de clave especificada cuando se agregó a la colección el elemento al que se hace referencia. No se puede especificar los dos parámetros <paramref name="Before" /> y <paramref name="After" />.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary>
          Elimina todos los elementos de un objeto Collection de Visual Basic.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary>
          Devuelve un valor Boolean que indica si un objeto Collection de Visual Basic contiene un elemento con una clave concreta.
        </summary>
      <returns>
          Devuelve un valor Boolean que indica si un objeto Collection de Visual Basic contiene un elemento con una clave concreta.
        </returns>
      <param name="Key">
              Es necesario. Expresión de tipo String que especifica la clave que se va a buscar en los elementos de la colección.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary>
          Devuelve un valor Integer que contiene el número de elementos de una colección. Sólo lectura.
        </summary>
      <returns>
          Devuelve un valor Integer que contiene el número de elementos de una colección. Sólo lectura.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary>
          Devuelve una referencia a un objeto del enumerador, que se utiliza para recorrer en iteración un Collection Object (Visual Basic).
        </summary>
      <returns>
          Devuelve una referencia a un objeto del enumerador, que se utiliza para recorrer en iteración un Collection Object (Visual Basic).
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)"></member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#ICollection#Count"></member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#ICollection#SyncRoot"></member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Add(System.Object)"></member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Clear"></member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Contains(System.Object)"></member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#IndexOf(System.Object)"></member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Insert(System.Int32,System.Object)"></member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#IList#IsFixedSize"></member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#IList#IsReadOnly"></member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#IList#Item(System.Int32)"></member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Remove(System.Object)"></member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#RemoveAt(System.Int32)"></member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary>
          Devuelve un elemento concreto de un objeto Collection por posición o por clave. Sólo lectura.
        </summary>
      <returns>
          Devuelve un elemento concreto de un objeto Collection por posición o por clave. Sólo lectura.
        </returns>
      <param name="Index">
              (A) Expresión numérica que especifica la posición de un elemento de la colección. El valor de <paramref name="Index" /> debe ser un número comprendido entre 1 y el valor de Count Property (Collection Object) de la colección. O bien, (B) Expresión de Object que especifica la cadena de posición o de clave de un elemento de la colección.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary>
          Devuelve un elemento concreto de un objeto Collection por posición o por clave. Sólo lectura.
        </summary>
      <returns>
          Devuelve un elemento concreto de un objeto Collection por posición o por clave. Sólo lectura.
        </returns>
      <param name="Index">
              (A) Expresión numérica que especifica la posición de un elemento de la colección. El valor de <paramref name="Index" /> debe ser un número comprendido entre 1 y el valor de Count Property (Collection Object) de la colección. O bien, (B) Expresión de Object que especifica la cadena de posición o de clave de un elemento de la colección.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary>
          Devuelve un elemento concreto de un objeto Collection por posición o por clave. Sólo lectura.
        </summary>
      <returns>
          Devuelve un elemento concreto de un objeto Collection por posición o por clave. Sólo lectura.
        </returns>
      <param name="Key">
              Expresión única de tipo String que especifica una cadena de clave que se puede utilizar, en lugar de un índice de posición, para obtener acceso a un elemento de la colección. <paramref name="Key" /> tiene que corresponder al argumento de <paramref name="Key" /> especificado cuando se agregó el elemento a la colección.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)"></member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary>
          Quita un elemento de un objeto Collection.
        </summary>
      <param name="Index">
              Expresión numérica que especifica la posición de un elemento de la colección. El valor de <paramref name="Index" /> debe ser un número comprendido entre 1 y el valor de Count Property (Collection Object) de la colección.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary>
          Quita un elemento de un objeto Collection.
        </summary>
      <param name="Key">
              Expresión única de tipo String que especifica una cadena de clave que se puede utilizar, en lugar de un índice de posición, para obtener acceso a un elemento de la colección. <paramref name="Key" /> tiene que corresponder al argumento de <paramref name="Key" /> especificado cuando se agregó el elemento a la colección.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary>
          El atributo ComClassAttribute indica al compilador que agregue los metadatos que permiten exponer una clase como un objeto COM.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase ComClassAttribute.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase ComClassAttribute.
        </summary>
      <param name="_ClassID">
              Inicializa el valor de la propiedad ClassID que se utiliza para identificar de manera única una clase.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase ComClassAttribute.
        </summary>
      <param name="_ClassID">
              Inicializa el valor de la propiedad ClassID que se utiliza para identificar de manera única una clase.
            </param>
      <param name="_InterfaceID">
              Inicializa el valor de la propiedad InterfaceID que se utiliza para identificar de manera única una interfaz.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase ComClassAttribute.
        </summary>
      <param name="_ClassID">
              Inicializa el valor de la propiedad ClassID que se utiliza para identificar de manera única una clase.
            </param>
      <param name="_InterfaceID">
              Inicializa el valor de la propiedad InterfaceID que se utiliza para identificar de manera única una interfaz.
            </param>
      <param name="_EventId">
              Inicializa el valor de la propiedad EventID que se utiliza para identificar de manera única un evento.
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary>
          Obtiene un identificador de clase que se utiliza para identificar de manera única una clase.
        </summary>
      <returns>
          Sólo lectura. Una cadena que puede utilizar el compilador para identificar de manera única la clase cuando se crea un objeto COM.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary>
          Obtiene un identificador de evento que se utiliza para identificar de manera única un evento.
        </summary>
      <returns>
          Sólo lectura. Una cadena que puede utilizar el compilador para identificar de manera única un evento de la clase cuando se crea un objeto COM.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary>
          Obtiene un identificador de interfaz que se utiliza para identificar de manera única una interfaz.
        </summary>
      <returns>
          Sólo lectura. Una cadena que puede utilizar el compilador para identificar de manera única una interfaz de la clase cuando se crea un objeto COM.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary>
          Indica que el nombre de la interfaz COM oculta o prevalece sobre otro miembro de la clase o clase base.
        </summary>
      <returns>
          Un valor Boolean que indica que el nombre de la interfaz COM oculta o prevalece sobre otro miembro de la clase o clase base.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary>
          Indica cómo comparar cadenas al llamar a funciones de comparación.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary>
          Realiza una comparación binaria. Este miembro es equivalente a la constante vbBinaryCompare de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary>
          Realiza una comparación textual. Este miembro es equivalente a la constante vbTextCompare de Visual Basic.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary>
          El módulo Constants contiene diversas constantes. Estas constantes pueden utilizarse en cualquier parte del código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary>
          Indica qué botón se ha presionado en un cuadro de mensaje, devuelto por la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary>
          Indica los atributos de archivo que se van a utilizar al llamar a las funciones de acceso a archivos.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary>
          Cuando se llama a las funciones de impresión y de visualización, se pueden utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary>
          Indica cómo se van a comparar las cadenas cuando se llama a las funciones de comparación.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary>
          Indica qué botón se ha presionado en un cuadro de mensaje, devuelto por la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary>
          Cuando se llama a las funciones de impresión y de visualización, se pueden utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary>
          Cuando se llama a las funciones de impresión y de visualización, se pueden utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary>
          Indica los atributos de archivo que se van a utilizar al llamar a las funciones de acceso a archivos.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary>
          Indica un valor booleano o si se debe utilizar el valor predeterminado cuando se llama a las funciones de formato numérico.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary>
          Indica la primera semana del año que se va a utilizar al llamar a las funciones relacionadas con fechas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary>
          Indica la primera semana del año que se va a utilizar al llamar a las funciones relacionadas con fechas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary>
          Indica la primera semana del año que se va a utilizar al llamar a las funciones relacionadas con fechas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary>
          Cuando se llama a las funciones de impresión y de visualización, se pueden utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary>
          Indica el primer día de la semana que se va a utilizar al llamar a las funciones relacionadas con fechas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary>
          Indica cómo se muestran las fechas cuando se llama a la función FormatDateTime.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary>
          Indica el tipo de procedimiento que se invoca cuando se llama a la función CallByName.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary>
          Indica los atributos de archivo que se van a utilizar al llamar a las funciones de acceso a archivos.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary>
          Indica el estilo de ventana que se utiliza para el programa invocado cuando se llama a la función Shell.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary>
          Indica qué tipo de conversión se realiza cuando se llama a la función StrConv.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary>
          Indica qué botón se ha presionado en un cuadro de mensaje, devuelto por la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary>
          Indica qué tipo de conversión se realiza cuando se llama a la función StrConv.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary>
          Indica el tipo de procedimiento que se invoca cuando se llama a la función CallByName.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary>
          Cuando se llama a las funciones de impresión y de visualización, se pueden utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary>
          Indica qué tipo de conversión se realiza cuando se llama a la función StrConv.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary>
          Indica cómo se muestran las fechas cuando se llama a la función FormatDateTime.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary>
          Indica cómo se muestran las fechas cuando se llama a la función FormatDateTime.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary>
          Indica qué tipo de conversión se realiza cuando se llama a la función StrConv.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary>
          Indica el estilo de ventana que se utiliza para el programa invocado cuando se llama a la función Shell.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary>
          Indica el tipo de procedimiento que se invoca cuando se llama a la función CallByName.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary>
          Indica el estilo de ventana que se utiliza para el programa invocado cuando se llama a la función Shell.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary>
          Indica el estilo de ventana que se utiliza para el programa invocado cuando se llama a la función Shell.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary>
          Indica el primer día de la semana que se va a utilizar al llamar a las funciones relacionadas con fechas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary>
          Indica qué tipo de conversión se realiza cuando se llama a la función StrConv.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary>
          Cuando se llama a las funciones de impresión y de visualización, se pueden utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary>
          Indica qué botón se ha presionado en un cuadro de mensaje, devuelto por la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary>
          Indica los atributos de archivo que se van a utilizar al llamar a las funciones de acceso a archivos.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary>
          Indica el estilo de ventana que se utiliza para el programa invocado cuando se llama a la función Shell.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary>
          Indica el estilo de ventana que se utiliza para el programa invocado cuando se llama a la función Shell.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary>
          Cuando se llama a las funciones de impresión y de visualización, se pueden utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary>
          Cuando se llama a las funciones de impresión y de visualización, se pueden utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary>
          Cuando se llama a las funciones de impresión y de visualización, se pueden utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary>
          Indica qué botón se ha presionado en un cuadro de mensaje, devuelto por la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary>
          Indica qué tipo de conversión se realiza cuando se llama a la función StrConv.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary>
          Indica los atributos de archivo que se van a utilizar al llamar a las funciones de acceso a archivos.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary>
          Indica qué botón se ha presionado en un cuadro de mensaje, devuelto por la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary>
          Indica el primer día de la semana que se va a utilizar al llamar a las funciones relacionadas con fechas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary>
          Indica el tipo de procedimiento que se invoca cuando se llama a la función CallByName.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary>
          Indica cómo se muestran las fechas cuando se llama a la función FormatDateTime.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary>
          Indica cómo se muestran las fechas cuando se llama a la función FormatDateTime.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary>
          Indica qué tipo de conversión se realiza cuando se llama a la función StrConv.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary>
          Indica el primer día de la semana que se va a utilizar al llamar a las funciones relacionadas con fechas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary>
          Indica los atributos de archivo que se van a utilizar al llamar a las funciones de acceso a archivos.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary>
          Cuando se llama a las funciones de impresión y de visualización, se pueden utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary>
          Indica cómo se van a comparar las cadenas cuando se llama a las funciones de comparación.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary>
          Indica el primer día de la semana que se va a utilizar al llamar a las funciones relacionadas con fechas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary>
          Indica qué tipo de conversión se realiza cuando se llama a la función StrConv.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary>
          Indica un valor booleano o si se debe utilizar el valor predeterminado cuando se llama a las funciones de formato numérico.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary>
          Indica el primer día de la semana que se va a utilizar al llamar a las funciones relacionadas con fechas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary>
          Indica qué tipo de conversión se realiza cuando se llama a la función StrConv.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary>
          Indica un valor booleano o si se debe utilizar el valor predeterminado cuando se llama a las funciones de formato numérico.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary>
          Indica la primera semana del año que se va a utilizar al llamar a las funciones relacionadas con fechas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary>
          Indica el primer día de la semana que se va a utilizar al llamar a las funciones relacionadas con fechas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary>
          Cuando se llama a las funciones de impresión y de visualización, se pueden utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary>
          Indica los atributos de archivo que se van a utilizar al llamar a las funciones de acceso a archivos.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary>
          Indica el primer día de la semana que se va a utilizar al llamar a las funciones relacionadas con fechas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary>
          Indica qué tipo de conversión se realiza cuando se llama a la función StrConv.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary>
          Indica qué botón se ha presionado en un cuadro de mensaje, devuelto por la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary>
          Indica qué botones se muestran cuando se llama a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary>
          El módulo ControlChars contiene constantes utilizadas como caracteres de control. Estas constantes pueden utilizarse en cualquier parte del código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase T:Microsoft.VisualBasic.ControlChars. 
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary>
          Al llamar a las funciones de impresión y de visualización, es posible utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary>
          Al llamar a las funciones de impresión y de visualización, es posible utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary>
          Al llamar a las funciones de impresión y de visualización, es posible utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary>
          Al llamar a las funciones de impresión y de visualización, es posible utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary>
          Al llamar a las funciones de impresión y de visualización, es posible utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary>
          Al llamar a las funciones de impresión y de visualización, es posible utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary>
          Al llamar a las funciones de impresión y de visualización, es posible utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary>
          Al llamar a las funciones de impresión y de visualización, es posible utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary>
          Al llamar a las funciones de impresión y de visualización, es posible utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary>
          Al llamar a las funciones de impresión y de visualización, es posible utilizar en el código las siguientes constantes en lugar de los valores reales.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary>
          El módulo Conversion contiene los procedimientos utilizados para realizar diversas operaciones de conversión.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary>
          Devuelve el mensaje de error que corresponde a un número de error determinado.
        </summary>
      <returns>
          Devuelve el mensaje de error que corresponde a un número de error determinado.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary>
          Devuelve el mensaje de error que corresponde a un número de error determinado.
        </summary>
      <returns>
          Devuelve el mensaje de error que corresponde a un número de error determinado.
        </returns>
      <param name="ErrorNumber">
              Es opcional. Cualquier número de error válido.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary>
          Devuelve la parte correspondiente al entero de un número.
        </summary>
      <returns>
          Devuelve la parte correspondiente al entero de un número.
        </returns>
      <param name="Number">
              Es necesario. Número de tipo Double o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene Nothing, se devuelve Nothing.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary>
          Devuelve la parte correspondiente al entero de un número.
        </summary>
      <returns>
          Devuelve la parte correspondiente al entero de un número.
        </returns>
      <param name="Number">
              Es necesario. Número de tipo Double o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene Nothing, se devuelve Nothing.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary>
          Devuelve la parte correspondiente al entero de un número.
        </summary>
      <returns>
          Devuelve la parte correspondiente al entero de un número.
        </returns>
      <param name="Number">
              Es necesario. Número de tipo Double o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene Nothing, se devuelve Nothing.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary>
          Devuelve la parte correspondiente al entero de un número.
        </summary>
      <returns>
          Devuelve la parte correspondiente al entero de un número.
        </returns>
      <param name="Number">
              Es necesario. Número de tipo Double o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene Nothing, se devuelve Nothing.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary>
          Devuelve la parte correspondiente al entero de un número.
        </summary>
      <returns>
          Devuelve la parte correspondiente al entero de un número.
        </returns>
      <param name="Number">
              Es necesario. Número de tipo Double o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene Nothing, se devuelve Nothing.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary>
          Devuelve la parte correspondiente al entero de un número.
        </summary>
      <returns>
          Devuelve la parte correspondiente al entero de un número.
        </returns>
      <param name="Number">
              Es necesario. Número de tipo Double o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene Nothing, se devuelve Nothing.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary>
          Devuelve la parte correspondiente al entero de un número.
        </summary>
      <returns>
          Devuelve la parte correspondiente al entero de un número.
        </returns>
      <param name="Number">
              Es necesario. Número de tipo Double o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene Nothing, se devuelve Nothing.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor hexadecimal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary>
          Devuelve la parte correspondiente al entero de un número.
        </summary>
      <returns>
          Devuelve la parte correspondiente al entero de un número.
        </returns>
      <param name="Number">
              Es necesario. Número de tipo Double o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene Nothing, se devuelve Nothing.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary>
          Devuelve la parte correspondiente al entero de un número.
        </summary>
      <returns>
          Devuelve la parte correspondiente al entero de un número.
        </returns>
      <param name="Number">
              Es necesario. Número de tipo Double o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene Nothing, se devuelve Nothing.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary>
          Devuelve la parte correspondiente al entero de un número.
        </summary>
      <returns>
          Devuelve la parte correspondiente al entero de un número.
        </returns>
      <param name="Number">
              Es necesario. Número de tipo Double o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene Nothing, se devuelve Nothing.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary>
          Devuelve la parte correspondiente al entero de un número.
        </summary>
      <returns>
          Devuelve la parte correspondiente al entero de un número.
        </returns>
      <param name="Number">
              Es necesario. Número de tipo Double o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene Nothing, se devuelve Nothing.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary>
          Devuelve la parte correspondiente al entero de un número.
        </summary>
      <returns>
          Devuelve la parte correspondiente al entero de un número.
        </returns>
      <param name="Number">
              Es necesario. Número de tipo Double o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene Nothing, se devuelve Nothing.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary>
          Devuelve la parte correspondiente al entero de un número.
        </summary>
      <returns>
          Devuelve la parte correspondiente al entero de un número.
        </returns>
      <param name="Number">
              Es necesario. Número de tipo Double o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene Nothing, se devuelve Nothing.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary>
          Devuelve la parte correspondiente al entero de un número.
        </summary>
      <returns>
          Devuelve la parte correspondiente al entero de un número.
        </returns>
      <param name="Number">
              Es necesario. Número de tipo Double o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene Nothing, se devuelve Nothing.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary>
          Devuelve una cadena que representa el valor octal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor octal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary>
          Devuelve una cadena que representa el valor octal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor octal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary>
          Devuelve una cadena que representa el valor octal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor octal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary>
          Devuelve una cadena que representa el valor octal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor octal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary>
          Devuelve una cadena que representa el valor octal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor octal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary>
          Devuelve una cadena que representa el valor octal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor octal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary>
          Devuelve una cadena que representa el valor octal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor octal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary>
          Devuelve una cadena que representa el valor octal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor octal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary>
          Devuelve una cadena que representa el valor octal de un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el valor octal de un número.
        </returns>
      <param name="Number">
              Es necesario. Cualquier expresión numérica o expresión de tipo String válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary>
          Devuelve una representación de tipo String de un número.
        </summary>
      <returns>
          Devuelve una representación de tipo String de un número.
        </returns>
      <param name="Number">
              Es necesario. Object que contiene cualquier expresión numérica válida.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary>
          Devuelve los números que contiene una cadena como un valor numérico del tipo apropiado.
        </summary>
      <returns>
          Devuelve los números que contiene una cadena como un valor numérico del tipo apropiado.
        </returns>
      <param name="Expression">
              Es necesario. Cualquier expresión de tipo String, variable de Object o valor de Char válido. Si <paramref name="Expression" /> es del tipo Object, su valor debe ser convertible en una String; de lo contrario, se genera un error <see cref="T:System.ArgumentException" />.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary>
          Devuelve los números que contiene una cadena como un valor numérico del tipo apropiado.
        </summary>
      <returns>
          Devuelve los números que contiene una cadena como un valor numérico del tipo apropiado.
        </returns>
      <param name="Expression">
              Es necesario. Cualquier expresión de tipo String, variable de Object o valor de Char válido. Si <paramref name="Expression" /> es del tipo Object, su valor debe ser convertible en una String; de lo contrario, se genera un error <see cref="T:System.ArgumentException" />.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary>
          Devuelve los números que contiene una cadena como un valor numérico del tipo apropiado.
        </summary>
      <returns>
          Devuelve los números que contiene una cadena como un valor numérico del tipo apropiado.
        </returns>
      <param name="InputStr">
              Es necesario. Cualquier expresión de tipo String, variable de Object o valor de Char válido. Si <paramref name="Expression" /> es del tipo Object, su valor debe ser convertible en una String; de lo contrario, se genera un error <see cref="T:System.ArgumentException" />.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary>
          El módulo DateAndTime contiene los procedimientos y propiedades que se utilizan en las operaciones de fecha y hora. 
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary>
          Devuelve un valor de Date que contiene un valor de fecha y hora al que se ha sumado un intervalo de tiempo especificado.
        </summary>
      <returns>
          Devuelve un valor de Date que contiene un valor de fecha y hora al que se ha sumado un intervalo de tiempo especificado.
        </returns>
      <param name="Interval">
              Es necesario. Valor de enumeración DateInterval o expresión de tipo String que representa el intervalo de tiempo que se desea sumar.
            </param>
      <param name="Number">
              Es necesario. Double. Expresión de punto flotante que representa el número de intervalos que se desea sumar. El valor de <paramref name="Number" /> puede ser positivo (para obtener valores de fecha u hora futuros) o negativo (para obtener valores de fecha u hora del pasado). Puede contener una parte fraccionaria cuando <paramref name="Interval" /> especifica horas, minutos o segundos. Para otros valores de <paramref name="Interval" />, se omite cualquier parte fraccionaria de <paramref name="Number" />.
            </param>
      <param name="DateValue">
              Es necesario. Date. Expresión que representa la fecha y la hora a las que se va a sumar el intervalo. No cambia el propio parámetro <paramref name="DateValue" /> en el programa que realiza la llamada.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary>
          Devuelve un valor de Date que contiene un valor de fecha y hora al que se ha sumado un intervalo de tiempo especificado.
        </summary>
      <returns>
          Devuelve un valor de Date que contiene un valor de fecha y hora al que se ha sumado un intervalo de tiempo especificado.
        </returns>
      <param name="Interval">
              Es necesario. Valor de enumeración DateInterval o expresión de tipo String que representa el intervalo de tiempo que se desea sumar.
            </param>
      <param name="Number">
              Es necesario. Double. Expresión de punto flotante que representa el número de intervalos que se desea sumar. El valor de <paramref name="Number" /> puede ser positivo (para obtener valores de fecha u hora futuros) o negativo (para obtener valores de fecha u hora del pasado). Puede contener una parte fraccionaria cuando <paramref name="Interval" /> especifica horas, minutos o segundos. Para otros valores de <paramref name="Interval" />, se omite cualquier parte fraccionaria de <paramref name="Number" />.
            </param>
      <param name="DateValue">
              Es necesario. Date. Expresión que representa la fecha y la hora a las que se va a sumar el intervalo. No cambia el propio parámetro <paramref name="DateValue" /> en el programa que realiza la llamada.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>
          Devuelve un valor Long que especifica el número de intervalos de tiempo entre dos valores de Date.
        </summary>
      <returns>
          Devuelve un valor Long que especifica el número de intervalos de tiempo entre dos valores de Date.
        </returns>
      <param name="Interval">
              Es necesario. Valor de enumeración de DateInterval o expresión de tipo String que representa el intervalo de tiempo que se desea utilizar como unidad de la diferencia entre <paramref name="Date1" /> y <paramref name="Date2" />.
            </param>
      <param name="Date1">
              Es necesario. Date. Primer valor de fecha u hora que se desea utilizar en el cálculo. 
            </param>
      <param name="Date2">
              Es necesario. Date. Segundo valor de fecha u hora que se desea utilizar en el cálculo.
            </param>
      <param name="DayOfWeek">
              Es opcional. Valor elegido de la enumeración FirstDayOfWeek que especifica el primer día de la semana. Si no se especifica, se utiliza FirstDayOfWeek.Sunday.
            </param>
      <param name="WeekOfYear">
              Es opcional. Valor elegido de la enumeración FirstWeekOfYear que especifica la primera semana del año.  Si no se especifica, se utiliza FirstWeekOfYear.Jan1.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>
          Devuelve un valor Long que especifica el número de intervalos de tiempo entre dos valores de Date.
        </summary>
      <returns>
          Devuelve un valor Long que especifica el número de intervalos de tiempo entre dos valores de Date.
        </returns>
      <param name="Interval">
              Es necesario. Valor de enumeración de DateInterval o expresión de tipo String que representa el intervalo de tiempo que se desea utilizar como unidad de la diferencia entre <paramref name="Date1" /> y <paramref name="Date2" />.
            </param>
      <param name="Date1">
              Es necesario. Date. Primer valor de fecha u hora que se desea utilizar en el cálculo. 
            </param>
      <param name="Date2">
              Es necesario. Date. Segundo valor de fecha u hora que se desea utilizar en el cálculo.
            </param>
      <param name="DayOfWeek">
              Es opcional. Valor elegido de la enumeración FirstDayOfWeek que especifica el primer día de la semana. Si no se especifica, se utiliza FirstDayOfWeek.Sunday.
            </param>
      <param name="WeekOfYear">
              Es opcional. Valor elegido de la enumeración FirstWeekOfYear que especifica la primera semana del año.  Si no se especifica, se utiliza FirstWeekOfYear.Jan1.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>
          Devuelve un valor Integer que contiene el componente especificado de un valor de Date dado.
        </summary>
      <returns>
          Devuelve un valor Integer que contiene el componente especificado de un valor de Date dado.
        </returns>
      <param name="Interval">
              Es necesario. Valor de enumeración DateInterval o expresión de tipo String que representa la parte correspondiente al valor de fecha u hora que se desea devolver.
            </param>
      <param name="DateValue">
              Es necesario. Valor de Date que se desea evaluar.
            </param>
      <param name="FirstDayOfWeekValue">
              Es opcional. Valor elegido de la enumeración FirstDayOfWeek que especifica el primer día de la semana. Si no se especifica, se utiliza FirstDayOfWeek.Sunday.
            </param>
      <param name="FirstWeekOfYearValue">
              Es opcional. Valor elegido de la enumeración FirstWeekOfYear que especifica la primera semana del año.  Si no se especifica, se utiliza FirstWeekOfYear.Jan1.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>
          Devuelve un valor Integer que contiene el componente especificado de un valor de Date dado.
        </summary>
      <returns>
          Devuelve un valor Integer que contiene el componente especificado de un valor de Date dado.
        </returns>
      <param name="Interval">
              Es necesario. Valor de enumeración DateInterval o expresión de tipo String que representa la parte correspondiente al valor de fecha u hora que se desea devolver.
            </param>
      <param name="DateValue">
              Es necesario. Valor de Date que se desea evaluar.
            </param>
      <param name="DayOfWeek">
              Es opcional. Valor elegido de la enumeración FirstDayOfWeek que especifica el primer día de la semana. Si no se especifica, se utiliza FirstDayOfWeek.Sunday.
            </param>
      <param name="WeekOfYear">
              Es opcional. Valor elegido de la enumeración FirstWeekOfYear que especifica la primera semana del año.  Si no se especifica, se utiliza FirstWeekOfYear.Jan1.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary>
          Devuelve un valor de Date que representa un año, mes y día especificados, con la información de hora establecida en medianoche (00:00:00).
        </summary>
      <returns>
          Devuelve un valor de Date que representa un año, mes y día especificados, con la información de hora establecida en medianoche (00:00:00).
        </returns>
      <param name="Year">
              Es necesario. Expresión de tipo Integer entre 1 y 9999. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. Si el valor de <paramref name="Year" /> está comprendido entre 0 y 99, se interpreta como un año comprendido entre 1930 y 2029, tal como se explica abajo en la sección "Comentarios". Si el valor de <paramref name="Year" /> es menor que 1, se resta del año actual.
            </param>
      <param name="Month">
              Es necesario. Expresión de tipo Integer entre 1 y 12. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. Del valor de <paramref name="Month" /> se resta 1 y se aplica al mes de enero del año calculado. En otros términos, se suma (<paramref name="Month" /> - 1) al mes de enero. Si es necesario, se vuelve a calcular el año. Los resultados siguientes muestran este efecto:
              
                
                  Si el valor de <paramref name="Month" /> es 1, el resultado es el mes de enero del año calculado.
                
                
                  Si el valor de <paramref name="Month" /> es 0, el resultado es el mes de diciembre del año anterior.
                
                
                  Si el valor de <paramref name="Month" /> es -1, el resultado es el mes de noviembre del año anterior.
                
                
                  Si el valor de <paramref name="Month" /> es 13, el resultado es el mes de enero del año siguiente.
                
              
            </param>
      <param name="Day">
              Es necesario. Expresión de tipo Integer entre 1 y 31. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. Del valor de <paramref name="Day" /> se resta 1 y se aplica al primer día del mes calculado. En otros términos, se suma (<paramref name="Day" /> - 1) al primer día del mes. Se vuelven a calcular el mes y el año si es necesario. Los resultados siguientes muestran este efecto:
              
                
                  Si el valor de <paramref name="Day" /> es 1, el resultado es el primer día del mes calculado.
                
                
                  Si el valor de <paramref name="Day" /> es 0, el resultado es el último día del mes anterior.
                
                
                  Si el valor de <paramref name="Day" /> es -1, el resultado es el penúltimo día del mes anterior.
                
                
                  Si el valor de <paramref name="Day" /> está más allá del final del mes actual, el resultado es el correspondiente día del mes siguiente. Por ejemplo, si el valor de <paramref name="Month" /> es 4 y el valor de <paramref name="Day" /> es 31, el resultado es el 1 de mayo.
                
              
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary>
          Devuelve o establece un valor de tipo String que representa la fecha actual según el sistema.
        </summary>
      <returns>
          Devuelve o establece un valor de tipo String que representa la fecha actual según el sistema.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary>
          Devuelve un valor de Date que contiene la información de fecha representada por una cadena, con la información de hora establecida en medianoche (00:00:00).
        </summary>
      <returns>
          Devuelve un valor de Date que contiene la información de fecha representada por una cadena, con la información de hora establecida en medianoche (00:00:00).
        </returns>
      <param name="StringDate">
              Es necesario. Expresión de tipo String que representa un valor de fecha u hora desde las 00:00:00 horas del 1 de enero del año 1 hasta las 23:59:59 horas del 31 de diciembre de 9999.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary>
          Devuelve un valor de tipo Integer del 1 al 31 que representa el día del mes.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer del 1 al 31 que representa el día del mes.
        </returns>
      <param name="DateValue">
              Es necesario. Valor de Date del que se desea extraer el día.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary>
          Devuelve un valor de tipo Integer del 0 al 23 que representa la hora del día.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer del 0 al 23 que representa la hora del día.
        </returns>
      <param name="TimeValue">
              Es necesario. Valor de Date del que se desea extraer la hora.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary>
          Devuelve un valor de tipo Integer del 0 al 59 que representa el minuto de la hora.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer del 0 al 59 que representa el minuto de la hora.
        </returns>
      <param name="TimeValue">
              Es necesario. Valor de Date del que se desea extraer el minuto.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary>
          Devuelve un valor de tipo Integer del 1 al 12 que representa el mes del año.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer del 1 al 12 que representa el mes del año.
        </returns>
      <param name="DateValue">
              Es necesario. Valor de Date del que se desea extraer el mes.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary>
          Devuelve un valor de tipo String que contiene el nombre del mes especificado.
        </summary>
      <returns>
          Devuelve un valor de tipo String que contiene el nombre del mes especificado.
        </returns>
      <param name="Month">
              Es necesario. Integer. Designación numérica del mes, del 1 al 13; 1 indica el mes de enero y 12 indica el mes de diciembre. El valor 13 se puede utilizar con un calendario de 13 meses. Si el sistema utiliza un calendario de 12 meses y el valor de <paramref name="Month" /> es 13, MonthName devuelve una cadena vacía.
            </param>
      <param name="Abbreviate">
              Es opcional. Valor de tipo Boolean que indica si el nombre del mes se va a abreviar. Si se omite, el valor predeterminado es False, lo que significa que el nombre del mes no se abrevia.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary>
          Devuelve un valor de Date que contiene la fecha y la hora actuales según el sistema.
        </summary>
      <returns>
          Devuelve un valor de Date que contiene la fecha y la hora actuales según el sistema.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary>
          Devuelve un valor de tipo Integer del 0 al 59 que representa el segundo del minuto.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer del 0 al 59 que representa el segundo del minuto.
        </returns>
      <param name="TimeValue">
              Es necesario. Valor de Date del que se desea extraer el segundo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary>
          Devuelve o establece un valor de Date que contiene la hora actual del día según el sistema.
        </summary>
      <returns>
          Devuelve o establece un valor de Date que contiene la hora actual del día según el sistema.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary>
          Devuelve un valor Double que representa el número de segundos transcurridos desde la medianoche.
        </summary>
      <returns>
          Devuelve un valor Double que representa el número de segundos transcurridos desde la medianoche.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary>
          Devuelve un valor de Date que representa una hora, un minuto y un segundo especificados, con la información de fecha establecida con respecto al 1 de enero del año 1.
        </summary>
      <returns>
          Devuelve un valor de Date que representa una hora, un minuto y un segundo especificados, con la información de fecha establecida con respecto al 1 de enero del año 1.
        </returns>
      <param name="Hour">
              Es necesario. Expresión de tipo Integer entre 0 y 23. Sin embargo, también se aceptan los valores no comprendidos en este intervalo.
            </param>
      <param name="Minute">
              Es necesario. Expresión de tipo Integer entre 0 y 59. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. El valor de <paramref name="Minute" /> se suma a la hora calculada, por lo que un valor negativo especifica los minutos anteriores a esa hora.
            </param>
      <param name="Second">
              Es necesario. Expresión de tipo Integer entre 0 y 59. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. El valor de <paramref name="Second" /> se suma al minuto calculado, por lo que un valor negativo especifica los segundos anteriores a ese minuto.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary>
          Devuelve o establece un valor de tipo String que representa la hora actual del día según el sistema.
        </summary>
      <returns>
          Devuelve o establece un valor de tipo String que representa la hora actual del día según el sistema.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary>
          Devuelve un valor de Date que contiene la información de hora representada por una cadena, con la información de fecha establecida en el 1 de enero del año 1.
        </summary>
      <returns>
          Devuelve un valor de Date que contiene la información de hora representada por una cadena, con la información de fecha establecida en el 1 de enero del año 1.
        </returns>
      <param name="StringTime">
              Es necesario. Expresión de tipo String que representa un valor de fecha u hora desde las 00:00:00 horas del 1 de enero del año 1 hasta las 23:59:59 horas del 31 de diciembre de 9999.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary>
          Devuelve o establece un valor de Date que contiene la fecha actual según el sistema.
        </summary>
      <returns>
          Devuelve o establece un valor de Date que contiene la fecha actual según el sistema.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>
          Devuelve un valor de tipo Integer que contiene un número que representa el día de la semana.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer que contiene un número que representa el día de la semana.
        </returns>
      <param name="DateValue">
              Es necesario. Valor de Date para el que se desea determinar el día de la semana.
            </param>
      <param name="DayOfWeek">
              Es opcional. Valor elegido de la enumeración FirstDayOfWeek que especifica el primer día de la semana. Si no se especifica, se utiliza FirstDayOfWeek.Sunday.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>
          Devuelve un valor de tipo String que contiene el nombre del día de la semana especificado.
        </summary>
      <returns>
          Devuelve un valor de tipo String que contiene el nombre del día de la semana especificado.
        </returns>
      <param name="Weekday">
              Es necesario. Integer. Designación numérica para el día de la semana, del 1 al 7; 1 indica el primer día de la semana y 7 indica el último día de la semana. Las identidades del primer y último día dependen del valor de <paramref name="FirstDayOfWeekValue" />.
            </param>
      <param name="Abbreviate">
              Es opcional. Valor de tipo Boolean que indica si el nombre del día de la semana se va a abreviar. Si se omite, el valor predeterminado es False, lo que significa que el nombre del día de la semana no se abrevia.
            </param>
      <param name="FirstDayOfWeekValue">
              Es opcional. Valor elegido de la enumeración FirstDayOfWeek que especifica el primer día de la semana. Si no se especifica, se utiliza FirstDayOfWeek.System.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary>
          Devuelve un valor de tipo Integer del 1 al 9999 que representa el año.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer del 1 al 9999 que representa el año.
        </returns>
      <param name="DateValue">
              Es necesario. Valor de Date del que se desea extraer el año.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary>
          Indica cómo se muestran las fechas cuando se llama a la función FormatDateTime.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary>
          En el caso de números reales, muestra una fecha y una hora. Si el número no tiene parte fraccionaria, muestra sólo una fecha. Si el número no tiene parte de entero, sólo muestra una hora. La configuración regional del equipo determina la forma en que se muestran la fecha y la hora. Este miembro es equivalente a la constante vbGeneralDate de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary>
          Muestra una fecha con el formato de fecha larga especificado en la configuración regional del equipo. Este miembro es equivalente a la constante vbLongDate de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary>
          Muestra una fecha con el formato de fecha corta especificado en la configuración regional del equipo. Este miembro es equivalente a la constante vbShortDate de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary>
          Muestra una hora con el formato de hora larga especificado en la configuración regional del equipo. Este miembro es equivalente a la constante vbLongTime de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary>
          Muestra una hora con el formato de hora corta especificado en la configuración regional del equipo. Este miembro es equivalente a la constante vbShortTime de Visual Basic.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary>
          Indica cómo determinar y dar formato a los intervalos de fecha al llamar a las funciones relacionadas con la fecha.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary>
          Año
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary>
          Trimestre del año (1 de 4)
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary>
          Mes (1 de 12)
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary>
          Día del año (1 de 366)
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary>
          Día del mes (1 de 31)
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary>
          Semana del año (1 de 53)
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary>
          Día de la semana (1 de 7)
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary>
          Hora (1 de 24)
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary>
          Minuto (1 de 60)
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary>
          Segundo (1 de 60)
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary>
          Indica cuándo vencen los pagos al llamar a métodos financieros.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary>
          Se sitúa al final del intervalo de fechas
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary>
          Se sitúa al principio del intervalo de fechas
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary>
          El módulo ErrObject contiene las propiedades y los procedimientos que se utilizan para identificar y controlar los errores en tiempo de ejecución mediante el objeto Err. 
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary>
          Borra todos los valores de propiedad del objeto Err.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary>
          Devuelve o establece una expresión de tipo String que contiene una cadena descriptiva asociada a un error. Lectura y escritura.
        </summary>
      <returns>
          Devuelve o establece una expresión de tipo String que contiene una cadena descriptiva asociada a un error. Lectura y escritura.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary>
          Devuelve un entero que indica el número de línea de la última instrucción ejecutada Sólo lectura.
        </summary>
      <returns>
          Devuelve un entero que indica el número de línea de la última instrucción ejecutada Sólo lectura.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary>
          Devuelve la excepción que representa el error que se ha producido.
        </summary>
      <returns>
          Devuelve la excepción que representa el error que se ha producido.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpContext">
      <summary>
          Devuelve o establece un valor Integer que contiene el identificador de contexto de un tema en un archivo de Ayuda. Lectura y escritura.
        </summary>
      <returns>
          Devuelve o establece un valor Integer que contiene el identificador de contexto de un tema en un archivo de Ayuda. Lectura y escritura.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpFile">
      <summary>
          Devuelve o establece una expresión de tipo String que contiene la ruta de acceso completa a un archivo de Ayuda. Lectura y escritura.
        </summary>
      <returns>
          Devuelve o establece una expresión de tipo String que contiene la ruta de acceso completa a un archivo de Ayuda. Lectura y escritura.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary>
          Devuelve un código de error del sistema generado por una llamada a una biblioteca de vínculos dinámicos (archivo DLL). Sólo lectura.
        </summary>
      <returns>
          Devuelve un código de error del sistema generado por una llamada a una biblioteca de vínculos dinámicos (archivo DLL). Sólo lectura.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary>
          Devuelve o establece un valor numérico que especifica un error. Lectura y escritura.
        </summary>
      <returns>
          Devuelve o establece un valor numérico que especifica un error. Lectura y escritura.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary>
          Genera un error en tiempo de ejecución; se puede utilizar en lugar de la instrucción Error.
        </summary>
      <param name="Number">
              Es necesario. Entero de tipo Long que identifica la naturaleza del error. Los errores de Visual Basic vienen indicados por el intervalo 0-65535, el intervalo 0-512 queda reservado para los errores del sistema y el intervalo 513-65535 es para los errores definidos por el usuario. Cuando se establece el valor de la propiedad Number en un código de error propio en un módulo de clase, se suma el número del código de error a la constante vbObjectError. Por ejemplo, para generar el número de error 513, asigne vbObjectError + 513 a la propiedad Number.
            </param>
      <param name="Source">
              Es opcional. Expresión de tipo String que denomina el objeto o la aplicación que generó el error. Al establecer esta propiedad para un objeto, utilice el formato proyecto.clase. Si no se especifica <paramref name="Source" />, se utiliza el identificador de proceso del actual proyecto de Visual Basic.
            </param>
      <param name="Description">
              Es opcional. Expresión de tipo String que describe el error. Si no se especifica, se examina el valor de la propiedad Number. Si se puede asignar a un código de error en tiempo de ejecución de Visual Basic, la cadena que devuelva la función Error se utilizará como la propiedad Description. Si hay ningún error de Visual Basic que corresponda a la propiedad Number, se utiliza el mensaje "Error definido por la aplicación o por el objeto".
            </param>
      <param name="HelpFile">
              Es opcional. Ruta de acceso completa al archivo de Ayuda referente a este error. Si no se especifica, Visual Basic utiliza la unidad, la ruta de acceso y el nombre completos del archivo de Ayuda de Visual Basic.
            </param>
      <param name="HelpContext">
              Es opcional. Identificador de contexto que identifica un tema dentro del <paramref name="HelpFile" /> que proporciona ayuda para el error. Si no se especifica, se utiliza el identificador de contexto del archivo de Ayuda de Visual Basic correspondiente a la propiedad Number si existe.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Source">
      <summary>
          Devuelve o establece una expresión de tipo String que especifica el nombre del objeto o de la aplicación que generó originalmente el error. Lectura y escritura.
        </summary>
      <returns>
          Devuelve o establece una expresión de tipo String que especifica el nombre del objeto o de la aplicación que generó originalmente el error. Lectura y escritura.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary>
          Indica los atributos de archivo que se deben utilizar al llamar a las funciones de acceso a archivos.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary>
          Normal (valor predeterminado para Dir y SetAttr). No se aplica ninguna característica especial a este archivo. Este miembro es equivalente a la constante vbNormal de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary>
          Sólo lectura. Este miembro es equivalente a la constante vbReadOnly de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary>
          Oculto. Este miembro es equivalente a la constante vbHidden de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary>
          Archivo de sistema. Este miembro es equivalente a la constante vbSystem de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary>
          Etiqueta de volumen. Este atributo no es válido cuando se utiliza con SetAttr. Este miembro es equivalente a la constante vbVolume de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary>
          Directorio o carpeta. Este miembro es equivalente a la constante vbDirectory de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary>
          El archivo ha cambiado desde que se realizó la última copia de seguridad. Este miembro es equivalente a la constante vbArchive de Visual Basic.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary>
          El módulo FileSystem contiene los procedimientos utilizados para realizar operaciones con archivos, directorios o carpetas y del sistema. La característica My proporciona mayor productividad y rendimiento en las operaciones de E/S con archivos que el módulo FileSystem. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary>
          Cambia el directorio o la carpeta actual. La característica My proporciona mayor productividad y rendimiento que la función ChDir  en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.CurrentDirectory Property.
        </summary>
      <param name="Path">
              Es un parámetro necesario. Expresión de tipo String que identifica el directorio o la carpeta que se convierte en el nuevo directorio predeterminado o la nueva carpeta predeterminada. <paramref name="Path" /> puede incluir la unidad. Si no se especifica ninguna unidad, ChDir cambia el directorio predeterminado o la carpeta predeterminada en la unidad actual. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary>
          Cambia la unidad actual.
        </summary>
      <param name="Drive">
              Es un parámetro necesario. Expresión de cadena que especifica una unidad existente. Si se proporciona una cadena de longitud cero (""), la unidad actual no cambia. Si el argumento <paramref name="Drive" /> es una cadena de varios caracteres, ChDrive utiliza sólo la primera letra.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary>
          Cambia la unidad actual.
        </summary>
      <param name="Drive">
              Es un parámetro necesario. Expresión de cadena que especifica una unidad existente. Si se proporciona una cadena de longitud cero (""), la unidad actual no cambia. Si el argumento <paramref name="Drive" /> es una cadena de varios caracteres, ChDrive utiliza sólo la primera letra.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary>
          Devuelve una cadena que representa la ruta de acceso actual. El My.Computer.FileSystem Object proporciona más productividad y rendimiento que CurDir en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.CurrentDirectory Property.
        </summary>
      <returns>
          Devuelve una cadena que representa la ruta de acceso actual. El My.Computer.FileSystem Object proporciona más productividad y rendimiento que CurDir en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.CurrentDirectory Property.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary>
          Devuelve una cadena que representa la ruta de acceso actual. El My.Computer.FileSystem Object proporciona más productividad y rendimiento que CurDir en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.CurrentDirectory Property.
        </summary>
      <returns>
          Devuelve una cadena que representa la ruta de acceso actual. El My.Computer.FileSystem Object proporciona más productividad y rendimiento que CurDir en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.CurrentDirectory Property.
        </returns>
      <param name="Drive">
              Es opcional. Expresión de tipo Char que especifica una unidad existente. Si no se especifica ninguna unidad o si <paramref name="Drive" /> es una cadena de longitud cero (""), CurDir devuelve la ruta de acceso a la unidad actual.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary>
          Devuelve una cadena que representa el nombre de un archivo, un directorio o una carpeta que coincide con un atributo de archivo o modelo especificado, o la etiqueta de volumen de una unidad. El My.Computer.FileSystem Object proporciona más productividad y rendimiento que la función Dir en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.GetDirectoryInfo Method.
        </summary>
      <returns>
          Devuelve una cadena que representa el nombre de un archivo, un directorio o una carpeta que coincide con un atributo de archivo o modelo especificado, o la etiqueta de volumen de una unidad. El My.Computer.FileSystem Object proporciona más productividad y rendimiento que la función Dir en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.GetDirectoryInfo Method.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>
          Devuelve una cadena que representa el nombre de un archivo, un directorio o una carpeta que coincide con un atributo de archivo o modelo especificado, o la etiqueta de volumen de una unidad. El My.Computer.FileSystem Object proporciona más productividad y rendimiento que la función Dir en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.GetDirectoryInfo Method.
        </summary>
      <returns>
          Devuelve una cadena que representa el nombre de un archivo, un directorio o una carpeta que coincide con un atributo de archivo o modelo especificado, o la etiqueta de volumen de una unidad. El My.Computer.FileSystem Object proporciona más productividad y rendimiento que la función Dir en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.GetDirectoryInfo Method.
        </returns>
      <param name="PathName">
              Es opcional. Expresión de tipo String que especifica un nombre de archivo, directorio o carpeta, o bien, la etiqueta de volumen de la unidad. Si no se encuentra <paramref name="PathName" />, se devuelve una cadena de longitud cero (""). 
            </param>
      <param name="Attributes">
              Es opcional. Enumeración o expresión numérica cuyo valor especifica los atributos de archivo. Si se omite, Dir devuelve archivos que coinciden con <paramref name="PathName" /> pero que no tienen ningún atributo.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary>
          Devuelve un valor booleano o True cuando se alcanza el final de un archivo abierto para Input de tipo Random o secuencial.
        </summary>
      <returns>
          Devuelve un valor booleano o True cuando se alcanza el final de un archivo abierto para Random o Input secuencial.
        </returns>
      <param name="FileNumber">
              Es un parámetro necesario. Integer que contiene cualquier número de archivo válido.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary>
          Devuelve una enumeración que representa el modo de archivo de los archivos abiertos mediante la función FileOpen. El My.Computer.FileSystem Object proporciona más productividad y rendimiento que la función FileAttr  en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.GetFileInfo Method.
        </summary>
      <returns>
          Valor 1, modo OpenMode.Input.  Valor 2, modo OpenMode.Output.  Valor 4, modo OpenMode.Random.  Valor 8, modo OpenMode.Append.  Valor 32, modo OpenMode.Binary. 
        </returns>
      <param name="FileNumber">
              Es un parámetro necesario. Integer. Cualquier número de archivo válido.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary>
          Concluye la entrada/salida (E/S) a un archivo abierto utilizando la función FileOpen. My proporciona más productividad y rendimiento en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumbers">
              Es opcional. Matriz de parámetros de 0 o más canales que se van a cerrar. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary>
          Copia un archivo. El My.Computer.FileSystem Object proporciona más productividad y rendimiento que FileCopy en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.CopyFile Method.
        </summary>
      <param name="Source">
              Es un parámetro necesario. Expresión de tipo String que especifica el nombre del archivo que se va a copiar. <paramref name="Source" /> puede incluir el directorio o la carpeta así como la unidad del archivo de código fuente.
            </param>
      <param name="Destination">
              Es un parámetro necesario. Expresión de tipo String que especifica el nombre del archivo de destino. <paramref name="Destination" /> puede incluir el directorio o la carpeta así como la unidad del archivo de destino.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary>
          Devuelve un valor de Date que indica la fecha y la hora de creación o de la última modificación de un archivo. La característica My proporciona más productividad y rendimiento que FileDateTime en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.GetFileInfo Method.
        </summary>
      <returns>
          Devuelve un valor de Date que indica la fecha y la hora de creación o de la última modificación de un archivo. La característica My proporciona más productividad y rendimiento que FileDateTime en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.GetFileInfo Method.
        </returns>
      <param name="PathName">
              Es un parámetro necesario. Expresión de tipo String que especifica un nombre de archivo. <paramref name="PathName" /> puede incluir el directorio o la carpeta y la unidad.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary>
          Lee los datos de un archivo de disco abierto en una variable. La característica My proporciona más productividad y rendimiento que FileGet en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de la variable en la que se van a leer los datos.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la lectura.
            </param>
      <param name="ArrayIsDynamic">
              Es opcional. Sólo se aplica al escribir una matriz. Especifica si la matriz debe tratarse como una matriz dinámica y si es necesario un descriptor que describa el tamaño y los límites de la matriz.
            </param>
      <param name="StringIsFixedLength">
              Es opcional. Se aplica sólo al escribir una cadena. Especifica si se va a escribir un descriptor de 2 bytes para la cadena que describe la longitud. El valor predeterminado es False.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary>
          Lee los datos de un archivo de disco abierto en una variable. La característica My proporciona más productividad y rendimiento que FileGet en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de la variable en la que se van a leer los datos.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la lectura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary>
          Lee los datos de un archivo de disco abierto en una variable. La característica My proporciona más productividad y rendimiento que FileGet en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de la variable en la que se van a leer los datos.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la lectura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary>
          Lee los datos de un archivo de disco abierto en una variable. La característica My proporciona más productividad y rendimiento que FileGet en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de la variable en la que se van a leer los datos.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la lectura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary>
          Lee los datos de un archivo de disco abierto en una variable. La característica My proporciona más productividad y rendimiento que FileGet en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de la variable en la que se van a leer los datos.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la lectura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary>
          Lee los datos de un archivo de disco abierto en una variable. La característica My proporciona más productividad y rendimiento que FileGet en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de la variable en la que se van a leer los datos.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la lectura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary>
          Lee los datos de un archivo de disco abierto en una variable. La característica My proporciona más productividad y rendimiento que FileGet en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de la variable en la que se van a leer los datos.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la lectura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary>
          Lee los datos de un archivo de disco abierto en una variable. La característica My proporciona más productividad y rendimiento que FileGet en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de la variable en la que se van a leer los datos.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la lectura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary>
          Lee los datos de un archivo de disco abierto en una variable. La característica My proporciona más productividad y rendimiento que FileGet en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de la variable en la que se van a leer los datos.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la lectura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary>
          Lee los datos de un archivo de disco abierto en una variable. La característica My proporciona más productividad y rendimiento que FileGet en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de la variable en la que se van a leer los datos.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la lectura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary>
          Lee los datos de un archivo de disco abierto en una variable. La característica My proporciona más productividad y rendimiento que FileGet en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de la variable en la que se van a leer los datos.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la lectura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary>
          Lee los datos de un archivo de disco abierto en una variable. La característica My proporciona más productividad y rendimiento que FileGet en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de la variable en la que se van a leer los datos.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la lectura.
            </param>
      <param name="StringIsFixedLength">
              Es opcional. Se aplica sólo al escribir una cadena. Especifica si se va a escribir un descriptor de 2 bytes para la cadena que describe la longitud. El valor predeterminado es False.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary>
          Lee los datos de un archivo de disco abierto en una variable. La característica My proporciona más productividad y rendimiento que FileGet en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de la variable en la que se van a leer los datos.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la lectura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary>
          Lee los datos de un archivo de disco abierto en una variable.  La característica My proporciona más productividad y rendimiento que FileGetObject en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de la variable en la que se van a leer los datos.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la lectura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary>
          Devuelve un valor de tipo Long que especifica la longitud de un archivo en bytes. La característica My proporciona más productividad y rendimiento que FileLen en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.GetFileInfo Method.
        </summary>
      <returns>
          Devuelve un valor de tipo Long que especifica la longitud de un archivo en bytes. La característica My proporciona más productividad y rendimiento que FileLen en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.GetFileInfo Method.
        </returns>
      <param name="PathName">
              Es un parámetro necesario. Expresión de tipo String que especifica un archivo. <paramref name="PathName" /> puede incluir el directorio o la carpeta y la unidad.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary>
          Abre un archivo para operaciones de entrada o salida. La característica My proporciona más productividad y rendimiento que FileOpen en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object. 
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido. Utilice la función FreeFile para obtener el siguiente número de archivo disponible.
            </param>
      <param name="FileName">
              Es un parámetro necesario. Expresión de tipo String que especifica un nombre de archivo y que puede incluir el directorio o la carpeta y la unidad.
            </param>
      <param name="Mode">
              Es un parámetro necesario. Enumeración que especifica el modo de archivo: Append, Binary, Input, Output o Random. (Para obtener más información, vea OpenMode Enumeration).
            </param>
      <param name="Access">
              Es opcional. Enumeración que especifica las operaciones permitidas en el archivo abierto: Read, Write o ReadWrite. Tiene como valor predeterminado ReadWrite. (Para obtener más información, vea OpenAccess Enumeration).
            </param>
      <param name="Share">
              Es opcional. Enumeración que especifica las operaciones no permitidas en el archivo abierto por otros procesos: Shared, Lock Read, Lock Write y Lock Read Write. Tiene como valor predeterminado Lock Read Write. (Para obtener más información, vea OpenShare Enumeration).
            </param>
      <param name="RecordLength">
              Es opcional. Número menor o igual que 32.767 (bytes). En el caso de los archivos abiertos para el acceso aleatorio, este valor es la longitud de registro. En el caso de los archivos secuenciales, este valor es el número de caracteres almacenados en búfer.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary>
          Escribe los datos de una variable en un archivo de disco. La característica My proporciona más productividad y rendimiento que FilePut en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <param name="ArrayIsDynamic">
              Es opcional. Sólo se aplica al escribir una matriz. Especifica si la matriz se va a tratar como una matriz dinámica y si se va a escribir un descriptor de matriz para la cadena que describe la longitud. 
            </param>
      <param name="StringIsFixedLength">
              Es opcional. Se aplica sólo al escribir una cadena. Especifica si se va a escribir un descriptor de longitud de cadena de 2 bytes para la cadena en el archivo. El valor predeterminado es False.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary>
          Escribe los datos de una variable en un archivo de disco. La característica My proporciona más productividad y rendimiento que FilePut en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary>
          Escribe los datos de una variable en un archivo de disco. La característica My proporciona más productividad y rendimiento que FilePut en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary>
          Escribe los datos de una variable en un archivo de disco. La característica My proporciona más productividad y rendimiento que FilePut en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary>
          Escribe los datos de una variable en un archivo de disco. La característica My proporciona más productividad y rendimiento que FilePut en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary>
          Escribe los datos de una variable en un archivo de disco. La característica My proporciona más productividad y rendimiento que FilePut en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary>
          Escribe los datos de una variable en un archivo de disco. La característica My proporciona más productividad y rendimiento que FilePut en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary>
          Escribe los datos de una variable en un archivo de disco. La característica My proporciona más productividad y rendimiento que FilePut en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary>
          Escribe los datos de una variable en un archivo de disco. La característica My proporciona más productividad y rendimiento que FilePut en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary>
          Escribe los datos de una variable en un archivo de disco. La característica My proporciona más productividad y rendimiento que FilePut en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary>
          Escribe los datos de una variable en un archivo de disco. La característica My proporciona más productividad y rendimiento que FilePut en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary>
          Escribe los datos de una variable en un archivo de disco. La característica My proporciona más productividad y rendimiento que FilePut en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <param name="StringIsFixedLength">
              Es opcional. Se aplica sólo al escribir una cadena. Especifica si se va a escribir un descriptor de longitud de cadena de 2 bytes para la cadena en el archivo. El valor predeterminado es False.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary>
          Escribe los datos de una variable en un archivo de disco. La característica My proporciona más productividad y rendimiento que FilePut en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary>
          Escribe los datos de una variable en un archivo de disco. La característica My proporciona más productividad y rendimiento que FilePut en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary>
          Escribe los datos de una variable en un archivo de disco.  La característica My proporciona más productividad y rendimiento que FilePutObject en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. Nombre válido de variable que contiene los datos escritos en disco.
            </param>
      <param name="RecordNumber">
              Es opcional. Número de registro (archivos en modo Random) o número de byte (archivos en modo Binary) en el que comienza la escritura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary>
          Asigna un ancho de línea de salida a un archivo abierto mediante la función FileOpen.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="RecordWidth">
              Es un parámetro necesario. Expresión numérica del 0 al 255, inclusive, que indica el número de caracteres que aparecen en una línea antes de que se inicie una nueva línea. Si el valor de <paramref name="RecordWidth" /> es 0, la longitud de línea no tiene límite. El valor predeterminado de <paramref name="RecordWidth" /> es 0.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary>
          Devuelve un valor de tipo Integer que representa el siguiente número de archivo disponible para la función FileOpen.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer que representa el siguiente número de archivo disponible para la función FileOpen.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary>
          Devuelve un valor de FileAttribute que representa los atributos de un archivo, un directorio o una carpeta. La característica My proporciona más productividad y rendimiento que FileAttribute en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <returns>
          Valor Normal, Constante vbNormal, Descripción: normal. Valor ReadOnly, Constante vbReadOnly, Descripción: de sólo lectura. Valor Hidden, Constante vbHidden, Descripción: oculto. Valor System, Constante vbSystem, Descripción: sistema de archivos. Valor Directory, Constante vbDirectory, Descripción: directorio o carpeta. Valor Archive, Constante vbArchive, Descripción: el archivo ha cambiado desde la última copia de seguridad. Valor Alias, Constante vbAlias, Descripción: el archivo tiene otro nombre.
        </returns>
      <param name="PathName">
              Es un parámetro necesario. Expresión de tipo String que especifica un nombre de archivo, directorio o carpeta. <paramref name="PathName" /> puede incluir el directorio o la carpeta y la unidad.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary>
          Lee los datos de un archivo secuencial abierto y los asigna a variables.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. La variable a la que se han asignado los valores leídos del archivo no puede ser una variable de objeto o matriz.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary>
          Lee los datos de un archivo secuencial abierto y los asigna a variables.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. La variable a la que se han asignado los valores leídos del archivo no puede ser una variable de objeto o matriz.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary>
          Lee los datos de un archivo secuencial abierto y los asigna a variables.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. La variable a la que se han asignado los valores leídos del archivo no puede ser una variable de objeto o matriz.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary>
          Lee los datos de un archivo secuencial abierto y los asigna a variables.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. La variable a la que se han asignado los valores leídos del archivo no puede ser una variable de objeto o matriz.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary>
          Lee los datos de un archivo secuencial abierto y los asigna a variables.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. La variable a la que se han asignado los valores leídos del archivo no puede ser una variable de objeto o matriz.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary>
          Lee los datos de un archivo secuencial abierto y los asigna a variables.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. La variable a la que se han asignado los valores leídos del archivo no puede ser una variable de objeto o matriz.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary>
          Lee los datos de un archivo secuencial abierto y los asigna a variables.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. La variable a la que se han asignado los valores leídos del archivo no puede ser una variable de objeto o matriz.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary>
          Lee los datos de un archivo secuencial abierto y los asigna a variables.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. La variable a la que se han asignado los valores leídos del archivo no puede ser una variable de objeto o matriz.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary>
          Lee los datos de un archivo secuencial abierto y los asigna a variables.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. La variable a la que se han asignado los valores leídos del archivo no puede ser una variable de objeto o matriz.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary>
          Lee los datos de un archivo secuencial abierto y los asigna a variables.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. La variable a la que se han asignado los valores leídos del archivo no puede ser una variable de objeto o matriz.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary>
          Lee los datos de un archivo secuencial abierto y los asigna a variables.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. La variable a la que se han asignado los valores leídos del archivo no puede ser una variable de objeto o matriz.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary>
          Lee los datos de un archivo secuencial abierto y los asigna a variables.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Value">
              Es un parámetro necesario. La variable a la que se han asignado los valores leídos del archivo no puede ser una variable de objeto o matriz.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary>
          Devuelve un valor de tipo String que contiene los caracteres de un archivo abierto en modo Input o Binary. La característica My proporciona más productividad y rendimiento que InputString en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <returns>
          Devuelve un valor de tipo String que contiene los caracteres de un archivo abierto en modo Input o Binary. La característica My proporciona más productividad y rendimiento que InputString en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </returns>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="CharCount">
              Es un parámetro necesario. Cualquier expresión numérica válida que especifique el número de caracteres que se van a leer.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary>
          Elimina archivos de un disco. La característica My proporciona más productividad y rendimiento que Kill en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="PathName">
              Es un parámetro necesario. Expresión de tipo String que especifica uno o varios nombres de archivo que se van a eliminar. <paramref name="PathName" /> puede incluir el directorio o la carpeta y la unidad.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary>
          Lee una sola línea de un archivo secuencial abierto y la asigna a una variable de String.
        </summary>
      <returns>
          Lee una sola línea de un archivo secuencial abierto y la asigna a una variable de String.
        </returns>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary>
          Devuelve un valor de tipo Long que especifica la actual posición de lectura y escritura en un archivo abierto.
        </summary>
      <returns>
          Devuelve un valor de tipo Long que especifica la actual posición de lectura y escritura en un archivo abierto.
        </returns>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido de tipo Integer.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary>
          Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función Open. La característica My proporciona más productividad y rendimiento que Lock y Unlock en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary>
          Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función Open. La característica My proporciona más productividad y rendimiento que Lock y Unlock en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Record">
              Es opcional. Número del único registro o byte que se va a bloquear o desbloquear.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary>
          Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función Open. La característica My proporciona más productividad y rendimiento que Lock y Unlock en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="FromRecord">
              Es opcional. Número del primer registro o byte que se va a bloquear o desbloquear.
            </param>
      <param name="ToRecord">
              Es opcional. Número del último registro o byte que se va a bloquear o desbloquear.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary>
          Devuelve un valor de tipo Long que representa el tamaño, en bytes, de un archivo abierto mediante la función FileOpen. La característica My proporciona más productividad y rendimiento que LOF en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <returns>
          Devuelve un valor de tipo Long que representa el tamaño, en bytes, de un archivo abierto mediante la función FileOpen. La característica My proporciona más productividad y rendimiento que LOF en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </returns>
      <param name="FileNumber">
              Es un parámetro necesario. Integer que contiene un número de archivo válido.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary>
          Crea un nuevo directorio. La característica My proporciona más productividad y rendimiento que MkDir en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.CreateDirectory Method.
        </summary>
      <param name="Path">
              Es un parámetro necesario. Expresión de tipo String que identifica el directorio que se va a crear. <paramref name="Path" /> puede incluir la unidad. Si no hay ninguna unidad especificada, MkDir crea el nuevo directorio en la unidad actual.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary>
          Escribe datos con formato de presentación en un archivo secuencial.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Output">
              Es opcional. Cero o más expresiones delimitadas por comas que se van a escribir en un archivo.
              Los valores de los argumentos de <paramref name="Output" /> son: 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary>
          Escribe datos con formato de presentación en un archivo secuencial.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Output">
              Es opcional. Cero o más expresiones delimitadas por comas que se van a escribir en un archivo.
              Los valores de los argumentos de <paramref name="Output" /> son: 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary>
          Cambia el nombre de un archivo o directorio ubicado en el disco. La característica My proporciona más productividad y rendimiento que Rename en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="OldPath">
              Es un parámetro necesario. Expresión de tipo String que especifica el nombre y la ubicación de archivo existentes. <paramref name="OldPath" /> puede incluir el directorio y la unidad del archivo.
            </param>
      <param name="NewPath">
              Es un parámetro necesario. Expresión de tipo String que especifica el nuevo nombre de archivo y la nueva ubicación. <paramref name="NewPath" /> puede incluir el directorio y la unidad de la ubicación de destino. El nombre de archivo especificado por <paramref name="NewPath" /> no puede existir.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary>
          Cierra todos los archivos ubicados en el disco que se han abierto mediante la función FileOpen. La característica My proporciona más productividad y rendimiento que Reset en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary>
          Quita un directorio existente. La característica My proporciona más productividad y rendimiento que RmDir en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem.DeleteDirectory Method.
        </summary>
      <param name="Path">
              Es un parámetro necesario. Expresión de tipo String que identifica el directorio o la carpeta que se va a quitar. <paramref name="Path" /> puede incluir la unidad. Si no hay ninguna unidad especificada, RmDir quita el directorio de la unidad actual.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary>
          Devuelve un valor Long que especifica la posición actual de lectura o escritura en un archivo abierto con la función FileOpen o bien establece la posición de la siguiente operación de lectura o escritura en un archivo abierto con la función FileOpen. La característica My proporciona más productividad y rendimiento que Seek en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <returns>
          Devuelve un valor Long que especifica la posición actual de lectura o escritura en un archivo abierto con la función FileOpen o bien establece la posición de la siguiente operación de lectura o escritura en un archivo abierto con la función FileOpen. La característica My proporciona más productividad y rendimiento que Seek en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </returns>
      <param name="FileNumber">
              Es un parámetro necesario. Integer que contiene un número de archivo válido.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary>
          Devuelve un valor Long que especifica la posición actual de lectura o escritura en un archivo abierto con la función FileOpen o bien establece la posición de la siguiente operación de lectura o escritura en un archivo abierto con la función FileOpen. La característica My proporciona más productividad y rendimiento que Seek en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Integer que contiene un número de archivo válido.
            </param>
      <param name="Position">
              Es un parámetro necesario. Número del 1 al 2.147.483.647, incluido, que indica dónde debe llevarse a cabo la siguiente operación de lectura o escritura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>
          Establece la información de atributos de un archivo. La característica My proporciona más productividad y rendimiento que SetAttr en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="PathName">
              Es un parámetro necesario. Expresión de tipo String que especifica un nombre de archivo. <paramref name="PathName" /> puede incluir el directorio o la carpeta y la unidad.
            </param>
      <param name="Attributes">
              Es un parámetro necesario. Constante o expresión numérica, cuya suma especifica los atributos de un archivo.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary>
          Se utiliza con la función Print o PrintLine para colocar la salida.
        </summary>
      <returns>
          Se utiliza con la función Print o PrintLine para colocar la salida.
        </returns>
      <param name="Count">
              Es un parámetro necesario. Número de espacios que se van a insertar antes de mostrar o imprimir la siguiente expresión en una lista.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary>
          Se utiliza con la función Print o PrintLine para colocar el resultado.
        </summary>
      <returns>
          Se utiliza con la función Print o PrintLine para colocar el resultado.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary>
          Se utiliza con la función Print o PrintLine para colocar el resultado.
        </summary>
      <returns>
          Se utiliza con la función Print o PrintLine para colocar el resultado.
        </returns>
      <param name="Column">
              Es opcional. Número de columna a la que se realiza el desplazamiento antes de mostrar o imprimir la siguiente expresión en una lista. Si se omite, TAB mueve el punto de inserción al principio de la siguiente zona de impresión. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary>
          Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función Open. La característica My proporciona más productividad y rendimiento que Lock y Unlock en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary>
          Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función Open. La característica My proporciona más productividad y rendimiento que Lock y Unlock en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="Record">
              Es opcional. Número del único registro o byte que se va a bloquear o desbloquear.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary>
          Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función Open. La característica My proporciona más productividad y rendimiento que Lock y Unlock en las operaciones de E/S con archivos. Para obtener más información, vea My.Computer.FileSystem Object.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Cualquier número de archivo válido.
            </param>
      <param name="FromRecord">
              Es opcional. Número del primer registro o byte que se va a bloquear o desbloquear.
            </param>
      <param name="ToRecord">
              Es opcional. Número del último registro o byte que se va a bloquear o desbloquear.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary>
          Escribe datos en un archivo secuencial. Los datos escritos con Write se leen normalmente de un archivo mediante Input.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Expresión  de tipo Integer que contiene cualquier número de archivo válido.
            </param>
      <param name="Output">
              Es opcional. Una o más expresiones delimitadas por comas que se van a escribir en un archivo.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary>
          Escribe datos en un archivo secuencial. Los datos escritos con Write se leen normalmente de un archivo mediante Input.
        </summary>
      <param name="FileNumber">
              Es un parámetro necesario. Expresión  de tipo Integer que contiene cualquier número de archivo válido.
            </param>
      <param name="Output">
              Es opcional. Una o más expresiones delimitadas por comas que se van a escribir en un archivo.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary>
          El módulo Financial contiene los procedimientos que se utilizan para llevar a cabo operaciones financieras. 
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
          Devuelve un valor de tipo Double que especifica la amortización de un activo durante un período de tiempo específico mediante el método de amortización doble de saldo decreciente o algún otro método que se especifique.
        </summary>
      <returns>
          Devuelve un valor de tipo Double que especifica la amortización de un activo durante un período de tiempo específico mediante el método de amortización doble de saldo decreciente o algún otro método que se especifique.
        </returns>
      <param name="Cost">
              Es un parámetro necesario. Double que especifica el costo inicial del activo.
            </param>
      <param name="Salvage">
              Es un parámetro necesario. Double que especifica el valor del activo al final de su vida útil.
            </param>
      <param name="Life">
              Es un parámetro necesario. Double que especifica la longitud de la vida útil del activo.
            </param>
      <param name="Period">
              Es un parámetro necesario. Double que especifica el período por el cual se calcula la amortización del activo.
            </param>
      <param name="Factor">
              Es opcional. Double que especifica la tasa con la que decrece el saldo. Si se omite, se supone 2 (método de amortización doble de saldo decreciente).
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>
          Devuelve un valor de tipo Double que especifica el valor futuro de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.
        </summary>
      <returns>
          Devuelve un valor de tipo Double que especifica el valor futuro de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.
        </returns>
      <param name="Rate">
              Es un parámetro necesario. Double que especifica el tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.
            </param>
      <param name="NPer">
              Es un parámetro necesario. Double que especifica el número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.
            </param>
      <param name="Pmt">
              Es un parámetro necesario. Double que especifica el pago que se va a realizar en cada período. Normalmente, los pagos contienen principal e interés que no cambia durante la vida útil de la anualidad.
            </param>
      <param name="PV">
              Es opcional. Double que especifica valor presente (o suma global) de una serie de pagos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar. Si se omite, se supone que el valor es 0.
            </param>
      <param name="Due">
              Es opcional. Objeto de tipo DueDate Enumeration que indica cuándo vencen los pagos. Este argumento debe ser DueDate.EndOfPeriod si los pagos vencen al final del período o DueDate.BegOfPeriod si los pagos vencen al principio del mismo. Si se omite, se supone que es DueDate.EndOfPeriod.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>
          Devuelve un valor de tipo Double que especifica el pago de intereses durante un período determinado de una anualidad basándose en los pagos fijos periódicos y una tasa de interés fija.
        </summary>
      <returns>
          Devuelve un valor de tipo Double que especifica el pago de intereses durante un período determinado de una anualidad basándose en los pagos fijos periódicos y una tasa de interés fija.
        </returns>
      <param name="Rate">
              Es un parámetro necesario. Double que especifica el tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.
            </param>
      <param name="Per">
              Es un parámetro necesario. Double que especifica el período de pago de 1 a <paramref name="NPer" />.
            </param>
      <param name="NPer">
              Es un parámetro necesario. Double que especifica el número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.
            </param>
      <param name="PV">
              Es un parámetro necesario. Double que especifica el valor presente o actual de una serie de pagos o ingresos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.
            </param>
      <param name="FV">
              Es opcional. Double que indica el valor futuro o el saldo en efectivo que se desea tener una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.
            </param>
      <param name="Due">
              Es opcional. Objeto de tipo DueDate Enumeration que indica cuándo vencen los pagos. Este argumento debe ser DueDate.EndOfPeriod si los pagos vencen al final del período o DueDate.BegOfPeriod si los pagos vencen al principio del mismo. Si se omite, se supone que es DueDate.EndOfPeriod.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary>
          Devuelve un valor de tipo Double que especifica la tasa de rendimiento interna para una serie de flujos de caja periódicos (pagos e ingresos).
        </summary>
      <returns>
          Devuelve un valor de tipo Double que especifica la tasa de rendimiento interna para una serie de flujos de caja periódicos (pagos e ingresos).
        </returns>
      <param name="ValueArray">
              Es un parámetro necesario. Matriz de Double que especifica los valores de flujo de caja. La matriz debe contener por lo menos un valor negativo (un pago) y un valor positivo (un ingreso).
            </param>
      <param name="Guess">
              Es opcional. IRR devuelve un objeto que especifica el valor estimado. Si se omite <paramref name="Guess" /> es 0,1 (10 por ciento).
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary>
          Devuelve un valor de tipo Double que especifica la tasa de rendimiento interna modificada para una serie de flujos de caja periódicos (pagos e ingresos).
        </summary>
      <returns>
          Devuelve un valor de tipo Double que especifica la tasa de rendimiento interna modificada para una serie de flujos de caja periódicos (pagos e ingresos).
        </returns>
      <param name="ValueArray">
              Es un parámetro necesario. Matriz de Double que especifica los valores de flujo de caja. La matriz debe contener por lo menos un valor negativo (un pago) y un valor positivo (un ingreso).
            </param>
      <param name="FinanceRate">
              Es un parámetro necesario. Double que especifica el tipo de interés pagado como costo de la financiación.
            </param>
      <param name="ReinvestRate">
              Es un parámetro necesario. Double que especifica el tipo de interés de las ganancias por la reinversión del dinero en efectivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>
          Devuelve un valor de tipo Double que especifica el número de períodos de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.
        </summary>
      <returns>
          Devuelve un valor de tipo Double que especifica el número de períodos de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.
        </returns>
      <param name="Rate">
              Es un parámetro necesario. Double que especifica el tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.
            </param>
      <param name="Pmt">
              Es un parámetro necesario. Double que especifica el pago que se va a realizar en cada período. Normalmente, los pagos contienen principal e interés que no cambia durante la vida útil de la anualidad.
            </param>
      <param name="PV">
              Es un parámetro necesario. Double que especifica el valor presente o actual de una serie de pagos o ingresos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.
            </param>
      <param name="FV">
              Es opcional. Double que indica el valor futuro o el saldo en efectivo que se desea tener una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.
            </param>
      <param name="Due">
              Es opcional. Objeto de tipo DueDate Enumeration que indica cuándo vencen los pagos. Este argumento debe ser DueDate.EndOfPeriod si los pagos vencen al final del período o DueDate.BegOfPeriod si los pagos vencen al principio del mismo. Si se omite, se supone que es DueDate.EndOfPeriod.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary>
          Devuelve un valor de tipo Double que especifica el valor presente neto de una inversión basándose en una serie de flujos de caja periódicos (pagos e ingresos) y una tasa de descuento.
        </summary>
      <returns>
          Devuelve un valor de tipo Double que especifica el valor presente neto de una inversión basándose en una serie de flujos de caja periódicos (pagos e ingresos) y una tasa de descuento.
        </returns>
      <param name="Rate">
              Es un parámetro necesario. Double que especifica la tasa de descuento durante el período, expresada como un valor decimal.
            </param>
      <param name="ValueArray">
              Es un parámetro necesario. Matriz de Double que especifica los valores de flujo de caja. La matriz debe contener por lo menos un valor negativo (un pago) y un valor positivo (un ingreso).
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>
          Devuelve un valor de tipo Double que especifica el pago de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.
        </summary>
      <returns>
          Devuelve un valor de tipo Double que especifica el pago de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.
        </returns>
      <param name="Rate">
              Es un parámetro necesario. Double que especifica el tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.
            </param>
      <param name="NPer">
              Es un parámetro necesario. Double que indica el número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.
            </param>
      <param name="PV">
              Es un parámetro necesario. Double que especifica el valor presente (o suma global ) actual de una serie de pagos que se van a pagar en el futuro. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.
            </param>
      <param name="FV">
              Es opcional. Double que indica el valor futuro o el saldo en efectivo que se desea tener una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.
            </param>
      <param name="Due">
              Es opcional. Objeto de tipo DueDate Enumeration que indica cuándo vencen los pagos. Este argumento debe ser DueDate.EndOfPeriod si los pagos vencen al final del período o DueDate.BegOfPeriod si los pagos vencen al principio del mismo. Si se omite, se supone que es DueDate.EndOfPeriod.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>
          Devuelve un valor de tipo Double que especifica el pago de principal durante un período determinado de una anualidad basándose en los pagos fijos periódicos y una tasa de interés fija.
        </summary>
      <returns>
          Devuelve un valor de tipo Double que especifica el pago de principal durante un período determinado de una anualidad basándose en los pagos fijos periódicos y una tasa de interés fija.
        </returns>
      <param name="Rate">
              Es un parámetro necesario. Double que especifica el tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.
            </param>
      <param name="Per">
              Es un parámetro necesario. Double que especifica el período de pago de 1 a <paramref name="NPer" />.
            </param>
      <param name="NPer">
              Es un parámetro necesario. Double que indica el número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.
            </param>
      <param name="PV">
              Es un parámetro necesario. Double especifica el valor actual de una serie de pagos o ingresos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.
            </param>
      <param name="FV">
              Es opcional. Double que indica el valor futuro o el saldo en efectivo que se desea tener una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.
            </param>
      <param name="Due">
              Es opcional. Objeto de tipo DueDate Enumeration que indica cuándo vencen los pagos. Este argumento debe ser DueDate.EndOfPeriod si los pagos vencen al final del período o DueDate.BegOfPeriod si los pagos vencen al principio del mismo. Si se omite, se supone que es DueDate.EndOfPeriod.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>
          Devuelve un valor de tipo Double que especifica el valor presente de una anualidad basándose en los pagos periódicos y fijos que se van a realizar en el futuro así como un tipo de interés fijo.
        </summary>
      <returns>
          Devuelve un valor de tipo Double que especifica el valor presente de una anualidad basándose en los pagos periódicos y fijos que se van a realizar en el futuro así como un tipo de interés fijo.
        </returns>
      <param name="Rate">
              Es un parámetro necesario. Double que especifica el tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.
            </param>
      <param name="NPer">
              Es un parámetro necesario. Double que indica el número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.
            </param>
      <param name="Pmt">
              Es un parámetro necesario. Double que especifica el pago que se va a realizar en cada período. Normalmente, los pagos contienen principal e interés que no cambia durante la vida útil de la anualidad.
            </param>
      <param name="FV">
              Es opcional. Double que especifica el valor futuro o el saldo en efectivo que se desea tener una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.
            </param>
      <param name="Due">
              Es opcional. Objeto de tipo DueDate Enumeration que indica cuándo vencen los pagos. Este argumento debe ser DueDate.EndOfPeriod si los pagos vencen al final del período o DueDate.BegOfPeriod si los pagos vencen al principio del mismo. Si se omite, se supone que es DueDate.EndOfPeriod.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary>
          Devuelve un valor de tipo Double que especifica el tipo de interés por período de una anualidad.
        </summary>
      <returns>
          Devuelve un valor de tipo Double que especifica el tipo de interés por período de una anualidad.
        </returns>
      <param name="NPer">
              Es un parámetro necesario. Double que indica el número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4*12 (o 48) períodos de pago.
            </param>
      <param name="Pmt">
              Es un parámetro necesario. Double que especifica el pago que se va a realizar en cada período. Normalmente, los pagos contienen principal e interés que no cambia durante la vida útil de la anualidad.
            </param>
      <param name="PV">
              Es un parámetro necesario. Double que especifica el valor presente o actual de una serie de pagos o ingresos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.
            </param>
      <param name="FV">
              Es opcional. Double que especifica el valor futuro o el saldo en efectivo que se desea tener una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.
            </param>
      <param name="Due">
              Es opcional. Objeto de tipo DueDate Enumeration que indica cuándo vencen los pagos. Este argumento debe ser DueDate.EndOfPeriod si los pagos vencen al final del período o DueDate.BegOfPeriod si los pagos vencen al principio del mismo. Si se omite, se supone que es DueDate.EndOfPeriod.
            </param>
      <param name="Guess">
              Es opcional. Rate devuelve un valor de tipo Double que especifica el valor estimado. Si se omite <paramref name="Guess" /> es 0,1 (10 por ciento).
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary>
          Devuelve un valor de tipo Double que especifica la amortización lineal de un activo para un solo período.
        </summary>
      <returns>
          Devuelve un valor de tipo Double que especifica la amortización lineal de un activo para un solo período.
        </returns>
      <param name="Cost">
              Es un parámetro necesario. Double que especifica el costo inicial del activo.
            </param>
      <param name="Salvage">
              Es un parámetro necesario. Double que especifica el valor del activo al final de su vida útil.
            </param>
      <param name="Life">
              Es un parámetro necesario. Double que especifica la longitud de la vida útil del activo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary>
          Devuelve un valor de tipo Double que especifica la amortización de la suma de cifras de los años de un activo para un período específico.
        </summary>
      <returns>
          Devuelve un valor de tipo Double que especifica la amortización de la suma de cifras de los años de un activo para un período específico.
        </returns>
      <param name="Cost">
              Es un parámetro necesario. Double que especifica el costo inicial del activo.
            </param>
      <param name="Salvage">
              Es un parámetro necesario. Double que especifica el valor del activo al final de su vida útil.
            </param>
      <param name="Life">
              Es un parámetro necesario. Double que especifica la longitud de la vida útil del activo.
            </param>
      <param name="Period">
              Es un parámetro necesario. Double que especifica el período por el cual se calcula la amortización del activo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary>
          Indica el primer día de la semana que se debe utilizar al llamar a funciones relacionadas con fechas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary>
          El primer día de la semana tal y como aparece especificado en la configuración del sistema. Este miembro es equivalente a vbUseSystemDayOfWeek de la constante de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary>
          Domingo (predeterminado). Este miembro es equivalente a vbSunday de la constante de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary>
          Lunes. Este miembro es equivalente a vbMonday de la constante de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary>
          Martes. Este miembro es equivalente a vbTuesday de la constante de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary>
          Miércoles. Este miembro es equivalente a vbWednesday de la constante de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary>
          Jueves. Este miembro es equivalente a vbThursday de la constante de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary>
          Viernes. Este miembro es equivalente a vbFriday de la constante de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary>
          Sábado. Este miembro es equivalente a vbSaturday de la constante de Visual Basic.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary>
          Indica la primera semana del año que se debe utilizar al llamar a las funciones relacionadas con fechas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary>
          El día de la semana que se haya especificado en la configuración del sistema como el primer día de la semana. Este miembro es equivalente a vbUseSystem de la constante de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary>
          La semana en la que aparece el 1 de enero (valor predeterminado). Este miembro es equivalente a vbFirstJan1 de la constante de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary>
          La primera semana que tiene, por lo menos, cuatro días en el nuevo año. Este miembro es equivalente a vbFirstFourDays de la constante de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary>
          La primera semana completa del año. Este miembro es equivalente a vbFirstFullWeek de la constante de Visual Basic.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Globals">
      <summary>
          El módulo Globals contiene las funciones del motor de secuencias de comandos. 
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngine">
      <summary>
          Devuelve un valor de tipo String que representa el motor en tiempo de ejecución actualmente en uso.
        </summary>
      <returns>
          Devuelve un valor de tipo String que representa el motor en tiempo de ejecución actualmente en uso.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngineBuildVersion">
      <summary>
          Devuelve un valor Integer que contiene el número de la versión de compilación del motor en tiempo de ejecución actualmente en uso.
        </summary>
      <returns>
          Devuelve un valor Integer que contiene el número de la versión de compilación del motor en tiempo de ejecución actualmente en uso.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngineMajorVersion">
      <summary>
          Devuelve un valor Integer que contiene el número de versión principal del motor en tiempo de ejecución actualmente en uso.
        </summary>
      <returns>
          Devuelve un valor Integer que contiene el número de versión principal del motor en tiempo de ejecución actualmente en uso.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngineMinorVersion">
      <summary>
          Devuelve un valor Integer que contiene el número de versión secundaria del motor en tiempo de ejecución actualmente en uso.
        </summary>
      <returns>
          Devuelve un valor Integer que contiene el número de versión secundaria del motor en tiempo de ejecución actualmente en uso.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary>
          El atributo HideModuleNameAttribute, cuando se aplica a un módulo, permite tener acceso a los miembros del módulo utilizando únicamente la cualificación requerida para el módulo.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia del atributo <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" />. 
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary>
          El módulo Information contiene los procedimientos que se utilizan para devolver o comprobar información. 
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Erl">
      <summary>
          Devuelve un entero que indica el número de línea de la última instrucción ejecutada Sólo lectura.
        </summary>
      <returns>
          Devuelve un entero que indica el número de línea de la última instrucción ejecutada Sólo lectura.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary>
          Contiene información sobre los errores en tiempo de ejecución.
        </summary>
      <returns>
          Contiene información sobre los errores en tiempo de ejecución.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary>
          Devuelve un valor de tipo Boolean que indica si una variable apunta a una matriz.
        </summary>
      <returns>
          Devuelve un valor de tipo Boolean que indica si una variable apunta a una matriz.
        </returns>
      <param name="VarName">
              Es un parámetro necesario. Variable de Object.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary>
          Devuelve un valor de tipo Boolean que indica si una expresión representa un valor de Date válido.
        </summary>
      <returns>
          Devuelve un valor de tipo Boolean que indica si una expresión representa un valor de Date válido.
        </returns>
      <param name="Expression">
              Es un parámetro necesario. Expresión de tipo Object.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary>
          Devuelve un valor de tipo Boolean que indica si una expresión se evalúa como clase <see cref="T:System.DBNull" />.
        </summary>
      <returns>
          Devuelve un valor de tipo Boolean que indica si una expresión se evalúa como clase <see cref="T:System.DBNull" />.
        </returns>
      <param name="Expression">
              Es un parámetro necesario. Expresión de tipo Object.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary>
          Devuelve un valor de tipo Boolean que indica si una expresión es un tipo de excepción.
        </summary>
      <returns>
          Devuelve un valor de tipo Boolean que indica si una expresión es un tipo de excepción.
        </returns>
      <param name="Expression">
              Es un parámetro necesario. Expresión de tipo Object.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary>
          Devuelve un valor de tipo Boolean que indica si una expresión no tiene ningún objeto asignado.
        </summary>
      <returns>
          Devuelve un valor de tipo Boolean que indica si una expresión no tiene ningún objeto asignado.
        </returns>
      <param name="Expression">
              Es un parámetro necesario. Expresión de tipo Object.
            </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary>
          Devuelve un valor de tipo Boolean que indica si una expresión puede evaluarse como un número.
        </summary>
      <returns>
          Devuelve un valor de tipo Boolean que indica si una expresión puede evaluarse como un número.
        </returns>
      <param name="Expression">
              Es un parámetro necesario. Expresión de tipo Object.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary>
          Devuelve un valor de tipo Boolean que indica si una expresión se evalúa como un tipo de referencia.
        </summary>
      <returns>
          Devuelve un valor de tipo Boolean que indica si una expresión se evalúa como un tipo de referencia.
        </returns>
      <param name="Expression">
              Es un parámetro necesario. Expresión de tipo Object.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary>
          Devuelve el subíndice más bajo que está disponible para la dimensión indicada de una matriz.
        </summary>
      <returns>
          
            Integer. Valor más bajo que el subíndice de la dimensión especificada puede contener. LBound siempre devuelve 0 si se ha inicializado <paramref name="Array" />, incluso si no tiene elementos; por ejemplo, si es una cadena de longitud cero. Si <paramref name="Array" /> es Nothing, LBound genera una excepción <see cref="T:System.ArgumentNullException" />.
        </returns>
      <param name="Array">
              Es un parámetro necesario. Matriz de cualquier tipo de datos. Matriz en la que se desea buscar el subíndice más bajo posible de una dimensión.
            </param>
      <param name="Rank">
              Es opcional. Integer. Dimensión para la que se va a devolver el subíndice más bajo posible. Utilice 1 para la primera dimensión, 2 para la segunda, etc. Si se omite <paramref name="Rank" />, se supone que el valor es 1.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary>
          Devuelve un valor de tipo Integer que representa el código de color RGB correspondiente al número de color especificado.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer que representa el código de color RGB correspondiente al número de color especificado.
        </returns>
      <param name="Color">
              Es un parámetro necesario. Número entero del 0 al 15.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary>
          Devuelve un valor de tipo Integer que representa un valor de color RGB de un conjunto de componentes de color rojo, verde y azul.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer que representa un valor de color RGB de un conjunto de componentes de color rojo, verde y azul.
        </returns>
      <param name="Red">
              Es un parámetro necesario. Integer del 0 al 255, inclusive, que representa la intensidad del componente rojo del color.
            </param>
      <param name="Green">
              Es un parámetro necesario. Integer del 0 al 255, inclusive, que representa la intensidad del componente verde del color.
            </param>
      <param name="Blue">
              Es un parámetro necesario. Integer del 0 al 255, inclusive, que representa la intensidad del componente azul del color.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary>
          Devuelve un valor de tipo String que contiene el nombre del tipo de datos del sistema de una variable.
        </summary>
      <returns>
          Devuelve un valor de tipo String que contiene el nombre del tipo de datos del sistema de una variable.
        </returns>
      <param name="VbName">
              Es un parámetro necesario. Variable de String que contiene un nombre de tipo de Visual Basic.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary>
          Devuelve un valor de tipo String que contiene información del tipo de datos de una variable.
        </summary>
      <returns>
          Devuelve un valor de tipo String que contiene información del tipo de datos de una variable.
        </returns>
      <param name="VarName">
              Es un parámetro necesario. Variable de Object. Si Option Strict es Off, se puede pasar una variable de cualquier tipo de datos, excepto una estructura.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary>
          Devuelve el subíndice más alto que está disponible para la dimensión indicada de una matriz.
        </summary>
      <returns>
          
            Integer. Valor máximo que el subíndice de la dimensión especificada puede contener. Si <paramref name="Array" /> tiene sólo un elemento, UBound devuelve 0. Si <paramref name="Array" /> no tiene elementos, por ejemplo si es una cadena de longitud cero, UBound devuelve -1.  
        </returns>
      <param name="Array">
              Es un parámetro necesario. Matriz de cualquier tipo de datos. Matriz en la que se desea buscar el subíndice más alto posible de una dimensión.
            </param>
      <param name="Rank">
              Es opcional. Integer. Dimensión para la que se va a devolver el subíndice más alto posible. Utilice 1 para la primera dimensión, 2 para la segunda, etc. Si se omite <paramref name="Rank" />, se supone que el valor es 1.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary>
          Devuelve un valor de tipo Integer que contiene la clasificación del tipo de datos de una variable.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer que contiene la clasificación del tipo de datos de una variable.
        </returns>
      <param name="VarName">
              Es un parámetro necesario. Variable de Object. Si Option Strict es Off, se puede pasar una variable de cualquier tipo de datos, excepto una estructura.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary>
          Devuelve un valor de tipo String que contiene el nombre del tipo de datos de Visual Basic de una variable.
        </summary>
      <returns>
          Devuelve un valor de tipo String que contiene el nombre del tipo de datos de Visual Basic de una variable.
        </returns>
      <param name="UrtName">
              Es un parámetro necesario. Variable de String que contiene un nombre de tipo utilizado por Common Language Runtime.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary>
          El módulo Interaction contiene los procedimientos que se utilizan para interactuar con objetos, aplicaciones y sistemas. 
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
      <summary>
          Activa una aplicación que ya se está ejecutando.
        </summary>
      <param name="ProcessId">
              
                Integer que especifica el número de identificador de proceso Win32 que se ha asignado a este proceso. Puede utilizar el identificador que devuelve Shell Function, siempre que no sea cero.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
      <summary>
          Activa una aplicación que ya se está ejecutando.
        </summary>
      <param name="Title">
              
                Expresión de tipo String que especifica el título de la barra de título de la aplicación que se desea activar. Puede utilizar el título asignado a la aplicación al iniciarla.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary>
          Emite un sonido a través del altavoz del equipo.
        </summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>
          Ejecuta un método en un objeto, o bien, establece o devuelve una propiedad en un objeto.
        </summary>
      <returns>
          Ejecuta un método en un objeto, o bien, establece o devuelve una propiedad en un objeto.
        </returns>
      <param name="ObjectRef">
              Es un parámetro necesario. Object. Puntero al objeto que expone la propiedad o el método.
            </param>
      <param name="ProcName">
              Es un parámetro necesario. String. Expresión de cadena que contiene el nombre de la propiedad o del método en el objeto.
            </param>
      <param name="UseCallType">
              Es un parámetro necesario. Miembro de enumeración de tipo CallType Enumeration que representa el tipo de procedimiento al que se llama. El valor de CallType puede ser Method, Get o Set.
            </param>
      <param name="Args">
              Es opcional. ParamArray. Matriz de parámetros que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
      <summary>
          Selecciona y devuelve un valor de una lista de argumentos.
        </summary>
      <returns>
          Selecciona y devuelve un valor de una lista de argumentos.
        </returns>
      <param name="Index">
              Es un parámetro necesario. Double. Expresión numérica que genera un valor entre 1 y el número de elementos que se pasan en el argumento <paramref name="Choice" />.
            </param>
      <param name="Choice">
              Es un parámetro necesario. Matriz de parámetros Object. Se puede proporcionar una sola variable o expresión que se evalúa como el tipo de datos Object, una lista de expresiones o variables de Object separadas por comas o una matriz unidimensional de elementos Object.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Command">
      <summary>
          Devuelve la parte correspondiente a los argumentos de la línea de comandos utilizada para iniciar Visual Basic o un programa ejecutable desarrollado con Visual Basic. La característica My proporciona mayor productividad y rendimiento que la función Command  Para obtener más información, vea My.Application.CommandLineArgs Property.
        </summary>
      <returns>
          Devuelve la parte correspondiente a los argumentos de la línea de comandos utilizada para iniciar Visual Basic o un programa ejecutable desarrollado con Visual Basic.
          La característica My proporciona mayor productividad y rendimiento que la función Command  Para obtener más información, vea My.Application.CommandLineArgs Property.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="Path" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary>
          Crea y devuelve una referencia a un objeto COM. CreateObject no se puede utilizar para crear instancias de clases en Visual Basic, a menos que dichas clases se expongan explícitamente como componentes COM.
        </summary>
      <returns>
          Crea y devuelve una referencia a un objeto COM. CreateObject no se puede utilizar para crear instancias de clases en Visual Basic, a menos que dichas clases se expongan explícitamente como componentes COM.
        </returns>
      <param name="ProgId">
              Es un parámetro necesario. String. Identificador de programa del objeto que se va a crear.
            </param>
      <param name="ServerName">
              Es opcional. String. Nombre del servidor de red donde se va a crear el objeto. Si <paramref name="ServerName" /> es una cadena vacía (""), se utiliza el equipo local.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="COMPUTERNAME" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
      <summary>
          Elimina una sección o configuración de clave de la entrada de una aplicación en el Registro de Windows. La característica My proporciona mayor productividad y rendimiento en las operaciones del Registro que la función DeleteSetting  Para obtener más información, vea My.Computer.Registry Object.
        </summary>
      <param name="AppName">
              Es un parámetro necesario. Expresión de tipo String que contiene el nombre de la aplicación o del proyecto al que se aplica la sección o la configuración de clave.
            </param>
      <param name="Section">
              Es un parámetro necesario. Expresión de tipo String que contiene el nombre de la sección de la que se elimina la configuración de clave. Si se proporcionan sólo <paramref name="AppName" /> y <paramref name="Section" />, se elimina la sección especificada junto con todas las configuraciones de clave relacionadas.
            </param>
      <param name="Key">
              Es opcional. Expresión de tipo String que contiene el nombre de la configuración de clave que se va a eliminar.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
      <summary>
          Devuelve la cadena asociada a una variable de entorno del sistema operativo. 
        </summary>
      <returns>
          Devuelve la cadena asociada a una variable de entorno del sistema operativo. 
        </returns>
      <param name="Expression">
              Es un parámetro necesario. Expresión que evalúa una cadena que contiene el nombre de una variable de entorno o un entero correspondiente al orden numérico de una cadena de entorno en la tabla de cadenas de entorno.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
      <summary>
          Devuelve la cadena asociada a una variable de entorno del sistema operativo. 
        </summary>
      <returns>
          Devuelve la cadena asociada a una variable de entorno del sistema operativo. 
        </returns>
      <param name="Expression">
              Es un parámetro necesario. Expresión que evalúa una cadena que contiene el nombre de una variable de entorno o un entero correspondiente al orden numérico de una cadena de entorno en la tabla de cadenas de entorno.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
      <summary>
          Devuelve una lista de configuraciones de clave y sus respectivos valores (creados originalmente con SaveSetting) desde la entrada de una aplicación en el Registro de Windows. La característica My proporciona mayor productividad y rendimiento en las operaciones del Registro que GetAllSettings. Para obtener más información, vea My.Computer.Registry Object.
        </summary>
      <returns>
          Devuelve una lista de configuraciones de clave y sus respectivos valores (creados originalmente con SaveSetting) desde la entrada de una aplicación en el Registro de Windows.
          La característica My proporciona mayor productividad y rendimiento en las operaciones del Registro que GetAllSettings. Para obtener más información, vea My.Computer.Registry Object.
        </returns>
      <param name="AppName">
              Es un parámetro necesario. Expresión de tipo String que contiene el nombre de la aplicación o del proyecto cuya configuración de clave se solicita.
            </param>
      <param name="Section">
              Es un parámetro necesario. Expresión de tipo String que contiene el nombre de la sección cuya configuración de clave se solicita. GetAllSettings devuelve un objeto que contiene una matriz bidimensional de cadenas. Las cadenas contienen todos las configuraciones de clave de la sección especificada, además de sus correspondientes valores.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
      <summary>
          Devuelve una referencia a un objeto proporcionado por un componente COM.
        </summary>
      <returns>
          Devuelve una referencia a un objeto proporcionado por un componente COM.
        </returns>
      <param name="PathName">
              Es opcional. String. Ruta de acceso completa y nombre del archivo que contiene el objeto que se va a recuperar. Si se omite <paramref name="PathName" />, se requiere <paramref name="Class" />.
            </param>
      <param name="Class">
              Es necesario si no se proporciona <paramref name="PathName" />. String. Cadena que representa la clase del objeto. El argumento <paramref name="Class" /> tiene la sintaxis y las partes siguientes:
              
                <paramref name="appname" />
                .
                <paramref name="objecttype" />
              
              
                
                  
                    
                      Parámetro
                    
                    
                      Descripción
                    
                  
                
                
                  
                    
                      <paramref name="appname" />
                    
                  
                  
                    Es un parámetro necesario. String. Nombre de la aplicación que proporciona el objeto.
                  
                
                
                  
                    
                      <paramref name="objecttype" />
                    
                  
                  
                    Es un parámetro necesario. String. Tipo o clase del objeto que se va a crear.
                  
                
              
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
      <summary>
          Devuelve un valor de configuración de clave desde la entrada de una aplicación en el Registro de Windows. La característica My proporciona mayor productividad y rendimiento en las operaciones del Registro que GetAllSettings. Para obtener más información, vea My.Computer.Registry Object.
        </summary>
      <returns>
          Devuelve un valor de configuración de clave desde la entrada de una aplicación en el Registro de Windows.
          La característica My proporciona mayor productividad y rendimiento en las operaciones del Registro que GetAllSettings. Para obtener más información, vea My.Computer.Registry Object.
        </returns>
      <param name="AppName">
              Es un parámetro necesario. Expresión de tipo String que contiene el nombre de la aplicación o del proyecto cuya configuración de clave se solicita.
            </param>
      <param name="Section">
              Es un parámetro necesario. Expresión de tipo String que contiene el nombre de la sección donde se encuentra la configuración de clave.
            </param>
      <param name="Key">
              Es un parámetro necesario. Expresión de tipo String que contiene el nombre de la configuración de clave que se va a devolver.
            </param>
      <param name="Default">
              Es opcional. Expresión que contiene el valor que se va a devolver si no se ha establecido ningún valor en la configuración de <paramref name="Key" />. Si se omite, se supone que <paramref name="Default" /> es una cadena de longitud cero ("").
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary>
          Devuelve uno de dos objetos, dependiendo de la evaluación de una expresión.
        </summary>
      <returns>
          Devuelve uno de dos objetos, dependiendo de la evaluación de una expresión.
        </returns>
      <param name="Expression">
              Es un parámetro necesario. Boolean: Expresión que se va a evaluar.
            </param>
      <param name="TruePart">
              Es un parámetro necesario. Object. Se devuelve si <paramref name="Expression" /> se evalúa como True.
            </param>
      <param name="FalsePart">
              Es un parámetro necesario. Object. Se devuelve si <paramref name="Expression" /> se evalúa como False.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
          Muestra un mensaje en un cuadro de diálogo, espera a que el usuario escriba texto o haga clic en un botón y, a continuación, devuelve una cadena que contiene el contenido del cuadro de texto.
        </summary>
      <returns>
          Muestra un mensaje en un cuadro de diálogo, espera a que el usuario escriba texto o haga clic en un botón y, a continuación, devuelve una cadena que contiene el contenido del cuadro de texto.
        </returns>
      <param name="Prompt">
              Es un parámetro necesario. Expresión de tipo String que se muestra como mensaje en el cuadro de diálogo. La longitud máxima de <paramref name="Prompt" /> es aproximadamente de 1024 caracteres, dependiendo del ancho de los caracteres utilizados. Si <paramref name="Prompt" /> tiene más de una línea, se pueden separar las líneas mediante un carácter de retorno de carro (Chr(13)), un carácter de avance de línea (Chr(10)) o una combinación de retorno de carro y avance de línea (Chr(13) &amp; Chr(10)) entre cada línea.
            </param>
      <param name="Title">
              Es opcional. Expresión de tipo String que se muestra en la barra de título del cuadro de diálogo. Si se omite <paramref name="Title" />, aparece el nombre de la aplicación en la barra de título.
            </param>
      <param name="DefaultResponse">
              Es opcional. Expresión de tipo String que se muestra en el cuadro de texto como respuesta predeterminada si no se proporciona ninguna entrada. Si se omite <paramref name="DefaultResponse" />, el cuadro de texto mostrado está vacío.
            </param>
      <param name="XPos">
              Es opcional. Expresión numérica que especifica, en twips, la distancia entre el borde izquierdo del cuadro de diálogo y el borde izquierdo de la pantalla. Si se omite <paramref name="XPos" />, el cuadro de diálogo estará centrado horizontalmente.
            </param>
      <param name="YPos">
              Es opcional. Expresión numérica que especifica, en twips, la distancia entre el borde superior del cuadro de diálogo y la parte superior de la pantalla. Si se omite <paramref name="YPos" />, el cuadro de diálogo se coloca verticalmente a aproximadamente un tercio de la parte superior de la pantalla.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
      <summary>
          Muestra un mensaje en un cuadro de diálogo, espera a que el usuario haga clic en un botón y, a continuación, devuelve un entero que indica el botón en el que el usuario ha hecho clic.
        </summary>
      <returns>
          Constante OK, valor 1. Constante Cancel, valor 2. Constante Abort, valor 3. Constante Retry, valor 4. Constante Ignore, valor 5. Constante Yes, valor 6. Constante No, valor 7. 
        </returns>
      <param name="Prompt">
              Es un parámetro necesario. Expresión de tipo String que se muestra como mensaje en el cuadro de diálogo. La longitud máxima de <paramref name="Prompt" /> es aproximadamente de 1024 caracteres, dependiendo del ancho de los caracteres utilizados. Si <paramref name="Prompt" /> tiene más de una línea, se pueden separar las líneas mediante un carácter de retorno de carro (Chr(13)), un carácter de avance de línea (Chr(10)) o una combinación de retorno de carro y avance de línea (Chr(13) &amp; Chr(10)) entre cada línea.
            </param>
      <param name="Buttons">
              Es opcional. Expresión numérica que es la suma de los valores que especifican el número y el tipo de botones que se van a mostrar, el estilo de icono que se va a utilizar, la identidad del botón predeterminado y la modalidad del cuadro de mensaje. Si se omite <paramref name="Buttons" />, el valor predeterminado es cero.
            </param>
      <param name="Title">
              Es opcional. Expresión de tipo String que se muestra en la barra de título del cuadro de diálogo. Si se omite <paramref name="Title" />, aparece el nombre de la aplicación en la barra de título.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>
          Devuelve una cadena que representa el intervalo calculado que contiene un número.
        </summary>
      <returns>
          Devuelve una cadena que representa el intervalo calculado que contiene un número.
        </returns>
      <param name="Number">
              Es un parámetro necesario. Long. Número entero que se va a buscar en uno de los intervalos calculados.
            </param>
      <param name="Start">
              Es un parámetro necesario. Long. Número entero que indica el inicio del conjunto de intervalos calculados. El valor de <paramref name="Start" /> no puede ser menor que 0.
            </param>
      <param name="Stop">
              Es un parámetro necesario. Long. Número entero que indica el final del conjunto de intervalos calculados. El valor de <paramref name="Stop" /> no puede ser menor o igual que el valor de <paramref name="Start" />.
            </param>
      <param name="Interval">
              Es un parámetro necesario. Long. Número entero que indica el tamaño de cada intervalo calculado entre <paramref name="Start" /> y <paramref name="Stop" />. El valor de <paramref name="Interval" /> no puede ser menor que 1.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
      <summary>
          Guarda o crea una entrada de la aplicación en el Registro de Windows. La característica My proporciona mayor productividad y rendimiento en las operaciones del Registro que SaveSetting. Para obtener más información, vea My.Computer.Registry Object.
        </summary>
      <param name="AppName">
              Es un parámetro necesario. Expresión de tipo String que contiene el nombre de la aplicación o del proyecto al que se aplica la configuración.
            </param>
      <param name="Section">
              Es un parámetro necesario. Expresión de tipo String que contiene el nombre de la sección en la que se guarda la configuración de clave.
            </param>
      <param name="Key">
              Es un parámetro necesario. Expresión de tipo String que contiene el nombre de la configuración de clave que se va a guardar.
            </param>
      <param name="Setting">
              Es un parámetro necesario. Expresión que contiene el valor en el que se establece <paramref name="Key" />.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
      <summary>
          Ejecuta un programa ejecutable y devuelve un entero que contiene el identificador de proceso del programa si aún se está ejecutando.
        </summary>
      <returns>
          Ejecuta un programa ejecutable y devuelve un entero que contiene el identificador de proceso del programa si aún se está ejecutando.
        </returns>
      <param name="PathName">
              Es un parámetro necesario. String. Nombre del programa que se va a ejecutar, junto con los argumentos y modificadores de línea de comandos necesarios. <paramref name="PathName" /> puede incluir asimismo la unidad y la ruta de acceso al directorio o la carpeta.
              Si se desconoce la ruta de acceso al programa, se puede utilizar My.Computer.FileSystem.GetFiles Method para buscarla. Por ejemplo, se puede llamar a My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt"), que devuelve la ruta de acceso completa de cada archivo denominado testFile.txt ubicado en la unidad C:\.
            </param>
      <param name="Style">
              Es opcional. AppWinStyle. Valor elegido de AppWinStyle Enumeration que especifica el estilo de la ventana en la que se va a ejecutar el programa. Si se omite <paramref name="Style" />, Shell utiliza AppWinStyle.MinimizedFocus, que inicia el programa de manera minimizada y con foco. 
            </param>
      <param name="Wait">
              Es opcional. Boolean. Valor que indica si la función Shell debe esperar a que finalice el programa. Si se omite <paramref name="Wait" />, Shell utiliza False.
            </param>
      <param name="Timeout">
              Es opcional. Integer. Número de milisegundos que se van a esperar si el valor de <paramref name="Wait" /> es True. Si se omite <paramref name="Timeout" />, Shell utiliza -1, lo que significa que no hay tiempo de espera y Shell no devuelve ningún valor hasta que finaliza el programa. Por consiguiente, si se omite <paramref name="Timeout" /> o se establece en -1, es posible que Shell nunca devuelva el control al programa.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
      <summary>
          Evalúa una lista de expresiones y devuelve un valor de Object correspondiente a la primera expresión de la lista que es True.
        </summary>
      <returns>
          Evalúa una lista de expresiones y devuelve un valor de Object correspondiente a la primera expresión de la lista que es True.
        </returns>
      <param name="VarExpr">
              Es un parámetro necesario. Matriz de parámetros Object. Debe tener un número par de elementos. Se puede proporcionar una lista de las expresiones o variables de Object separadas por comas o una matriz unidimensional de elementos Object.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary>
          Indica qué botón, devuelto por la función MsgBox, fue presionado en un cuadro de mensaje.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok"></member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary>
          
            Se presionó el botón Cancelar. Este miembro es equivalente a la constante vbCancel de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary>
          
            Se presionó el botón Anular. Este miembro es equivalente a la constante vbAbort de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary>
          
            Se presionó el botón Reintentar. Este miembro es equivalente a la constante vbRetry de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary>
          
            Se presionó el botón Omitir. Este miembro es equivalente a la constante vbIgnore de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary>
          
            Se presionó el botón Sí. Este miembro es equivalente a la constante vbYes de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary>
          
            Se presionó el botón No. Este miembro es equivalente a la constante vbNo de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.OK">
      <summary>
          
            Se presionó el botón Aceptar. Este miembro es equivalente a la constante vbOK de Visual Basic.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary>
          Indica qué botones se mostrarán al llamar a la función MsgBox.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly"></member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel"></member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary>
          
            Botones Anular, Reintentar y Omitir. Este miembro es equivalente a la constante vbAbortRetryIgnore de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary>
          
            Botones Sí, No y Cancelar. Este miembro es equivalente a la constante vbYesNoCancel de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary>
          
            Botones Sí y No. Este miembro es equivalente a la constante vbYesNo de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary>
          
            Botones Reintentar y Cancelar. Este miembro es equivalente a la constante vbRetryCancel de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary>
          Mensaje crítico. Este miembro es equivalente a la constante vbCritical de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary>
          Consulta de advertencia. Este miembro es equivalente a la constante vbQuestion de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary>
          Mensaje de advertencia. Este miembro es equivalente a la constante vbExclamation de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary>
          Mensaje de información. Este miembro es equivalente a la constante vbInformation de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary>
          El primer botón tiene un valor predeterminado. Este miembro es equivalente a la constante vbDefaultButton1 de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary>
          El segundo botón tiene un valor predeterminado. Este miembro es equivalente a la constante vbDefaultButton2 de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary>
          El tercer botón tiene un valor predeterminado. Este miembro es equivalente a la constante vbDefaultButton3 de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary>
          Cuadro de mensaje modal para aplicaciones. Este miembro es equivalente a la constante vbApplicationModal de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary>
          Cuadro de mensaje modal para sistemas. Este miembro es equivalente a la constante vbSystemModal de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary>
          Texto de ayuda. Este miembro es equivalente a la constante vbMsgBoxHelp de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary>
          Texto alineado a la derecha. Este miembro es equivalente a la constante vbMsgBoxRight de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary>
          Texto para lectura de derecha a izquierda (sistemas árabe y hebreo). Este miembro es equivalente a la constante vbMsgBoxRtlReading de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary>
          Ventana de cuadro de mensaje de primer plano. Este miembro es equivalente a la constante vbMsgBoxSetForeground de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OKOnly">
      <summary>
          
            Sólo botón Aceptar (valor predeterminado). Este miembro es equivalente a la constante vbOKOnly de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OKCancel">
      <summary>
          
            Botones Aceptar y Cancelar. Este miembro es equivalente a la constante vbOKCancel de Visual Basic.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary>
          Este atributo admite My.Forms y My.WebServices en Visual Basic.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
          Este atributo admite My.Forms y My.WebServices en Visual Basic.
        </summary>
      <param name="typeToCollect">
              
                String. Inicializa la propiedad <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" />. El compilador genera las propiedades de descriptor de acceso para las clases que se derivan de este tipo.
            </param>
      <param name="createInstanceMethodName">
              
                String. Inicializa la propiedad <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" />. Especifica el método de la clase que crea las instancias del tipo.
            </param>
      <param name="disposeInstanceMethodName">
              
                String. Inicializa la propiedad <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" />. Especifica el método de la clase que desecha las instancias del tipo.
            </param>
      <param name="defaultInstanceAlias">
              
                String. Inicializa la propiedad <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" />. Especifica el nombre de la propiedad que devuelve la instancia predeterminada de la clase.
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary>
          Esta propiedad admite My en Visual Basic.
        </summary>
      <returns>
          Especifica el método de la clase que crea las instancias del tipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary>
          Esta propiedad admite My en Visual Basic.
        </summary>
      <returns>
          Especifica el nombre de la propiedad que devuelve la instancia predeterminada de la clase.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary>
          Esta propiedad admite My en Visual Basic.
        </summary>
      <returns>
          Especifica el método de la clase que desecha las instancias del tipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary>
          Esta propiedad admite My en Visual Basic.
        </summary>
      <returns>
          Especifica el nombre del tipo para el que el compilador genera las propiedades de descriptor de acceso.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary>
          Indica cómo abrir un archivo al llamar a funciones de acceso a archivos.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary>
          Acceso permitido de lectura y escritura. Éste es el valor predeterminado.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary>
          Acceso de lectura permitido.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary>
          Acceso permitido de lectura y escritura.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary>
          Acceso de escritura permitido.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary>
          Indica cómo abrir un archivo cuando se llama a las funciones de acceso a archivos.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary>
          Archivo que se abre para el acceso de lectura.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary>
          Archivo que se abre para el acceso de escritura.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary>
          Archivo que se abre para el acceso aleatorio.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary>
          Archivo que se abre para anexar datos. Predeterminado.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary>
          Archivo que se abre para el acceso binario.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary>
          Indica cómo abrir un archivo al llamar a funciones de acceso a archivos.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary>
          
            LockReadWrite. Éste es el valor predeterminado.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary>
          Cualquier proceso puede leer o escribir en el archivo.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary>
          Otros procesos no pueden leer el archivo.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary>
          Otros procesos no pueden leer ni escribir en el archivo.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary>
          Otros procesos no pueden escribir en el archivo.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary>
          Esta clase admite las funciones Print y PrintLine de Visual Basic.
        </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary>
          Este campo admite las funciones Print y PrintLine de Visual Basic.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary>
          El módulo Strings contiene procedimientos que se utilizan para llevar a cabo operaciones con cadenas. 
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary>
          Devuelve un valor de tipo Integer que representa el código de carácter que corresponde a un carácter.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer que representa el código de carácter que corresponde a un carácter.
        </returns>
      <param name="String">
              Parámetro necesario. Cualquier expresión válida de tipo Char o String. Si <paramref name="String" /> es una expresión de tipo String, sólo se utiliza el primer carácter de la cadena para la entrada. Si <paramref name="String" /> es Nothing o no contiene caracteres, se genera un error <see cref="T:System.ArgumentException" />.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary>
          Devuelve un valor de tipo Integer que representa el código de carácter que corresponde a un carácter.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer que representa el código de carácter que corresponde a un carácter.
        </returns>
      <param name="String">
              Parámetro necesario. Cualquier expresión válida de tipo Char o String. Si <paramref name="String" /> es una expresión de tipo String, sólo se utiliza el primer carácter de la cadena para la entrada. Si <paramref name="String" /> es Nothing o no contiene caracteres, se genera un error <see cref="T:System.ArgumentException" />.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary>
          Devuelve un valor de tipo Integer que representa el código de carácter que corresponde a un carácter.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer que representa el código de carácter que corresponde a un carácter.
        </returns>
      <param name="String">
              Parámetro necesario. Cualquier expresión válida de tipo Char o String. Si <paramref name="String" /> es una expresión de tipo String, sólo se utiliza el primer carácter de la cadena para la entrada. Si <paramref name="String" /> es Nothing o no contiene caracteres, se genera un error <see cref="T:System.ArgumentException" />.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary>
          Devuelve un valor de tipo Integer que representa el código de carácter que corresponde a un carácter.
        </summary>
      <returns>
          Devuelve un valor de tipo Integer que representa el código de carácter que corresponde a un carácter.
        </returns>
      <param name="String">
              Parámetro necesario. Cualquier expresión válida de tipo Char o String. Si <paramref name="String" /> es una expresión de tipo String, sólo se utiliza el primer carácter de la cadena para la entrada. Si <paramref name="String" /> es Nothing o no contiene caracteres, se genera un error <see cref="T:System.ArgumentException" />.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary>
          Devuelve el carácter asociado al código de carácter especificado.
        </summary>
      <returns>
          Devuelve el carácter asociado al código de carácter especificado.
        </returns>
      <param name="CharCode">
              Parámetro necesario. Expresión de tipo Integer que representa el punto de código o el código del carácter. Si el valor de <paramref name="CharCode" /> no pertenece al intervalo de valores válidos, se genera un error <see cref="T:System.ArgumentException" />. El intervalo válido para Chr está comprendido entre 0 y 255 y el intervalo válido para ChrW entre -32768 y 65535.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary>
          Devuelve el carácter asociado al código de carácter especificado.
        </summary>
      <returns>
          Devuelve el carácter asociado al código de carácter especificado.
        </returns>
      <param name="CharCode">
              Parámetro necesario. Expresión de tipo Integer que representa el punto de código o el código del carácter. Si el valor de <paramref name="CharCode" /> no pertenece al intervalo de valores válidos, se genera un error <see cref="T:System.ArgumentException" />. El intervalo válido para Chr está comprendido entre 0 y 255 y el intervalo válido para ChrW entre -32768 y 65535.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>
          Devuelve una matriz de base cero que contiene un subconjunto de una matriz de String basándose en los criterios de filtro especificados.
        </summary>
      <returns>
          Devuelve una matriz de base cero que contiene un subconjunto de una matriz de String basándose en los criterios de filtro especificados.
        </returns>
      <param name="Source">
              Parámetro necesario. Matriz unidimensional de cadenas en la que se va a buscar.
            </param>
      <param name="Match">
              Parámetro necesario. Cadena que se va a buscar.
            </param>
      <param name="Include">
              Parámetro opcional. Valor de tipo Boolean que indica si se van a devolver subcadenas que incluyen o excluyen <paramref name="Match" />. Si el valor de <paramref name="Include" /> es True, la función Filter devuelve el subconjunto de la matriz que contiene <paramref name="Match" /> como subcadena. Si el valor de <paramref name="Include" /> es False, la función Filter devuelve el subconjunto de la matriz que no contiene <paramref name="Match" /> como subcadena.
            </param>
      <param name="Compare">
              Parámetro opcional. Valor numérico que indica el tipo de comparación de cadenas que se va a utilizar. Vea los valores en "Configuración".
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>
          Devuelve una matriz de base cero que contiene un subconjunto de una matriz de String basándose en los criterios de filtro especificados.
        </summary>
      <returns>
          Devuelve una matriz de base cero que contiene un subconjunto de una matriz de String basándose en los criterios de filtro especificados.
        </returns>
      <param name="Source">
              Parámetro necesario. Matriz unidimensional de cadenas en la que se va a buscar.
            </param>
      <param name="Match">
              Parámetro necesario. Cadena que se va a buscar.
            </param>
      <param name="Include">
              Parámetro opcional. Valor de tipo Boolean que indica si se van a devolver subcadenas que incluyen o excluyen <paramref name="Match" />. Si el valor de <paramref name="Include" /> es True, la función Filter devuelve el subconjunto de la matriz que contiene <paramref name="Match" /> como subcadena. Si el valor de <paramref name="Include" /> es False, la función Filter devuelve el subconjunto de la matriz que no contiene <paramref name="Match" /> como subcadena.
            </param>
      <param name="Compare">
              Parámetro opcional. Valor numérico que indica el tipo de comparación de cadenas que se va a utilizar. Vea los valores en "Configuración".
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary>
          Devuelve una cadena a la que se ha aplicado formato según las instrucciones incluidas en la expresión de formato de tipo String.
        </summary>
      <returns>
          Devuelve una cadena a la que se ha aplicado formato según las instrucciones incluidas en la expresión de formato de tipo String.
        </returns>
      <param name="Expression">
              Parámetro necesario. Cualquier expresión válida.
            </param>
      <param name="Style">
              Parámetro opcional. Expresión válida de formato de tipo String con nombre o definida por el usuario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>
          Devuelve una expresión con formato de moneda que utiliza el símbolo de moneda definido en el panel de control del sistema.
        </summary>
      <returns>
          Devuelve una expresión con formato de moneda que utiliza el símbolo de moneda definido en el panel de control del sistema.
        </returns>
      <param name="Expression">
              Parámetro necesario. Expresión a la que se va a aplicar formato.
            </param>
      <param name="NumDigitsAfterDecimal">
              Parámetro opcional. Valor numérico que indica el número de posiciones que se muestran a la derecha del separador decimal. El valor predeterminado es -1, que indica que se utiliza la configuración regional del equipo.
            </param>
      <param name="IncludeLeadingDigit">
              Parámetro opcional. Enumeración TriState que indica si se muestra un cero inicial para los valores fraccionarios. Vea los valores en "Configuración".
            </param>
      <param name="UseParensForNegativeNumbers">
              Parámetro opcional. Enumeración TriState que indica si los valores negativos se van a colocar entre paréntesis. Vea los valores en "Configuración".
            </param>
      <param name="GroupDigits">
              Parámetro opcional. Enumeración TriState que indica si los números se agrupan utilizando el delimitador de grupo especificado en la configuración regional del equipo. Vea los valores en "Configuración".
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary>
          Devuelve una expresión de cadena que representa un valor de fecha y hora.
        </summary>
      <returns>
          Devuelve una expresión de cadena que representa un valor de fecha y hora.
        </returns>
      <param name="Expression">
              Parámetro necesario. Expresión de Date a la que se va a aplicar formato.
            </param>
      <param name="NamedFormat">
              Parámetro opcional. Valor numérico que indica el formato de fecha y hora utilizado. Si se omite, se utiliza DateFormat.GeneralDate.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>
          Devuelve una expresión con formato de número.
        </summary>
      <returns>
          Devuelve una expresión con formato de número.
        </returns>
      <param name="Expression">
              Parámetro necesario. Expresión a la que se va a aplicar formato.
            </param>
      <param name="NumDigitsAfterDecimal">
              Parámetro opcional. Valor numérico que indica el número de posiciones que se muestran a la derecha del separador decimal. El valor predeterminado es -1, que indica que se utiliza la configuración regional del equipo.
            </param>
      <param name="IncludeLeadingDigit">
              Parámetro opcional. Constante TriState que indica si se muestra un 0 inicial para los valores fraccionarios. Vea los valores en "Configuración".
            </param>
      <param name="UseParensForNegativeNumbers">
              Parámetro opcional. Constante TriState que indica si los valores negativos se van a colocar entre paréntesis. Vea los valores en "Configuración".
            </param>
      <param name="GroupDigits">
              Parámetro opcional. Constante TriState que indica si los números se agrupan utilizando el delimitador de grupo especificado en la configuración regional. Vea los valores en "Configuración".
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>
          Devuelve una expresión con formato de porcentaje (es decir, se ha multiplicado por 100) y con % como carácter final.
        </summary>
      <returns>
          Devuelve una expresión con formato de porcentaje (es decir, se ha multiplicado por 100) y con % como carácter final.
        </returns>
      <param name="Expression">
              Parámetro necesario. Expresión a la que se va a aplicar formato.
            </param>
      <param name="NumDigitsAfterDecimal">
              Parámetro opcional. Valor numérico que indica el número de posiciones que se muestran a la derecha del separador decimal. El valor predeterminado es -1, que indica que se utiliza la configuración regional.
            </param>
      <param name="IncludeLeadingDigit">
              Parámetro opcional. Constante TriState que indica si se va a mostrar un cero inicial para los valores fraccionarios. Vea los valores en "Configuración".
            </param>
      <param name="UseParensForNegativeNumbers">
              Parámetro opcional. Constante TriState que indica si los valores negativos se van a colocar entre paréntesis. Vea los valores en "Configuración".
            </param>
      <param name="GroupDigits">
              Parámetro opcional. Constante TriState que indica si los números se agrupan utilizando el delimitador de grupo especificado en la configuración regional. Vea los valores en "Configuración".
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary>
          Devuelve un valor de Char que representa el carácter correspondiente al índice especificado en la cadena proporcionada.
        </summary>
      <returns>
          Devuelve un valor de Char que representa el carácter correspondiente al índice especificado en la cadena proporcionada.
        </returns>
      <param name="str">
              Parámetro necesario. Cualquier expresión de String válida.
            </param>
      <param name="Index">
              Parámetro necesario. Expresión de tipo Integer. Índice (de base 1) del carácter de <paramref name="str" /> que se va a devolver.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
          Devuelve un entero que especifica la posición inicial de la primera aparición de una cadena dentro de otra.
        </summary>
      <returns>
          Si <paramref name="String1" /> tiene una longitud cero o es Nothing, InStr devuelve 0. Si <paramref name="String2" /> tiene una longitud cero o es Nothing, InStr devuelve <paramref name="start" />. Si no se encuentra <paramref name="String2" />, InStr devuelve 0. Si <paramref name="String2" /> se encuentra dentro de <paramref name="String1" />, InStr devuelve la posición donde comienza la coincidencia. Si <paramref name="Start" /> &gt; <paramref name="String2" />, InStr devuelve 0. 
        </returns>
      <param name="Start">
              Parámetro opcional. Expresión numérica que establece la posición inicial de cada búsqueda. Si se omite, la búsqueda comienza en la posición del primer carácter. El índice de inicio es de base 1.
            </param>
      <param name="String1">
              Parámetro necesario. Expresión de tipo String en la que se va a buscar.
            </param>
      <param name="String2">
              Parámetro necesario. Expresión de tipo String que se va a buscar.
            </param>
      <param name="Compare">
              Parámetro opcional. Especifica el tipo de comparación de cadenas. Si se omite <paramref name="Compare" />, la configuración de Option Compare determina el tipo de comparación. 
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
          Devuelve un entero que especifica la posición inicial de la primera aparición de una cadena dentro de otra.
        </summary>
      <returns>
          Si <paramref name="String1" /> tiene una longitud cero o es Nothing, InStr devuelve 0. Si <paramref name="String2" /> tiene una longitud cero o es Nothing, InStr devuelve <paramref name="start" />. Si no se encuentra <paramref name="String2" />, InStr devuelve 0. Si <paramref name="String2" /> se encuentra dentro de <paramref name="String1" />, InStr devuelve la posición donde comienza la coincidencia. Si <paramref name="Start" /> &gt; <paramref name="String2" />, InStr devuelve 0. 
        </returns>
      <param name="String1">
              Parámetro necesario. Expresión de tipo String en la que se va a buscar.
            </param>
      <param name="String2">
              Parámetro necesario. Expresión de tipo String que se va a buscar.
            </param>
      <param name="Compare">
              Parámetro opcional. Especifica el tipo de comparación de cadenas. Si se omite <paramref name="Compare" />, la configuración de Option Compare determina el tipo de comparación. 
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>
          Devuelve la posición de la primera aparición de una cadena dentro de otra, empezando por el lado derecho de la cadena.
        </summary>
      <returns>
          Si la longitud de <paramref name="StringCheck" /> es cero, InStrRev devuelve 0. Si la longitud de <paramref name="StringMatch" /> es cero, InStrRev devuelve <paramref name="Start" />. Si no se encuentra <paramref name="StringMatch" />, InStrRev devuelve 0. Si <paramref name="StringMatch" /> se encuentra dentro de <paramref name="StringCheck" />, InStrRev devuelve la posición de la primera coincidencia, empezando por el lado derecho de la cadena. Si <paramref name="Start" /> es mayor que la longitud de <paramref name="StringMatch" />, InStrRev devuelve 0. 
        </returns>
      <param name="StringCheck">
              Parámetro necesario. Expresión de cadena en la que se va a buscar.
            </param>
      <param name="StringMatch">
              Parámetro necesario. Expresión de cadena que se va a buscar.
            </param>
      <param name="Start">
              Parámetro opcional. Expresión numérica que establece la posición inicial de base 1 para cada búsqueda, empezando por el lado izquierdo de la cadena. Si se omite <paramref name="Start" />, se utiliza -1, lo que significa que la búsqueda comienza en la posición del último carácter. A continuación, la búsqueda se realiza de derecha a izquierda.
            </param>
      <param name="Compare">
              Parámetro opcional. Valor numérico que indica el tipo de comparación que se va a utilizar al evaluar subcadenas. Si se omite, se realiza una comparación binaria. Vea Configuración para obtener los valores.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary>
          Devuelve una cadena creada mediante la unión de varias subcadenas incluidas en una matriz.
        </summary>
      <returns>
          Devuelve una cadena creada mediante la unión de varias subcadenas incluidas en una matriz.
        </returns>
      <param name="SourceArray">
              Parámetro necesario. Matriz unidimensional que contiene las subcadenas que se van a unir.
            </param>
      <param name="Delimiter">
              Parámetro opcional. Cualquier cadena que se utilice para separar las subcadenas en la cadena devuelta. Si se omite, se utiliza el carácter de espacio (" "). Si <paramref name="Delimiter" /> es una cadena de longitud cero ("") o Nothing, todos los elementos de la lista se concatenan sin delimitadores.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary>
          Devuelve una cadena creada mediante la unión de varias subcadenas incluidas en una matriz.
        </summary>
      <returns>
          Devuelve una cadena creada mediante la unión de varias subcadenas incluidas en una matriz.
        </returns>
      <param name="SourceArray">
              Parámetro necesario. Matriz unidimensional que contiene las subcadenas que se van a unir.
            </param>
      <param name="Delimiter">
              Parámetro opcional. Cualquier cadena que se utilice para separar las subcadenas en la cadena devuelta. Si se omite, se utiliza el carácter de espacio (" "). Si <paramref name="Delimiter" /> es una cadena de longitud cero ("") o Nothing, todos los elementos de la lista se concatenan sin delimitadores.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary>
          Devuelve una cadena o un carácter que se ha convertido en minúsculas.
        </summary>
      <returns>
          Devuelve una cadena o un carácter que se ha convertido en minúsculas.
        </returns>
      <param name="Value">
              Parámetro necesario. Cualquier expresión válida de tipo String o Char.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary>
          Devuelve una cadena o un carácter que se ha convertido en minúsculas.
        </summary>
      <returns>
          Devuelve una cadena o un carácter que se ha convertido en minúsculas.
        </returns>
      <param name="Value">
              Parámetro necesario. Cualquier expresión válida de tipo String o Char.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary>
          Devuelve una cadena que contiene un número especificado de caracteres a partir del lado izquierdo de una cadena.
        </summary>
      <returns>
          Devuelve una cadena que contiene un número especificado de caracteres a partir del lado izquierdo de una cadena.
        </returns>
      <param name="str">
              Parámetro necesario. Expresión de tipo String de la que se devuelven los caracteres situados más a la izquierda.
            </param>
      <param name="Length">
              Parámetro necesario. Expresión de tipo Integer. Expresión numérica que indica el número de caracteres que se van a devolver. Si es 0, se devuelve una cadena de longitud cero (""). Si es mayor o igual que el número de caracteres en <paramref name="str" />, se devuelve la cadena completa.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número establecido de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válida. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es de tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </summary>
      <returns>
          Devuelve un entero que contiene el número de caracteres de una cadena o el número de bytes necesarios para almacenar una variable.
        </returns>
      <param name="Expression">
              Cualquier expresión de tipo String o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo Object, la función Len devuelve el tamaño con el que la función FilePut escribirá en el archivo.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary>
          Devuelve una cadena alineada a la izquierda que contiene la cadena especificada ajustada a la longitud indicada.
        </summary>
      <returns>
          Devuelve una cadena alineada a la izquierda que contiene la cadena especificada ajustada a la longitud indicada.
        </returns>
      <param name="Source">
              Parámetro necesario. Expresión de tipo String. Nombre de variable de cadena.
            </param>
      <param name="Length">
              Parámetro necesario. Expresión de tipo Integer. Longitud de la cadena devuelta.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary>
          Devuelve una cadena que contiene una copia de una cadena especificada sin espacios iniciales (LTrim), sin espacios finales (RTrim) o sin espacios iniciales ni finales (Trim).
        </summary>
      <returns>
          Devuelve una cadena que contiene una copia de una cadena especificada sin espacios iniciales (LTrim), sin espacios finales (RTrim) o sin espacios iniciales ni finales (Trim).
        </returns>
      <param name="str">
              Parámetro necesario. Cualquier expresión de String válida.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary>
          Devuelve una cadena que contiene un número especificado de caracteres de una cadena.
        </summary>
      <returns>
          Devuelve una cadena que contiene un número especificado de caracteres de una cadena.
        </returns>
      <param name="str">
              Parámetro necesario. Expresión de tipo String cuyos caracteres se devuelven.
            </param>
      <param name="Start">
              Parámetro necesario. Expresión de tipo Integer. Posición inicial de los caracteres que se van a devolver. Si <paramref name="Start" /> es mayor que el número de caracteres en <paramref name="str" />, la función Mid devuelve una cadena de longitud cero (""). <paramref name="Start" /> es de base 1.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary>
          Devuelve una cadena que contiene un número especificado de caracteres de una cadena.
        </summary>
      <returns>
          Devuelve una cadena que contiene un número especificado de caracteres de una cadena.
        </returns>
      <param name="str">
              Parámetro necesario. Expresión de tipo String cuyos caracteres se devuelven.
            </param>
      <param name="Start">
              Parámetro necesario. Expresión de tipo Integer. Posición inicial de los caracteres que se van a devolver. Si <paramref name="Start" /> es mayor que el número de caracteres en <paramref name="str" />, la función Mid devuelve una cadena de longitud cero (""). <paramref name="Start" /> es de base 1.
            </param>
      <param name="Length">
              Parámetro opcional. Expresión de tipo Integer. Número de caracteres que se van a devolver. Si se omite o si hay un número de caracteres menor que <paramref name="Length" /> en el texto (incluido el carácter situado en la posición <paramref name="Start" />), se devuelven todos los caracteres desde la posición inicial hasta la posición final de la cadena.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>
          Devuelve una cadena en la que la subcadena especificada se ha reemplazado un número indicado de veces por otra subcadena.
        </summary>
      <returns>
          Si <paramref name="Find" /> es de longitud de cero o Nothing, Replace devuelve una copia de <paramref name="Expression" />. Si la longitud de <paramref name="Replace" /> es cero, Replace devuelve una copia de <paramref name="Expression" /> sin ninguna aparición de <paramref name="Find" />. Si la longitud de <paramref name="Expression" /> es cero o Nothing, o si <paramref name="Start" /> es mayor que la longitud de <paramref name="Expression" />, Replace devuelve Nothing. Si <paramref name="Count" /> es 0, Replace devuelve una copia de <paramref name="Expression" />. 
        </returns>
      <param name="Expression">
              Parámetro necesario. Expresión de cadena que contiene la subcadena que se va a reemplazar.
            </param>
      <param name="Find">
              Parámetro necesario. Subcadena que se va a buscar.
            </param>
      <param name="Replacement">
              Parámetro necesario. Subcadena de reemplazo.
            </param>
      <param name="Start">
              Parámetro opcional. Posición en <paramref name="Expression" /> donde comienza la búsqueda de la subcadena. Si se omite, se supone que el valor es 1.
            </param>
      <param name="Count">
              Parámetro opcional. Número de reemplazos de subcadena que se van a realizar. Si se omite, el valor predeterminado es -1, lo que significa que se van a realizar todos los reemplazos posibles.
            </param>
      <param name="Compare">
              Parámetro opcional. Valor numérico que indica el tipo de comparación que se va a utilizar al evaluar subcadenas. Para obtener los valores, vea Configuración.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary>
          Devuelve una cadena que contiene un número especificado de caracteres a partir del lado derecho de una cadena.
        </summary>
      <returns>
          Devuelve una cadena que contiene un número especificado de caracteres a partir del lado derecho de una cadena.
        </returns>
      <param name="str">
              Parámetro necesario. Expresión de tipo String de la que se devuelven los caracteres situados más a la derecha.
            </param>
      <param name="Length">
              Parámetro necesario. Integer. Expresión numérica que indica el número de caracteres que se van a devolver. Si es 0, se devuelve una cadena de longitud cero (""). Si es mayor o igual que el número de caracteres en <paramref name="str" />, se devuelve la cadena completa.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary>
          Devuelve una cadena alineada a la derecha que contiene la cadena especificada ajustada a la longitud indicada. 
        </summary>
      <returns>
          Devuelve una cadena alineada a la derecha que contiene la cadena especificada ajustada a la longitud indicada. 
        </returns>
      <param name="Source">
              Parámetro necesario. Expresión de tipo String. Nombre de variable de cadena.
            </param>
      <param name="Length">
              Parámetro necesario. Expresión de tipo Integer. Longitud de la cadena devuelta.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary>
          Devuelve una cadena que contiene una copia de una cadena especificada sin espacios iniciales (LTrim), sin espacios finales (RTrim) o sin espacios iniciales ni finales (Trim).
        </summary>
      <returns>
          Devuelve una cadena que contiene una copia de una cadena especificada sin espacios iniciales (LTrim), sin espacios finales (RTrim) o sin espacios iniciales ni finales (Trim).
        </returns>
      <param name="str">
              Parámetro necesario. Cualquier expresión de String válida.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary>
          Devuelve una cadena compuesta por el número especificado de espacios.
        </summary>
      <returns>
          Devuelve una cadena compuesta por el número especificado de espacios.
        </returns>
      <param name="Number">
              Parámetro necesario. Expresión de tipo Integer. Número de espacios deseados en la cadena.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>
          Devuelve una matriz unidimensional de base cero que contiene el número especificado de subcadenas.
        </summary>
      <returns>
          
            Matriz de String. Si <paramref name="Expression" /> es una cadena de longitud cero (""), Split devuelve una matriz de un solo elemento que contiene una cadena de longitud cero. Si <paramref name="Delimiter" /> es una cadena de longitud cero o si no aparece en <paramref name="Expression" />, Split devuelve una matriz de un solo elemento que contiene toda la cadena <paramref name="Expression" />.
        </returns>
      <param name="Expression">
              Parámetro necesario. Expresión de tipo String que contiene subcadenas y delimitadores.
            </param>
      <param name="Delimiter">
              Parámetro opcional. Cualquier carácter individual que se utilice para identificar los límites de las subcadenas. Si se omite <paramref name="Delimiter" />, se supone que el carácter de espacio (" ") es el delimitador.
            </param>
      <param name="Limit">
              Parámetro opcional. Número máximo de subcadenas en las que se debe dividir la cadena de entrada. El valor predeterminado es -1, que indica que la cadena de entrada se debe dividir cada vez que aparece la cadena <paramref name="Delimiter" />.
            </param>
      <param name="Compare">
              Parámetro opcional. Valor numérico que indica la comparación que se va a utilizar al evaluar subcadenas. Vea los valores en "Configuración".
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
          Devuelve -1, 0 o 1, basándose en el resultado de una comparación de cadenas. 
        </summary>
      <returns>
          Si <paramref name="String1" /> se ordena antes de <paramref name="String2" />, StrComp devuelve -1. Si <paramref name="String1" /> es igual que <paramref name="String2" />, StrComp devuelve 0. Si <paramref name="String1" /> se ordena después de <paramref name="String2" />, StrComp devuelve 1. 
        </returns>
      <param name="String1">
              Parámetro necesario. Cualquier expresión de String válida.
            </param>
      <param name="String2">
              Parámetro necesario. Cualquier expresión de String válida.
            </param>
      <param name="Compare">
              Parámetro opcional. Especifica el tipo de comparación de cadenas. Si se omite <paramref name="Compare" />, la configuración de Option Compare determina el tipo de comparación.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary>
          Devuelve una cadena convertida según lo especificado.
        </summary>
      <returns>
          Devuelve una cadena convertida según lo especificado.
        </returns>
      <param name="str">
              Parámetro necesario. Expresión de tipo String que se va a convertir.
            </param>
      <param name="Conversion">
              Parámetro necesario. Miembro de VbStrConv Enumeration. Valor de enumeración que especifica el tipo de conversión que se va a realizar.
            </param>
      <param name="LocaleID">
              Parámetro opcional. Valor de LocaleID si difiere del valor de LocaleID del sistema. (El valor de LocaleID del sistema es el valor predeterminado.)
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary>
          Devuelve una cadena o un objeto formado por el carácter especificado que se repite el número de veces indicado.
        </summary>
      <returns>
          Devuelve una cadena o un objeto formado por el carácter especificado que se repite el número de veces indicado.
        </returns>
      <param name="Number">
              Parámetro necesario. Expresión de tipo Integer. Longitud de la cadena que se va a devolver.
            </param>
      <param name="Character">
              Parámetro necesario. Cualquier expresión válida de tipo Char, String u Object. Se utilizará sólo el primer carácter de la expresión. Si el carácter es de tipo Object, debe contener un valor de Char o de String . 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary>
          Devuelve una cadena o un objeto formado por el carácter especificado que se repite el número de veces indicado.
        </summary>
      <returns>
          Devuelve una cadena o un objeto formado por el carácter especificado que se repite el número de veces indicado.
        </returns>
      <param name="Number">
              Parámetro necesario. Expresión de tipo Integer. Longitud de la cadena que se va a devolver.
            </param>
      <param name="Character">
              Parámetro necesario. Cualquier expresión válida de tipo Char, String u Object. Se utilizará sólo el primer carácter de la expresión. Si el carácter es de tipo Object, debe contener un valor de Char o de String . 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary>
          Devuelve una cadena o un objeto formado por el carácter especificado que se repite el número de veces indicado.
        </summary>
      <returns>
          Devuelve una cadena o un objeto formado por el carácter especificado que se repite el número de veces indicado.
        </returns>
      <param name="Number">
              Parámetro necesario. Expresión de tipo Integer. Longitud de la cadena que se va a devolver.
            </param>
      <param name="Character">
              Parámetro necesario. Cualquier expresión válida de tipo Char, String u Object. Se utilizará sólo el primer carácter de la expresión. Si el carácter es de tipo Object, debe contener un valor de Char o de String . 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary>
          Devuelve una cadena en la que se ha invertido el orden de caracteres de la cadena especificada.
        </summary>
      <returns>
          Devuelve una cadena en la que se ha invertido el orden de caracteres de la cadena especificada.
        </returns>
      <param name="Expression">
              Parámetro necesario. Expresión de cadena cuyos caracteres se van a invertir. Si <paramref name="Expression" /> es una cadena de longitud cero (""), se devuelve una cadena de longitud cero.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary>
          Devuelve una cadena que contiene una copia de una cadena especificada sin espacios iniciales (LTrim), sin espacios finales (RTrim) o sin espacios iniciales ni finales (Trim).
        </summary>
      <returns>
          Devuelve una cadena que contiene una copia de una cadena especificada sin espacios iniciales (LTrim), sin espacios finales (RTrim) o sin espacios iniciales ni finales (Trim).
        </returns>
      <param name="str">
              Parámetro necesario. Cualquier expresión de String válida.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary>
          Devuelve una cadena o un carácter que contiene la cadena especificada convertida en mayúsculas.
        </summary>
      <returns>
          Devuelve una cadena o un carácter que contiene la cadena especificada convertida en mayúsculas.
        </returns>
      <param name="Value">
              Parámetro necesario. Cualquier expresión válida de tipo String o Char.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary>
          Devuelve una cadena o un carácter que contiene la cadena especificada convertida en mayúsculas.
        </summary>
      <returns>
          Devuelve una cadena o un carácter que contiene la cadena especificada convertida en mayúsculas.
        </returns>
      <param name="Value">
              Parámetro necesario. Cualquier expresión válida de tipo String o Char.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary>
          Esta clase admite las funciones Print y PrintLine de Visual Basic.
        </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary>
          Este campo admite las funciones Print y PrintLine de Visual Basic.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary>
          Indica un valor booleano o si se debería utilizar el valor predeterminado a la hora de llamar a funciones de formato numérico.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary>
          False. El valor numérico de este miembro es 0.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary>
          True. El valor numérico de este miembro es -1.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary>
          Configuración predeterminada. El valor numérico de este miembro es -2.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary>
          Indica el tipo de un objeto Variant, devuelto por la función VarType.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary>
          Referencia nula. Este miembro es equivalente a la constante vbEmpty de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary>
          Objeto null. Este miembro es equivalente a la constante vbNull de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary>
          
            Short. (de -32.768 a 32.767.)
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary>
          
            Integer. (de -2.147.483.648 a 2.147.483.647.) Este miembro es equivalente a la constante vbInteger de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary>
          
            Single. (de -3,402823E+38 a -1,401298E-45 para los valores negativos; de 1,401298E-45 a 3,402823E+38 para los valores positivos.) Este miembro es equivalente a la constante vbSingle de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary>
          
            Double. (de -1,79769313486231E+308 a -4,94065645841247E-324 para los valores negativos; de 4,94065645841247E-324 a 1,79769313486231E+308 para los valores positivos.) Este miembro es equivalente a la constante vbDouble de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary>
          Moneda. Este miembro es equivalente a la constante vbCurrency de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary>
          
            Date. (0:00:00 del 1 de enero, de 0001 a 11:59:59 p.m. del 31 de diciembre de 9999.) Este miembro es equivalente a la constante vbDate de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary>
          
            String. (de 0 a aproximadamente 2 mil millones de caracteres Unicode.) Este miembro es equivalente a la constante vbString de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary>
          Cualquier tipo puede almacenarse en una variable de tipo Object. Este miembro es equivalente a la constante vbObject de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary>
          
            <see cref="T:System.Exception" />
          
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary>
          
            Boolean. (True o False.) Este miembro es equivalente a la constante vbBoolean de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary>
          
            Variant. Este miembro es equivalente a la constante vbVariant de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary>
          DataObject.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary>
          
            Decimal. (de 0 a +/-79.228.162.514.264.337.593.543.950.335 sin separador decimal; de 0 a +/-7,9228162514264337593543950335 con 28 posiciones decimales a la derecha del separador decimal; el menor número que no sea 0 es +/-0,0000000000000000000000000001.) Este miembro es equivalente a la constante vbDecimal de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary>
          
            Byte. (De 0 a 255.) Este miembro es equivalente a la constante vbByte de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary>
          
            Char. (De 0 a 65535.) Este miembro es equivalente a la constante vbChar de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary>
          
            Long. (de -9.223.372.036.854.775.808 a 9.223.372.036.854.775.807.) Este miembro es equivalente a la constante vbLong de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary>
          Tipo definido por el usuario. Cada miembro de la estructura tiene un intervalo determinado por su tipo de datos e independiente de los intervalos de los otros miembros. Este miembro es equivalente a la constante vbUserDefinedType de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary>
          Matriz. Este miembro es equivalente a la constante vbArray de Visual Basic.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary>
          Indica que una matriz en una estructura o variable no local debe tratarse como una matriz de longitud fija.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary>
          Inicializa el valor de la propiedad Bounds.
        </summary>
      <param name="UpperBound1">
              Inicializa el valor del campo superior, que representa el tamaño de la primera dimensión de la matriz.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary>
          Inicializa el valor de la propiedad Bounds.
        </summary>
      <param name="UpperBound1">
              Inicializa el valor del campo superior, que representa el tamaño de la primera dimensión de la matriz.
            </param>
      <param name="UpperBound2">
              Inicializa el valor del campo superior, que representa el tamaño de la segunda dimensión de la matriz.
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary>
          Devuelve los límites de la matriz.
        </summary>
      <returns>
          Contiene una matriz de enteros que representa los límites de la matriz.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary>
          Devuelve el tamaño de la matriz.
        </summary>
      <returns>
          Contiene un entero que representa el número de elementos de la matriz.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary>
          Indica que una cadena debe tratarse como si tuviese una longitud fija.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary>
          Inicializa el valor del campo SizeConst.
        </summary>
      <param name="Length">
              Longitud de la cadena fija.
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary>
          Obtiene la longitud de la cadena.
        </summary>
      <returns>
          Devuelve la longitud de la cadena.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary>
          El módulo VbMath contiene procedimientos que se utilizan para llevar a cabo operaciones matemáticas. 
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary>
          Inicializa el generador de números aleatorios.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary>
          Inicializa el generador de números aleatorios.
        </summary>
      <param name="Number">
              Es opcional. Object o cualquier expresión numérica válida.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary>
          Devuelve un número aleatorio de tipo Single.
        </summary>
      <returns>
          Si el número es menor que cero, Rnd genera cada vez el mismo número utilizando <paramref name="Number" /> como valor de inicialización. Si el número es mayor que cero, Rnd genera el siguiente número aleatorio en la secuencia. Si el número es igual a cero, Rnd genera el último número generado. Si no se proporciona ningún número, Rnd genera el siguiente número aleatorio en la secuencia.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary>
          Devuelve un número aleatorio de tipo Single.
        </summary>
      <returns>
          Si el número es menor que cero, Rnd genera cada vez el mismo número utilizando <paramref name="Number" /> como valor de inicialización. Si el número es mayor que cero, Rnd genera el siguiente número aleatorio en la secuencia. Si el número es igual a cero, Rnd genera el último número generado. Si no se proporciona ningún número, Rnd genera el siguiente número aleatorio en la secuencia.
        </returns>
      <param name="Number">
              Es opcional. Valor de tipo Single o cualquier expresión de tipo Single válida.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary>
          Indica qué tipo de conversión se realiza cuando se llama a la función StrConv.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary>
          No realiza ninguna conversión.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase"></member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase"></member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary>
          Convierte la primera letra de cada palabra en la cadena que se va a escribir en letras mayúsculas. Este miembro es equivalente a la constante vbProperCase de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary>
          Convierte los caracteres estrechos (de un solo byte) de la cadena en caracteres anchos (de doble byte). Se aplica a las configuraciones regionales asiáticas. Este miembro es equivalente a la constante vbWide de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary>
          Convierte los caracteres anchos (de doble byte) de la cadena en caracteres estrechos (de un solo byte). Se aplica a las configuraciones regionales asiáticas. Este miembro es equivalente a la constante vbNarrow de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary>
          Convierte los caracteres hiragana de la cadena en caracteres katakana. Sólo se aplica a la configuración regional para japonés. Este miembro es equivalente a la constante vbKatakana de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary>
          Convierte los caracteres katakana de la cadena en caracteres hiragana. Sólo se aplica a la configuración regional para japonés. Este miembro es equivalente a la constante vbHiragana de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary>
          Convierte la cadena en caracteres de chino simplificado. Este miembro es equivalente a la constante vbSimplifiedChinese de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary>
          Convierte la cadena en caracteres de chino tradicional. Este miembro es equivalente a la constante vbTraditionalChinese de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary>
          Convierte la cadena de las reglas del sistema de archivos para adaptarse a las reglas lingüísticas. Este miembro es equivalente a la constante vbLinguisticCasing de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.UpperCase">
      <summary>
          Convierte la cadena en caracteres en mayúscula. Este miembro es equivalente a la constante vbUpperCase de Visual Basic.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LowerCase">
      <summary>
          Convierte la cadena en caracteres en minúscula. Este miembro es equivalente a la constante vbLowerCase de Visual Basic.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
      <summary>
          Proporciona las propiedades, los métodos y los eventos relacionados con la aplicación actual.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)">
      <summary>
          Cambia la referencia cultural utilizada por el actual subproceso para manipular las cadenas y aplicarles un formato.
        </summary>
      <param name="cultureName">
              
                String. Nombre de la referencia cultural en forma de cadena. Para obtener una lista de posibles nombres, vea <see cref="T:System.Globalization.CultureInfo" />.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)">
      <summary>
          Cambia la referencia cultural que utiliza el subproceso actual para recuperar los recursos específicos de la referencia cultural.
        </summary>
      <param name="cultureName">
              
                String. Nombre de la referencia cultural en forma de cadena. Para obtener una lista de posibles nombres, vea <see cref="T:System.Globalization.CultureInfo" />.
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture">
      <summary>
          Obtiene la referencia cultural que utiliza el subproceso actual para manipular las cadenas y aplicarles un formato.
        </summary>
      <returns>
          Devuelve un objeto <see cref="T:System.Globalization.CultureInfo" /> que representa la referencia cultural que utiliza el subproceso actual para manipular las cadenas y aplicarles un formato.
        </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)">
      <summary>
          Devuelve el valor de la variable de entorno especificada.
        </summary>
      <returns>
          String que contiene el valor de la variable de entorno con el parámetro <paramref name="name" />.
        </returns>
      <param name="name">
              String que contiene el nombre de la variable de entorno.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info">
      <summary>
          Obtiene un objeto que proporciona las propiedades para obtener información sobre el ensamblado de la aplicación, como el número de versión, la descripción, etc. 
        </summary>
      <returns>
          Esta propiedad devuelve el objeto My.Application.Info para la aplicación actual.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log">
      <summary>
          Obtiene un objeto que proporciona las propiedades y los métodos para escribir la información de los eventos y excepciones en los agentes de escucha de registro de la aplicación. 
        </summary>
      <returns>
          Esta propiedad devuelve el objeto My.Application.Log para la aplicación actual.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture">
      <summary>
          Obtiene la referencia cultural que utiliza el subproceso actual para recuperar los recursos específicos de la referencia cultural.
        </summary>
      <returns>
          Devuelve un objeto <see cref="T:System.Globalization.CultureInfo" /> que representa la referencia cultural que utiliza el subproceso actual para recuperar los recursos específicos de la referencia cultural.
        </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
      <summary>
          Proporciona las propiedades para obtener información sobre la aplicación, como el número de versión, la descripción, los ensamblados cargados, etc.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <summary>
          Inicializa una instancia nueva de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> con la información de ensamblado especificada. 
        </summary>
      <param name="currentAssembly">
              
                <see cref="T:System.Reflection.Assembly" />. Ensamblado cuya información se va a obtener.
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName">
      <summary>
          Obtiene el nombre, sin extensión, del archivo de ensamblado de la aplicación.
        </summary>
      <returns>
          Un valor de tipo String que contiene el nombre de archivo.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName">
      <summary>
          Obtiene el nombre de la compañía asociado a la aplicación.
        </summary>
      <returns>
          Un valor de tipo String que contiene el nombre de la compañía asociado a la aplicación.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright">
      <summary>
          Obtiene el aviso de copyright asociado a la aplicación.
        </summary>
      <returns>
          Un valor de tipo String que contiene el aviso de copyright asociado a la aplicación.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description">
      <summary>
          Obtiene la descripción asociada a la aplicación.
        </summary>
      <returns>
          Un valor de tipo String que contiene la descripción asociada a la aplicación.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath">
      <summary>
          Obtiene el directorio donde está almacenada la aplicación.
        </summary>
      <returns>
          Un valor de tipo String que contiene el directorio donde está almacenada la aplicación.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies">
      <summary>
          Obtiene una colección de todos los ensamblados cargados por la aplicación.
        </summary>
      <returns>
          Una colección <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de <see cref="T:System.Reflection.Assembly" /> que contiene todos los ensamblados cargados por la aplicación.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName">
      <summary>
          Obtiene el nombre de producto asociado a la aplicación.
        </summary>
      <returns>
          Un valor de tipo String que contiene el nombre de producto asociado a la aplicación.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace">
      <summary>
          Obtiene la actual información de seguimiento de pila.
        </summary>
      <returns>
          Un valor de tipo String que contiene la actual información de seguimiento de pila. El valor devuelto puede ser <see cref="F:System.String.Empty" />.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title">
      <summary>
          Obtiene el título asociado a la aplicación.
        </summary>
      <returns>
          Un valor de tipo String que contiene el atributo <see cref="T:System.Reflection.AssemblyTitleAttribute" /> asociado a la aplicación.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark">
      <summary>
          Obtiene el aviso de marca comercial asociado a la aplicación.
        </summary>
      <returns>
          Un valor de tipo String que contiene el aviso de marca comercial asociado a la aplicación.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version">
      <summary>
          Obtiene el número de versión de la aplicación.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Version" /> que contiene el número de versión de la aplicación.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet">
      <summary>
          Obtiene la cantidad de memoria física asignada al contexto del proceso.
        </summary>
      <returns>
          Un valor de tipo Long que contiene el número de bytes de memoria física asignada al contexto del proceso.
        </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode">
      <summary>
          Indica cómo una aplicación de Visual Basic autentica al usuario para el objeto My.User.
        </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows">
      <summary>
          El constructor <see cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" /> inicializa el principal para el principal subproceso de la aplicación con la información sobre el actual usuario de Windows. 
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.ApplicationDefined">
      <summary>
          El constructor <see cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" /> no inicializa el principal para el principal subproceso de la aplicación. La aplicación debe inicializar el principal para el principal subproceso de la aplicación.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole">
      <summary>
          Indica el tipo de función que se debe comprobar al llamar a My.User.IsInRole Method.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.AccountOperator">
      <summary>
          Los operadores de cuentas administran las cuentas de los usuarios de un equipo o dominio.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.Administrator">
      <summary>
          Los administradores tienen acceso completo y sin restricciones al equipo o dominio.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.BackupOperator">
      <summary>
          Los operadores de copia de seguridad pueden reemplazar las restricciones de seguridad con el único propósito de hacer copias de seguridad de archivo o de restaurarlos.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.Guest">
      <summary>
          Los invitados tienen más restricciones que los usuarios.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.PowerUser">
      <summary>
          Los usuarios avanzados poseen más permisos administrativos con algunas restricciones. De este modo, los usuarios avanzados pueden ejecutar aplicaciones heredadas, además de aplicaciones certificadas.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.PrintOperator">
      <summary>
          Los operadores de impresión pueden tomar el control de una impresora.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.Replicator">
      <summary>
          Los replicadores permiten la duplicación de archivos en un dominio.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.SystemOperator">
      <summary>
          Los operadores del sistema administran un equipo en particular.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.User">
      <summary>
          Los usuarios no pueden realizar cambios accidentales o intencionados en todo el sistema. En consecuencia, pueden ejecutar aplicaciones certificadas, pero no la mayoría de las aplicaciones heredadas.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter">
      <summary>
          Proporciona un convertidor de tipos para convertir los valores de enumeración <see cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" /> en los valores de enumeración <see cref="T:System.Security.Principal.WindowsBuiltInRole" />.
        </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter" />. 
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
          Obtiene un valor que indica si este convertidor puede convertir un objeto en el tipo de destino especificado mediante el contexto.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Boolean" /> que indica si este convertidor puede realizar la conversión.
        </returns>
      <param name="context">
              Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato. 
            </param>
      <param name="destinationType">
              Objeto <see cref="T:System.Type" /> que representa el tipo al que se desea convertir. 
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
          Convierte el objeto especificado en otro tipo.
        </summary>
      <returns>
          Objeto convertido.
        </returns>
      <param name="context">
              Contexto de formateador. 
            </param>
      <param name="culture">
              Referencia cultural en la que se convertirá <paramref name="value" />.
            </param>
      <param name="value">
              Objeto que se va a convertir. 
            </param>
      <param name="destinationType">
              Tipo en el que se va a convertir el objeto. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="destinationType" /> es Nothing.
            </exception>
      <exception cref="T:System.NotSupportedException">
              No se puede realizar la conversión. 
            </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException">
      <summary>
          Se produce esta excepción cuando una instancia subsiguiente de una aplicación de instancia única no puede conectarse a la primera instancia de la aplicación.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" />.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> con datos serializados.
        </summary>
      <param name="info">
              Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto referentes a la excepción que se produce.
            </param>
      <param name="context">
              Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> con el mensaje de error especificado.
        </summary>
      <param name="message">
              Mensaje que describe el error.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String,System.Exception)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> con un mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.
        </summary>
      <param name="message">
              Objeto <see cref="T:System.String" /> que describe el error.
            </param>
      <param name="inner">
              Objeto <see cref="T:System.Exception" /> que es la causa de la excepción actual. Si el parámetro <see cref="P:System.Exception.InnerException" /> no es una referencia nula (Nothing en Visual Basic), la excepción actual se inicia en un bloque Catch que controla la excepción interna.
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase">
      <summary>
          Proporciona las propiedades, los métodos y los eventos relacionados con la aplicación actual.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />. 
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs">
      <summary>
          Obtiene una colección que contiene los argumentos de la línea de comandos correspondientes a la aplicación actual en forma de cadenas.
        </summary>
      <returns>
          Una colección <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de String, que contiene los argumentos de la línea de comandos correspondientes a la aplicación actual en forma de cadenas.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment">
      <summary>
          Obtiene el objeto de implementación ClickOnce de la aplicación actual, que proporciona la compatibilidad para actualizar mediante programación la implementación actual así como la compatibilidad para la descarga a petición de los archivos.
        </summary>
      <returns>
          Devuelve el objeto <see cref="T:System.Deployment.Application.ApplicationDeployment" /> para la implementación ClickOnce de la aplicación.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine">
      <summary>
          Establece los valores que se van a utilizar como los argumentos de la línea de comandos de la aplicación actual.
        </summary>
      <returns>
          Una colección <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de String, que contiene las cadenas que se van a utilizar como los argumentos de la línea de comandos de la aplicación actual.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed">
      <summary>
          Obtiene un valor Boolean que indica si la aplicación se implementó desde una red mediante ClickOnce.
        </summary>
      <returns>
          Un valor Boolean que indica si la aplicación se implementó desde una red. El valor es True si la aplicación actual se implementó desde una red; de lo contrario, el valor es False.
        </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException">
      <summary>
          El Modelo de aplicaciones de Visual Basic produce esta excepción cuando no se ha establecido la propiedad <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" />.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" />.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> con datos serializados.
        </summary>
      <param name="info">
              Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto referentes a la excepción que se produce.
            </param>
      <param name="context">
              Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> con el mensaje de error especificado.
        </summary>
      <param name="message">
              Mensaje que describe el error.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.String,System.Exception)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> con un mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.
        </summary>
      <param name="message">
              Objeto <see cref="T:System.String" /> que describe el error.
            </param>
      <param name="inner">
              Objeto <see cref="T:System.Exception" /> que es la causa de la excepción actual. Si el parámetro <see cref="P:System.Exception.InnerException" /> no es una referencia nula (Nothing en Visual Basic), la excepción actual se inicia en un bloque catch que controla la excepción interna.
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler">
      <summary>
          Representa el método que controlará el evento My.Application.Shutdown.
        </summary>
      <param name="sender">
              Origen del evento.
            </param>
      <param name="e">
              Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento. 
            </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode">
      <summary>
          Indica qué condición debería hacer que una aplicación de Windows Forms se cerrase.
        </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses">
      <summary>
          Ciérrese cuando el formulario principal se haya cerrado.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterAllFormsClose">
      <summary>
          Ciérrese sólo cuando el último formulario se haya cerrado.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs">
      <summary>
          Proporciona datos al evento My.Application.Startup. 
        </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />.
        </summary>
      <param name="args">
              Objeto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene los argumentos de la línea de comandos de la aplicación.
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine">
      <summary>
          Obtiene los argumentos de la línea de comandos de la aplicación.
        </summary>
      <returns>
          Objeto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene los argumentos de la línea de comandos de la aplicación.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventHandler">
      <summary>
          Representa el método que controlará el evento My.Application.Startup. 
        </summary>
      <param name="sender">
              Origen del evento.
            </param>
      <param name="e">
              Objeto <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> que contiene los datos del evento.
            </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs">
      <summary>
          Proporciona datos del evento My.Application.StartupNextInstance. 
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />.
        </summary>
      <param name="args">
              Objeto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene los argumentos de la línea de comandos correspondientes a la instancia subsiguiente de la aplicación.
            </param>
      <param name="bringToForegroundFlag">
              Valor <see cref="T:System.Boolean" /> que indica si la primera instancia de la aplicación debe llevarse al primer plano cuando se sale del controlador de excepciones.
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground">
      <summary>
          Indica si la primera instancia de la aplicación debe llevarse al primer plano cuando se sale del controlador de excepciones.
        </summary>
      <returns>
          Valor <see cref="T:System.Boolean" /> que indica si la primera instancia de la aplicación debe llevarse al primer plano cuando se sale del controlador de excepciones.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.CommandLine">
      <summary>
          Obtiene los argumentos de la línea de comandos correspondientes a la instancia subsiguiente de la aplicación.
        </summary>
      <returns>
          Objeto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene los argumentos de la línea de comandos correspondientes a la instancia subsiguiente de la aplicación.
        </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler">
      <summary>
          Representa el método que controlará el evento My.Application.StartupNextInstance.
        </summary>
      <param name="sender">
              Origen del evento.
            </param>
      <param name="e">
              Objeto <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs">
      <summary>
          Proporciona datos del evento My.Application.UnhandledException. 
        </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />.
        </summary>
      <param name="exitApplication">
              <see cref="T:System.Boolean" /> que indica si la aplicación debe cerrarse cuando se sale del controlador de excepciones.
            </param>
      <param name="exception">
              <see cref="T:System.Exception" /> que se ha producido. 
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication">
      <summary>
          Indica si la aplicación debe cerrarse cuando se sale del controlador de excepciones.
        </summary>
      <returns>
          <see cref="T:System.Boolean" /> que indica si la aplicación debe cerrarse cuando se sale del controlador de excepciones.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler">
      <summary>
          Representa el método que controlará el evento My.Application.UnhandledException. 
        </summary>
      <param name="sender">
              Origen del evento.
            </param>
      <param name="e">
              Objeto <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> que contiene los datos del evento.
            </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.User">
      <summary>
          Proporciona acceso a la información sobre el usuario actual.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" />. 
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal">
      <summary>
          Obtiene o establece el actual principal (de la seguridad basada en funciones).
        </summary>
      <returns>
          Un valor de <see cref="T:System.Security.Principal.IPrincipal" /> que representa el contexto de seguridad.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser">
      <summary>
          Establece el actual principal del subproceso en el usuario de Windows que inició la aplicación.
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal">
      <summary>
          Obtiene o establece el objeto principal que representa el usuario actual.
        </summary>
      <returns>
          Objeto <see cref="T:System.Security.Principal.IPrincipal" /> que representa el usuario actual.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated">
      <summary>
          Obtiene un valor que indica si el usuario se ha autenticado.
        </summary>
      <returns>
          
            True si se ha autenticado al usuario; en caso contrario, False.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)">
      <summary>
          Determina si el usuario actual pertenece a la función especificada. 
        </summary>
      <returns>
          
            Es True si el usuario actual es un miembro de la función especificada; en caso contrario, es False.
        </returns>
      <param name="role">
              
                String o BuiltInRole Enumeration. Función cuya pertenencia se va a comprobar. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)">
      <summary>
          Determina si el usuario actual pertenece a la función especificada. 
        </summary>
      <returns>
          
            Es True si el usuario actual es un miembro de la función especificada; en caso contrario, es False.
        </returns>
      <param name="role">
              
                String o BuiltInRole Enumeration. Función cuya pertenencia se va a comprobar. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.Name">
      <summary>
          Obtiene el nombre del usuario actual. 
        </summary>
      <returns>
          
            String. Nombre del usuario actual.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.WebUser">
      <summary>
          Proporciona acceso a la información sobre el usuario actual.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WebUser.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.WebUser" />. 
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal">
      <summary>
          Obtiene o establece el objeto principal que representa al usuario actual.
        </summary>
      <returns>
          Objeto <see cref="T:System.Security.Principal.IPrincipal" /> que representa al usuario actual.
        </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase">
      <summary>
          Proporciona las propiedades, los métodos y los eventos relacionados con la aplicación actual.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> con el modo de autenticación especificado.
        </summary>
      <param name="authenticationMode">
              
                <see cref="T:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode" />. Especifica el modo de autenticación de la aplicación.
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext">
      <summary>
          Obtiene el objeto <see cref="T:System.Windows.Forms.ApplicationContext" /> del actual subproceso de una aplicación de Windows Forms.
        </summary>
      <returns>
          Esta propiedad devuelve el objeto <see cref="T:System.Windows.Forms.ApplicationContext" /> del actual subproceso. Ese objeto contiene información contextual sobre el subproceso.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents">
      <summary>
          Procesa todos los mensajes de Windows que hay actualmente en la cola de mensajes.
        </summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles">
      <summary>
          Determina si esta aplicación utilizará los estilos de Windows XP para las ventanas, los controles, etc.
        </summary>
      <returns>
          Un valor de tipo <see cref="T:System.Boolean" /> que indica si esta aplicación utilizará los estilos de Windows XP para las ventanas, los controles, etc.
        </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen">
      <summary>
          Oculta la pantalla de inicio de la aplicación.
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance">
      <summary>
          Determina si esta aplicación es una aplicación de instancia única.
        </summary>
      <returns>
          Un valor de tipo <see cref="T:System.Boolean" /> que indica si esta aplicación es una aplicación de instancia única.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm">
      <summary>
          Obtiene o establece el formulario principal de esta aplicación.
        </summary>
      <returns>
          Obtiene o establece el formulario principal de esta aplicación.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime">
      <summary>
          Determina el intervalo mínimo, expresado en milisegundos, durante el cual se muestra la pantalla de inicio.
        </summary>
      <returns>
          
            Un valor de tipo Integer. Intervalo mínimo, expresado en milisegundos, durante el cual se muestra la pantalla de inicio.
        </returns>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged">
      <summary>
          Se produce cuando cambia la disponibilidad de la red.
        </summary>
      <param name="sender">
              Obligatorio. Object que provocó el evento.
            </param>
      <param name="e">
              Obligatorio. Objeto <see cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" /> que contiene información sobre la disponibilidad de la red.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm">
      <summary>
          Cuando se reemplaza en una clase derivada, permite a un diseñador emitir código que configura la pantalla de inicio y el formulario principal.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen">
      <summary>
          Cuando se reemplaza en una clase derivada, permite a un diseñador emitir código que inicializa la pantalla de inicio.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>
          Establece los estilos visuales, los estilos de presentación de texto y el actual principal del subproceso principal de la aplicación (si ésta utiliza la autenticación de Windows), e inicializa la pantalla de inicio si está definida.
        </summary>
      <returns>
          Un valor de tipo <see cref="T:System.Boolean" /> que indica si debe continuar el inicio de la aplicación.
        </returns>
      <param name="commandLineArgs">
              Colección <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de String, que contiene los argumentos de la línea de comandos correspondientes a la aplicación actual en forma de cadenas.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun">
      <summary>
          Proporciona el punto inicial para cuando la aplicación principal está lista para comenzar a ejecutarse, después de finalizar la inicialización.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown">
      <summary>
          Cuando se reemplaza en una clase derivada, permite que se ejecute el código cuando la aplicación se cierra.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)">
      <summary>
          Cuando se reemplaza en una clase derivada, permite que se ejecute el código cuando se inicia la aplicación.
        </summary>
      <returns>
          Un valor de tipo <see cref="T:System.Boolean" /> que indica si debe continuar el inicio de la aplicación.
        </returns>
      <param name="eventArgs">
              
                <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />. Contiene los argumentos de la línea de comandos de la aplicación e indica si debe cancelarse el inicio de la aplicación.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)">
      <summary>
          Cuando se reemplaza en una clase derivada, permite que el código se ejecute cuando se inicia una instancia subsiguiente de una aplicación de instancia única.
        </summary>
      <param name="eventArgs">
              
                <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />. Contiene los argumentos de la línea de comandos correspondientes a la instancia subsiguiente de la aplicación e indica si la primera instancia de la aplicación debe llevarse al primer plano al salirse del controlador de excepciones.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)">
      <summary>
          Cuando se reemplaza en una clase derivada, permite que el código se ejecute cuando se produce una excepción no controlada en la aplicación.
        </summary>
      <returns>
          Un valor de tipo <see cref="T:System.Boolean" /> que indica si se provocó el evento UnhandledException.
        </returns>
      <param name="e">
              
                <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />.
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms">
      <summary>
          Obtiene una colección de todos los formularios abiertos de la aplicación.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Windows.Forms.FormCollection" /> que contiene todos los formularios abiertos de la aplicación.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])">
      <summary>
          Prepara e inicia el Modelo de aplicaciones de Visual Basic. 
        </summary>
      <param name="commandLine">
              Matriz de tipo String. Línea de comandos de Sub Main.
            </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal, RemotingConfiguration" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit">
      <summary>
          Determina si la aplicación guarda la configuración del usuario al cerrarse.
        </summary>
      <returns>
          
            Un valor de tipo Boolean. True indica que la aplicación guarda la configuración del usuario al cerrarse. De lo contrario, no se guarda implícitamente la configuración.
        </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen">
      <summary>
          Determina si la aplicación tiene definida una pantalla de inicio y, si es el caso, la muestra.
        </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown">
      <summary>
          Se produce cuando se cierra la aplicación.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle">
      <summary>
          Determina lo que sucede cuando se cierra el formulario principal de la aplicación.
        </summary>
      <returns>
          Un valor de la enumeración <see cref="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode" />, que indica lo que debe hacer la aplicación cuando se cierra el formulario principal.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen">
      <summary>
          Obtiene o establece la pantalla de inicio de esta aplicación.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Windows.Forms.Form" /> que la aplicación utiliza como pantalla de inicio.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup">
      <summary>
          Se produce cuando se inicia la aplicación.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance">
      <summary>
          Se produce cuando se intenta iniciar una aplicación de instancia única y la aplicación ya está activa.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException">
      <summary>
          Se produce cuando la aplicación detecta una excepción no controlada.
        </summary>
      <param name="sender">
              El Object que provocó el evento.
            </param>
      <param name="e">
              Objeto <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> que contiene la excepción no controlada e información adicional. 
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering">
      <summary>
          Cuando se reemplaza en una clase derivada, esta propiedad permite que un diseñador especifique el motor de representación de texto predeterminado para los formularios de la aplicación.
        </summary>
      <returns>
          
            Boolean. El valor False indica que la aplicación debe utilizar el motor de representación de texto predeterminado de Visual Basic 2005. El valor True indica que la aplicación debe utilizar el motor de representación de texto de Visual Basic .NET 2002 y Visual Basic .NET 2003.
        </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary>
          Esta clase queda en desuso a partir de Visual Basic 2005. Sólo se utiliza a efectos de compatibilidad con el compilador de Visual Basic 2003 y no está diseñada para utilizarse directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary>
          Devuelve un valor Boolean que corresponde al objeto especificado. Esta clase admite el compilador de Visual Basic y no está prevista su utilización directa desde el código.
        </summary>
      <returns>
          Valor Boolean correspondiente a <paramref name="Value" />.
        </returns>
      <param name="Value">
              Es un parámetro necesario. Objeto que se va a convertir en un valor Boolean.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary>
          Esta clase queda en desuso a partir de Visual Basic 2005. Sólo se utiliza a efectos de compatibilidad con el compilador de Visual Basic 2003 y no está diseñada para utilizarse directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary>
          Devuelve un valor Byte que corresponde al objeto especificado. Esta clase admite el compilador de Visual Basic y no está prevista su utilización directa desde el código.
        </summary>
      <returns>
          Valor Byte correspondiente a <paramref name="Value" />.
        </returns>
      <param name="Value">
              Es un parámetro necesario. Objeto que se va a convertir en un valor Byte.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary>
          Esta clase queda en desuso a partir de Visual Basic 2005. Sólo se utiliza a efectos de compatibilidad con el compilador de Visual Basic 2003 y no está diseñada para utilizarse directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary>
          Esta clase queda en desuso a partir de Visual Basic 2005. Sólo se utiliza a efectos de compatibilidad con el compilador de Visual Basic 2003 y no está diseñada para utilizarse directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary>
          Proporciona métodos que realizan distintas conversiones de tipos.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary>
          Convierte un objeto al tipo especificado.
        </summary>
      <returns>
          Un objeto del tipo de destino especificado.
        </returns>
      <param name="Expression">
              Objeto que se va a convertir.
            </param>
      <param name="TargetType">
              Tipo al que se va a convertir el objeto.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary>
          Convierte un valor <see cref="T:System.Char" /> en una cadena, dado un recuento de bytes.
        </summary>
      <returns>
          La representación de cadena del valor especificado.
        </returns>
      <param name="Value">
              Valor Char que se va a convertir.
            </param>
      <param name="Count">
              Recuento de bytes del valor Char.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary>
          Convierte una matriz de <see cref="T:System.Char" /> en una cadena.
        </summary>
      <returns>
          La representación de cadena de la matriz especificada.
        </returns>
      <param name="Value">
              Matriz de Char que se va a convertir.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary>
          Convierte un subconjunto de una matriz de <see cref="T:System.Char" /> en una cadena.
        </summary>
      <returns>
          La representación de cadena de la matriz especificada desde la posición inicial a la longitud especificada.
        </returns>
      <param name="Value">
              Matriz de Char que se va a convertir.
            </param>
      <param name="StartIndex">
              Índice de base cero de la posición inicial.
            </param>
      <param name="Length">
              Longitud del subconjunto en bytes.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary>
          Convierte un objeto en un valor <see cref="T:System.Boolean" />.
        </summary>
      <returns>
          Un valor Boolean. Devuelve False si el valor del objeto es null; de lo contrario, es True.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary>
          Convierte una cadena en un valor <see cref="T:System.Boolean" />.
        </summary>
      <returns>
          Un valor Boolean. Devuelve False si el valor de la cadena es null; de lo contrario, es True.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary>
          Convierte un objeto en un valor <see cref="T:System.Byte" />.
        </summary>
      <returns>
          El valor Byte del objeto.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary>
          Convierte una cadena en un valor <see cref="T:System.Byte" />.
        </summary>
      <returns>
          El valor Byte de la cadena.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary>
          Convierte un objeto en un valor <see cref="T:System.Char" />.
        </summary>
      <returns>
          El valor Char del objeto.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary>
          Convierte una cadena en un valor <see cref="T:System.Char" />.
        </summary>
      <returns>
          El valor Char de la cadena.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary>
          Convierte un objeto en una matriz de <see cref="T:System.Char" /> unidimensional.
        </summary>
      <returns>
          Una matriz de Char unidimensional.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary>
          Convierte una cadena en una matriz de <see cref="T:System.Char" /> unidimensional.
        </summary>
      <returns>
          Una matriz de Char unidimensional.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary>
          Convierte un objeto en un valor <see cref="T:System.DateTime" />.
        </summary>
      <returns>
          El valor DateTime del objeto.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary>
          Convierte una cadena en un valor <see cref="T:System.DateTime" />.
        </summary>
      <returns>
          El valor DateTime de la cadena.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary>
          Convierte un valor <see cref="T:System.Boolean" /> en un valor <see cref="T:System.Decimal" />.
        </summary>
      <returns>
          El valor Decimal del valor Boolean.
        </returns>
      <param name="Value">
              Valor Boolean que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary>
          Convierte un objeto en un valor <see cref="T:System.Decimal" />.
        </summary>
      <returns>
          El valor Decimal del objeto.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary>
          Convierte una cadena en un valor <see cref="T:System.Decimal" />.
        </summary>
      <returns>
          El valor Decimal de la cadena.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary>
          Convierte un objeto en un valor <see cref="T:System.Double" />.
        </summary>
      <returns>
          El valor Double del objeto.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary>
          Convierte una cadena en un valor <see cref="T:System.Double" />.
        </summary>
      <returns>
          El valor Double de la cadena.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary>
          Convierte un objeto a un tipo genérico <paramref name="T" />.
        </summary>
      <returns>
          Una estructura u objeto de tipo genérico <paramref name="T" />.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <typeparam name="T">
              Tipo en el que convertir <paramref name="Value" />.
            </typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary>
          Convierte un objeto en un valor entero.
        </summary>
      <returns>
          El valor int del objeto.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary>
          Convierte una cadena en un valor entero.
        </summary>
      <returns>
          El valor int de la cadena.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary>
          Convierte un objeto en un valor Long.
        </summary>
      <returns>
          El valor Long del objeto.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary>
          Convierte una cadena en un valor Long.
        </summary>
      <returns>
          El valor Long de la cadena.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary>
          Convierte un objeto en un valor <see cref="T:System.SByte" />.
        </summary>
      <returns>
          El valor SByte del objeto.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary>
          Convierte una cadena en un valor <see cref="T:System.SByte" />.
        </summary>
      <returns>
          El valor SByte de la cadena.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary>
          Convierte un objeto en un valor Short.
        </summary>
      <returns>
          El valor Short del objeto.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary>
          Convierte una cadena en un valor Short.
        </summary>
      <returns>
          El valor Short de la cadena.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary>
          Convierte un objeto en un valor <see cref="T:System.Single" />.
        </summary>
      <returns>
          El valor Single del objeto.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary>
          Convierte un objeto <see cref="T:System.String" /> en un valor <see cref="T:System.Single" />.
        </summary>
      <returns>
          El valor Single de la cadena.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary>
          Convierte un valor <see cref="T:System.Boolean" /> en un objeto <see cref="T:System.String" />.
        </summary>
      <returns>
          La representación de String del valor Boolean.
        </returns>
      <param name="Value">
              Valor Boolean que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary>
          Convierte un valor <see cref="T:System.Byte" /> en un objeto <see cref="T:System.String" />.
        </summary>
      <returns>
          La representación de String del valor Byte.
        </returns>
      <param name="Value">
              Valor Byte que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary>
          Convierte un valor <see cref="T:System.Char" /> en un objeto <see cref="T:System.String" />.
        </summary>
      <returns>
          La representación de String del valor Char.
        </returns>
      <param name="Value">
              Valor Char que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary>
          Convierte un valor <see cref="T:System.DateTime" /> en un valor <see cref="T:System.String" />.
        </summary>
      <returns>
          La representación de String del valor DateTime.
        </returns>
      <param name="Value">
              Valor DateTime que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary>
          Convierte un valor <see cref="T:System.Decimal" /> en un valor <see cref="T:System.String" />.
        </summary>
      <returns>
          La representación de String del valor Decimal.
        </returns>
      <param name="Value">
              Valor Decimal que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>
          Convierte un valor <see cref="T:System.Decimal" /> en un valor <see cref="T:System.String" />, utilizando el formato de número especificado.
        </summary>
      <returns>
          La representación de String del valor Decimal.
        </returns>
      <param name="Value">
              Valor decimal que se va a convertir.
            </param>
      <param name="NumberFormat">
              Formato de número que se va a utilizar, de acuerdo con <see cref="T:System.Globalization.NumberFormatInfo" />.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary>
          Convierte un valor <see cref="T:System.Double" /> en un valor <see cref="T:System.String" />.
        </summary>
      <returns>
          La representación de String del valor Double.
        </returns>
      <param name="Value">
              Valor Double que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>
          Convierte un valor <see cref="T:System.Double" /> en un valor <see cref="T:System.String" />, utilizando el formato de número especificado.
        </summary>
      <returns>
          La representación de String del valor Double.
        </returns>
      <param name="Value">
              Valor Double que se va a convertir.
            </param>
      <param name="NumberFormat">
              Formato de número que se va a utilizar, de acuerdo con <see cref="T:System.Globalization.NumberFormatInfo" />.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary>
          Convierte un valor Short en un valor <see cref="T:System.String" />.
        </summary>
      <returns>
          La representación de String del valor Short.
        </returns>
      <param name="Value">
              Valor Short que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary>
          Convierte un valor entero en un valor <see cref="T:System.String" />.
        </summary>
      <returns>
          La representación de String del valor int.
        </returns>
      <param name="Value">
              Valor int que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary>
          Convierte un valor Long en un valor <see cref="T:System.String" />.
        </summary>
      <returns>
          La representación de String del valor Long.
        </returns>
      <param name="Value">
              Valor Long que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary>
          Convierte un objeto en un valor <see cref="T:System.String" />.
        </summary>
      <returns>
          La representación de String del objeto.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary>
          Convierte un valor <see cref="T:System.Single" /> (número de punto flotante de precisión simple) en un valor <see cref="T:System.String" />.
        </summary>
      <returns>
          La representación de String del valor Single.
        </returns>
      <param name="Value">
              Valor Single que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>
          Convierte un valor <see cref="T:System.Single" /> en un valor <see cref="T:System.String" />, utilizando el formato de número especificado.
        </summary>
      <returns>
          La representación de String del valor Single.
        </returns>
      <param name="Value">
              Valor Single que se va a convertir.
            </param>
      <param name="NumberFormat">
              Formato de número que se va a utilizar, de acuerdo con <see cref="T:System.Globalization.NumberFormatInfo" />.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary>
          Convierte un valor uint en un valor <see cref="T:System.String" />.
        </summary>
      <returns>
          La representación de String del valor Uint.
        </returns>
      <param name="Value">
              Valor Uint que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary>
          Convierte un valor Ulong en un valor <see cref="T:System.String" />.
        </summary>
      <returns>
          La representación de String del valor Ulong.
        </returns>
      <param name="Value">
              Valor Ulong que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary>
          Convierte un objeto en un valor Uint.
        </summary>
      <returns>
          El valor Uint del objeto.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary>
          Convierte una cadena en un valor Uint.
        </summary>
      <returns>
          El valor Uint de la cadena.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary>
          Convierte un objeto en un valor Ulong.
        </summary>
      <returns>
          El valor Ulong del objeto.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary>
          Convierte una cadena en un valor Ulong.
        </summary>
      <returns>
          El valor Ulong de la cadena.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary>
          Convierte un objeto en un valor Ushort.
        </summary>
      <returns>
          El valor Ushort del objeto.
        </returns>
      <param name="Value">
              Objeto que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary>
          Convierte una cadena en un valor Ushort.
        </summary>
      <returns>
          El valor Ushort de la cadena.
        </returns>
      <param name="Value">
              Cadena que se va a convertir.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary>
          Esta clase queda en desuso a partir de Visual Basic 2005. Sólo se utiliza a efectos de compatibilidad con el compilador de Visual Basic 2003 y no está diseñada para utilizarse directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary>
          Devuelve un valor Date que corresponde al objeto especificado. Esta clase admite el compilador de Visual Basic y no está prevista su utilización directa desde el código.
        </summary>
      <returns>
          Valor Date correspondiente a <paramref name="Value" />.
        </returns>
      <param name="Value">
              Requerido. Objeto que se va a convertir en un valor Date.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
      <param name="culture">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary>
          Esta clase queda en desuso a partir de Visual Basic 2005. Sólo se utiliza a efectos de compatibilidad con el compilador de Visual Basic 2003 y no está diseñada para utilizarse directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary>
          Devuelve un valor Decimal que corresponde al objeto especificado. Esta clase admite el compilador de Visual Basic y no está prevista su utilización directa desde el código.
        </summary>
      <returns>
          Valor Decimal correspondiente a <paramref name="Value" />.
        </returns>
      <param name="Value">
              Requerido. Objeto que se va a convertir en un valor Decimal.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>
          Devuelve un valor Decimal que corresponde al objeto especificado. Esta clase admite el compilador de Visual Basic y no está prevista su utilización directa desde el código.
        </summary>
      <returns>
          Valor Decimal correspondiente a <paramref name="Value" />.
        </returns>
      <param name="Value">
              Requerido. Objeto que se va a convertir en un valor Decimal.
            </param>
      <param name="NumberFormat">
              Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
      <param name="NumberFormat">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
      <param name="NumberFormat">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary>
          Cuando se aplica a una clase, el compilador llama implícitamente a un método de inicialización de componentes desde el constructor sintético predeterminado.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia del atributo <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" />.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary>
          Esta clase queda en desuso a partir de Visual Basic 2005. Sólo se utiliza a efectos de compatibilidad con el compilador de Visual Basic 2003 y no está diseñada para utilizarse directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary>
          Devuelve un valor Double que corresponde al objeto especificado. Esta clase admite el compilador de Visual Basic y no está prevista su utilización directa desde el código.
        </summary>
      <returns>
          Valor Double correspondiente a <paramref name="Value" />.
        </returns>
      <param name="Value">
              Requerido. Objeto que se va a convertir en un valor Double.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>
          Devuelve un valor Double que corresponde al objeto especificado. Esta clase admite el compilador de Visual Basic y no está prevista su utilización directa desde el código.
        </summary>
      <returns>
          Valor Double correspondiente a <paramref name="Value" />.
        </returns>
      <param name="Value">
              Requerido. Objeto que se va a convertir en un valor Double.
            </param>
      <param name="NumberFormat">
              Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
      <param name="NumberFormat">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
      <param name="NumberFormat">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ExceptionUtils">
      <summary>
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.FlowControl">
      <summary>
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary>
        </summary>
      <param name="obj">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr(System.Array)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="ary">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="obj">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj(System.Object@,System.Collections.IEnumerator)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="obj">
            </param>
      <param name="enumerator">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Counter">
            </param>
      <param name="Start">
            </param>
      <param name="Limit">
            </param>
      <param name="StepValue">
            </param>
      <param name="LoopForResult">
            </param>
      <param name="CounterResult">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="count">
            </param>
      <param name="limit">
            </param>
      <param name="StepValue">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Counter">
            </param>
      <param name="LoopObj">
            </param>
      <param name="CounterResult">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="count">
            </param>
      <param name="limit">
            </param>
      <param name="StepValue">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="count">
            </param>
      <param name="limit">
            </param>
      <param name="StepValue">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.HostServices">
      <summary>
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.HostServices.#ctor">
      <summary>
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.HostServices.VBHost">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary>
          El compilador de Visual Basic utiliza esta clase durante la inicialización local estática; no está diseñada para ser llamada directamente desde el código. Se produce una excepción de este tipo si una variable local estática no se inicializa.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" />.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" />.
        </summary>
      <param name="message">
              Cadena que representa el mensaje que se va a enviar.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor(System.String,System.Exception)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" />.
        </summary>
      <param name="message">
              Cadena que representa el mensaje que se va a enviar.
            </param>
      <param name="innerException">
              Objeto <see cref="T:System.Exception" />.
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary>
          Esta clase queda en desuso a partir de Visual Basic 2005. Sólo se utiliza a efectos de compatibilidad con el compilador de Visual Basic 2003 y no está diseñada para utilizarse directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary>
          Devuelve un valor entero que corresponde al objeto especificado. Esta clase admite el compilador de Visual Basic y no está prevista su utilización directa desde el código.
        </summary>
      <returns>
          Valor int correspondiente a <paramref name="Value" />.
        </returns>
      <param name="Value">
              Requerido. Objeto que se va a convertir en un valor int.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.InternalErrorException">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalErrorException.#ctor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalErrorException.#ctor(System.String)">
      <summary>
        </summary>
      <param name="message">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalErrorException.#ctor(System.String,System.Exception)">
      <summary>
        </summary>
      <param name="message">
            </param>
      <param name="innerException">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IVbHost">
      <summary>
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IVbHost.GetParentWindow">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IVbHost.GetWindowTitle">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary>
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>
        </summary>
      <param name="o">
            </param>
      <param name="objType">
            </param>
      <param name="name">
            </param>
      <param name="args">
            </param>
      <param name="paramnames">
            </param>
      <param name="CopyBack">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="o">
            </param>
      <param name="objType">
            </param>
      <param name="name">
            </param>
      <param name="args">
            </param>
      <param name="paramnames">
            </param>
      <param name="CopyBack">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="o">
            </param>
      <param name="args">
            </param>
      <param name="paramnames">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>
        </summary>
      <param name="o">
            </param>
      <param name="args">
            </param>
      <param name="paramnames">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>
        </summary>
      <param name="o">
            </param>
      <param name="args">
            </param>
      <param name="paramnames">
            </param>
      <param name="OptimisticSet">
            </param>
      <param name="RValueBase">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary>
        </summary>
      <param name="o">
            </param>
      <param name="objType">
            </param>
      <param name="name">
            </param>
      <param name="args">
            </param>
      <param name="paramnames">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>
        </summary>
      <param name="o">
            </param>
      <param name="objType">
            </param>
      <param name="name">
            </param>
      <param name="args">
            </param>
      <param name="paramnames">
            </param>
      <param name="OptimisticSet">
            </param>
      <param name="RValueBase">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary>
          Esta clase proporciona elementos auxiliares que el compilador de Visual Basic utiliza para realizar el trabajo correspondiente a Like Operator. No está diseñada para ser llamada directamente desde el código.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>
          Realiza una comparación de cadenas de texto o binarias dados dos objetos. Este método auxiliar no está diseñado para ser llamado directamente desde el código.
        </summary>
      <returns>
          Un valor Boolean que indica si las cadenas coinciden. Devuelve True si las cadenas coinciden; en caso contrario, devuelve False.
        </returns>
      <param name="Source">
              Cadena que se va a comparar.
            </param>
      <param name="Pattern">
              Cadena con la que se va a comparar <paramref name="Source" />.
            </param>
      <param name="CompareOption">
              Enumeración <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica si se utiliza o no la comparación de texto. En caso de <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, este método utiliza la comparación de texto; en caso de <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, este método utiliza la comparación binaria.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
          Realiza una comparación de cadenas de texto o binarias dadas dos cadenas. Este método auxiliar no está diseñado para ser llamado directamente desde el código.
        </summary>
      <returns>
          Un valor Boolean que indica si las cadenas coinciden. Devuelve True si las cadenas coinciden; en caso contrario, devuelve False.
        </returns>
      <param name="Source">
              Cadena que se va a comparar.
            </param>
      <param name="Pattern">
              Cadena con la que se va a comparar <paramref name="Source" />.
            </param>
      <param name="CompareOption">
              Enumeración <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica si se utiliza o no la comparación de texto. En caso de <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, este método utiliza la comparación de texto; en caso de <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, este método utiliza la comparación binaria.
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary>
          Esta clase queda en desuso a partir de Visual Basic 2005. Sólo se utiliza a efectos de compatibilidad con el compilador de Visual Basic 2003 y no está diseñada para utilizarse directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary>
          Esta clase proporciona los elementos auxiliares que utiliza el compilador de Visual Basic; no está diseñada para que la llame el código directamente.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary>
          Ejecuta un método enlazado en tiempo de ejecución o una llamada a la función. Este método auxiliar no está diseñado para ser llamado directamente desde el código.
        </summary>
      <returns>
          Instancia del objeto de llamada.
        </returns>
      <param name="Instance">
              Instancia del objeto de llamada que expone la propiedad o el método.
            </param>
      <param name="Type">
              Tipo del objeto de llamada.
            </param>
      <param name="MemberName">
              Nombre de la propiedad o del método del objeto de llamada.
            </param>
      <param name="Arguments">
              Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.
            </param>
      <param name="ArgumentNames">
              Matriz de nombres de argumento.
            </param>
      <param name="TypeArguments">
              Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.
            </param>
      <param name="CopyBack">
              Matriz de valores Boolean que el enlazador en tiempo de ejecución utiliza para comunicarse con el sitio de llamada en el que los argumentos hacen coincidir los parámetros ByRef. Cada valor True indica que los argumentos coincidieron y se deben copiar después de que haya finalizado la llamada a LateCall.
            </param>
      <param name="IgnoreReturn">
              Valor Boolean que indica si se puede omitir el valor devuelto o no.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCanEvaluate(System.Object,System.Type,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>
          Indica si una llamada requiere evaluación enlazada en tiempo de ejecución. Este método auxiliar no está diseñado para ser llamado directamente desde el código.
        </summary>
      <returns>
          Valor Boolean que indica si la expresión requiere evaluación enlazada en tiempo de ejecución.
        </returns>
      <param name="instance">
              Instancia del objeto de llamada que expone la propiedad o el método.
            </param>
      <param name="type">
              Tipo del objeto de llamada.
            </param>
      <param name="memberName">
              Nombre de la propiedad o del método del objeto de llamada.
            </param>
      <param name="arguments">
              Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.
            </param>
      <param name="allowFunctionEvaluation">
              Valor Boolean que especifica si se permite la evaluación de funciones.
            </param>
      <param name="allowPropertyEvaluation">
              Valor Boolean que especifica si se permite la evaluación de propiedades.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary>
          Ejecuta una llamada de acceso a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método auxiliar no está diseñado para ser llamado directamente desde el código.
        </summary>
      <returns>
          Instancia del objeto de llamada.
        </returns>
      <param name="Instance">
              Instancia del objeto de llamada que expone la propiedad o el método.
            </param>
      <param name="Type">
              Tipo del objeto de llamada.
            </param>
      <param name="MemberName">
              Nombre de la propiedad o del método del objeto de llamada.
            </param>
      <param name="Arguments">
              Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.
            </param>
      <param name="ArgumentNames">
              Matriz de nombres de argumento.
            </param>
      <param name="TypeArguments">
              Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.
            </param>
      <param name="CopyBack">
              Matriz de valores Boolean que el enlazador en tiempo de ejecución utiliza para comunicarse con el sitio de llamada en el que los argumentos hacen coincidir los parámetros ByRef. Cada valor True indica que los argumentos coincidieron y se deben copiar después de que haya finalizado la llamada a LateCall.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>
          Ejecuta una llamada de acceso a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método auxiliar no está diseñado para ser llamado directamente desde el código.
        </summary>
      <returns>
          Instancia del objeto de llamada.
        </returns>
      <param name="Instance">
              Instancia del objeto de llamada que expone la propiedad o el método.
            </param>
      <param name="Arguments">
              Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.
            </param>
      <param name="ArgumentNames">
              Matriz de nombres de argumento.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>
          Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método auxiliar no está diseñado para ser llamado directamente desde el código.
        </summary>
      <param name="Instance">
              Instancia del objeto de llamada que expone la propiedad o el método.
            </param>
      <param name="Arguments">
              Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.
            </param>
      <param name="ArgumentNames">
              Matriz de nombres de argumento.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>
          Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método auxiliar no está diseñado para ser llamado directamente desde el código.
        </summary>
      <param name="Instance">
              Instancia del objeto de llamada que expone la propiedad o el método.
            </param>
      <param name="Arguments">
              Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.
            </param>
      <param name="ArgumentNames">
              Matriz de nombres de argumento.
            </param>
      <param name="OptimisticSet">
              Valor Boolean utilizado para determinar si funcionará la operación de establecimiento. Se establece en True cuando se crea que se ha establecido un valor intermedio en la propiedad o campo; en caso contrario, es False.
            </param>
      <param name="RValueBase">
              Valor Boolean que especifica cuándo la referencia base de la referencia enlazada es RValue. Se establece en True cuando la referencia base de la referencia enlazada es RValue; de esta forma, puede generar una excepción en tiempo de ejecución para asignaciones enlazadas a los campos de RValues de tipos de valor. En caso contrario, se establece en False.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary>
          Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método auxiliar no está diseñado para ser llamado directamente desde el código.
        </summary>
      <param name="Instance">
              Instancia del objeto de llamada que expone la propiedad o el método.
            </param>
      <param name="Type">
              Tipo del objeto de llamada.
            </param>
      <param name="MemberName">
              Nombre de la propiedad o del método del objeto de llamada.
            </param>
      <param name="Arguments">
              Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.
            </param>
      <param name="ArgumentNames">
              Matriz de nombres de argumento.
            </param>
      <param name="TypeArguments">
              Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary>
          Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método auxiliar no está diseñado para ser llamado directamente desde el código.
        </summary>
      <param name="Instance">
              Instancia del objeto de llamada que expone la propiedad o el método.
            </param>
      <param name="Type">
              Tipo del objeto de llamada.
            </param>
      <param name="MemberName">
              Nombre de la propiedad o del método del objeto de llamada.
            </param>
      <param name="Arguments">
              Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.
            </param>
      <param name="ArgumentNames">
              Matriz de nombres de argumento.
            </param>
      <param name="TypeArguments">
              Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.
            </param>
      <param name="OptimisticSet">
              Valor Boolean utilizado para determinar si funcionará la operación de establecimiento. Se establece en True cuando se crea que se ha establecido un valor intermedio en la propiedad o campo; en caso contrario, es False.
            </param>
      <param name="RValueBase">
              Valor Boolean que especifica cuándo la referencia base de la referencia enlazada es RValue. Se establece en True cuando la referencia base de la referencia enlazada es RValue; de esta forma, puede generar una excepción en tiempo de ejecución para asignaciones enlazadas a los campos de RValues de tipos de valor. En caso contrario, se establece en False.
            </param>
      <param name="CallType">
              Miembro de enumeración de tipo CallType Enumeration que representa el tipo de procedimiento al que se llama. El valor de CallType puede ser Method, Get o Set. Sólo se utiliza Set.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary>
          Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método auxiliar no está diseñado para ser llamado directamente desde el código.
        </summary>
      <param name="Instance">
              Instancia del objeto de llamada que expone la propiedad o el método.
            </param>
      <param name="Type">
              Tipo del objeto de llamada.
            </param>
      <param name="MemberName">
              Nombre de la propiedad o del método del objeto de llamada.
            </param>
      <param name="Arguments">
              Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.
            </param>
      <param name="ArgumentNames">
              Matriz de nombres de argumento.
            </param>
      <param name="TypeArguments">
              Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.
            </param>
      <param name="OptimisticSet">
              Valor Boolean utilizado para determinar si funcionará la operación de establecimiento. Se establece en True cuando se crea que se ha establecido un valor intermedio en la propiedad o campo; en caso contrario, es False.
            </param>
      <param name="RValueBase">
              Valor Boolean que especifica cuándo la referencia base de la referencia enlazada es RValue. Se establece en True cuando la referencia base de la referencia enlazada es RValue; de esta forma, puede generar una excepción en tiempo de ejecución para asignaciones enlazadas a los campos de RValues de tipos de valor. En caso contrario, se establece en False.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary>
          El compilador de Visual Basic utiliza esta clase para el control de flujo de objetos; no se ha creado para que lo llame directamente el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary>
          Busca un bloqueo de sincronización en el tipo especificado.
        </summary>
      <param name="Expression">
              El tipo de datos para el que se busca el bloqueo de sincronización.
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Counter">
            </param>
      <param name="Start">
            </param>
      <param name="Limit">
            </param>
      <param name="StepValue">
            </param>
      <param name="LoopForResult">
            </param>
      <param name="CounterResult">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="count">
            </param>
      <param name="limit">
            </param>
      <param name="StepValue">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Counter">
            </param>
      <param name="LoopObj">
            </param>
      <param name="CounterResult">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="count">
            </param>
      <param name="limit">
            </param>
      <param name="StepValue">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="count">
            </param>
      <param name="limit">
            </param>
      <param name="StepValue">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary>
          Esta clase queda en desuso a partir de Visual Basic 2005. Sólo se utiliza a efectos de compatibilidad con el compilador de Visual Basic 2003 y no está diseñada para utilizarse directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary>
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="o1">
            </param>
      <param name="o2">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="obj1">
            </param>
      <param name="obj2">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="obj1">
            </param>
      <param name="obj2">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="obj1">
            </param>
      <param name="obj2">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="o1">
            </param>
      <param name="o2">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="o">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="o1">
            </param>
      <param name="o2">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="vLeft">
            </param>
      <param name="vRight">
            </param>
      <param name="CompareOption">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="o1">
            </param>
      <param name="o2">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="o1">
            </param>
      <param name="o2">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="obj">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="obj">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="o1">
            </param>
      <param name="o2">
            </param>
      <param name="TextCompare">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="obj">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="obj1">
            </param>
      <param name="obj2">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="o1">
            </param>
      <param name="amount">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="o1">
            </param>
      <param name="amount">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="vLeft">
            </param>
      <param name="vRight">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="o1">
            </param>
      <param name="o2">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="obj1">
            </param>
      <param name="obj2">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary>
          Esta clase proporciona operadores matemáticos enlazados en tiempo de ejecución, como <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> y <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, que utiliza internamente el compilador de Visual Basic. Esta clase no está diseñada para que el código la llame directamente.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <param name="TextCompare">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <param name="TextCompare">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <param name="TextCompare">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <param name="TextCompare">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <param name="TextCompare">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <param name="TextCompare">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <param name="TextCompare">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary>
          Realiza una comparación de cadenas de texto o binarias dadas dos cadenas.
        </summary>
      <returns>
          Valor de entero. Devuelve 0 si las cadenas no coinciden.
        </returns>
      <param name="Left">
              Primera cadena que se va a comparar.
            </param>
      <param name="Right">
              Segunda cadena que se va a comparar.
            </param>
      <param name="TextCompare">
              Valor booleano que especifica si se utiliza o no la comparación de texto. Si el valor es True, se utiliza la comparación de texto; si es False, se usa la comparación binaria.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <param name="TextCompare">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <param name="TextCompare">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <param name="TextCompare">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <param name="TextCompare">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <param name="TextCompare">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <param name="TextCompare">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Operand">
            </param>
      <param name="Amount">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Source">
            </param>
      <param name="Pattern">
            </param>
      <param name="CompareOption">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Source">
            </param>
      <param name="Pattern">
            </param>
      <param name="CompareOption">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Operand">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Operand">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Operand">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Operand">
            </param>
      <param name="Amount">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Left">
            </param>
      <param name="Right">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary>
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary>
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary>
          El compilador de Visual Basic emite esta clase para indicar (en la depuración de Visual Basic) qué opción de comparación, de texto o binaria, se utiliza. Esta clase auxiliar no está diseñada para ser llamada directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" />. Este método auxiliar no está diseñado para ser llamado directamente desde el código.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary>
          Esta clase proporciona los elementos auxiliares del objeto Err de Visual Basic. No está diseñada para ser llamada directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary>
          Este método auxiliar realiza el trabajo del método Clear del objeto Err. No está diseñado para ser llamado directamente desde el código.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary>
          Este método auxiliar realiza el trabajo del método Raise del objeto Err. No está diseñado para ser llamado directamente desde el código.
        </summary>
      <returns>
          Objeto <see cref="T:System.Exception" />.
        </returns>
      <param name="hr">
              Entero que identifica la naturaleza del error. Los errores de Visual Basic vienen indicados por el intervalo 0-65535, el intervalo 0-512 queda reservado para los errores del sistema y el intervalo 513-65535 es para los errores definidos por el usuario.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary>
        </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary>
          El compilador de Visual Basic utiliza este método auxiliar para capturar las excepciones del objeto Err. No está diseñado para ser llamado directamente desde el código.
        </summary>
      <param name="ex">
              Objeto <see cref="T:System.Exception" /> que se va a detectar.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary>
          El compilador de Visual Basic utiliza este método auxiliar para capturar las excepciones del objeto Err. No está diseñado para ser llamado directamente desde el código.
        </summary>
      <param name="ex">
              Objeto <see cref="T:System.Exception" /> que se va a detectar.
            </param>
      <param name="lErl">
              Número de línea de la excepción.
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary>
          Esta clase queda en desuso a partir de Visual Basic 2005. Sólo se utiliza a efectos de compatibilidad con el compilador de Visual Basic 2003 y no está diseñada para utilizarse directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary>
          Devuelve un valor Short que corresponde al objeto especificado. Esta clase admite el compilador de Visual Basic y no está prevista su utilización directa desde el código.
        </summary>
      <returns>
          Valor Short correspondiente a <paramref name="Value" />.
        </returns>
      <param name="Value">
              Requerido. Objeto que se va a convertir en un valor Short.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary>
          Esta clase queda en desuso a partir de Visual Basic 2005. Sólo se utiliza a efectos de compatibilidad con el compilador de Visual Basic 2003 y no está diseñada para utilizarse directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary>
          Devuelve un valor Single que corresponde al objeto especificado. Esta clase admite el compilador de Visual Basic y no está prevista su utilización directa desde el código.
        </summary>
      <returns>
          Valor Single correspondiente a <paramref name="Value" />.
        </returns>
      <param name="Value">
              Es un parámetro necesario. Objeto que se va a convertir en un valor Single.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>
          Devuelve un valor Single que corresponde al objeto especificado. Esta clase admite el compilador de Visual Basic y no está prevista su utilización directa desde el código.
        </summary>
      <returns>
          Valor Single correspondiente a <paramref name="Value" />.
        </returns>
      <param name="Value">
              Es un parámetro necesario. Objeto que se va a convertir en un valor Single.
            </param>
      <param name="NumberFormat">
              Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
      <param name="NumberFormat">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary>
          Esta clase proporciona atributos que se aplican a la construcción del módulo estándar cuando se emite a Lenguaje intermedio (IL). No está pensada para que se llame directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" />.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary>
          El compilador de Visual Basic utiliza esta clase internamente durante la inicialización de miembros locales estáticos; no está diseñada para que se llame directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" />.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary>
          Devuelve el estado del indicador de inicialización del miembro local estático (inicializado o no).
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary>
          Esta clase queda en desuso a partir de Visual Basic 2005. Sólo se utiliza a efectos de compatibilidad con el compilador de Visual Basic 2003 y no está diseñada para utilizarse directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
      <param name="NumberFormat">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
      <param name="NumberFormat">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary>
          Devuelve un valor String que corresponde al objeto especificado. Esta clase admite el compilador de Visual Basic y no está prevista su utilización directa desde el código.
        </summary>
      <returns>
          Valor String correspondiente a <paramref name="Value" />.
        </returns>
      <param name="Value">
              Requerido. Objeto que se va a convertir en un valor String.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Value">
            </param>
      <param name="NumberFormat">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary>
        </summary>
      <param name="sDest">
            </param>
      <param name="StartPosition">
            </param>
      <param name="MaxInsertLength">
            </param>
      <param name="sInsert">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="sLeft">
            </param>
      <param name="sRight">
            </param>
      <param name="TextCompare">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
          Compara los parámetros <paramref name="Source" /> y <paramref name="Pattern" /> y devuelve los mismos resultados que el operador Like.
        </summary>
      <returns>
          Devuelve un valor booleano que indica si la cadena se ajusta al modelo o no. Si el valor de la cadena se ajusta al modelo contenido en el modelo, el resultado es True. Si la cadena no se ajusta al modelo, el resultado es False. Si tanto la cadena como el modelo son cadenas vacías, el resultado es True.
        </returns>
      <param name="Source">
              Requerido. Cualquier expresión String.
            </param>
      <param name="Pattern">
              Cualquier expresión String que se ajuste a las convenciones de coincidencia de modelos descritas en Like Operator.
            </param>
      <param name="CompareOption">
              Especifica cómo comparar las cadenas con los modelos, según CompareMethod Enumeration. Puede ser vbBinaryCompare para la comparación binaria o vbTextCompare para la basada en un criterio de ordenación de texto sin distinción entre mayúsculas y minúsculas determinado por el valor LocaleID del sistema.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary>
          Compara los parámetros <paramref name="Source" /> y <paramref name="Pattern" /> y devuelve los mismos resultados que el operador Like, mediante la comparación binaria.
        </summary>
      <returns>
          Devuelve un valor booleano que indica si la cadena se ajusta al modelo o no. Si el valor de la cadena se ajusta al modelo contenido en el modelo, el resultado es True. Si la cadena no se ajusta al modelo, el resultado es False. Si tanto la cadena como el modelo son cadenas vacías, el resultado es True.
        </returns>
      <param name="Source">
              Requerido. Cualquier expresión String.
            </param>
      <param name="Pattern">
              Requerido. Cualquier expresión String que se ajuste a las convenciones de coincidencia de modelos descritas en Like Operator.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary>
          Compara los parámetros <paramref name="Source" /> y <paramref name="Pattern" /> y devuelve los mismos resultados que el operador Like, mediante la comparación de texto.
        </summary>
      <returns>
          Devuelve un valor booleano que indica si la cadena se ajusta al modelo o no. Si el valor de la cadena se ajusta al modelo contenido en el modelo, el resultado es True. Si la cadena no se ajusta al modelo, el resultado es False. Si tanto la cadena como el modelo son cadenas vacías, el resultado es True.
        </returns>
      <param name="Source">
              Requerido. Cualquier expresión String.
            </param>
      <param name="Pattern">
              Requerido. Cualquier expresión String que se ajuste a las convenciones de coincidencia de modelos descritas en Like Operator.
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary>
          Esta clase contiene las utilidades que utiliza el compilador de Visual Basic; no está diseñada para ser llamada directamente desde el código.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary>
          El compilador de Visual Basic utiliza este método como elemento auxiliar para Redim; no está diseñado para ser llamado directamente desde el código.
        </summary>
      <returns>
          La matriz copiada.
        </returns>
      <param name="arySrc">
              Matriz que se va a copiar.
            </param>
      <param name="aryDest">
              Matriz de destino.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.GetResourceString(System.String,System.String[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="ResourceKey">
            </param>
      <param name="Args">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.MethodToString(System.Reflection.MethodBase)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Method">
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.SetCultureInfo(System.Globalization.CultureInfo)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="Culture">
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlThread" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.ThrowException(System.Int32)">
      <summary>
        </summary>
      <param name="hr">
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary>
          El módulo <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> contiene los procedimientos que se utilizan para interactuar con objetos, aplicaciones y sistemas.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>
          Ejecuta un método en un objeto, o bien establece o devuelve una propiedad en un objeto.
        </summary>
      <returns>
          Ejecuta un método en un objeto, o bien establece o devuelve una propiedad en un objeto.
        </returns>
      <param name="Instance">
              Requerido. Object. Puntero al objeto que expone la propiedad o el método.
            </param>
      <param name="MethodName">
              Requerido. String. Expresión de cadena que contiene el nombre de la propiedad o del método en el objeto.
            </param>
      <param name="UseCallType">
              Requerido. Miembro de enumeración de tipo CallType Enumeration que representa el tipo de procedimiento al que se llama. El valor de CallType puede ser Method, Get o Set.
            </param>
      <param name="Arguments">
              Es opcional. ParamArray. Matriz de parámetros que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary>
          Devuelve un valor booleano que indica si una expresión se puede evaluar como número.
        </summary>
      <returns>
          Devuelve un valor booleano que indica si una expresión se puede evaluar como número.
        </returns>
      <param name="Expression">
              Requerido. Expresión de tipo Object.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary>
          Devuelve un valor de cadena que contiene el nombre del tipo de datos del sistema de una variable.
        </summary>
      <returns>
          Devuelve un valor de cadena que contiene el nombre del tipo de datos del sistema de una variable.
        </returns>
      <param name="VbName">
              Requerido. Variable de cadena que contiene un nombre de tipo de Visual Basic.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary>
          Devuelve un valor de cadena que contiene información del tipo de datos de una variable.
        </summary>
      <returns>
          Devuelve un valor de cadena que contiene información del tipo de datos de una variable.
        </returns>
      <param name="Expression">
              Requerido. Variable de Object. Si Option Strict es Off, se puede pasar una variable de cualquier tipo de datos, excepto una estructura.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary>
          Devuelve un valor de cadena que contiene el nombre del tipo de datos de Visual Basic de una variable.
        </summary>
      <returns>
          Devuelve un valor de cadena que contiene el nombre del tipo de datos de Visual Basic de una variable.
        </returns>
      <param name="SystemName">
              Requerido. Variable de cadena que contiene un nombre de tipo utilizado por Common Language Runtime.
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Audio">
      <summary>
          Proporciona los métodos para reproducir sonidos.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Devices.Audio" />. 
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.Byte[],Microsoft.VisualBasic.AudioPlayMode)">
      <summary>
          Reproduce un archivo de sonido .wav.
        </summary>
      <param name="data">
              
                Matriz de Byte que representa el archivo de sonido.
            </param>
      <param name="playMode">
              
                Modo AudioPlayMode Enumeration para reproducir el sonido. De manera predeterminada, es AudioPlayMode.Background.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.IO.Stream,Microsoft.VisualBasic.AudioPlayMode)">
      <summary>
          Reproduce un archivo de sonido .wav.
        </summary>
      <param name="stream">
              
                <see cref="T:System.IO.Stream" /> que representa el archivo de sonido.
            </param>
      <param name="playMode">
              
                Modo AudioPlayMode Enumeration para reproducir el sonido. De manera predeterminada, es AudioPlayMode.Background.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String)">
      <summary>
          Reproduce un archivo de sonido .wav.
        </summary>
      <param name="location">
              String que contiene el nombre del archivo de sonido. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String,Microsoft.VisualBasic.AudioPlayMode)">
      <summary>
          Reproduce un archivo de sonido .wav.
        </summary>
      <param name="location">
              String que contiene el nombre del archivo de sonido. 
            </param>
      <param name="playMode">
              
                Modo AudioPlayMode Enumeration para reproducir el sonido. De manera predeterminada, es AudioPlayMode.Background.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.PlaySystemSound(System.Media.SystemSound)">
      <summary>
          Reproduce un sonido del sistema.
        </summary>
      <param name="systemSound">
              
                Objeto <see cref="T:System.Media.SystemSound" /> que representa el sonido del sistema que se va a reproducir.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Stop">
      <summary>
          Detiene la reproducción de un sonido en segundo plano.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Clock">
      <summary>
          Proporciona las propiedades para obtener acceso a la hora local actual y a la hora universal coordinada (equivalente a la hora media de Greenwich) del reloj del sistema.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Clock.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Devices.Clock" />. 
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.GmtTime">
      <summary>
          Obtiene un objeto Date que contiene la fecha y hora locales actuales del equipo, expresadas como hora UTC (GMT).
        </summary>
      <returns>
          Un objeto Date que contiene la fecha y hora actuales expresadas como hora UTC (GMT).
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.LocalTime">
      <summary>
          Obtiene un objeto Date que contiene la fecha y hora locales actuales de este equipo.
        </summary>
      <returns>
          Un objeto Date que contiene la fecha y hora locales actuales.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.TickCount">
      <summary>
          Obtiene el recuento al milisegundo del temporizador del sistema del equipo.
        </summary>
      <returns>
          Un valor de tipo Integer que contiene el recuento al milisegundo del temporizador del sistema del equipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Computer">
      <summary>
          Proporciona las propiedades para manipular los componentes del equipo como el audio, el reloj, el teclado, el sistema de archivos, etc.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Computer.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Devices.Computer" />. 
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Audio">
      <summary>
          Obtiene un objeto que proporciona las propiedades y los métodos para reproducir sonidos.
        </summary>
      <returns>
          Esta propiedad devuelve el objeto My.Computer.Audio del equipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Clipboard">
      <summary>
          Obtiene un objeto que proporciona los métodos para manipular el Portapapeles.
        </summary>
      <returns>
          Esta propiedad devuelve My.Computer.Clipboard Object del equipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Keyboard">
      <summary>
          Obtiene un objeto que proporciona las propiedades para obtener acceso al estado actual del teclado, como las teclas actualmente presionadas, y proporciona un método para enviar la información de que se han presionado teclas a la ventana activa.
        </summary>
      <returns>
          Esta propiedad devuelve el objeto My.Computer.Keyboard del equipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Mouse">
      <summary>
          Obtiene un objeto que proporciona las propiedades para obtener información sobre el formato y la configuración del mouse (ratón) instalado en el equipo local.
        </summary>
      <returns>
          Esta propiedad devuelve el objeto My.Computer.Mouse del equipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Ports">
      <summary>
          Obtiene un objeto que proporciona una propiedad y un método para obtener acceso a los puertos serie del equipo.
        </summary>
      <returns>
          Esta propiedad devuelve el objeto My.Computer.Ports.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Screen">
      <summary>
          Obtiene el objeto <see cref="T:System.Windows.Forms.Screen" /> que representa la pantalla principal del equipo.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Windows.Forms.Screen" /> que representa la pantalla principal del equipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ComputerInfo">
      <summary>
          Proporciona las propiedades para obtener información sobre la memoria del equipo, los ensamblados cargados, el nombre y el sistema operativo.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />. 
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory">
      <summary>
          Obtiene la cantidad total de memoria física disponible en el equipo.
        </summary>
      <returns>
          Un valor de tipo ULong que contiene el número de bytes de la memoria física disponible en el equipo.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory">
      <summary>
          Obtiene la cantidad total del espacio de direcciones virtual que está disponible en el equipo.
        </summary>
      <returns>
          Un valor de tipo ULong que contiene el número de bytes correspondientes al espacio de direcciones virtual que está disponible en el equipo.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture">
      <summary>
          Obtiene la actual referencia cultural de la interfaz de usuario que está instalada con el sistema operativo.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Globalization.CultureInfo" /> que representa la referencia cultural de la interfaz de usuario instalada en el equipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName">
      <summary>
          Obtiene el nombre completo del sistema operativo. 
        </summary>
      <returns>
          Un valor de tipo String que contiene el nombre del sistema operativo.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform">
      <summary>
          Obtiene el identificador de plataforma correspondiente al sistema operativo del equipo.
        </summary>
      <returns>
          Un valor de tipo String que contiene el identificador de plataforma correspondiente al sistema operativo del equipo, el cual se elige entre los nombres de los miembros de la enumeración <see cref="T:System.PlatformID" />.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion">
      <summary>
          Obtiene la versión del sistema operativo del equipo.
        </summary>
      <returns>
          Un valor de tipo String que contiene el actual número de versión del sistema operativo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory">
      <summary>
          Obtiene la cantidad total de memoria física en el equipo.
        </summary>
      <returns>
          Un valor de tipo ULong que contiene el número de bytes de la memoria física en el equipo.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory">
      <summary>
          Obtiene la cantidad total de espacio de direcciones virtual que está disponible en el equipo.
        </summary>
      <returns>
          Un valor de tipo ULong que contiene el número de bytes correspondientes al espacio de direcciones virtual que está disponible en el equipo.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Keyboard">
      <summary>
          Proporciona las propiedades para obtener acceso al estado actual del teclado, como las teclas actualmente presionadas, y proporciona un método para enviar la información de que se han presionado teclas a la ventana activa.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" />. 
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown">
      <summary>
          Obtiene un valor de tipo Boolean que indica si está presionada la tecla ALT.
        </summary>
      <returns>
          Un valor de tipo Boolean, que es True si está presionada la tecla ALT; de lo contrario, es False.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.CapsLock">
      <summary>
          Obtiene un valor de tipo Boolean que indica si está activado BLOQ MAYÚS. 
        </summary>
      <returns>
          Un valor de tipo Boolean, que es True si está activado BLOQ MAYÚS; de lo contrario, es False.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown">
      <summary>
          Obtiene un valor de tipo Boolean que indica si está presionada una tecla CTRL.
        </summary>
      <returns>
          Un valor de tipo Boolean, que es True si está presionada una tecla CTRL; de lo contrario, es False.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.NumLock">
      <summary>
          Obtiene un valor de tipo Boolean que indica si está presionada la tecla BLOQ NUM. 
        </summary>
      <returns>
          Un valor de tipo Boolean, que es True si está presionada la tecla BLOQ NUM; de lo contrario, es False.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.ScrollLock">
      <summary>
          Obtiene un valor de tipo Boolean que indica si está presionada la tecla BLOQ DESPL. 
        </summary>
      <returns>
          Un valor de tipo Boolean, que es True si está presionada la tecla BLOQ DESPL; de lo contrario, es False.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)">
      <summary>
          Envía una o varias presiones de tecla a la ventana activa como si se escribieran en el teclado.
        </summary>
      <param name="keys">
              Objeto String que contiene las teclas que se van a enviar.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)">
      <summary>
          Envía una o varias presiones de tecla a la ventana activa como si se escribieran en el teclado.
        </summary>
      <param name="keys">
              Objeto String que contiene las teclas que se van a enviar.
            </param>
      <param name="wait">
              Es opcional. Valor de tipo Boolean que especifica si la aplicación debe esperar a que se procesen las presiones de tecla antes de continuar. El valor predeterminado es True.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown">
      <summary>
          Obtiene un valor de tipo Boolean que indica si está presionada una tecla MAYÚS.
        </summary>
      <returns>
          Un valor de tipo Boolean, que es True si está presionada una tecla MAYÚS; de lo contrario, es False.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Mouse">
      <summary>
          Proporciona las propiedades para obtener información sobre el formato y la configuración del mouse (ratón) instalado en el equipo local.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Mouse.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Devices.Mouse" />. 
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped">
      <summary>
          Obtiene un valor de tipo Boolean que indica si las funciones de los botones primario y secundario del mouse se han intercambiado.
        </summary>
      <returns>
          Un valor de tipo Boolean que es True si se han intercambiado las funciones del botón primario y del botón secundario del mouse; de lo contrario, es False.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.WheelExists">
      <summary>
          Obtiene un valor de tipo Boolean que indica si el mouse tiene una rueda de desplazamiento.
        </summary>
      <returns>
          Un valor booleano que es True si el mouse tiene una rueda de desplazamiento; de lo contrario, es False.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines">
      <summary>
          Obtiene un número que indica cuánto es el desplazamiento cuando se gira la rueda del mouse una muesca.
        </summary>
      <returns>
          Un valor de tipo Integer que indica cuánto es el desplazamiento cuando se gira la rueda del mouse una muesca. Un valor positivo indica que el desplazamiento se realiza por ese número de líneas, mientras que un valor negativo indica que el desplazamiento se realiza por una pantalla a la vez.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Network">
      <summary>
          Proporciona una propiedad, un evento y métodos para interactuar con la red a la que está conectado el equipo.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Devices.Network" />. 
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)">
      <summary>
          Descarga el archivo remoto especificado y lo guarda en la ubicación indicada.
        </summary>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Ruta de acceso al archivo que se va a descargar, incluidos el nombre de archivo y la dirección del host. Es un parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Nombre de archivo y ruta de acceso al archivo descargado. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)">
      <summary>
          Descarga el archivo remoto especificado y lo guarda en la ubicación indicada.
        </summary>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Ruta de acceso al archivo que se va a descargar, incluidos el nombre de archivo y la dirección del host. Es un parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Nombre de archivo y ruta de acceso al archivo descargado. Es un parámetro necesario. 
            </param>
      <param name="userName">
              
                String. Nombre de usuario que se va a autenticar. Su valor predeterminado es una cadena vacía, "". 
            </param>
      <param name="password">
              
                String. Contraseña que se va a autenticar. Su valor predeterminado es una cadena vacía, "". 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>
          Descarga el archivo remoto especificado y lo guarda en la ubicación indicada.
        </summary>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Ruta de acceso al archivo que se va a descargar, incluidos el nombre de archivo y la dirección del host. Es un parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Nombre de archivo y ruta de acceso al archivo descargado. Es un parámetro necesario. 
            </param>
      <param name="userName">
              
                String. Nombre de usuario que se va a autenticar. Su valor predeterminado es una cadena vacía, "". 
            </param>
      <param name="password">
              
                String. Contraseña que se va a autenticar. Su valor predeterminado es una cadena vacía, "". 
            </param>
      <param name="showUI">
              
                Boolean. Especifica si se va a mostrar el progreso de la operación. El valor predeterminado es False. 
            </param>
      <param name="connectionTimeout">
              
                <see cref="T:System.Int32" />. Intervalo de tiempo de espera en milisegundos. El valor predeterminado es 100 segundos. 
            </param>
      <param name="overwrite">
              
                Boolean. Especifica si se van a sobrescribir los archivos existentes. El valor predeterminado es False. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Descarga el archivo remoto especificado y lo guarda en la ubicación indicada.
        </summary>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Ruta de acceso al archivo que se va a descargar, incluidos el nombre de archivo y la dirección del host. Es un parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Nombre de archivo y ruta de acceso al archivo descargado. Es un parámetro necesario. 
            </param>
      <param name="userName">
              
                String. Nombre de usuario que se va a autenticar. Su valor predeterminado es una cadena vacía, "". 
            </param>
      <param name="password">
              
                String. Contraseña que se va a autenticar. Su valor predeterminado es una cadena vacía, "". 
            </param>
      <param name="showUI">
              
                Boolean. Especifica si se va a mostrar el progreso de la operación. El valor predeterminado es False. 
            </param>
      <param name="connectionTimeout">
              
                <see cref="T:System.Int32" />. Intervalo de tiempo de espera en milisegundos. El valor predeterminado es 100 segundos. 
            </param>
      <param name="overwrite">
              
                Boolean. Especifica si se van a sobrescribir los archivos existentes. El valor predeterminado es False. 
            </param>
      <param name="onUserCancel">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />. Especifica el comportamiento que se produce cuando el usuario hace clic en Cancelar o en No en el cuadro de diálogo que se muestra cuando el valor de <paramref name="ShowUI" /> se establece en True. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)">
      <summary>
          Descarga el archivo remoto especificado y lo guarda en la ubicación indicada.
        </summary>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Ruta de acceso al archivo que se va a descargar, incluidos el nombre de archivo y la dirección del host. Es un parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Nombre de archivo y ruta de acceso al archivo descargado. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)">
      <summary>
          Descarga el archivo remoto especificado y lo guarda en la ubicación indicada.
        </summary>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Ruta de acceso al archivo que se va a descargar, incluidos el nombre de archivo y la dirección del host. Es un parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Nombre de archivo y ruta de acceso al archivo descargado. Es un parámetro necesario. 
            </param>
      <param name="networkCredentials">
              
                <see cref="T:System.Net.ICredentials" />. Credenciales que se van a proporcionar. 
            </param>
      <param name="showUI">
              
                Boolean. Especifica si se va a mostrar el progreso de la operación. El valor predeterminado es False. 
            </param>
      <param name="connectionTimeout">
              
                <see cref="T:System.Int32" />. Intervalo de tiempo de espera en milisegundos. El valor predeterminado es 100 segundos. 
            </param>
      <param name="overwrite">
              
                Boolean. Especifica si se van a sobrescribir los archivos existentes. El valor predeterminado es False. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Descarga el archivo remoto especificado y lo guarda en la ubicación indicada.
        </summary>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Ruta de acceso al archivo que se va a descargar, incluidos el nombre de archivo y la dirección del host. Es un parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Nombre de archivo y ruta de acceso al archivo descargado. Es un parámetro necesario. 
            </param>
      <param name="networkCredentials">
              
                <see cref="T:System.Net.ICredentials" />. Credenciales que se van a proporcionar. 
            </param>
      <param name="showUI">
              
                Boolean. Especifica si se va a mostrar el progreso de la operación. El valor predeterminado es False. 
            </param>
      <param name="connectionTimeout">
              
                <see cref="T:System.Int32" />. Intervalo de tiempo de espera en milisegundos. El valor predeterminado es 100 segundos. 
            </param>
      <param name="overwrite">
              
                Boolean. Especifica si se van a sobrescribir los archivos existentes. El valor predeterminado es False. 
            </param>
      <param name="onUserCancel">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />. Especifica el comportamiento que se produce cuando el usuario hace clic en Cancelar o en No en el cuadro de diálogo que se muestra cuando el valor de <paramref name="ShowUI" /> se establece en True. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)">
      <summary>
          Descarga el archivo remoto especificado y lo guarda en la ubicación indicada.
        </summary>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Ruta de acceso al archivo que se va a descargar, incluidos el nombre de archivo y la dirección del host. Es un parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Nombre de archivo y ruta de acceso al archivo descargado. Es un parámetro necesario. 
            </param>
      <param name="userName">
              
                String. Nombre de usuario que se va a autenticar. Su valor predeterminado es una cadena vacía, "". 
            </param>
      <param name="password">
              
                String. Contraseña que se va a autenticar. Su valor predeterminado es una cadena vacía, "". 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>
          Descarga el archivo remoto especificado y lo guarda en la ubicación indicada.
        </summary>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Ruta de acceso al archivo que se va a descargar, incluidos el nombre de archivo y la dirección del host. Es un parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Nombre de archivo y ruta de acceso al archivo descargado. Es un parámetro necesario. 
            </param>
      <param name="userName">
              
                String. Nombre de usuario que se va a autenticar. Su valor predeterminado es una cadena vacía, "". 
            </param>
      <param name="password">
              
                String. Contraseña que se va a autenticar. Su valor predeterminado es una cadena vacía, "". 
            </param>
      <param name="showUI">
              
                Boolean. Especifica si se va a mostrar el progreso de la operación. El valor predeterminado es False. 
            </param>
      <param name="connectionTimeout">
              
                <see cref="T:System.Int32" />. Intervalo de tiempo de espera en milisegundos. El valor predeterminado es 100 segundos. 
            </param>
      <param name="overwrite">
              
                Boolean. Especifica si se van a sobrescribir los archivos existentes. El valor predeterminado es False. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Descarga el archivo remoto especificado y lo guarda en la ubicación indicada.
        </summary>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Ruta de acceso al archivo que se va a descargar, incluidos el nombre de archivo y la dirección del host. Es un parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Nombre de archivo y ruta de acceso al archivo descargado. Es un parámetro necesario. 
            </param>
      <param name="userName">
              
                String. Nombre de usuario que se va a autenticar. Su valor predeterminado es una cadena vacía, "". 
            </param>
      <param name="password">
              
                String. Contraseña que se va a autenticar. Su valor predeterminado es una cadena vacía, "". 
            </param>
      <param name="showUI">
              
                Boolean. Especifica si se va a mostrar el progreso de la operación. El valor predeterminado es False. 
            </param>
      <param name="connectionTimeout">
              
                <see cref="T:System.Int32" />. Intervalo de tiempo de espera en milisegundos. El valor predeterminado es 100 segundos. 
            </param>
      <param name="overwrite">
              
                Boolean. Especifica si se van a sobrescribir los archivos existentes. El valor predeterminado es False. 
            </param>
      <param name="onUserCancel">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />. Especifica el comportamiento que se produce cuando el usuario hace clic en Cancelar o en No en el cuadro de diálogo que se muestra cuando el valor de <paramref name="ShowUI" /> se establece en True. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Network.IsAvailable">
      <summary>
          Indica si un equipo está conectado a una red.
        </summary>
      <returns>
          
            Boolean.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
      </PermissionSet>
    </member>
    <member name="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged">
      <summary>
          Se provoca cuando cambia la disponibilidad de la red.
        </summary>
      <param name="sender">
              Obligatorio. Object que provocó el evento.
            </param>
      <param name="e">
              Obligatorio. Objeto <see cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" /> que contiene información sobre la disponibilidad de la red.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)">
      <summary>
          Hace ping en el servidor especificado.
        </summary>
      <returns>
          
            Un valor de tipo Boolean que indica si la operación se ha realizado correctamente.
        </returns>
      <param name="hostNameOrAddress">
              
                String. Dirección URL, nombre del equipo o número IP del servidor en el que se va a hacer ping. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)">
      <summary>
          Hace ping en el servidor especificado.
        </summary>
      <returns>
          
            Un valor de tipo Boolean que indica si la operación se ha realizado correctamente.
        </returns>
      <param name="hostNameOrAddress">
              
                String. Dirección URL, nombre del equipo o número IP del servidor en el que se va a hacer ping. Es un parámetro necesario. 
            </param>
      <param name="timeout">
              
                <see cref="T:System.Int32" />. Umbral de tiempo en milisegundos para contactar con el destino. El valor predeterminado es 500. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)">
      <summary>
          Hace ping en el servidor especificado.
        </summary>
      <returns>
          
            Un valor de tipo Boolean que indica si la operación se ha realizado correctamente.
        </returns>
      <param name="address">
              
                <see cref="T:System.Uri" />. Identificador URI del servidor en el que se va a hacer ping. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)">
      <summary>
          Hace ping en el servidor especificado.
        </summary>
      <returns>
          
            Un valor de tipo Boolean que indica si la operación se ha realizado correctamente.
        </returns>
      <param name="address">
              
                <see cref="T:System.Uri" />. Identificador URI del servidor en el que se va a hacer ping. Es un parámetro necesario.
            </param>
      <param name="timeout">
              
                <see cref="T:System.Int32" />. Umbral de tiempo en milisegundos para contactar con el destino. El valor predeterminado es 500. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)">
      <summary>
          Envía el archivo especificado a la dirección de host indicada.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso y nombre del archivo que se va a cargar. Es un parámetro necesario. 
            </param>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Dirección URL, dirección IP o identificador URI del servidor de destino. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)">
      <summary>
          Envía el archivo especificado a la dirección de host indicada.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso y nombre del archivo que se va a cargar. Es un parámetro necesario. 
            </param>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Dirección URL, dirección IP o identificador URI del servidor de destino. Es un parámetro necesario. 
            </param>
      <param name="userName">
              
                String. Nombre de usuario que se va a autenticar. Su valor predeterminado es una cadena vacía, "".
            </param>
      <param name="password">
              
                String. Contraseña que se va a autenticar. Su valor predeterminado es una cadena vacía, "".
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
      <summary>
          Envía el archivo especificado a la dirección de host indicada.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso y nombre del archivo que se va a cargar. Es un parámetro necesario. 
            </param>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Dirección URL, dirección IP o identificador URI del servidor de destino. Es un parámetro necesario. 
            </param>
      <param name="userName">
              
                String. Nombre de usuario que se va a autenticar. Su valor predeterminado es una cadena vacía, "".
            </param>
      <param name="password">
              
                String. Contraseña que se va a autenticar. Su valor predeterminado es una cadena vacía, "".
            </param>
      <param name="showUI">
              
                Boolean. Indica si se va a mostrar el progreso de la operación. El valor predeterminado es False. 
            </param>
      <param name="connectionTimeout">
              
                <see cref="T:System.Int32" />. Intervalo de tiempo de espera en milisegundos. El valor predeterminado es 100 segundos. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Envía el archivo especificado a la dirección de host indicada.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso y nombre del archivo que se va a cargar. Es un parámetro necesario. 
            </param>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Dirección URL, dirección IP o identificador URI del servidor de destino. Es un parámetro necesario. 
            </param>
      <param name="userName">
              
                String. Nombre de usuario que se va a autenticar. Su valor predeterminado es una cadena vacía, "".
            </param>
      <param name="password">
              
                String. Contraseña que se va a autenticar. Su valor predeterminado es una cadena vacía, "".
            </param>
      <param name="showUI">
              
                Boolean. Indica si se va a mostrar el progreso de la operación. El valor predeterminado es False. 
            </param>
      <param name="connectionTimeout">
              
                <see cref="T:System.Int32" />. Intervalo de tiempo de espera en milisegundos. El valor predeterminado es 100 segundos. 
            </param>
      <param name="onUserCancel">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />. Acción que se va a realizar cuando el usuario haga clic en Cancelar. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)">
      <summary>
          Envía el archivo especificado a la dirección de host indicada.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso y nombre del archivo que se va a cargar. Es un parámetro necesario. 
            </param>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Dirección URL, dirección IP o identificador URI del servidor de destino. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)">
      <summary>
          Envía el archivo especificado a la dirección de host indicada.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso y nombre del archivo que se va a cargar. Es un parámetro necesario. 
            </param>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Dirección URL, dirección IP o identificador URI del servidor de destino. Es un parámetro necesario. 
            </param>
      <param name="networkCredentials">
              
                <see cref="T:System.Net.ICredentials" />. Credenciales que se van a autenticar. 
            </param>
      <param name="showUI">
              
                Boolean. Indica si se va a mostrar el progreso de la operación. El valor predeterminado es False. 
            </param>
      <param name="connectionTimeout">
              
                <see cref="T:System.Int32" />. Intervalo de tiempo de espera en milisegundos. El valor predeterminado es 100 segundos. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Envía el archivo especificado a la dirección de host indicada.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso y nombre del archivo que se va a cargar. Es un parámetro necesario. 
            </param>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Dirección URL, dirección IP o identificador URI del servidor de destino. Es un parámetro necesario. 
            </param>
      <param name="networkCredentials">
              
                <see cref="T:System.Net.ICredentials" />. Credenciales que se van a autenticar. 
            </param>
      <param name="showUI">
              
                Boolean. Indica si se va a mostrar el progreso de la operación. El valor predeterminado es False. 
            </param>
      <param name="connectionTimeout">
              
                <see cref="T:System.Int32" />. Intervalo de tiempo de espera en milisegundos. El valor predeterminado es 100 segundos. 
            </param>
      <param name="onUserCancel">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />. Acción que se va a realizar cuando el usuario haga clic en Cancelar. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)">
      <summary>
          Envía el archivo especificado a la dirección de host indicada.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso y nombre del archivo que se va a cargar. Es un parámetro necesario. 
            </param>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Dirección URL, dirección IP o identificador URI del servidor de destino. Es un parámetro necesario. 
            </param>
      <param name="userName">
              
                String. Nombre de usuario que se va a autenticar. Su valor predeterminado es una cadena vacía, "".
            </param>
      <param name="password">
              
                String. Contraseña que se va a autenticar. Su valor predeterminado es una cadena vacía, "".
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)">
      <summary>
          Envía el archivo especificado a la dirección de host indicada.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso y nombre del archivo que se va a cargar. Es un parámetro necesario. 
            </param>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Dirección URL, dirección IP o identificador URI del servidor de destino. Es un parámetro necesario. 
            </param>
      <param name="userName">
              
                String. Nombre de usuario que se va a autenticar. Su valor predeterminado es una cadena vacía, "".
            </param>
      <param name="password">
              
                String. Contraseña que se va a autenticar. Su valor predeterminado es una cadena vacía, "".
            </param>
      <param name="showUI">
              
                Boolean. Indica si se va a mostrar el progreso de la operación. El valor predeterminado es False. 
            </param>
      <param name="connectionTimeout">
              
                <see cref="T:System.Int32" />. Intervalo de tiempo de espera en milisegundos. El valor predeterminado es 100 segundos. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Envía el archivo especificado a la dirección de host indicada.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso y nombre del archivo que se va a cargar. Es un parámetro necesario. 
            </param>
      <param name="address">
              
                String o <see cref="T:System.Uri" />. Dirección URL, dirección IP o identificador URI del servidor de destino. Es un parámetro necesario. 
            </param>
      <param name="userName">
              
                String. Nombre de usuario que se va a autenticar. Su valor predeterminado es una cadena vacía, "".
            </param>
      <param name="password">
              
                String. Contraseña que se va a autenticar. Su valor predeterminado es una cadena vacía, "".
            </param>
      <param name="showUI">
              
                Boolean. Indica si se va a mostrar el progreso de la operación. El valor predeterminado es False. 
            </param>
      <param name="connectionTimeout">
              
                <see cref="T:System.Int32" />. Intervalo de tiempo de espera en milisegundos. El valor predeterminado es 100 segundos. 
            </param>
      <param name="onUserCancel">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />. Acción que se va a realizar cuando el usuario haga clic en Cancelar. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs">
      <summary>
          Proporciona los datos de los eventos My.Application.NetworkAvailabilityChanged y My.Computer.Network.NetworkAvailabilityChanged. 
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.#ctor(System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />.
        </summary>
      <param name="networkAvailable">
              <see cref="T:System.Boolean" /> que indica si una determinada red se encuentra disponible para la aplicación.
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable">
      <summary>
          Obtiene un valor que indica si una determinada red se encuentra disponible para la aplicación.
        </summary>
      <returns>
          <see cref="T:System.Boolean" /> que indica si una determinada red se encuentra disponible para la aplicación.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler">
      <summary>
          Representa el método que controlará el evento My.Application.NetworkAvailabilityChanged o My.Computer.Network.NetworkAvailabilityChanged.
        </summary>
      <param name="sender">
              Origen del evento.
            </param>
      <param name="e">
              Objeto <see cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" /> que contiene los datos del evento.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Ports">
      <summary>
          Proporciona una propiedad y un método para obtener acceso a los puertos serie del equipo.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Devices.Ports" />. 
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)">
      <summary>
          Crea y abre un objeto <see cref="T:System.IO.Ports.SerialPort" />.
        </summary>
      <returns>
          Un objeto <see cref="T:System.IO.Ports.SerialPort" /> abierto, configurado con los argumentos proporcionados.
        </returns>
      <param name="portName">
              
                String. Es necesario. Nombre del puerto que se va a abrir.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)">
      <summary>
          Crea y abre un objeto <see cref="T:System.IO.Ports.SerialPort" />.
        </summary>
      <returns>
          Un objeto <see cref="T:System.IO.Ports.SerialPort" /> abierto, configurado con los argumentos proporcionados.
        </returns>
      <param name="portName">
              
                String. Es necesario. Nombre del puerto que se va a abrir.
            </param>
      <param name="baudRate">
              
                Integer. Velocidad del puerto en baudios.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)">
      <summary>
          Crea y abre un objeto <see cref="T:System.IO.Ports.SerialPort" />.
        </summary>
      <returns>
          Un objeto <see cref="T:System.IO.Ports.SerialPort" /> abierto, configurado con los argumentos proporcionados.
        </returns>
      <param name="portName">
              
                String. Es necesario. Nombre del puerto que se va a abrir.
            </param>
      <param name="baudRate">
              
                Integer. Velocidad del puerto en baudios.
            </param>
      <param name="parity">
              
                <see cref="T:System.IO.Ports.Parity" />. Paridad del puerto.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)">
      <summary>
          Crea y abre un objeto <see cref="T:System.IO.Ports.SerialPort" />.
        </summary>
      <returns>
          Un objeto <see cref="T:System.IO.Ports.SerialPort" /> abierto, configurado con los argumentos proporcionados.
        </returns>
      <param name="portName">
              
                String. Es necesario. Nombre del puerto que se va a abrir.
            </param>
      <param name="baudRate">
              
                Integer. Velocidad del puerto en baudios.
            </param>
      <param name="parity">
              
                <see cref="T:System.IO.Ports.Parity" />. Paridad del puerto.
            </param>
      <param name="dataBits">
              
                Integer. Configuración de los bits de datos del puerto.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
      <summary>
          Crea y abre un objeto <see cref="T:System.IO.Ports.SerialPort" />.
        </summary>
      <returns>
          Un objeto <see cref="T:System.IO.Ports.SerialPort" /> abierto, configurado con los argumentos proporcionados.
        </returns>
      <param name="portName">
              
                String. Es necesario. Nombre del puerto que se va a abrir.
            </param>
      <param name="baudRate">
              
                Integer. Velocidad del puerto en baudios.
            </param>
      <param name="parity">
              
                <see cref="T:System.IO.Ports.Parity" />. Paridad del puerto.
            </param>
      <param name="dataBits">
              
                Integer. Configuración de los bits de datos del puerto.
            </param>
      <param name="stopBits">
              
                <see cref="T:System.IO.Ports.StopBits" />. Configuración de los bits de parada del puerto.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames">
      <summary>
          Obtiene una colección de los nombres de los puertos serie del equipo.
        </summary>
      <returns>
          Una colección de los nombres de los puertos serie del equipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ServerComputer">
      <summary>
          Proporciona las propiedades para manipular los componentes del equipo como el audio, el reloj, el teclado, el sistema de archivos, etc.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" />. 
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock">
      <summary>
          Obtiene un objeto que proporciona las propiedades para obtener acceso a la hora local actual y a la Hora universal coordinada (equivalente a la hora media de Greenwich) del reloj del sistema.
        </summary>
      <returns>
          Esta propiedad devuelve el objeto My.Computer.Clock del equipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem">
      <summary>
          Obtiene un objeto que proporciona las propiedades y los métodos para trabajar con unidades, archivos y directorios.
        </summary>
      <returns>
          Esta propiedad devuelve My.Computer.FileSystem Object del equipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Info">
      <summary>
          Obtiene un objeto que proporciona las propiedades para obtener información sobre la memoria del equipo, los ensamblados cargados, el nombre y el sistema operativo.
        </summary>
      <returns>
          Esta propiedad devuelve el objeto My.Computer.Info del equipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Name">
      <summary>
          Obtiene el nombre del equipo.
        </summary>
      <returns>
          Un valor de tipo String que contiene el nombre del equipo.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="COMPUTERNAME" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Network">
      <summary>
          Obtiene un objeto que proporciona una propiedad y métodos para interactuar con la red a la que está conectado el equipo.
        </summary>
      <returns>
          Esta propiedad devuelve My.Computer.Network Object del equipo.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry">
      <summary>
          Obtiene un objeto que proporciona las propiedades y los métodos para manipular el Registro.
        </summary>
      <returns>
          Esta propiedad devuelve My.Computer.Registry Object del equipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary>
          Especifica qué es lo que se debe hacer cuando un directorio que se va a borrar contiene archivos o directorios.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary>
          Produzca <see cref="T:System.IO.IOException" /> si el directorio no se encuentra vacío. La propiedad Data de la excepción muestra una lista de los archivos que no se pudieron eliminar.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary>
          Elimine el contenido del directorio junto con el directorio. Predeterminado.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary>
          Indica si los campos de texto están delimitados o tienen un ancho fijo.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary>
          Indica que los campos están delimitados.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary>
          Indica que los campos tienen un ancho fijo.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary>
          Proporciona las propiedades y los métodos para trabajar con unidades, archivos y directorios.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary>
          Combina dos rutas de acceso y devuelve una ruta de acceso con un formato correcto.
        </summary>
      <returns>
          
            String.
        </returns>
      <param name="baseDirectory">
              
                String. Primera ruta de acceso que se va a combinar. Es un parámetro necesario. 
            </param>
      <param name="relativePath">
              
                String. Segunda ruta de acceso que se va a combinar. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary>
          Copia un directorio en otro directorio.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Directorio que se va a copiar. Es un parámetro necesario.
            </param>
      <param name="destinationDirectoryName">
              
                String. Ubicación donde se va a copiar el directorio. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
          Copia un directorio en otro directorio.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Directorio que se va a copiar. Es un parámetro necesario.
            </param>
      <param name="destinationDirectoryName">
              
                String. Ubicación donde se va a copiar el directorio. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UIOption" />. Indica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Copia un directorio en otro directorio.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Directorio que se va a copiar. Es un parámetro necesario.
            </param>
      <param name="destinationDirectoryName">
              
                String. Ubicación donde se va a copiar el directorio. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UIOption" />. Indica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario.
            </param>
      <param name="onUserCancel">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />. Especifica la acción que se va a realizar cuando el usuario hace clic en Cancelar durante la operación. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. Es un parámetro necesario.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>
          Copia un directorio en otro directorio.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Directorio que se va a copiar. Es un parámetro necesario.
            </param>
      <param name="destinationDirectoryName">
              
                String. Ubicación donde se va a copiar el directorio. Es un parámetro necesario.
            </param>
      <param name="overwrite">
              
                Boolean. Indica si deben sobrescribirse o no los archivos existentes. El valor predeterminado es False. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary>
          Copia un archivo en una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Archivo que se va a copiar. Es un parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Ubicación donde se va a copiar el archivo. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
          Copia un archivo en una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Archivo que se va a copiar. Es un parámetro necesario.
            </param>
      <param name="destinationFileName">
              
                String. Ubicación en la que se debe copiar el archivo. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UIOption" />. Indica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Copia un archivo en una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Archivo que se va a copiar. Es un parámetro necesario.
            </param>
      <param name="destinationFileName">
              
                String. Ubicación en la que se debe copiar el archivo. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UIOption" />. Indica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario.
            </param>
      <param name="onUserCancel">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />. Especifica la acción que se va a realizar cuando el usuario hace clic en Cancelar durante la operación. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary>
          Copia un archivo en una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Archivo que se va a copiar. Es un parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Ubicación donde se va a copiar el archivo. Es un parámetro necesario. 
            </param>
      <param name="overwrite">
              
                Boolean. Indica si se van a sobrescribir los archivos existentes. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary>
          Crea un directorio.
        </summary>
      <param name="directory">
              
                String. Nombre y ubicación del directorio. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary>
          Obtiene o establece el directorio actual.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>
          Elimina un directorio.
        </summary>
      <param name="directory">
              
                String. Directorio que se va a eliminar. Es un parámetro necesario. 
            </param>
      <param name="onDirectoryNotEmpty">
              
                DeleteDirectoryOption Enumeration. Especifica qué acción se va a realizar cuando un directorio que se va a eliminar contiene archivos o directorios. El valor predeterminado es DeleteDirectoryOption.DeleteAllContents.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>
          Elimina un directorio.
        </summary>
      <param name="directory">
              
                String. Directorio que se va a eliminar. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                UIOption Enumeration. Especifica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
      <param name="recycle">
              
                RecycleOption Enumeration. Especifica si el archivo eliminado se va a enviar a la Papelera de reciclaje. El valor predeterminado es RecycleOption.DeletePermanently. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Elimina un directorio.
        </summary>
      <param name="directory">
              
                String. Directorio que se va a eliminar. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                UIOption Enumeration. Especifica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
      <param name="recycle">
              
                RecycleOption Enumeration. Especifica si el archivo eliminado se va a enviar a la Papelera de reciclaje. El valor predeterminado es RecycleOption.DeletePermanently. 
            </param>
      <param name="onUserCancel">
              
                UICancelOption Enumeration. Especifica si se va a producir una excepción cuando el usuario hace clic en Cancelar. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary>
          Elimina un archivo.
        </summary>
      <param name="file">
              
                String. Nombre y ruta de acceso al archivo que se va a eliminar. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>
          Elimina un archivo.
        </summary>
      <param name="file">
              
                String. Nombre y ruta del archivo que se va a eliminar. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                UIOption. Indica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
      <param name="recycle">
              
                RecycleOption. Especifica si el archivo eliminado se va a enviar a la Papelera de reciclaje. El valor predeterminado es RecycleOption.DeletePermanently. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Elimina un archivo.
        </summary>
      <param name="file">
              
                String. Nombre y ruta de acceso del archivo que se va a eliminar. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                UIOption. Indica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
      <param name="recycle">
              
                RecycleOption. Especifica si el archivo eliminado se va a enviar a la Papelera de reciclaje. El valor predeterminado es RecycleOption.DeletePermanently. Es un parámetro necesario. 
            </param>
      <param name="onUserCancel">
              
                UICancelOption. Especifica si se va a producir una excepción cuando el usuario cancela la operación. El valor predeterminado es UICancelOption.ThrowException. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary>
          Devuelve un valor de tipo Boolean que indica si existe el directorio especificado.
        </summary>
      <returns>
          
            Es True si existe el directorio; en caso contrario, es False.
        </returns>
      <param name="directory">
              
                String. Ruta de acceso al directorio. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary>
          Devuelve una colección de sólo lectura de todos los nombres de unidad disponibles.
        </summary>
      <returns>
          
            System.Collections.ObjectModel.ReadOnlyCollection (de System.IO.DriveInfo)
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary>
          Devuelve un valor de tipo Boolean que indica si existe el archivo especificado.
        </summary>
      <returns>
          Devuelve True si el archivo existe; de lo contrario, este método devuelve False.
        </returns>
      <param name="file">
              
                String. Nombre y ruta de acceso al archivo. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>
          Devuelve una colección de cadenas de sólo lectura que representa los nombres de los archivos que contienen el texto especificado.
        </summary>
      <returns>
          Colección de sólo lectura de tipo String.
        </returns>
      <param name="directory">
              
                String. Directorio en el que se va a buscar. Es un parámetro necesario.
            </param>
      <param name="containsText">
              
                String. Texto de búsqueda. Es un parámetro necesario.
            </param>
      <param name="ignoreCase">
              
                Boolean. Especifica si la búsqueda debe distinguir entre mayúsculas y minúsculas. El valor predeterminado es True. Es un parámetro necesario.
            </param>
      <param name="searchType">
              
                SearchOption Enumeration. Indica si se van a incluir las subcarpetas. El valor predeterminado es SearchOption.SearchTopLevelOnly. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>
          Devuelve una colección de cadenas de sólo lectura que representa los nombres de los archivos que contienen el texto especificado.
        </summary>
      <returns>
          Una colección de sólo lectura de tipo String.
        </returns>
      <param name="directory">
              
                String. Directorio en el que se va a buscar. Es un parámetro necesario.
            </param>
      <param name="containsText">
              
                String. Texto de búsqueda. Es un parámetro necesario.
            </param>
      <param name="ignoreCase">
              
                Boolean. Especifica si la búsqueda debe distinguir entre mayúsculas y minúsculas. El valor predeterminado es True. Es un parámetro necesario.
            </param>
      <param name="searchType">
              
                SearchOption Enumeration. Indica si se van a incluir las subcarpetas. El valor predeterminado es SearchOption.SearchTopLevelOnly. Es un parámetro necesario. 
            </param>
      <param name="fileWildcards">
              Matriz de tipo String. Modelo con el que hay que coincidir. Es un parámetro necesario.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary>
          Devuelve una colección de cadenas que representan los nombres de las rutas de acceso a los subdirectorios de un directorio.
        </summary>
      <returns>
          Colección de sólo lectura de tipo String.
        </returns>
      <param name="directory">
              
                String. Nombre y ruta de acceso al directorio. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>
          Devuelve una colección de cadenas que representan los nombres de las rutas de acceso a los subdirectorios de un directorio.
        </summary>
      <returns>
          Una colección de sólo lectura de tipo String.
        </returns>
      <param name="directory">
              
                String. Nombre y ruta de acceso al directorio. Es un parámetro necesario. 
            </param>
      <param name="searchType">
              
                SearchOption Enumeration. Indica si se van a incluir las subcarpetas. El valor predeterminado es SearchOption.SearchTopLevelOnly. Es un parámetro necesario. 
            </param>
      <param name="wildcards">
              
                String. Modelo con el que deben coincidir los nombres. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary>
          Devuelve un objeto <see cref="T:System.IO.DirectoryInfo" /> de la ruta de acceso especificada.
        </summary>
      <returns>
          
            <see cref="T:System.IO.DirectoryInfo" />
          
        </returns>
      <param name="directory">
              
                String. Ruta de acceso al directorio. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary>
          Devuelve un objeto <see cref="T:System.IO.DriveInfo" /> de la unidad especificada.
        </summary>
      <returns>
          
            <see cref="T:System.IO.DriveInfo" />
          
        </returns>
      <param name="drive">
              
                String. Unidad que se va a examinar. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary>
          Devuelve un objeto <see cref="T:System.IO.FileInfo" /> del archivo especificado.
        </summary>
      <returns>
          
            <see cref="T:System.IO.FileInfo" />
          
        </returns>
      <param name="file">
              
                String. Nombre y ruta de acceso al archivo. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary>
          Devuelve una colección de cadenas de sólo lectura que representan los nombres de los archivos de un directorio.
        </summary>
      <returns>
          Una colección de cadenas de sólo lectura.
        </returns>
      <param name="directory">
              
                String. Directorio en el que se va a buscar. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>
          Devuelve una colección de cadenas de sólo lectura que representan los nombres de los archivos de un directorio.
        </summary>
      <returns>
          Colección de cadenas de sólo lectura.
        </returns>
      <param name="directory">
              
                String. Directorio en el que se va a buscar. Es un parámetro necesario. 
            </param>
      <param name="searchType">
              
                SearchOption Enumeration. Indica si se van a incluir las subcarpetas. El valor predeterminado es SearchOption.SearchTopLevelOnly. Es un parámetro necesario. 
            </param>
      <param name="wildcards">
              
                String. Modelo con el que se debe coincidir. Es un parámetro necesario.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary>
          Analiza el nombre de archivo de la ruta de acceso proporcionada.
        </summary>
      <returns>
          
            String.
        </returns>
      <param name="path">
              Es un parámetro necesario. Ruta de acceso que se va a analizar. String.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary>
          Devuelve la ruta de acceso primaria de la ruta de acceso especificada.
        </summary>
      <returns>
          
            String.
        </returns>
      <param name="path">
              
                String. Ruta de acceso que se va a examinar. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary>
          Crea un archivo temporal de cero bytes y nombre único en el disco, y devuelve la ruta de acceso completa a ese archivo.
        </summary>
      <returns>
          
            Un valor de tipo String que contiene la ruta de acceso completa al archivo temporal.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary>
          Mueve un directorio de una ubicación a otra.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Ruta de acceso al directorio que se va a mover. Parámetro necesario. 
            </param>
      <param name="destinationDirectoryName">
              
                String. Ruta de acceso del directorio al que se va a mover el directorio de origen. Parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
          Mueve un directorio de una ubicación a otra.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Ruta de acceso del directorio que se va a mover. Es un parámetro necesario.
            </param>
      <param name="destinationDirectoryName">
              
                String. Ruta de acceso del directorio al que se va a mover el directorio de origen. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UIOption" />. Especifica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Mueve un directorio de una ubicación a otra.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Ruta de acceso del directorio que se va a mover. Es un parámetro necesario.
            </param>
      <param name="destinationDirectoryName">
              
                String. Ruta de acceso del directorio al que se va a mover el directorio de origen. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UIOption" />. Especifica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
      <param name="onUserCancel">
              
                UICancelOption Enumeration. Especifica si se va a producir una excepción cuando el usuario cancela la operación. El valor predeterminado es UICancelOption.ThrowException. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>
          Mueve un directorio de una ubicación a otra.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Ruta de acceso del directorio que se va a mover. Parámetro necesario. 
            </param>
      <param name="destinationDirectoryName">
              
                String. Ruta de acceso del directorio al que se va a mover el directorio de origen. Parámetro necesario. 
            </param>
      <param name="overwrite">
              
                Boolean. Especifica si deben sobrescribirse los directorios existentes. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary>
          Mueve un archivo a una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso al archivo que se va a mover. Parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Ruta de acceso del directorio al que se va a mover el archivo. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
          Mueve un archivo a una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso del archivo que se va a mover. Es un parámetro necesario.
            </param>
      <param name="destinationFileName">
              
                String. Ruta de acceso del directorio al que se moverá el archivo. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                UIOption Enumeration. Especifica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Mueve un archivo a una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso del archivo que se va a mover. Es un parámetro necesario.
            </param>
      <param name="destinationFileName">
              
                String. Ruta de acceso del directorio al que se moverá el archivo. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                UIOption Enumeration. Especifica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
      <param name="onUserCancel">
              
                UICancelOption Enumeration. Especifica si se va a producir una excepción cuando el usuario cancela la operación. El valor predeterminado es UICancelOption.ThrowException. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary>
          Mueve un archivo a una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso del archivo que se va a mover. Parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Ruta de acceso del directorio al que se va a mover el archivo. Es un parámetro necesario. 
            </param>
      <param name="overwrite">
              
                Boolean. Especifica si se van a sobrescribir los archivos existentes. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary>
          El método OpenTextFieldParser permite crear un objeto TextFieldParser Object, que permite analizar de forma sencilla y eficaz los archivos de texto estructurados como los registros. El objeto TextFieldParser puede utilizarse para leer los archivos de ancho fijo y delimitado.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
          
        </returns>
      <param name="file">
              
                String. Archivo que se va a abrir con TextFieldParser. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>
          El método OpenTextFieldParser permite crear un objeto TextFieldParser Object, que permite analizar de forma sencilla y eficaz los archivos de texto estructurados, como los registros. El objeto TextFieldParser puede utilizarse para leer los archivos de ancho fijo y delimitado.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
          
        </returns>
      <param name="file">
              
                String. Archivo que se va a abrir con TextFieldParser. Es un parámetro necesario.
            </param>
      <param name="fieldWidths">
              
                Integer(). Ancho de los campos. Es un parámetro necesario.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary>
          El método OpenTextFieldParser permite crear un objeto TextFieldParser Object, que permite analizar de forma sencilla y eficaz los archivos de texto estructurados como los registros. El objeto TextFieldParser puede utilizarse para leer los archivos de ancho fijo y delimitado.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
          
        </returns>
      <param name="file">
              
                String. Archivo que se va a abrir con TextFieldParser. Es un parámetro necesario.
            </param>
      <param name="delimiters">
              
                String(). Delimitadores de los campos. Es un parámetro necesario.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary>
          Abre un <see cref="T:System.IO.StreamReader" />.
        </summary>
      <returns>
          
            <see cref="T:System.IO.StreamReader" />
          
        </returns>
      <param name="file">
              
                String. Archivo que se va a leer. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>
          Abre un <see cref="T:System.IO.StreamReader" />.
        </summary>
      <returns>
          
            <see cref="T:System.IO.StreamReader" />
          
        </returns>
      <param name="file">
              
                String. Archivo que se va a leer. Es un parámetro necesario. 
            </param>
      <param name="encoding">
              
                <see cref="T:System.Text.Encoding" />. El valor predeterminado es ASCII. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>
          Abre un <see cref="T:System.IO.StreamWriter" />.
        </summary>
      <returns>
          
            <see cref="T:System.IO.StreamWriter" />
          
        </returns>
      <param name="file">
              
                String. Archivo en el que se va a escribir. Es un parámetro necesario.
            </param>
      <param name="append">
              
                Boolean. Especifica si la información se va a anexar o sobrescribir en el archivo. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>
          Abre un <see cref="T:System.IO.StreamWriter" />.
        </summary>
      <returns>
          
            <see cref="T:System.IO.StreamWriter" />
          
        </returns>
      <param name="file">
              
                String. Archivo en el que se va a escribir. Es un parámetro necesario.
            </param>
      <param name="append">
              
                Boolean. Especifica si la información se va a anexar o sobrescribir en el archivo. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <param name="encoding">
              
                <see cref="T:System.Text.Encoding" />. Codificación que se va a utilizar cuando se escribe en el archivo. El valor predeterminado es ASCII. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary>
          Devuelve el contenido de un archivo como una matriz de bytes.
        </summary>
      <returns>
          
            Una matriz de Byte que contiene el contenido del archivo.
        </returns>
      <param name="file">
              
                String. Archivo que se va a leer. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary>
          Devuelve el contenido de un archivo de texto como un objeto String.
        </summary>
      <returns>
          
            Un valor de tipo String que contiene el contenido del archivo.
        </returns>
      <param name="file">
              
                String. Nombre y ruta de acceso al archivo que se va a leer. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary>
          Devuelve el contenido de un archivo de texto como un objeto String.
        </summary>
      <returns>
          
            Un valor de tipo String que contiene el contenido del archivo.
        </returns>
      <param name="file">
              
                String. Nombre y ruta de acceso del archivo que se va a leer. Es un parámetro necesario. 
            </param>
      <param name="encoding">
              
                <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar al leer el archivo. Es un parámetro necesario. El valor predeterminado es UTF-8.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary>
          Cambia el nombre de un directorio.
        </summary>
      <param name="directory">
              
                String. Ruta de acceso y nombre del directorio cuyo nombre se va a cambiar. Es un parámetro necesario. 
            </param>
      <param name="newName">
              
                String. Nuevo nombre del directorio. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary>
          Cambia el nombre de un archivo.
        </summary>
      <param name="file">
              
                String. Archivo cuyo nombre se va a cambiar. Es un parámetro necesario. 
            </param>
      <param name="newName">
              
                String. Nuevo nombre del archivo. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>
          Escribe datos en un archivo binario.
        </summary>
      <param name="file">
              
                String. Nombre y ruta de acceso del archivo en el que se va a escribir. Es un parámetro necesario. 
            </param>
      <param name="data">
              
                Byte. Datos que se van a escribir en el archivo. Es un parámetro necesario. 
            </param>
      <param name="append">
              
                Boolean. Especifica si los datos se van a anexar o sobrescribir. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>
          Escribe texto en un archivo.
        </summary>
      <param name="file">
              
                String. Archivo en el que se va a escribir. Es un parámetro necesario.
            </param>
      <param name="text">
              
                String. Texto que se va a escribir en el archivo. Es un parámetro necesario.
            </param>
      <param name="append">
              
                Boolean. Especifica si el texto se va a anexar o si se va a sobrescribir el texto existente. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>
          Escribe texto en un archivo.
        </summary>
      <param name="file">
              
                String. Archivo en el que se va a escribir. Es un parámetro necesario.
            </param>
      <param name="text">
              
                String. Texto que se va a escribir en el archivo. Es un parámetro necesario.
            </param>
      <param name="append">
              
                Boolean. Especifica si el texto se va a anexar o si se va a sobrescribir el texto existente. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <param name="encoding">
              
                <see cref="T:System.Text.Encoding" />. Especifica la codificación que se va a utilizar al escribir en un archivo. Es un parámetro necesario. El valor predeterminado es UTF-8.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary>
          Es la excepción que se genera cuando el método <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> no puede analizar una fila con el formato especificado.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con datos serializados.
        </summary>
      <param name="info">
              Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto referentes a la excepción que se produce.
            </param>
      <param name="context">
              Estructura <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con el mensaje de error especificado.
        </summary>
      <param name="message">
              Mensaje que describe el error.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.
        </summary>
      <param name="message">
              <see cref="T:System.String" /> que describe el error.
            </param>
      <param name="innerException">
              Objeto <see cref="T:System.Exception" /> que es la causa de la excepción actual. Si el parámetro <see cref="P:System.Exception.InnerException" /> no es una referencia nula (Nothing en Visual Basic), la excepción actual se inicia en un bloque catch que controla la excepción interna.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con el mensaje de error especificado y un número de línea.
        </summary>
      <param name="message">
              Mensaje de la excepción.
            </param>
      <param name="lineNumber">
              Número de la línea incorrecta.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con el mensaje de error especificado, un número de línea y una referencia a la excepción interna que representa la causa de esta excepción.
        </summary>
      <param name="message">
              Mensaje de la excepción.
            </param>
      <param name="lineNumber">
              Número de la línea incorrecta.
            </param>
      <param name="innerException">
              Clase <see cref="T:System.Exception" /> que es la causa de la excepción actual. Si el parámetro <see cref="P:System.Exception.InnerException" /> no es una referencia nula (Nothing en Visual Basic), la excepción actual se inicia en un bloque catch que controla la excepción interna.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Establece el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con información sobre la excepción.
        </summary>
      <param name="info">
              Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto referentes a la excepción que se produce.
            </param>
      <param name="context">
              Estructura <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, SerializationFormatter" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary>
          Obtiene el número de la línea incorrecta.
        </summary>
      <returns>
          El número de la línea incorrecta.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary>
          Crea y devuelve una representación de cadena de la excepción actual. 
        </summary>
      <returns>
          Representación de cadena de la excepción actual.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary>
          Especifica si un archivo debe eliminarse de manera permanente o colocarse en la Papelera de reciclaje.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary>
          Elimina el archivo o directorio de manera permanente. Predeterminado.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary>
          Envía el archivo o directorio a la Papelera de reciclaje.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary>
          Especifica si buscar todos los directorios o sólo los de nivel superior.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary>
          Busque sólo el directorio especificado y excluya los subdirectorios.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary>
          Busque el directorio especificado y todos los subdirectorios que se encuentren dentro de él. Predeterminado.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary>
          Proporciona propiedades para obtener acceso a los directorios a los que normalmente se hace referencia.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary>
          Devuelve una instancia de la clase <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" />.
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary>
          Obtiene el nombre de una ruta que señala a los datos de la aplicación en el directorio \Documents and Setting\All Users\ApplicationData.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary>
          Obtiene el nombre de una ruta que señala al directorio CurrentApplicationData.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary>
          Obtiene el nombre de una ruta que señala al directorio Desktop.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary>
          Obtiene el nombre de una ruta que señala al directorio MyDocuments.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary>
          Obtiene un nombre de ruta que señala al directorio My Music.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary>
          Obtiene un nombre de ruta que señala al directorio My Pictures.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary>
          Obtiene una ruta de acceso que apunta al directorio Archivos de programa.
        </summary>
      <returns>
          
            String.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary>
          Obtiene el nombre de una ruta que señala al directorio Programs.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary>
          Obtiene el nombre de una ruta que señala al directorio Temp.
        </summary>
      <returns>
          
            String.
          
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary>
          Proporciona los métodos y propiedades para analizar archivos de texto estructurados.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary>
          Inicializa una nueva instancia de la clase TextFieldParser.
        </summary>
      <param name="stream">
              
                <see cref="T:System.IO.Stream" />. Secuencia que se va a analizar.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>
          Inicializa una nueva instancia de la clase TextFieldParser.
        </summary>
      <param name="stream">
              
                <see cref="T:System.IO.Stream" />. Secuencia que se va a analizar.
            </param>
      <param name="defaultEncoding">
              
                <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si la codificación no se determina a partir del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase TextFieldParser.
        </summary>
      <param name="stream">
              
                <see cref="T:System.IO.Stream" />. Secuencia que se va a analizar.
            </param>
      <param name="defaultEncoding">
              
                <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si la codificación no se determina a partir del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.
            </param>
      <param name="detectEncoding">
              
                Boolean. Indica si se deben buscar marcas de orden de bytes al comienzo del archivo. El valor predeterminado es True.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase TextFieldParser.
        </summary>
      <param name="stream">
              
                <see cref="T:System.IO.Stream" />. Secuencia que se va a analizar.
            </param>
      <param name="defaultEncoding">
              
                <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si la codificación no se determina a partir del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.
            </param>
      <param name="detectEncoding">
              
                Boolean. Indica si se deben buscar marcas de orden de bytes al comienzo del archivo. El valor predeterminado es True.
            </param>
      <param name="leaveOpen">
              
                Boolean. Indica si <paramref name="stream" /> se deja abierta al cerrar el objeto TextFieldParser. El valor predeterminado es False.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary>
          Inicializa una nueva instancia de la clase TextFieldParser.
        </summary>
      <param name="reader">
              
                <see cref="T:System.IO.TextReader" />. Secuencia <see cref="T:System.IO.TextReader" /> que se va a analizar. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase TextFieldParser.
        </summary>
      <param name="path">
              
                String. Ruta de acceso completa al archivo que se va a analizar.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary>
          Inicializa una nueva instancia de la clase TextFieldParser.
        </summary>
      <param name="path">
              
                String. Ruta de acceso completa al archivo que se va a analizar.
            </param>
      <param name="defaultEncoding">
              
                <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si la codificación no se determina a partir del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase TextFieldParser.
        </summary>
      <param name="path">
              
                String. Ruta de acceso completa al archivo que se va a analizar.
            </param>
      <param name="defaultEncoding">
              
                <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si la codificación no se determina a partir del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.
            </param>
      <param name="detectEncoding">
              
                Boolean. Indica si se deben buscar marcas de orden de bytes al comienzo del archivo. El valor predeterminado es True.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary>
          Cierra el actual objeto TextFieldParser.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary>
          Define los símbolos (token) de comentarios. Un símbolo (token) de comentario es una que cadena que, cuando se encuentra al principio de una línea, indica que dicha línea es un comentario y que el analizador debe omitirla.
        </summary>
      <returns>
          
            String ().
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary>
          Define los delimitadores de un archivo de texto. 
        </summary>
      <returns>
          
            String ().
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose">
      <summary>
          Libera los recursos utilizados por el objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary>
          Libera los recursos utilizados por el objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.
        </summary>
      <param name="disposing">
              Valor booleano. Cuando es True, se liberan los recursos administrados y no administrados; cuando es False, se liberan sólo los recursos no administrados.
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary>
          Devuelve True si entre la actual posición del cursor y el final del archivo no hay líneas en blanco ni líneas que no sean comentarios.
        </summary>
      <returns>
          
            Boolean.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary>
          Devuelve la línea que ha causado la excepción <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> más reciente.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary>
          Devuelve el número de la línea que ha causado la excepción <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> más reciente.
        </summary>
      <returns>
          
            Long.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary>
          Denota el ancho de cada columna del archivo de texto que se está analizando.
        </summary>
      <returns>
          
            Integer ().
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary>
          Permite que el objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por el recolector de elementos no utilizados.
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary>
          Denota si los campos están entre comillas al analizar un archivo delimitado.
        </summary>
      <returns>
          
            Boolean.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary>
          Devuelve el actual número de línea o devuelve -1 si no hay más caracteres disponibles en la secuencia.
        </summary>
      <returns>
          
            Integer.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary>
          Lee el número especificado de caracteres sin avanzar el cursor.
        </summary>
      <returns>
          
            String.
        </returns>
      <param name="numberOfChars">
              
                Int32. Número de caracteres que se van a leer. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary>
          Lee todos los campos en la línea actual, los devuelve como una matriz de cadenas y avanza el cursor a la siguiente línea que contiene datos.
        </summary>
      <returns>
          
            String ().
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary>
          Devuelve la línea actual como una cadena y avanza el cursor a la siguiente línea.
        </summary>
      <returns>
          
            String
          
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary>
          Lee el resto del archivo de texto y lo devuelve como una cadena.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary>
          Establece los delimitadores del lector en los valores especificados y establece el tipo de campo en Delimited.
        </summary>
      <param name="delimiters">
              Matriz de tipo String. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary>
          Establece los delimitadores del lector en los valores especificados y establece el tipo de campo en FixedWidth.
        </summary>
      <param name="fieldWidths">
              Matriz de Integer. 
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary>
          Indica si el archivo que se va a analizar es un archivo delimitado o de ancho fijo.
        </summary>
      <returns>
          
            <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary>
          Indica si los espacios en blanco iniciales y finales deben quitarse de los valores de campo.
        </summary>
      <returns>
          
            Boolean.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary>
          Especifica si se produce una excepción en caso de que el usuario haga clic en Cancelar durante una operación.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary>
          No haga nada cuando el usuario haga clic en Cancelar.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary>
          Produzca una excepción cuando el usuario haga clic en Cancelar.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary>
          Especifica qué cuadros de diálogo se deben mostrar a la hora de copiar, eliminar o mover archivos o directorios.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary>
          Sólo mostrar cuadros de diálogo de error y ocultar los cuadros de diálogo de progreso. Predeterminado.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary>
          Mostrar el cuadro de diálogo de progreso y cualquier cuadro de diálogo de error.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.AspLog">
      <summary>
          Proporciona una propiedad y métodos para escribir información sobre excepciones y eventos en los agentes de escucha de registro de la aplicación.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.AspLog.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Logging.AspLog" />. 
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Logging.AspLog" />. 
        </summary>
      <param name="name">
              
                <see cref="T:System.String" />. Nombre que se va a dar al objeto de propiedad <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" />.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists">
      <summary>
          Crea un nuevo <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> y lo agrega a la colección <see cref="P:System.Diagnostics.TraceSource.Listeners" />.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption">
      <summary>
          Determina qué hacer cuando el objeto <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> intenta escribir en un registro y hay menos espacio en disco disponible del que especifica la propiedad <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException">
      <summary>
          Produzca una excepción.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages">
      <summary>
          Descarte los mensajes del registro.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
      <summary>
          Proporciona un agente de escucha simple que dirige el resultado de registro a un archivo.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> con el nombre predeterminado.
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> con el nombre proporcionado.
        </summary>
      <param name="name">
              
                String. Nombre del objeto de instancia.
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
      <summary>
          Determina si el resultado se va a anexar al archivo actual o escribir en un nuevo archivo.
        </summary>
      <returns>
          
            Un valor de tipo Boolean; True indica que el resultado se anexa al archivo actual y False indica que el resultado se escribe en un nuevo archivo. El valor predeterminado de esta propiedad es True.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
      <summary>
          Indica si al escribir en el archivo de registro se vacía el búfer.
        </summary>
      <returns>
          
            Boolean; True indica que la secuencia se vacía después cada escritura; de lo contrario, las entradas de registro se almacenan en el búfer y se escriben más eficazmente. El valor predeterminado de esta propiedad es False.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
      <summary>
          Obtiene o establece el nombre base de los archivos de registro, que se utiliza para crear su nombre completo.
        </summary>
      <returns>
          
            String. Nombre base de los archivos de registro. El valor predeterminado es el nombre de producto de la aplicación.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
      <summary>
          Cierra la secuencia subyacente del archivo de registro actual y libera los recursos asociados a la secuencia actual.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
      <summary>
          Obtiene o establece el directorio del archivo de registro cuando el valor de la propiedad <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> se establece en <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.
        </summary>
      <returns>
          
            String, que es el nombre del directorio del archivo de registro. El valor predeterminado de esta propiedad es el directorio del usuario para los datos de la aplicación.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
      <summary>
          Obtiene o establece el delimitador utilizado para delimitar los campos en un mensaje de registro.
        </summary>
      <returns>
          
            String, que es el delimitador utilizado para los campos en un mensaje de registro. El valor predeterminado de esta propiedad es el carácter de tabulación.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
      <summary>
          Determina qué debe hacerse cuando se escribe en el archivo de registro y hay menos espacio disponible en disco que el especificado por la propiedad <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />. Determina lo que se debe hacer cuando se intenta escribir en el archivo de registro y hay menos espacio disponible en disco que el especificado por la propiedad <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />, o si el tamaño del archivo de registro es mayor que el valor de <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
      <summary>
          Cierra la secuencia subyacente y, de manera opcional, libera los recursos administrados.
        </summary>
      <param name="disposing">
              
                True libera los recursos administrados y no administrados; False libera sólo los recursos no administrados. 
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
      <summary>
          Obtiene o establece la codificación que se va a utilizar al crear un nuevo archivo de registro.
        </summary>
      <returns>
          
            <see cref="T:System.Text.Encoding" />, que es la codificación que se va a utilizar al crear un nuevo archivo de registro. El valor predeterminado de esta propiedad es <see cref="T:System.Text.UTF8Encoding" />.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
      <summary>
          Vacía la secuencia subyacente que escribe en el archivo de registro actual.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
      <summary>
          Obtiene el nombre completo del archivo de registro actual.
        </summary>
      <returns>
          
            String, que es el nombre completo del archivo de registro actual.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
      <summary>
          Obtiene los atributos de configuración XML personalizados que admite el agente de escucha de seguimiento.
        </summary>
      <returns>
          
            Una matriz de String que contiene los atributos de configuración XML reconocidos por este agente de escucha.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
      <summary>
          Indica si el nombre de host del equipo de registro debe incluirse en el resultado.
        </summary>
      <returns>
          
            Boolean. Utilice True si el identificador de host debe incluirse; de lo contrario, utilice False. El valor predeterminado es False.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
      <summary>
          Obtiene o establece la ubicación de los archivos de registro.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, que es la ubicación del archivo de registro. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
      <summary>
          Determina qué fecha se va a incluir en los nombres de los archivos de registro.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />. Indica qué fecha se va a incluir en los nombres de los archivos de registro. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.
        </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
      <summary>
          Obtiene o establece el tamaño máximo permitido del archivo de registro, expresado en bytes.
        </summary>
      <returns>
          
            Long. Es el tamaño máximo permitido del archivo de registro, en bytes. El valor predeterminado es 5000000.
        </returns>
      <exception cref="T:System.ArgumentException">
              Se genera cuando esta propiedad se establece en un valor menor que 1000.
            </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
      <summary>
          Obtiene o establece la cantidad necesaria de espacio disponible en disco, en bytes, para que los mensajes puedan escribirse en el archivo de registro.
        </summary>
      <returns>
          
            Long. Es la cantidad necesaria de espacio disponible en disco. El valor predeterminado es 10000000.
        </returns>
      <exception cref="T:System.ArgumentException">
              Se genera cuando esta propiedad se establece en un valor menor que 0.
            </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>
          Escribe la información de seguimiento, un objeto de datos y la información de evento en el archivo de resultados o la secuencia de salida.
        </summary>
      <param name="eventCache">
              Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.
            </param>
      <param name="source">
              Nombre del origen de seguimiento que invocó este método. 
            </param>
      <param name="eventType">
              Uno de los valores de la enumeración <see cref="T:System.Diagnostics.TraceEventType" />.
            </param>
      <param name="id">
              Identificador numérico para el evento.
            </param>
      <param name="data">
              Información de seguimiento que se va a emitir.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>
          Escribe la información de seguimiento, una matriz de objetos de datos y la información de evento en el archivo de resultados o la secuencia de salida.
        </summary>
      <param name="eventCache">
              Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.
            </param>
      <param name="source">
              Nombre del origen de seguimiento que invocó este método. 
            </param>
      <param name="eventType">
              Uno de los valores de la enumeración <see cref="T:System.Diagnostics.TraceEventType" />.
            </param>
      <param name="id">
              Identificador numérico para el evento.
            </param>
      <param name="data">
              Matriz de objetos que se van a emitir como datos.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>
          Escribe la información de seguimiento, un mensaje y la información de evento en el archivo de resultados o la secuencia de salida.
        </summary>
      <param name="eventCache">
              Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.
            </param>
      <param name="source">
              Nombre del origen de seguimiento que invocó este método. 
            </param>
      <param name="eventType">
              Uno de los valores de la enumeración <see cref="T:System.Diagnostics.TraceEventType" />.
            </param>
      <param name="id">
              Identificador numérico para el evento.
            </param>
      <param name="message">
              Mensaje que se va a escribir.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>
          Escribe la información de seguimiento, una matriz de objetos con formato y la información de evento en el archivo de resultados o la secuencia de salida.
        </summary>
      <param name="eventCache">
              Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.
            </param>
      <param name="source">
              Nombre del origen de seguimiento que invocó este método. 
            </param>
      <param name="eventType">
              Uno de los valores de la enumeración <see cref="T:System.Diagnostics.TraceEventType" />.
            </param>
      <param name="id">
              Identificador numérico para el evento.
            </param>
      <param name="format">
              Cadena de formato que contiene cero o más elementos de formato, que corresponden a objetos de la matriz <paramref name="args" />.
            </param>
      <param name="args">
              Matriz de Object que contiene cero o más objetos a los que se va a dar formato.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
      <summary>
          Escribe literalmente un mensaje en el disco, sin información de contexto adicional.
        </summary>
      <param name="message">
              
                String. Mensaje personalizado que se va a escribir.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
      <summary>
          Escribe un mensaje literal en el disco, seguido del terminador de línea actual y sin ninguna información de contexto adicional.
        </summary>
      <param name="message">
              
                String. Mensaje personalizado que se va a escribir.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.Log">
      <summary>
          Proporciona una propiedad y métodos para escribir la información de eventos y excepciones en los agentes de escucha de registro de la aplicación.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Logging.Log" />. 
        </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Logging.Log" />. 
        </summary>
      <param name="name">
              
                <see cref="T:System.String" />. Nombre que se va a asignar al objeto de la propiedad <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" />.
            </param>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter">
      <summary>
          Obtiene el objeto <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> que está debajo del objeto Log. 
        </summary>
      <returns>
          Devuelve el objeto <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> que está debajo del objeto Log.
        </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists">
      <summary>
          Crea un nuevo objeto <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> y lo agrega a la colección <see cref="P:System.Diagnostics.TraceSource.Listeners" />.
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
      <summary>
          Obtiene el objeto <see cref="T:System.Diagnostics.TraceSource" /> que está debajo del objeto Log.
        </summary>
      <returns>
          Devuelve el objeto <see cref="T:System.Diagnostics.TraceSource" /> que está debajo del objeto Log.
        </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
      <summary>
          Escribe un mensaje en los agentes de escucha de registro de la aplicación.
        </summary>
      <param name="message">
              Es un parámetro necesario. Mensaje que se va a registrar. Si <paramref name="message" /> es Nothing, se utiliza una cadena vacía.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
      <summary>
          Escribe un mensaje en los agentes de escucha de registro de la aplicación.
        </summary>
      <param name="message">
              Es un parámetro necesario. Mensaje que se va a registrar. Si <paramref name="message" /> es Nothing, se utiliza una cadena vacía.
            </param>
      <param name="severity">
              Tipo de mensaje. De manera predeterminada, es TraceEventType.Information.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <summary>
          Escribe un mensaje en los agentes de escucha de registro de la aplicación.
        </summary>
      <param name="message">
              Es un parámetro necesario. Mensaje que se va a registrar. Si <paramref name="message" /> es Nothing, se utiliza una cadena vacía.
            </param>
      <param name="severity">
              Tipo de mensaje. De manera predeterminada, es TraceEventType.Information.
            </param>
      <param name="id">
              Identificador de mensaje, que se utiliza normalmente para la correlación. De manera predeterminada, está relacionado con <paramref name="entryType" /> tal y como se describe en la tabla.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
      <summary>
          Escribe la información de excepciones en los agentes de escucha de registro de la aplicación
        </summary>
      <param name="ex">
              Es un parámetro necesario. Excepción que se va a registrar.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
      <summary>
          Escribe la información de excepciones en los agentes de escucha de registro de la aplicación
        </summary>
      <param name="ex">
              Es un parámetro necesario. Excepción que se va a registrar.
            </param>
      <param name="severity">
              Tipo de mensaje. De manera predeterminada, es <see cref="F:System.Diagnostics.TraceEventType.Error" />.
            </param>
      <param name="additionalInfo">
              Cadena que se va a anexar al mensaje. De manera predeterminada, es una cadena vacía.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
      <summary>
          Escribe la información de excepciones en los agentes de escucha de registro de la aplicación
        </summary>
      <param name="ex">
              Es un parámetro necesario. Excepción que se va a registrar.
            </param>
      <param name="severity">
              Tipo de mensaje. De manera predeterminada, es <see cref="F:System.Diagnostics.TraceEventType.Error" />.
            </param>
      <param name="additionalInfo">
              Cadena que se va a anexar al mensaje. De manera predeterminada, es una cadena vacía.
            </param>
      <param name="id">
              Identificador de mensaje, que se utiliza normalmente para la correlación. De manera predeterminada, está relacionado con <paramref name="entryType" /> tal y como se describe en la sección Comentarios de la tabla.
            </param>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption">
      <summary>
          Determina qué fecha se debe incluir en los nombres de los archivos de registro de clase <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None">
      <summary>
          No incluya la fecha en el nombre de archivo de registro.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily">
      <summary>
          Incluya la fecha actual en el nombre de archivo de registro.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly">
      <summary>
          Incluya el primer día de la semana actual en el nombre de archivo de registro.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.LogFileLocation">
      <summary>
          Determina qué ruta de acceso predefinida utiliza la clase <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> para escribir sus archivos de registro.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory">
      <summary>
          Utilice la ruta de acceso de la actual carpeta temporal del sistema.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory">
      <summary>
          Utilice la ruta de acceso para los datos de la aplicación de un usuario.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory">
      <summary>
          Utilice la ruta de acceso de los datos de aplicación compartidos por todos los usuarios.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory">
      <summary>
          Utilice la ruta de acceso del archivo ejecutable que inició la aplicación.
        </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom">
      <summary>
          Si la cadena especificada por <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" /> no se encuentra vacía, utilícela como ruta de acceso. En caso contrario, utilice la ruta de acceso para los datos de la aplicación de un usuario.
        </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.ClipboardProxy">
      <summary>
          Proporciona los métodos para manipular el Portapapeles.
        </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear">
      <summary>
          Borra el Portapapeles.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio">
      <summary>
          Indica si el Portapapeles contiene datos de audio.
        </summary>
      <returns>
          
            Es True si hay datos de audio almacenados en el Portapapeles; de lo contrario, es False.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)">
      <summary>
          Indica si el Portapapeles contiene datos con el formato personalizado especificado.
        </summary>
      <returns>
          
            Es True si los datos con el formato personalizado especificado están almacenados en el Portapapeles; de lo contrario, es False.
        </returns>
      <param name="format">
              
                String. Nombre del formato personalizado que se va a comprobar. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList">
      <summary>
          Devuelve un valor de tipo Boolean que indica si el Portapapeles contiene una lista desplegable de archivos.
        </summary>
      <returns>
          
            Es True si hay una lista desplegable de archivos almacenada en el Portapapeles; de lo contrario, es False.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage">
      <summary>
          Devuelve un valor de tipo Boolean que indica si hay una imagen almacenada en el Portapapeles.
        </summary>
      <returns>
          
            Es True si hay una imagen almacenada en el Portapapeles; de lo contrario, es False.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText">
      <summary>
          Determina si hay texto en el Portapapeles.
        </summary>
      <returns>
          
            Es True si el Portapapeles contiene texto; en caso contrario, es False.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)">
      <summary>
          Determina si hay texto en el Portapapeles.
        </summary>
      <returns>
          
            Es True si el Portapapeles contiene texto; en caso contrario, es False.
        </returns>
      <param name="format">
              
                <see cref="T:System.Windows.Forms.TextDataFormat" />. Si se ha especificado, identifica qué formato de texto se va a comprobar. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream">
      <summary>
          Recupera una secuencia de audio del Portapapeles.
        </summary>
      <returns>
          
            <see cref="T:System.IO.Stream" />
          
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)">
      <summary>
          Recupera datos con un formato personalizado del Portapapeles.
        </summary>
      <returns>
          Un objeto.
        </returns>
      <param name="format">
              
                String. Nombre del formato de datos. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject">
      <summary>
          Recupera los datos del Portapapeles como <see cref="T:System.Windows.Forms.IDataObject" />.
        </summary>
      <returns>
          
            <see cref="T:System.Windows.Forms.IDataObject" />
          
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList">
      <summary>
          Recupera del Portapapeles una colección de cadenas que representan nombres de archivo.
        </summary>
      <returns>
          
            <see cref="T:System.Collections.Specialized.StringCollection" />
          
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage">
      <summary>
          Recupera una imagen del Portapapeles.
        </summary>
      <returns>
          
            <see cref="T:System.Drawing.Image" />
          
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText">
      <summary>
          Recupera texto del Portapapeles.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)">
      <summary>
          Recupera texto del Portapapeles.
        </summary>
      <returns>
          
            String.
        </returns>
      <param name="format">
              
                <see cref="T:System.Windows.Forms.TextDataFormat" />. Si se ha especificado, identifica el formato de texto que debe recuperarse. El valor predeterminado es <see cref="F:System.Windows.Forms.TextDataFormat.CommaSeparatedValue" />. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])">
      <summary>
          Escribe datos de audio en el Portapapeles.
        </summary>
      <param name="audioBytes">
              
                Matriz de Byte. Datos de audio que se van a escribir en el Portapapeles. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)">
      <summary>
          Escribe datos de audio en el Portapapeles.
        </summary>
      <param name="audioStream">
              
                <see cref="T:System.IO.Stream" /> Datos de audio que se van a escribir en el Portapapeles. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)">
      <summary>
          Escribe datos con un formato personalizado en el Portapapeles.
        </summary>
      <param name="format">
              
                String. Formato de los datos. Es un parámetro necesario. 
            </param>
      <param name="data">
              
                Object. Objeto de datos que se va a escribir en el Portapapeles. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)">
      <summary>
          Escribe un <see cref="T:System.Windows.Forms.DataObject" /> en el Portapapeles.
        </summary>
      <param name="data">
              
                <see cref="T:System.Windows.Forms.DataObject" /> Objeto de datos que se va a escribir en el Portapapeles. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)">
      <summary>
          Escribe en el Portapapeles una colección de cadenas que representan rutas de acceso a archivos.
        </summary>
      <param name="filePaths">
              
                <see cref="T:System.Collections.Specialized.StringCollection" />. Lista de nombres de archivos. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)">
      <summary>
          Escribe una imagen en el Portapapeles.
        </summary>
      <param name="image">
              
                <see cref="T:System.Drawing.Image" />. Imagen que se va a escribir. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)">
      <summary>
          Escribe texto en el Portapapeles.
        </summary>
      <param name="text">
              
                String. Texto que se va a escribir. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)">
      <summary>
          Escribe texto en el Portapapeles.
        </summary>
      <param name="text">
              
                String. Texto que se va a escribir. Es un parámetro necesario. 
            </param>
      <param name="format">
              
                <see cref="T:System.Windows.Forms.TextDataFormat" />. Formato que se va a utilizar al escribir texto. El valor predeterminado es <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.FileSystemProxy">
      <summary>
          Proporciona las propiedades y los métodos para trabajar con unidades, archivos y directorios.
        </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)">
      <summary>
          Combina dos rutas de acceso y devuelve una ruta de acceso con un formato correcto.
        </summary>
      <returns>
          
            String.
        </returns>
      <param name="baseDirectory">
              
                String. Primera ruta de acceso que se va a combinar. Es un parámetro necesario. 
            </param>
      <param name="relativePath">
              
                String. Segunda ruta de acceso que se va a combinar. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)">
      <summary>
          Copia un directorio en otro directorio.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Directorio que se va a copiar. Es un parámetro necesario.
            </param>
      <param name="destinationDirectoryName">
              
                String. Ubicación donde se va a copiar el directorio. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
          Copia un directorio en otro directorio.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Directorio que se va a copiar. Es un parámetro necesario.
            </param>
      <param name="destinationDirectoryName">
              
                String. Ubicación donde se va a copiar el directorio. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UIOption" />. Indica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Copia un directorio en otro directorio.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Directorio que se va a copiar. Es un parámetro necesario.
            </param>
      <param name="destinationDirectoryName">
              
                String. Ubicación donde se va a copiar el directorio. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UIOption" />. Indica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario.
            </param>
      <param name="onUserCancel">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />. Especifica la acción que se va a realizar cuando el usuario hace clic en Cancelar durante la operación. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. Es un parámetro necesario.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>
          Copia un directorio en otro directorio.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Directorio que se va a copiar. Es un parámetro necesario.
            </param>
      <param name="destinationDirectoryName">
              
                String. Ubicación donde se va a copiar el directorio. Es un parámetro necesario.
            </param>
      <param name="overwrite">
              
                Boolean. Indica si deben sobrescribirse o no los archivos existentes. El valor predeterminado es False. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)">
      <summary>
          Copia un archivo en una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Archivo que se va a copiar. Es un parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Ubicación donde se va a copiar el archivo. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
          Copia un archivo en una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Archivo que se va a copiar. Es un parámetro necesario.
            </param>
      <param name="destinationFileName">
              
                String. Ubicación en la que se debe copiar el archivo. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UIOption" />. Indica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Copia un archivo a una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Archivo que se va a copiar. Es un parámetro necesario.
            </param>
      <param name="destinationFileName">
              
                String. Ubicación en la que se debe copiar el archivo. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UIOption" />. Indica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario.
            </param>
      <param name="onUserCancel">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />. Especifica la acción que se va a realizar cuando el usuario hace clic en Cancelar durante la operación. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)">
      <summary>
          Copia un archivo a una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Archivo que se va a copiar. Es un parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Ubicación donde se va a copiar el archivo. Es un parámetro necesario. 
            </param>
      <param name="overwrite">
              
                Boolean. Indica si se van a sobrescribir los archivos existentes. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)">
      <summary>
          Crea un directorio.
        </summary>
      <param name="directory">
              
                String. Nombre y ubicación del directorio. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory">
      <summary>
          Obtiene o establece el directorio actual.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>
          Elimina un directorio.
        </summary>
      <param name="directory">
              
                String. Directorio que se va a eliminar. Es un parámetro necesario. 
            </param>
      <param name="onDirectoryNotEmpty">
              
                DeleteDirectoryOption Enumeration. Especifica qué acción se va a realizar cuando un directorio que se va a eliminar contiene archivos o directorios. El valor predeterminado es DeleteDirectoryOption.DeleteAllContents.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>
          Elimina un directorio.
        </summary>
      <param name="directory">
              
                String. Directorio que se va a eliminar. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                UIOption Enumeration. Especifica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
      <param name="recycle">
              
                RecycleOption Enumeration. Especifica si el archivo eliminado se va a enviar a la Papelera de reciclaje. El valor predeterminado es RecycleOption.DeletePermanently. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Elimina un directorio.
        </summary>
      <param name="directory">
              
                String. Directorio que se va a eliminar. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                UIOption Enumeration. Especifica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
      <param name="recycle">
              
                RecycleOption Enumeration. Especifica si el archivo eliminado se va a enviar a la Papelera de reciclaje. El valor predeterminado es RecycleOption.DeletePermanently. 
            </param>
      <param name="onUserCancel">
              
                UICancelOption Enumeration. Especifica si se va a producir una excepción cuando el usuario hace clic en Cancelar. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)">
      <summary>
          Elimina un archivo.
        </summary>
      <param name="file">
              
                String. Nombre y ruta de acceso del archivo que se va a eliminar. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>
          Elimina un archivo.
        </summary>
      <param name="file">
              
                String. Nombre y ruta de acceso del archivo que se va a eliminar. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                UIOption. Indica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
      <param name="recycle">
              
                RecycleOption. Especifica si el archivo eliminado se va a enviar a la Papelera de reciclaje. El valor predeterminado es RecycleOption.DeletePermanently. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Elimina un archivo.
        </summary>
      <param name="file">
              
                String. Nombre y ruta de acceso del archivo que se va a eliminar. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                UIOption. Indica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
      <param name="recycle">
              
                RecycleOption. Especifica si el archivo eliminado se va a enviar a la Papelera de reciclaje. El valor predeterminado es RecycleOption.DeletePermanently. Es un parámetro necesario. 
            </param>
      <param name="onUserCancel">
              
                UICancelOption. Especifica si se va a producir una excepción cuando el usuario cancela la operación. El valor predeterminado es UICancelOption.ThrowException. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)">
      <summary>
          Devuelve un valor de tipo Boolean que indica si existe el directorio especificado.
        </summary>
      <returns>
          
            Es True si existe el directorio; en caso contrario, es False.
        </returns>
      <param name="directory">
              
                String. Ruta de acceso del directorio. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives">
      <summary>
          Devuelve una colección de sólo lectura de todos los nombres de unidad disponibles.
        </summary>
      <returns>
          
            System.Collections.ObjectModel.ReadOnlyCollection (de System.IO.DriveInfo)
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)">
      <summary>
          Devuelve un valor de tipo Boolean que indica si existe el archivo especificado.
        </summary>
      <returns>
          Devuelve True si el archivo existe; de lo contrario, este método devuelve False.
        </returns>
      <param name="file">
              
                String. Nombre y ruta de acceso del archivo. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>
          Devuelve una colección de cadenas de sólo lectura que representa los nombres de los archivos que contienen el texto especificado.
        </summary>
      <returns>
          Una colección de sólo lectura de tipo String.
        </returns>
      <param name="directory">
              
                String. Directorio en el que se va a buscar. Es un parámetro necesario.
            </param>
      <param name="containsText">
              
                String. Texto de búsqueda. Es un parámetro necesario.
            </param>
      <param name="ignoreCase">
              
                Boolean. Especifica si la búsqueda debe distinguir entre mayúsculas y minúsculas. El valor predeterminado es True. Es un parámetro necesario.
            </param>
      <param name="searchType">
              
                SearchOption Enumeration. Indica si se van a incluir las subcarpetas. El valor predeterminado es SearchOption.SearchTopLevelOnly. Es un parámetro necesario. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>
          Devuelve una colección de cadenas de sólo lectura que representa los nombres de los archivos que contienen el texto especificado.
        </summary>
      <returns>
          Una colección de sólo lectura de tipo String.
        </returns>
      <param name="directory">
              
                String. Directorio en el que se va a buscar. Es un parámetro necesario.
            </param>
      <param name="containsText">
              
                String. Texto de búsqueda. Es un parámetro necesario.
            </param>
      <param name="ignoreCase">
              
                Boolean. Especifica si la búsqueda debe distinguir entre mayúsculas y minúsculas. El valor predeterminado es True. Es un parámetro necesario.
            </param>
      <param name="searchType">
              
                SearchOption Enumeration. Indica si se van a incluir las subcarpetas. El valor predeterminado es SearchOption.SearchTopLevelOnly. Es un parámetro necesario. 
            </param>
      <param name="fileWildcards">
              Matriz de tipo String. Modelo con el que hay que coincidir. Es un parámetro necesario.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)">
      <summary>
          Devuelve una colección de cadenas que representan los nombres de las rutas de acceso a los subdirectorios de un directorio.
        </summary>
      <returns>
          Una colección de sólo lectura de tipo String.
        </returns>
      <param name="directory">
              
                String. Nombre y ruta de acceso del directorio. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>
          Devuelve una colección de cadenas que representan los nombres de las rutas de acceso a los subdirectorios de un directorio.
        </summary>
      <returns>
          Una colección de sólo lectura de tipo String.
        </returns>
      <param name="directory">
              
                String. Nombre y ruta de acceso del directorio. Es un parámetro necesario. 
            </param>
      <param name="searchType">
              
                SearchOption Enumeration. Indica si se van a incluir las subcarpetas. El valor predeterminado es SearchOption.SearchTopLevelOnly. Es un parámetro necesario. 
            </param>
      <param name="wildcards">
              
                String. Modelo con el que deben coincidir los nombres. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)">
      <summary>
          Devuelve un objeto <see cref="T:System.IO.DirectoryInfo" /> de la ruta de acceso especificada.
        </summary>
      <returns>
          
            <see cref="T:System.IO.DirectoryInfo" />
          
        </returns>
      <param name="directory">
              
                String. Ruta de acceso del directorio. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)">
      <summary>
          Devuelve un objeto <see cref="T:System.IO.DriveInfo" /> de la unidad especificada.
        </summary>
      <returns>
          
            <see cref="T:System.IO.DriveInfo" />
          
        </returns>
      <param name="drive">
              
                String. Unidad que se va a examinar. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)">
      <summary>
          Devuelve un objeto <see cref="T:System.IO.FileInfo" /> del archivo especificado.
        </summary>
      <returns>
          
            <see cref="T:System.IO.FileInfo" />
          
        </returns>
      <param name="file">
              
                String. Nombre y ruta de acceso del archivo. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)">
      <summary>
          Devuelve una colección de cadenas de sólo lectura que representan los nombres de los archivos de un directorio.
        </summary>
      <returns>
          Una colección de cadenas de sólo lectura.
        </returns>
      <param name="directory">
              
                String. Directorio en el que se va a buscar. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>
          Devuelve una colección de cadenas de sólo lectura que representan los nombres de los archivos de un directorio.
        </summary>
      <returns>
          Una colección de cadenas de sólo lectura.
        </returns>
      <param name="directory">
              
                String. Directorio en el que se va a buscar. Es un parámetro necesario. 
            </param>
      <param name="searchType">
              
                SearchOption Enumeration. Indica si se van a incluir las subcarpetas. El valor predeterminado es SearchOption.SearchTopLevelOnly. Es un parámetro necesario. 
            </param>
      <param name="wildcards">
              
                String. Modelo que debe coincidir. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)">
      <summary>
          Analiza el nombre de archivo de la ruta de acceso proporcionada.
        </summary>
      <returns>
          
            String.
        </returns>
      <param name="path">
              Es un parámetro necesario. Ruta de acceso que se va a analizar. String.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)">
      <summary>
          Devuelve la ruta de acceso primaria de la ruta de acceso especificada.
        </summary>
      <returns>
          
            String.
        </returns>
      <param name="path">
              
                String. Ruta de acceso que se va a examinar. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName">
      <summary>
          Crea un archivo temporal de cero bytes y nombre único en el disco y devuelve la ruta de acceso completa a ese archivo.
        </summary>
      <returns>
          
            Un valor de tipo String que contiene la ruta de acceso completa del archivo temporal.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)">
      <summary>
          Mueve un directorio de una ubicación a otra.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Ruta de acceso del directorio que se va a mover. Parámetro necesario. 
            </param>
      <param name="destinationDirectoryName">
              
                String. Ruta de acceso del directorio al que se va a mover el directorio de origen. Parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
          Mueve un directorio de una ubicación a otra.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Ruta de acceso del directorio que se va a mover. Es un parámetro necesario.
            </param>
      <param name="destinationDirectoryName">
              
                String. Ruta de acceso del directorio al que se va a mover el directorio de origen. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UIOption" />. Especifica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Mueve un directorio de una ubicación a otra.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Ruta de acceso del directorio que se va a mover. Es un parámetro necesario.
            </param>
      <param name="destinationDirectoryName">
              
                String. Ruta de acceso del directorio al que se va a mover el directorio de origen. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                <see cref="T:Microsoft.VisualBasic.FileIO.UIOption" />. Especifica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
      <param name="onUserCancel">
              
                UICancelOption Enumeration. Especifica si se va a producir una excepción cuando el usuario cancela la operación. El valor predeterminado es UICancelOption.ThrowException. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>
          Mueve un directorio de una ubicación a otra.
        </summary>
      <param name="sourceDirectoryName">
              
                String. Ruta de acceso al directorio que se va a mover. Parámetro necesario. 
            </param>
      <param name="destinationDirectoryName">
              
                String. Ruta de acceso del directorio al que se va a mover el directorio de origen. Parámetro necesario. 
            </param>
      <param name="overwrite">
              
                Boolean. Especifica si deben sobrescribirse los directorios existentes. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)">
      <summary>
          Mueve un archivo a una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso del archivo que se va a mover. Parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Ruta de acceso del directorio al que se va a mover el archivo. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
          Mueve un archivo a una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso del archivo que se va a mover. Es un parámetro necesario.
            </param>
      <param name="destinationFileName">
              
                String. Ruta de acceso del directorio al que se moverá el archivo. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                UIOption Enumeration. Especifica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
          Mueve un archivo a una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso del archivo que se va a mover. Es un parámetro necesario.
            </param>
      <param name="destinationFileName">
              
                String. Ruta de acceso del directorio al que se moverá el archivo. Es un parámetro necesario.
            </param>
      <param name="showUI">
              
                UIOption Enumeration. Especifica si se va a efectuar un seguimiento visual del progreso de la operación. El valor predeterminado es UIOption.OnlyErrorDialogs. Es un parámetro necesario. 
            </param>
      <param name="onUserCancel">
              
                UICancelOption Enumeration. Especifica si se va a producir una excepción cuando el usuario cancela la operación. El valor predeterminado es UICancelOption.ThrowException. Es un parámetro necesario. 
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)">
      <summary>
          Mueve un archivo a una nueva ubicación.
        </summary>
      <param name="sourceFileName">
              
                String. Ruta de acceso del archivo que se va a mover. Parámetro necesario. 
            </param>
      <param name="destinationFileName">
              
                String. Ruta de acceso del directorio al que se va a mover el archivo. Es un parámetro necesario. 
            </param>
      <param name="overwrite">
              
                Boolean. Especifica si se van a sobrescribir los archivos existentes. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)">
      <summary>
          El método OpenTextFieldParser permite crear un objeto TextFieldParser Object, que permite analizar de forma sencilla y eficaz los archivos de texto estructurados como los registros. El objeto TextFieldParser puede utilizarse para leer los archivos de ancho fijo y delimitado.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
          
        </returns>
      <param name="file">
              
                String. Archivo que se va a abrir con TextFieldParser. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>
          El método OpenTextFieldParser permite crear un objeto TextFieldParser Object, que permite analizar de forma sencilla y eficaz los archivos de texto estructurados como los registros. El objeto TextFieldParser puede utilizarse para leer los archivos de ancho fijo y delimitado.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
          
        </returns>
      <param name="file">
              
                String. Archivo que se va a abrir con TextFieldParser. Es un parámetro necesario.
            </param>
      <param name="fieldWidths">
              
                Integer(). Ancho de los campos. Es un parámetro necesario.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])">
      <summary>
          El método OpenTextFieldParser permite crear un objeto TextFieldParser Object, que permite analizar de forma sencilla y eficaz los archivos de texto estructurados como los registros. El objeto TextFieldParser puede utilizarse para leer los archivos de ancho fijo y delimitado.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
          
        </returns>
      <param name="file">
              
                String. Archivo que se va a abrir con TextFieldParser. Es un parámetro necesario.
            </param>
      <param name="delimiters">
              
                String(). Delimitadores de los campos. Es un parámetro necesario.
            </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)">
      <summary>
          Abre un <see cref="T:System.IO.StreamReader" />.
        </summary>
      <returns>
          
            <see cref="T:System.IO.StreamReader" />
          
        </returns>
      <param name="file">
              
                String. Archivo que se va a leer. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>
          Abre un <see cref="T:System.IO.StreamReader" />.
        </summary>
      <returns>
          
            <see cref="T:System.IO.StreamReader" />
          
        </returns>
      <param name="file">
              
                String. Archivo que se va a leer. Es un parámetro necesario. 
            </param>
      <param name="encoding">
              
                <see cref="T:System.Text.Encoding" />. El valor predeterminado es ASCII. Es un parámetro necesario.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>
          Abre un <see cref="T:System.IO.StreamWriter" />.
        </summary>
      <returns>
          
            <see cref="T:System.IO.StreamWriter" />
          
        </returns>
      <param name="file">
              
                String. Archivo en el que se va a escribir. Es un parámetro necesario.
            </param>
      <param name="append">
              
                Boolean. Especifica si la información se va a anexar o sobrescribir en el archivo. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>
          Abre un <see cref="T:System.IO.StreamWriter" />.
        </summary>
      <returns>
          
            <see cref="T:System.IO.StreamWriter" />
          
        </returns>
      <param name="file">
              
                String. Archivo en el que se va a escribir. Es un parámetro necesario.
            </param>
      <param name="append">
              
                Boolean. Especifica si la información se va a anexar o sobrescribir en el archivo. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <param name="encoding">
              
                <see cref="T:System.Text.Encoding" />. Codificación que se va a utilizar cuando se escribe en el archivo. El valor predeterminado es ASCII. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)">
      <summary>
          Devuelve el contenido de un archivo como una matriz de bytes.
        </summary>
      <returns>
          
            Una matriz de Byte que contiene el contenido del archivo.
        </returns>
      <param name="file">
              
                String. Archivo que se va a leer. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)">
      <summary>
          Devuelve el contenido de un archivo de texto como un objeto String.
        </summary>
      <returns>
          
            Un valor de tipo String que contiene el contenido del archivo.
        </returns>
      <param name="file">
              
                String. Nombre y ruta de acceso del archivo que se va a leer. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)">
      <summary>
          Devuelve el contenido de un archivo de texto como un objeto String.
        </summary>
      <returns>
          
            Un valor de tipo String que contiene el contenido del archivo.
        </returns>
      <param name="file">
              
                String. Nombre y ruta de acceso del archivo que se va a leer. Es un parámetro necesario. 
            </param>
      <param name="encoding">
              
                <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar al leer el archivo. Es un parámetro necesario. El valor predeterminado es UTF-8.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)">
      <summary>
          Cambia el nombre de un directorio.
        </summary>
      <param name="directory">
              
                String. Ruta de acceso y nombre del directorio cuyo nombre se va a cambiar. Es un parámetro necesario. 
            </param>
      <param name="newName">
              
                String. Nuevo nombre del directorio. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)">
      <summary>
          Cambia el nombre de un archivo.
        </summary>
      <param name="file">
              
                String. Archivo cuyo nombre se va a cambiar. Es un parámetro necesario. 
            </param>
      <param name="newName">
              
                String. Nuevo nombre del archivo. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories">
      <summary>
          Obtiene un objeto que proporciona las propiedades para obtener acceso a los directorios a los que se suele hacer referencia.
        </summary>
      <returns>
          Esta propiedad devuelve My.Computer.FileSystem.SpecialDirectories Object del equipo.
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>
          Escribe datos en un archivo binario.
        </summary>
      <param name="file">
              
                String. Nombre y ruta de acceso del archivo en el que se va a escribir. Es un parámetro necesario. 
            </param>
      <param name="data">
              
                Byte. Datos que se van a escribir en el archivo. Es un parámetro necesario. 
            </param>
      <param name="append">
              
                Boolean. Especifica si los datos se van a anexar o sobrescribir. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>
          Escribe texto en un archivo.
        </summary>
      <param name="file">
              
                String. Archivo en el que se va a escribir. Es un parámetro necesario.
            </param>
      <param name="text">
              
                String. Texto que se va a escribir en el archivo. Es un parámetro necesario.
            </param>
      <param name="append">
              
                Boolean. Especifica si el texto se va a anexar o si se va a sobrescribir el texto existente. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>
          Escribe texto en un archivo.
        </summary>
      <param name="file">
              
                String. Archivo en el que se va a escribir. Es un parámetro necesario.
            </param>
      <param name="text">
              
                String. Texto que se va a escribir en el archivo. Es un parámetro necesario.
            </param>
      <param name="append">
              
                Boolean. Especifica si el texto se va a anexar o si se va a sobrescribir el texto existente. El valor predeterminado es False. Es un parámetro necesario. 
            </param>
      <param name="encoding">
              
                <see cref="T:System.Text.Encoding" />. Especifica la codificación que se va a utilizar al escribir en un archivo. Es un parámetro necesario. El valor predeterminado es UTF-8.
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.RegistryProxy">
      <summary>
          Proporciona las propiedades y los métodos para manipular el Registro.
        </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot">
      <summary>
          Devuelve un tipo de <see cref="T:Microsoft.Win32.RegistryKey" /> que proporciona acceso a HKEY_CLASSES_ROOT.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.Win32.RegistryKey" />
          
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig">
      <summary>
          Devuelve un tipo de <see cref="T:Microsoft.Win32.RegistryKey" /> que proporciona acceso a HKEY_CURRENT_CONFIG.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.Win32.RegistryKey" />
          
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser">
      <summary>
          Devuelve un tipo de <see cref="T:Microsoft.Win32.RegistryKey" /> que proporciona acceso a HKEY_CURRENT_USER.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.Win32.RegistryKey" />
          
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.DynData">
      <summary>
          Devuelve un tipo de <see cref="T:Microsoft.Win32.RegistryKey" />, que proporciona acceso a HKEY_DYNDATA.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.Win32.RegistryKey" />
          
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)">
      <summary>
          Obtiene un valor de una clave del Registro.
        </summary>
      <returns>
          Obtiene un valor de una clave del Registro.
        </returns>
      <param name="keyName">
              
                String. Clave de la que se recupera el valor. Es un parámetro necesario. 
            </param>
      <param name="valueName">
              
                String. Valor que se va a recuperar. Es un parámetro necesario. 
            </param>
      <param name="defaultValue">
              
                Object. Valor predeterminado que se va a proporcionar si el valor no existe. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine">
      <summary>
          Devuelve un tipo de <see cref="T:Microsoft.Win32.RegistryKey" />, que proporciona acceso a HKEY_LOCAL_MACHINE.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.Win32.RegistryKey" />
          
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData">
      <summary>
          Devuelve un tipo de <see cref="T:Microsoft.Win32.RegistryKey" />, que proporciona acceso a HKEY_PERFORMANCE_DATA.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.Win32.RegistryKey" />
          
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)">
      <summary>
          Escribe un valor en una clave del Registro.
        </summary>
      <param name="keyName">
              
                String. Nombre de la clave en la que se va a escribir. Es un parámetro necesario. 
            </param>
      <param name="valueName">
              
                String. Nombre del valor que se va a escribir. Es un parámetro necesario. 
            </param>
      <param name="value">
              
                Object. Valor que se va a escribir. Es un parámetro necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
      <summary>
          Escribe un valor en una clave del Registro.
        </summary>
      <param name="keyName">
              
                String. Nombre de la clave en la que se va a escribir. Es un parámetro necesario. 
            </param>
      <param name="valueName">
              
                String. Nombre del valor que se va a escribir. Es un parámetro necesario. 
            </param>
      <param name="value">
              
                Object. Valor que se va a escribir. Es un parámetro necesario. 
            </param>
      <param name="valueKind">
              
                <see cref="T:Microsoft.Win32.RegistryValueKind" />. Es necesario. 
            </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users">
      <summary>
          Devuelve un tipo de <see cref="T:Microsoft.Win32.RegistryKey" />, que proporciona acceso a HKEY_USERS.
        </summary>
      <returns>
          
            <see cref="T:Microsoft.Win32.RegistryKey" />
          
        </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
      <summary>
          Proporciona las propiedades para obtener acceso a los directorios a los que se hace referencia de manera habitual.
        </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData">
      <summary>
          Obtiene el nombre de la ruta de acceso que apunta a los datos de la aplicación en el directorio \Documents and Settings\All Users\Application Data.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData">
      <summary>
          Obtiene el nombre de la ruta de acceso que apunta al directorio CurrentApplicationData.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop">
      <summary>
          Obtiene el nombre de la ruta de acceso que apunta al directorio Escritorio.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments">
      <summary>
          Obtiene el nombre de la ruta de acceso que apunta al directorio Mis documentos.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic">
      <summary>
          Obtiene el nombre de la ruta de acceso que apunta al directorio Mi música.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures">
      <summary>
          Obtiene el nombre de la ruta de acceso que apunta al directorio Mis imágenes.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles">
      <summary>
          Obtiene una ruta de acceso que apunta al directorio Archivos de programa.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs">
      <summary>
          Obtiene el nombre de la ruta de acceso que apunta al directorio Programas.
        </summary>
      <returns>
          
            String.
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp">
      <summary>
          Obtiene el nombre de la ruta de acceso que apunta al directorio Temp.
        </summary>
      <returns>
          
            String.
          
        </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1">
      <summary>
          Esta clase admite My en Visual Basic.
        </summary>
      <typeparam name="T">
              Tipo del objeto que se va a almacenar.
            </typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor">
      <summary>
          Esta clase admite My en Visual Basic.
        </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value">
      <summary>
          Esta propiedad admite My en Visual Basic.
        </summary>
      <returns>
          Valor asociado a esta clase.
        </returns>
    </member>
  </members>
</doc>