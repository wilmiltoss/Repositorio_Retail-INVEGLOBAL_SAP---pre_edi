<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Xml.ConformanceLevel">
      <summary>
          Especifica el número de comprobaciones de entrada o de salida que realizan los objetos <see cref="T:System.Xml.XmlReader" /> y <see cref="T:System.Xml.XmlWriter" /> creados.
        </summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Auto">
      <summary>
          Los objetos <see cref="T:System.Xml.XmlReader" /> y <see cref="T:System.Xml.XmlWriter" /> detectan automáticamente si se debe realizar la comprobación del documento o fragmento y lleva a cabo la comprobación correspondiente. En caso de que esté ajustando otro objeto <see cref="T:System.Xml.XmlReader" /> o <see cref="T:System.Xml.XmlWriter" />, el objeto externo no lleva a cabo ninguna comprobación de conformidad adicional. La comprobación de conformidad se deja al objeto subyacente.
        </summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Fragment">
      <summary>
          Los datos XML son un fragmento XML con el formato correcto.
        </summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Document">
      <summary>
          Los datos XML cumplen las reglas para crear un documento XML 1.0 con el formato correcto.
        </summary>
    </member>
    <member name="T:System.Xml.EntityHandling">
      <summary>
          Especifica cómo <see cref="T:System.Xml.XmlTextReader" /> o <see cref="T:System.Xml.XmlValidatingReader" /> controlan las entidades.
        </summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandEntities">
      <summary>
          Expande todas las entidades y devuelve los nodos expandidos.
        </summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandCharEntities">
      <summary>
          Expande las entidades de carácter y devuelve las entidades generales como nodos <see cref="F:System.Xml.XmlNodeType.EntityReference" />. 
        </summary>
    </member>
    <member name="T:System.Xml.Formatting">
      <summary>
          Especifica las opciones de formato de <see cref="T:System.Xml.XmlTextWriter" />.
        </summary>
    </member>
    <member name="F:System.Xml.Formatting.None">
      <summary>
          No se aplica un formato especial. Éste es el valor predeterminado.
        </summary>
    </member>
    <member name="F:System.Xml.Formatting.Indented">
      <summary>
          Hace que los elementos secundarios tengan la sangría que indican los valores de las propiedades <see cref="P:System.Xml.XmlTextWriter.Indentation" /> y <see cref="P:System.Xml.XmlTextWriter.IndentChar" />. 
        </summary>
    </member>
    <member name="T:System.Xml.IHasXmlNode">
      <summary>
          Permite que una clase devuelva <see cref="T:System.Xml.XmlNode" /> desde el contexto o la posición actuales.
        </summary>
    </member>
    <member name="M:System.Xml.IHasXmlNode.GetNode">
      <summary>
          Devuelve el <see cref="T:System.Xml.XmlNode" /> de la posición actual.
        </summary>
      <returns>
          XmlNode de la posición actual.
        </returns>
    </member>
    <member name="T:System.Xml.IXmlLineInfo">
      <summary>
          Proporciona una interfaz que permite a una clase devolver información de línea y de posición.
        </summary>
    </member>
    <member name="M:System.Xml.IXmlLineInfo.HasLineInfo">
      <summary>
          Obtiene un valor que indica si la clase puede devolver información de línea.
        </summary>
      <returns>
          
            Es true si se pueden proporcionar <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> y <see cref="P:System.Xml.IXmlLineInfo.LinePosition" />; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LineNumber">
      <summary>
          Obtiene el número de línea actual.
        </summary>
      <returns>
          Número de línea actual o 0 si no hay información de línea disponible (por ejemplo, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> devuelve false).
        </returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LinePosition">
      <summary>
          Obtiene la posición de línea actual.
        </summary>
      <returns>
          Posición de línea actual o 0 si no hay información de línea disponible (por ejemplo, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> devuelve false).
        </returns>
    </member>
    <member name="T:System.Xml.IXmlNamespaceResolver">
      <summary>
          Proporciona acceso de sólo lectura a un conjunto de asignaciones de prefijos y espacios de nombres.
        </summary>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>
          Obtiene una colección de asignaciones de prefijos y espacios de nombres que están actualmente en el ámbito.
        </summary>
      <returns>
          <see cref="T:System.Collections.IDictionary" /> que contiene los espacios de nombres que hay actualmente en el ámbito.
        </returns>
      <param name="scope">
              Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica el tipo de nodos de espacio de nombres que se va a devolver.
            </param>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)">
      <summary>
          Obtiene el URI del espacio de nombres asignado al prefijo especificado.
        </summary>
      <returns>
          El espacio de nombres del URI que está asignado al prefijo; es null si el prefijo no está asignado a ningún espacio de nombres de URI.
        </returns>
      <param name="prefix">
              Prefijo cuyo URI de espacio de nombres se desea buscar.
            </param>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
      <summary>
          Obtiene el prefijo asignado al URI del espacio de nombres especificado.
        </summary>
      <returns>
          Prefijo asignado al URI del espacio de nombres; es null si este URI no está asignado a ningún prefijo.
        </returns>
      <param name="namespaceName">
              URI de espacio de nombres cuyo prefijo se desea buscar.
            </param>
    </member>
    <member name="T:System.Xml.NameTable">
      <summary>
          Implementa <see cref="T:System.Xml.XmlNameTable" /> de un único subproceso.
        </summary>
    </member>
    <member name="M:System.Xml.NameTable.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase NameTable.
        </summary>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>
          Subdivide la cadena especificada y la agrega a NameTable.
        </summary>
      <returns>
          Cadena subdividida o cadena existente si ya está en NameTable. Si <paramref name="len" /> es cero, se devuelve String.Empty.
        </returns>
      <param name="key">
              Matriz de caracteres que contiene la cadena que se va a agregar. 
            </param>
      <param name="start">
              Índice de base cero de la matriz que especifica el primer carácter de la cadena. 
            </param>
      <param name="len">
              Número de caracteres de la cadena. 
            </param>
      <exception cref="T:System.IndexOutOfRangeException">
              0 &gt; <paramref name="start" />
              O bien
              
                <paramref name="start" /> &gt;= <paramref name="key" />.Length 
              O bien
              
                <paramref name="len" /> &gt;= <paramref name="key" />.Length 
              Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="len" /> = 0.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="len" /> &lt; 0. 
            </exception>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.String)">
      <summary>
          Subdivide la cadena especificada y la agrega a NameTable.
        </summary>
      <returns>
          Cadena subdividida o cadena existente si ya está en NameTable.
        </returns>
      <param name="key">
              Cadena que se va a agregar. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="key" /> es null. 
            </exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>
          Obtiene la cadena subdividida que contiene los mismos caracteres que el intervalo de caracteres especificado en una matriz determinada.
        </summary>
      <returns>
          Cadena subdividida o null si la cadena no se ha subdividido todavía. Si <paramref name="len" /> es cero, se devuelve String.Empty.
        </returns>
      <param name="key">
              Matriz de caracteres que contiene el nombre que se va a buscar. 
            </param>
      <param name="start">
              Índice de base cero de la matriz que especifica el primer carácter del nombre. 
            </param>
      <param name="len">
              Número de caracteres del nombre. 
            </param>
      <exception cref="T:System.IndexOutOfRangeException">
              0 &gt; <paramref name="start" />
              O bien
              
                <paramref name="start" /> &gt;= <paramref name="key" />.Length 
              O bien
              
                <paramref name="len" /> &gt;= <paramref name="key" />.Length 
              Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="len" /> = 0.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="len" /> &lt; 0. 
            </exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.String)">
      <summary>
          Obtiene la cadena subdividida con el valor especificado.
        </summary>
      <returns>
          Objeto de cadena subdividida o null si la cadena no se ha subdividido todavía.
        </returns>
      <param name="value">
              Nombre que se va a buscar. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="value" /> es null. 
            </exception>
    </member>
    <member name="T:System.Xml.NewLineHandling">
      <summary>
          Especifica cómo controlar los saltos de línea.
        </summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Replace">
      <summary>
          Los nuevos caracteres de línea se reemplazan para coincidir con el carácter especificado en la propiedad <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />.
        </summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Entitize">
      <summary>
          Los nuevos caracteres de la línea tienen entidades. Esta configuración conserva todos los caracteres cuando el resultado se lee mediante un <see cref="T:System.Xml.XmlReader" /> de normalización.
        </summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.None">
      <summary>
          Los nuevos caracteres de línea no se modifican. El resultado es igual que la entrada.
        </summary>
    </member>
    <member name="T:System.Xml.ReadState">
      <summary>
          Especifica el estado del lector.
        </summary>
    </member>
    <member name="F:System.Xml.ReadState.Initial">
      <summary>
          No se ha llamado al método Read.
        </summary>
    </member>
    <member name="F:System.Xml.ReadState.Interactive">
      <summary>
          Se ha llamado al método Read. Se puede llamar a otros métodos en el lector.
        </summary>
    </member>
    <member name="F:System.Xml.ReadState.Error">
      <summary>
          Se ha producido un error que impide que continúe la operación de lectura.
        </summary>
    </member>
    <member name="F:System.Xml.ReadState.EndOfFile">
      <summary>
          Se ha llegado al final del archivo correctamente.
        </summary>
    </member>
    <member name="F:System.Xml.ReadState.Closed">
      <summary>
          Se ha llamado al método <see cref="M:System.Xml.XmlReader.Close" />.
        </summary>
    </member>
    <member name="T:System.Xml.ValidationType">
      <summary>
          Especifica el tipo de validación que se va a realizar.
        </summary>
    </member>
    <member name="F:System.Xml.ValidationType.None">
      <summary>
          No se lleva a cabo ninguna validación. Esta configuración crea un analizador que no valida y que satisface XML 1.0.
        </summary>
    </member>
    <member name="F:System.Xml.ValidationType.Auto">
      <summary>
          Valida si se encuentra información de esquema o de DTD.
        </summary>
    </member>
    <member name="F:System.Xml.ValidationType.DTD">
      <summary>
          Valida según el archivo DTD.
        </summary>
    </member>
    <member name="F:System.Xml.ValidationType.XDR">
      <summary>
          Valide según los esquemas reducidos de datos XML (XDR), incluyendo los esquemas XDR en línea. Los esquemas XDR se reconocen mediante el prefijo de espacio de nombres x-schema o la propiedad <see cref="P:System.Xml.XmlValidatingReader.Schemas" />.
        </summary>
    </member>
    <member name="F:System.Xml.ValidationType.Schema">
      <summary>
          Valide según los esquemas del lenguaje de definición de esquemas XML (XSD), incluyendo los esquemas XML en línea. Los esquemas XML se asocian a los indicadores URI de espacio de nombres mediante el atributo schemaLocation o la propiedad Schemas proporcionada.
        </summary>
    </member>
    <member name="T:System.Xml.WhitespaceHandling">
      <summary>
          Especifica cómo se controla el espacio en blanco.
        </summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.All">
      <summary>
          Se devuelven nodos Whitespace y SignificantWhitespace. Éste es el valor predeterminado.
        </summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.Significant">
      <summary>
          Sólo se devuelven nodos SignificantWhitespace.
        </summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.None">
      <summary>
          No se devuelven nodos Whitespace ni SignificantWhitespace.
        </summary>
    </member>
    <member name="T:System.Xml.WriteState">
      <summary>
          Especifica el estado de <see cref="T:System.Xml.XmlWriter" />.
        </summary>
    </member>
    <member name="F:System.Xml.WriteState.Start">
      <summary>
          No se ha llamado al método Write.
        </summary>
    </member>
    <member name="F:System.Xml.WriteState.Prolog">
      <summary>
          Se está escribiendo el prólogo.
        </summary>
    </member>
    <member name="F:System.Xml.WriteState.Element">
      <summary>
          Se está escribiendo una etiqueta de apertura de elemento.
        </summary>
    </member>
    <member name="F:System.Xml.WriteState.Attribute">
      <summary>
          Se está escribiendo un valor de atributo.
        </summary>
    </member>
    <member name="F:System.Xml.WriteState.Content">
      <summary>
          Se está escribiendo el contenido del elemento.
        </summary>
    </member>
    <member name="F:System.Xml.WriteState.Closed">
      <summary>
          Se ha llamado al método <see cref="M:System.Xml.XmlWriter.Close" />.
        </summary>
    </member>
    <member name="F:System.Xml.WriteState.Error">
      <summary>
          Se ha iniciado una excepción que ha dejado <see cref="T:System.Xml.XmlWriter" /> en un estado no válido. Puede llamar al método <see cref="M:System.Xml.XmlWriter.Close" /> para poner <see cref="T:System.Xml.XmlWriter" /> en el estado <see cref="F:System.Xml.WriteState.Closed" />. Cualquier otra llamada al método <see cref="T:System.Xml.XmlWriter" /> hará que se inicie una <see cref="T:System.InvalidOperationException" />.
        </summary>
    </member>
    <member name="T:System.Xml.XmlAttribute">
      <summary>
          Representa un atributo. Los valores válidos y predeterminados del atributo se definen en una definición de tipo de documento (DTD) o en un esquema.
        </summary>
    </member>
    <member name="M:System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>
        </summary>
      <param name="prefix">
            </param>
      <param name="localName">
            </param>
      <param name="namespaceURI">
            </param>
      <param name="doc">
            </param>
    </member>
    <member name="M:System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)">
      <summary>
          Agrega el nodo especificado al final de la lista de nodos secundarios de este nodo.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> agregado.
        </returns>
      <param name="newChild">
              <see cref="T:System.Xml.XmlNode" /> que se va a agregar.
            </param>
      <exception cref="T:System.InvalidOperationException">
              Este nodo es de un tipo que no admite nodos secundarios del tipo del nodo <paramref name="newChild" />.
              <paramref name="newChild" /> es un nodo primario de este nodo. 
            </exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.
              Este nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.BaseURI">
      <summary>
          Obtiene el Identificador de recursos uniforme (URI) del nodo .
        </summary>
      <returns>
          Ubicación desde la que se cargó el nodo o String.Empty si el nodo no tiene un identificador URI base. Los nodos de atributo tienen el mismo identificador URI base que el elemento al que pertenecen. Si un nodo de atributo no pertenece a ningún elemento, BaseURI devuelve String.Empty.
        </returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo.
        </summary>
      <returns>
          Nodo duplicado.
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false para clonar sólo el nodo en sí. 
            </param>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerText">
      <summary>
          Obtiene o establece los valores concatenados del nodo y de todos sus nodos secundarios.
        </summary>
      <returns>
          Valores concatenados del nodo y de todos sus nodos secundarios. Para nodos de atributo, esta propiedad tiene la misma funcionalidad que la propiedad <see cref="P:System.Xml.XmlAttribute.Value" />.
        </returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerXml">
      <summary>
          Obtiene o establece el valor del atributo.
        </summary>
      <returns>
          Valor del atributo.
        </returns>
      <exception cref="T:System.Xml.XmlException">
              El código XML especificado al establecer esta propiedad no tiene un formato correcto. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>
          Inserta el nodo especificado inmediatamente detrás del nodo de referencia igualmente especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> insertado.
        </returns>
      <param name="newChild">
              <see cref="T:System.Xml.XmlNode" /> que se va a insertar. 
            </param>
      <param name="refChild">
              <see cref="T:System.Xml.XmlNode" /> que es el nodo de referencia. <paramref name="newChild" /> se coloca detrás de <paramref name="refChild" />.
            </param>
      <exception cref="T:System.InvalidOperationException">
              Este nodo es de un tipo que no admite nodos secundarios del tipo del nodo <paramref name="newChild" />.
              <paramref name="newChild" /> es un nodo primario de este nodo. 
            </exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.
              <paramref name="refChild" /> no es un nodo secundario de este nodo.
              Este nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>
          Inserta el nodo especificado inmediatamente antes del nodo de referencia igualmente especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> insertado.
        </returns>
      <param name="newChild">
              <see cref="T:System.Xml.XmlNode" /> que se va a insertar. 
            </param>
      <param name="refChild">
              <see cref="T:System.Xml.XmlNode" /> que es el nodo de referencia. <paramref name="newChild" /> se coloca delante de este nodo. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual es de un tipo que no admite nodos secundarios del tipo del nodo <paramref name="newChild" />.
              <paramref name="newChild" /> es un nodo primario de este nodo. 
            </exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.
              <paramref name="refChild" /> no es un nodo secundario de este nodo.
              Este nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.LocalName">
      <summary>
          Obtiene el nombre local del nodo.
        </summary>
      <returns>
          Nombre del nodo de atributo sin prefijo. En el ejemplo siguiente, &lt;book bk:genre= 'novel'&gt;, el LocalName del atributo es genre.
        </returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Name">
      <summary>
          Obtiene el nombre completo del nodo.
        </summary>
      <returns>
          Nombre completo del nodo de atributo.
        </returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NamespaceURI">
      <summary>
          Obtiene el identificador URI de espacio de nombres de este nodo.
        </summary>
      <returns>
          Identificador URI de espacio de nombres de este nodo. Si no se da al atributo un espacio de nombres explícitamente, esta propiedad devuelve String.Empty.
        </returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          El tipo de nodo de los nodos XmlAttribute es XmlNodeType.Attribute.
        </returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerDocument">
      <summary>
          Obtiene el <see cref="T:System.Xml.XmlDocument" /> al que pertenece este nodo.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlDocument" />.
        </returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerElement">
      <summary>
          Obtiene el <see cref="T:System.Xml.XmlElement" /> al que pertenece el atributo.
        </summary>
      <returns>
          XmlElement al que pertenece el atributo o null si este atributo no forma parte de un XmlElement.
        </returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.ParentNode">
      <summary>
          Obtiene el nodo principal de este nodo. Para nodos XmlAttribute, esta propiedad devuelve siempre null.
        </summary>
      <returns>
          Para nodos XmlAttribute, esta propiedad devuelve siempre null.
        </returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Prefix">
      <summary>
          Obtiene o establece el prefijo de espacio de nombres de este nodo.
        </summary>
      <returns>
          Prefijo de espacio de nombres de este nodo. Si no hay prefijo, esta propiedad devuelve String.Empty.
        </returns>
      <exception cref="T:System.ArgumentException">
              Este nodo es de sólo lectura. 
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El prefijo especificado contiene un carácter no válido.
              El prefijo especificado no está formado correctamente.
              El identificador URI de espacio de nombres de este nodo es null.
              El prefijo especificado es "xml" y el identificador URI de espacio de nombres de este nodo no es http://www.w3.org/XML/1998/namespace.
              Este nodo es un atributo, el prefijo especificado es "xmlns" y su identificador URI de espacio de nombres no es "http://www.w3.org/2000/xmlns/".
              Este nodo es un atributo y su nombre completo es "xmlns" [espacios de nombres]. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)">
      <summary>
          Agrega el nodo especificado al principio de la lista de nodos secundarios de este nodo.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> agregado.
        </returns>
      <param name="newChild">
              <see cref="T:System.Xml.XmlNode" /> que se va a agregar. Si es un <see cref="T:System.Xml.XmlDocumentFragment" />, todo el contenido del fragmento de documento se desplaza a la lista de nodos secundarios de este nodo.
            </param>
      <exception cref="T:System.InvalidOperationException">
              Este nodo es de un tipo que no admite nodos secundarios del tipo del nodo <paramref name="newChild" />.
              <paramref name="newChild" /> es un nodo primario de este nodo. 
            </exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.
              Este nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)">
      <summary>
          Quita el nodo secundario especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> quitado.
        </returns>
      <param name="oldChild">
              <see cref="T:System.Xml.XmlNode" /> que se va a quitar.
            </param>
      <exception cref="T:System.ArgumentException">
              <paramref name="oldChild" /> no es un nodo secundario de este nodo. O este nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>
          Reemplaza el nodo secundario especificado con el nuevo nodo secundario especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> reemplazado.
        </returns>
      <param name="newChild">
              El nuevo <see cref="T:System.Xml.XmlNode" /> secundario.
            </param>
      <param name="oldChild">
              <see cref="T:System.Xml.XmlNode" /> que se va a reemplazar. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Este nodo es de un tipo que no admite nodos secundarios del tipo del nodo <paramref name="newChild" />.
              <paramref name="newChild" /> es un nodo primario de este nodo. 
            </exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.
              Este nodo es de sólo lectura.
              <paramref name="oldChild" /> no es un nodo secundario de este nodo. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.SchemaInfo">
      <summary>
          Obtiene el conjunto de información posterior a la validación del esquema que se ha asignado a este nodo como resultado de dicha validación.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene el conjunto de información posterior a la validación del esquema de este nodo.
        </returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Specified">
      <summary>
          Obtiene un valor que indica si el valor de atributo se estableció explícitamente.
        </summary>
      <returns>
          
            Es true si a este atributo se le dio explícitamente un valor en la instancia original del documento; en caso contrario, es false. El valor false indica que el valor del atributo procedía de la DTD.
        </returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Value">
      <summary>
          Obtiene o establece el valor del nodo.
        </summary>
      <returns>
          El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. Para nodos XmlAttribute, esta propiedad es el valor de atributo.
        </returns>
      <exception cref="T:System.ArgumentException">
              El nodo es de sólo lectura y se llama a una operación de conjunto. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="T:System.Xml.XmlAttributeCollection">
      <summary>
          Representa una colección de atributos a los que se puede obtener acceso por nombre o por índice.
        </summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)">
      <summary>
          Inserta el atributo especificado como último nodo de la colección.
        </summary>
      <returns>
          XmlAttribute que se va a agregar a la colección.
        </returns>
      <param name="node">
              <see cref="T:System.Xml.XmlAttribute" /> que se va a insertar. 
            </param>
      <exception cref="T:System.ArgumentException">
              
                Se creó <paramref name="node" /> a partir de un documento diferente que el que creó esta colección. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)">
      <summary>
          Copia todos los objetos <see cref="T:System.Xml.XmlAttribute" /> de esta colección en la matriz dada.
        </summary>
      <param name="array">
              Matriz que representa el destino de los objetos copiados de esta colección. 
            </param>
      <param name="index">
              Índice de la matriz en que se inicia la copia. 
            </param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>
          Inserta el atributo especificado inmediatamente después del atributo de referencia igualmente especificado.
        </summary>
      <returns>
          XmlAttribute que se va a insertar en la colección.
        </returns>
      <param name="newNode">
              <see cref="T:System.Xml.XmlAttribute" /> que se va a insertar. 
            </param>
      <param name="refNode">
              <see cref="T:System.Xml.XmlAttribute" /> que corresponde al atributo de referencia. <paramref name="newNode" /> se sitúa detrás de <paramref name="refNode" />. 
            </param>
      <exception cref="T:System.ArgumentException">
              Se creó <paramref name="newNode" /> a partir de un documento diferente al que creó esta colección. O <paramref name="refNode" /> no es un miembro de esta colección. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>
          Inserta el atributo especificado inmediatamente delante del atributo de referencia especificado.
        </summary>
      <returns>
          XmlAttribute que se va a insertar en la colección.
        </returns>
      <param name="newNode">
              <see cref="T:System.Xml.XmlAttribute" /> que se va a insertar. 
            </param>
      <param name="refNode">
              <see cref="T:System.Xml.XmlAttribute" /> que corresponde al atributo de referencia. <paramref name="newNode" /> se sitúa delante de <paramref name="refNode" />. 
            </param>
      <exception cref="T:System.ArgumentException">
              Se creó <paramref name="newNode" /> a partir de un documento diferente al que creó esta colección. O <paramref name="refNode" /> no es un miembro de esta colección. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)">
      <summary>
          Obtiene el atributo que tiene el índice especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlAttribute" /> en el índice especificado.
        </returns>
      <param name="i">
              Índice del atributo. 
            </param>
      <exception cref="T:System.IndexOutOfRangeException">
              El índice a pasándose está fuera del intervalo. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)">
      <summary>
          Obtiene el atributo con el nombre especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlAttribute" /> con el nombre especificado. Si el atributo no existe, esta propiedad devuelve null.
        </returns>
      <param name="name">
              Nombre completo del atributo. 
            </param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)">
      <summary>
          Obtiene el atributo que tiene el nombre local e Identificador uniforme de recursos (URI) de espacio de nombres especificados.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlAttribute" /> con el nombre local y la URI de espacio de nombres que se hayan especificado. Si el atributo no existe, esta propiedad devuelve null.
        </returns>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)">
      <summary>
          Inserta el atributo especificado como primer nodo de la colección.
        </summary>
      <returns>
          XmlAttribute agregado a la colección.
        </returns>
      <param name="node">
              <see cref="T:System.Xml.XmlAttribute" /> que se va a insertar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)">
      <summary>
          Quita el atributo especificado de la colección.
        </summary>
      <returns>
          Nodo que se ha quitado o null si no se encuentra en la colección.
        </returns>
      <param name="node">
              <see cref="T:System.Xml.XmlAttribute" /> que se va a quitar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAll">
      <summary>
          Quita todos los atributos de la colección.
        </summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)">
      <summary>
          Quita de la colección el atributo correspondiente al índice especificado.
        </summary>
      <returns>
          Devuelve null si no hay ningún atributo en el índice especificado.
        </returns>
      <param name="i">
              Índice del nodo que se va a quitar. El primer nodo tiene índice 0. 
            </param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)">
      <summary>
          Agrega un <see cref="T:System.Xml.XmlNode" /> mediante su propiedad <see cref="P:System.Xml.XmlNode.Name" /> 
        </summary>
      <returns>
          Si <paramref name="node" /> reemplaza a un nodo existente con el mismo nombre, se devolverá el nodo antiguo; en caso contrario, se devolverá el nodo agregado.
        </returns>
      <param name="node">
              Nodo de atributo que se almacenará en la colección. Posteriormente se podrá obtener acceso al nodo utilizando el nombre del nodo en cuestión. Si ya hay un nodo con ese nombre en la colección, se reemplazará por el nuevo; en caso contrario, el nodo se agregará al final de la colección. 
            </param>
      <exception cref="T:System.ArgumentException">
              
                Se creó <paramref name="node" /> a partir de un <see cref="T:System.Xml.XmlDocument" /> distinto al que creó esta colección.
              Esta XmlAttributeCollection es de sólo lectura. 
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                <paramref name="node" /> es un <see cref="T:System.Xml.XmlAttribute" /> que, a su vez, es un atributo de otro objeto <see cref="T:System.Xml.XmlElement" />. Para volver a utilizar atributos en otros elementos, hay que duplicar los objetos XmlAttribute que se deseen volver a utilizar. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />.
        </summary>
      <param name="array">
              Matriz que representa el destino de los objetos copiados de esta colección. 
            </param>
      <param name="index">
              Índice de la matriz en que se inicia la copia. 
            </param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.XmlAttributeCollection.System.Collections.ICollection.Count" />.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.XmlAttributeCollection.System.Collections.ICollection.IsSynchronized" />.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.XmlAttributeCollection.System.Collections.ICollection.SyncRoot" />.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="T:System.Xml.XmlCDataSection">
      <summary>
          Representa una sección CDATA.
        </summary>
    </member>
    <member name="M:System.Xml.XmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlCDataSection" />.
        </summary>
      <param name="data">
            </param>
      <param name="doc">
            </param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo.
        </summary>
      <returns>
          Nodo clonado.
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false sólo para clonar el nodo en sí. Dado que los nodos CDATA no tienen elementos secundarios, con independencia del valor del parámetro, el nodo clonado incluirá siempre el contenido de los datos. 
            </param>
    </member>
    <member name="P:System.Xml.XmlCDataSection.LocalName">
      <summary>
          Obtiene el nombre local del nodo.
        </summary>
      <returns>
          En el caso de nodos CDATA, el nombre local es #cdata-section.
        </returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.Name">
      <summary>
          Obtiene el nombre completo del nodo.
        </summary>
      <returns>
          En el caso de nodos CDATA, el nombre es #cdata-section.
        </returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Tipo de nodo. En el caso de nodos CDATA, el valor es XmlNodeType.CDATA.
        </returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.ParentNode">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="T:System.Xml.XmlCharacterData">
      <summary>
          Proporciona métodos de manipulación de texto que son utilizados por varias clases.
        </summary>
    </member>
    <member name="M:System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlCharacterData" />.
        </summary>
      <param name="data">
            </param>
      <param name="doc">
            </param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.AppendData(System.String)">
      <summary>
          Anexa la cadena especificada al final de los datos de caracteres del nodo.
        </summary>
      <param name="strData">
              Cadena que se va a insertar en la cadena existente. 
            </param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Data">
      <summary>
          Contiene los datos del nodo.
        </summary>
      <returns>
          Datos del nodo.
        </returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)">
      <summary>
          Quita un intervalo de caracteres del nodo.
        </summary>
      <param name="offset">
              Posición dentro de la cadena donde se va a iniciar la eliminación. 
            </param>
      <param name="count">
              Número de caracteres que se va a eliminar. 
            </param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.InnerText">
      <summary>
          Obtiene o establece los valores concatenados del nodo y todos su nodos secundarios.
        </summary>
      <returns>
          Valores concatenados del nodo y todos su nodos secundarios.
        </returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)">
      <summary>
          Inserta la cadena especificada en el desplazamiento de caracteres especificado.
        </summary>
      <param name="offset">
              Posición dentro de la cadena donde se van a insertar los datos de cadena proporcionados. 
            </param>
      <param name="strData">
              Datos de cadena que se van a insertar en la cadena existente. 
            </param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Length">
      <summary>
          Obtiene la longitud de los datos en caracteres.
        </summary>
      <returns>
          Longitud en caracteres de la cadena de la propiedad <see cref="P:System.Xml.XmlCharacterData.Data" />. La longitud puede ser cero; es decir, los nodos CharacterData pueden estar vacíos.
        </returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
      <summary>
          Reemplaza el número de caracteres especificado, empezando en el desplazamiento especificado, por la cadena especificada.
        </summary>
      <param name="offset">
              Posición dentro de la cadena donde se va a iniciar la sustitución. 
            </param>
      <param name="count">
              Número de caracteres que se va a reemplazar. 
            </param>
      <param name="strData">
              Datos nuevos que reemplazan a los datos de cadena antiguos. 
            </param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)">
      <summary>
          Recupera una subcadena de la cadena completa en el intervalo especificado.
        </summary>
      <returns>
          Subcadena que corresponde al intervalo especificado.
        </returns>
      <param name="offset">
              Posición dentro de la cadena donde se va a iniciar la recuperación. Un desplazamiento de cero indica que el punto inicial es el principio de los datos. 
            </param>
      <param name="count">
              Número de caracteres que se va a recuperar. 
            </param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Value">
      <summary>
          Obtiene o establece el valor del nodo.
        </summary>
      <returns>
          Valor del nodo.
        </returns>
      <exception cref="T:System.ArgumentException">
              El nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="T:System.Xml.XmlComment">
      <summary>
          Representa el contenido de un comentario XML.
        </summary>
    </member>
    <member name="M:System.Xml.XmlComment.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>
        </summary>
      <param name="comment">
            </param>
      <param name="doc">
            </param>
    </member>
    <member name="M:System.Xml.XmlComment.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo.
        </summary>
      <returns>
          Nodo clonado.
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false sólo para clonar el nodo en sí. Dado que los nodos Comment no tienen elementos secundarios, el nodo clonado incluye siempre el contenido del texto, con independencia del valor del parámetro. 
            </param>
    </member>
    <member name="P:System.Xml.XmlComment.LocalName">
      <summary>
          Obtiene el nombre local del nodo.
        </summary>
      <returns>
          Para los nodos de comentarios, el valor es #comment.
        </returns>
    </member>
    <member name="P:System.Xml.XmlComment.Name">
      <summary>
          Obtiene el nombre completo del nodo.
        </summary>
      <returns>
          Para los nodos de comentarios, el valor es #comment.
        </returns>
    </member>
    <member name="P:System.Xml.XmlComment.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Para los nodos de comentarios, el valor es XmlNodeType.Comment.
        </returns>
    </member>
    <member name="M:System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Dado que los nodos de comentario no tienen elementos secundarios, este método no tiene ningún efecto.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="T:System.Xml.XmlConvert">
      <summary>
          Codifica y descodifica nombres XML y proporciona métodos de conversión entre tipos de Common Language Runtime y tipos de esquemas del lenguaje de definición de esquemas XML (esquemas XSD). Cuando se convierten tipos de datos, los valores devueltos no dependen de la configuración regional.
        </summary>
    </member>
    <member name="M:System.Xml.XmlConvert.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlConvert" />. 
        </summary>
    </member>
    <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
      <summary>
          Descodifica un nombre. Este método hace lo contrario que los métodos <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> y <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />.
        </summary>
      <returns>
          Nombre descodificado.
        </returns>
      <param name="name">
              Nombre que se va a transformar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
      <summary>
          Convierte el nombre en un nombre XML local válido.
        </summary>
      <returns>
          Nombre codificado.
        </returns>
      <param name="name">
              Nombre que se va a codificar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
      <summary>
          Convierte el nombre en un nombre XML válido.
        </summary>
      <returns>
          Devuelve el nombre con los caracteres no válidos sustituidos por una cadena de escape.
        </returns>
      <param name="name">
              Nombre que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
      <summary>
          Comprueba que el nombre es válido de acuerdo con la especificación XML.
        </summary>
      <returns>
          Nombre codificado.
        </returns>
      <param name="name">
              Nombre que se va a codificar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Boolean" /> equivalente.
        </summary>
      <returns>
          Valor Boolean; es decir, true o false.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> no representa un valor Boolean. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Byte" /> equivalente.
        </summary>
      <returns>
          Valor Byte equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> no tiene el formato correcto. 
            </exception>
      <exception cref="T:System.OverflowException">
              
                <paramref name="s" /> representa un número menor que <see cref="F:System.Byte.MinValue" /> o mayor que <see cref="F:System.Byte.MaxValue" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Char" /> equivalente.
        </summary>
      <returns>
          Char que representa el carácter único.
        </returns>
      <param name="s">
              Cadena que contiene un carácter único que se va a convertir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor del parámetro <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              El parámetro <paramref name="s" /> contiene más de un carácter. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.DateTime" /> equivalente.
        </summary>
      <returns>
          Valor DateTime equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> es una cadena vacía o no tiene el formato correcto. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.DateTime" /> equivalente.
        </summary>
      <returns>
          Valor DateTime equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <param name="format">
              Estructura de formato que se va a aplicar al valor DateTime convertido. Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos. La cadena se valida comparándola con este formato. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> o <paramref name="format" /> es String.Empty 
              O bien 
              
                <paramref name="s" /> no contiene ninguna fecha ni hora que se correspondan con <paramref name="format" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.DateTime" /> equivalente.
        </summary>
      <returns>
          Valor DateTime equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <param name="formats">
              Matriz que contiene las estructuras de formato que se van a aplicar al valor DateTime convertido. Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> o un elemento de <paramref name="formats" /> es String.Empty 
              O bien 
              
                <paramref name="s" /> no contiene una fecha y hora que se correspondan con ninguno de los elementos de <paramref name="formats" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
      <summary>
          Convierte <see cref="T:System.String" /> en <see cref="T:System.DateTime" /> mediante el modo <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> especificado.
        </summary>
      <returns>
          Valor <see cref="T:System.DateTime" /> equivalente de la cadena <see cref="T:System.String" />.
        </returns>
      <param name="s">
              Valor <see cref="T:System.String" /> que se va a convertir.
            </param>
      <param name="dateTimeOption">
              Uno de los valores de <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> que especifican si la fecha se debe pasar a la hora local o mantenerse como hora universal coordinada (UTC), si se trata de una fecha de UTC.
            </param>
      <exception cref="T:System.NullReferenceException">
              
                <paramref name="s" /> es null.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="dateTimeOption" /> es null.
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> es una cadena vacía o su formato no es válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
      <summary>
          Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.
        </summary>
      <returns>
          Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.
        </returns>
      <param name="s">
              Cadena que va a convertirse.
              
                La cadena debe ajustarse a un subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. Para obtener más información, vea http://www.w3.org/TR/xmlschema-2/#dateTimehttp://go.microsoft.com/fwlink/?LinkId=97914.
              
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El argumento pasado a este método está fuera del intervalo de valores permitidos. Para obtener información sobre los valores permitidos, vea <see cref="T:System.DateTimeOffset" />.
            </exception>
      <exception cref="T:System.FormatException">
              El argumento pasado a este método no se ajusta a un subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. Para obtener más información, vea http://www.w3.org/TR/xmlschema-2/#dateTimehttp://go.microsoft.com/fwlink/?LinkId=97914.
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
      <summary>
          Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.
        </summary>
      <returns>
          Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.
        </returns>
      <param name="s">
              Cadena que va a convertirse.
            </param>
      <param name="format">
              Formato desde el que se convierte <paramref name="s" />. El parámetro de formato puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. (Para obtener más información, vea http://www.w3.org/TR/xmlschema-2/#dateTimehttp://go.microsoft.com/fwlink/?LinkId=97914.) La cadena <paramref name="s" /> se valida comparándola con este formato.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> o <paramref name="format" /> es una cadena vacía o no tiene el formato especificado.
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
      <summary>
          Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.
        </summary>
      <returns>
          Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.
        </returns>
      <param name="s">
              Cadena que va a convertirse.
            </param>
      <param name="formats">
              Matriz de formatos a partir de los cuales puede convertirse <paramref name="s" />. Cada formato de <paramref name="formats" /> puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. (Para obtener más información, vea http://www.w3.org/TR/xmlschema-2/#dateTimehttp://go.microsoft.com/fwlink/?LinkId=97914.) La cadena <paramref name="s" /> se valida comparándola con uno de estos formatos.
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Decimal" /> equivalente.
        </summary>
      <returns>
          Valor Decimal equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> no tiene el formato correcto. 
            </exception>
      <exception cref="T:System.OverflowException">
              
                <paramref name="s" /> representa un número menor que <see cref="F:System.Decimal.MinValue" /> o mayor que <see cref="F:System.Decimal.MaxValue" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Double" /> equivalente.
        </summary>
      <returns>
          Valor Double equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> no tiene el formato correcto. 
            </exception>
      <exception cref="T:System.OverflowException">
              
                <paramref name="s" /> representa un número menor que <see cref="F:System.Double.MinValue" /> o mayor que <see cref="F:System.Double.MaxValue" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Guid" /> equivalente.
        </summary>
      <returns>
          Valor Guid equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Int16" /> equivalente.
        </summary>
      <returns>
          Valor Int16 equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> no tiene el formato correcto. 
            </exception>
      <exception cref="T:System.OverflowException">
              
                <paramref name="s" /> representa un número menor que <see cref="F:System.Int16.MinValue" /> o mayor que <see cref="F:System.Int16.MaxValue" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Int32" /> equivalente.
        </summary>
      <returns>
          Valor Int32 equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> no tiene el formato correcto. 
            </exception>
      <exception cref="T:System.OverflowException">
              
                <paramref name="s" /> representa un número menor que <see cref="F:System.Int32.MinValue" /> o mayor que <see cref="F:System.Int32.MaxValue" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Int64" /> equivalente.
        </summary>
      <returns>
          Valor Int64 equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> no tiene el formato correcto. 
            </exception>
      <exception cref="T:System.OverflowException">
              
                <paramref name="s" /> representa un número menor que <see cref="F:System.Int64.MinValue" /> o mayor que <see cref="F:System.Int64.MaxValue" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.SByte" /> equivalente.
        </summary>
      <returns>
          Valor SByte equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> no tiene el formato correcto. 
            </exception>
      <exception cref="T:System.OverflowException">
              
                <paramref name="s" /> representa un número menor que <see cref="F:System.SByte.MinValue" /> o mayor que <see cref="F:System.SByte.MaxValue" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.Single" /> equivalente.
        </summary>
      <returns>
          Valor Single equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> no tiene el formato correcto. 
            </exception>
      <exception cref="T:System.OverflowException">
              
                <paramref name="s" /> representa un número menor que <see cref="F:System.Single.MinValue" /> o mayor que <see cref="F:System.Single.MaxValue" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
      <summary>
          Convierte <see cref="T:System.Boolean" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de Boolean, es decir, "true" o "false".
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Byte)">
      <summary>
          Convierte <see cref="T:System.Byte" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de Byte.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
      <summary>
          Convierte <see cref="T:System.Char" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de Char.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime)">
      <summary>
          Convierte <see cref="T:System.DateTime" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de DateTime con el formato yyyy-MM-ddTHH:mm:ss donde 'T' es una constante literal.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
      <summary>
          Convierte <see cref="T:System.DateTime" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de DateTime.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
      <param name="format">
              Estructura de formato que define cómo se muestra la cadena convertida. Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
      <summary>
          Convierte <see cref="T:System.DateTime" /> en <see cref="T:System.String" /> mediante el modo <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> especificado.
        </summary>
      <returns>
          Valor <see cref="T:System.String" /> equivalente de la cadena <see cref="T:System.DateTime" />.
        </returns>
      <param name="value">
              Valor <see cref="T:System.DateTime" /> que se va a convertir.
            </param>
      <param name="dateTimeOption">
              Uno de los valores de <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> que especifica cómo tratar el valor <see cref="T:System.DateTime" />.
            </param>
      <exception cref="T:System.ArgumentException">
              El valor <paramref name="dateTimeOption" /> no es válido.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="value" /> o <paramref name="dateTimeOption" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
      <summary>
          Convierte el objeto <see cref="T:System.DateTimeOffset" /> proporcionado en una <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de tipo <see cref="T:System.String" /> del objeto <see cref="T:System.DateTimeOffset" /> proporcionado.
        </returns>
      <param name="value">
              <see cref="T:System.DateTimeOffset" /> que va a convertirse.
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
      <summary>
          Convierte el objeto <see cref="T:System.DateTimeOffset" /> proporcionado en una <see cref="T:System.String" /> con el formato especificado.
        </summary>
      <returns>
          Representación <see cref="T:System.String" /> con el formato especificado del objeto <see cref="T:System.DateTimeOffset" /> proporcionado.
        </returns>
      <param name="value">
              <see cref="T:System.DateTimeOffset" /> que va a convertirse.
            </param>
      <param name="format">
              Formato al que se convierte <paramref name="s" />. El parámetro de formato puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. (Para obtener más información, vea http://www.w3.org/TR/xmlschema-2/#dateTimehttp://go.microsoft.com/fwlink/?LinkId=97914.)
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
      <summary>
          Convierte <see cref="T:System.Decimal" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de Decimal.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
      <summary>
          Convierte <see cref="T:System.Double" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de Double.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
      <summary>
          Convierte <see cref="T:System.Guid" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de Guid.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
      <summary>
          Convierte <see cref="T:System.Int16" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de Int16.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
      <summary>
          Convierte <see cref="T:System.Int32" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de Int32.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
      <summary>
          Convierte <see cref="T:System.Int64" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de Int64.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
      <summary>
          Convierte <see cref="T:System.SByte" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de SByte.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
      <summary>
          Convierte <see cref="T:System.Single" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de Single.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
      <summary>
          Convierte <see cref="T:System.TimeSpan" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de TimeSpan.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt16)">
      <summary>
          Convierte <see cref="T:System.UInt16" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de UInt16.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
      <summary>
          Convierte <see cref="T:System.UInt32" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de UInt32.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
      <summary>
          Convierte <see cref="T:System.UInt64" /> en <see cref="T:System.String" />.
        </summary>
      <returns>
          Representación de cadena de UInt64.
        </returns>
      <param name="value">
              Valor que se va a convertir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.TimeSpan" /> equivalente.
        </summary>
      <returns>
          Valor TimeSpan equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> no tiene el formato correcto para representar un valor TimeSpan. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.UInt16" /> equivalente.
        </summary>
      <returns>
          Valor UInt16 equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> no tiene el formato correcto. 
            </exception>
      <exception cref="T:System.OverflowException">
              
                <paramref name="s" /> representa un número menor que <see cref="F:System.UInt16.MinValue" /> o mayor que <see cref="F:System.UInt16.MaxValue" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.UInt32" /> equivalente.
        </summary>
      <returns>
          Valor UInt32 equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> no tiene el formato correcto. 
            </exception>
      <exception cref="T:System.OverflowException">
              
                <paramref name="s" /> representa un número menor que <see cref="F:System.UInt32.MinValue" /> o mayor que <see cref="F:System.UInt32.MaxValue" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
      <summary>
          Convierte <see cref="T:System.String" /> en un valor <see cref="T:System.UInt64" /> equivalente.
        </summary>
      <returns>
          Valor UInt64 equivalente de la cadena.
        </returns>
      <param name="s">
              Cadena que se va a convertir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="s" /> es null. 
            </exception>
      <exception cref="T:System.FormatException">
              
                <paramref name="s" /> no tiene el formato correcto. 
            </exception>
      <exception cref="T:System.OverflowException">
              
                <paramref name="s" /> representa un número menor que <see cref="F:System.UInt64.MinValue" /> o mayor que <see cref="F:System.UInt64.MaxValue" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
      <summary>
          Comprueba que el nombre es válido de acuerdo con la recomendación Extended Markup Language del Consorcio W3C.
        </summary>
      <returns>
          Nombre, si es un nombre XML válido.
        </returns>
      <param name="name">
              Nombre que se va a comprobar. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              
                <paramref name="name" /> no es un nombre XML válido. 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="name" /> es null o String.Empty. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
      <summary>
          Comprueba que el nombre es un nombre NCName válido de acuerdo con la recomendación Extended Markup Language del Consorcio W3C.
        </summary>
      <returns>
          Nombre, si es un nombre NCName válido.
        </returns>
      <param name="name">
              Nombre que se va a comprobar. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="name" /> es null o String.Empty. 
            </exception>
      <exception cref="T:System.Xml.XmlException">
              
                <paramref name="name" /> no es un NCName válido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
      <summary>
          Comprueba que la cadena es un NMTOKEN válido según la recomendación "Part2: Datatypes" (en inglés) del esquema XML del Consorcio W3C.
        </summary>
      <returns>
          Nombre del símbolo (token), si es un NMTOKEN.
        </returns>
      <param name="name">
              La cadena que desea verificar.
            </param>
      <exception cref="T:System.Xml.XmlException">
              La cadena no es un símbolo (token) de nombre válido.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="name" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
      <summary>
          Comprueba que la cadena es un símbolo (token) válido según la recomendación "Part2: Datatypes" (en inglés) del esquema XML del Consorcio W3C.
        </summary>
      <returns>
          El símbolo (token), si es un token válido.
        </returns>
      <param name="token">
              El valor de cadena que desea verificar.
            </param>
      <exception cref="T:System.Xml.XmlException">
              El valor de cadena no es un símbolo (token) válido.
            </exception>
    </member>
    <member name="T:System.Xml.XmlDateTimeSerializationMode">
      <summary>
          Especifica cómo tratar el valor de tiempo al realizar una conversión entre una cadena y <see cref="T:System.DateTime" />.
        </summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Local">
      <summary>
          Se trata como hora local. Si el objeto <see cref="T:System.DateTime" /> representa la hora universal coordinada (UTC), se convierte a la hora local.
        </summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Utc">
      <summary>
          Se trata como UTC. Si el objeto <see cref="T:System.DateTime" /> representa una hora local, se convierte en UTC.
        </summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Unspecified">
      <summary>
          Se trata como hora local si <see cref="T:System.DateTime" /> se convierte en cadena.
        </summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.RoundtripKind">
      <summary>
          La información de la zona horaria se debe conservar al realizar la conversión.
        </summary>
    </member>
    <member name="T:System.Xml.XmlDeclaration">
      <summary>
          Representa el nodo de declaración XML &lt;?xml version='1.0' ...?&gt;.
        </summary>
    </member>
    <member name="M:System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>
        </summary>
      <param name="version">
            </param>
      <param name="encoding">
            </param>
      <param name="standalone">
            </param>
      <param name="doc">
            </param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo.
        </summary>
      <returns>
          Nodo clonado.
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false sólo para clonar el nodo en sí. Dado que los nodos XmlDeclaration no tienen elementos secundarios, el nodo clonado incluye siempre el valor de los datos, con independencia del valor del parámetro. 
            </param>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Encoding">
      <summary>
          Obtiene o establece el nivel de codificación del documento XML.
        </summary>
      <returns>
          El nombre de codificación de caracteres válidos. Los nombres de codificación de caracteres que presentan mayor compatibilidad en documentos XML son los siguientes: 
          
            
              
                
                  Categoría 
                
                
                  Nombres de codificación 
                
              
            
            
              
                Unicode 
              
              
                UTF-8, UTF-16 
              
            
            
              
                ISO 10646 
              
              
                ISO-10646-UCS-2, ISO-10646-UCS-4 
              
            
            
              
                ISO 8859 
              
              
                ISO-8859-n (donde "n" es un dígito de 1 a 9) 
              
            
            
              
                JIS X-0208-1997 
              
              
                ISO-2022-JP, Shift_JIS, EUC-JP 
              
            
          
          Este valor es opcional. Si no se establece un valor, esta propiedad devuelve String.Empty.
          Si no se incluye un atributo de codificación, se supone la codificación UTF-8 cuando el documento se escribe o se guarda.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.InnerText">
      <summary>
          Obtiene o establece los valores concatenados de XmlDeclaration.
        </summary>
      <returns>
          Valores concatenados de XmlDeclaration (es decir, todos los que se encuentran entre &lt;?xml y ?&gt;).
        </returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.LocalName">
      <summary>
          Obtiene el nombre local del nodo.
        </summary>
      <returns>
          Para nodos XmlDeclaration, el nombre local es xml.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Name">
      <summary>
          Obtiene el nombre completo del nodo.
        </summary>
      <returns>
          En el caso de nodos XmlDeclaration, el nombre es xml.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          En el caso de nodos XmlDeclaration, este valor es XmlNodeType.XmlDeclaration.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Standalone">
      <summary>
          Obtiene o establece el valor del atributo independiente.
        </summary>
      <returns>
          Los valores válidos son yes si todas las declaraciones de entidad necesarias para el documento XML se encuentran en el documento o no si se necesita una definición de tipo de documento (DTD) externa. Si no existe un atributo independiente en la declaración XML, estas propiedad devuelve String.Empty.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Value">
      <summary>
          Obtiene o establece el valor de XmlDeclaration.
        </summary>
      <returns>
          Contenido de XmlDeclaration (es decir, lo que aparece entre &lt;?xml y ?&gt;).
        </returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Version">
      <summary>
          Obtiene la versión XML del documento.
        </summary>
      <returns>
          El valor es siempre 1.0.
        </returns>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Debido a que los nodos XmlDeclaration no tienen elementos secundarios, este método no tiene ningún efecto.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="T:System.Xml.XmlDocument">
      <summary>
          Representa un documento XML.
        </summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDocument" />.
        </summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)">
      <summary>
          Inicializa una nueva instancia de la clase XmlDocument con la enumeración <see cref="T:System.Xml.XmlImplementation" /> especificada.
        </summary>
      <param name="imp">
              XmlImplementation que se va a utilizar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)">
      <summary>
          Inicializa una nueva instancia de la clase XmlDocument con la enumeración <see cref="T:System.Xml.XmlNameTable" /> especificada.
        </summary>
      <param name="nt">
              XmlNameTable que se va a utilizar. 
            </param>
    </member>
    <member name="P:System.Xml.XmlDocument.BaseURI">
      <summary>
          Obtiene el URI base del nodo actual.
        </summary>
      <returns>
          Ubicación desde la que se cargó el nodo.
        </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo.
        </summary>
      <returns>
          Nodo XmlDocument que se clona.
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false sólo para clonar el nodo en sí. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String)">
      <summary>
          Crea un <see cref="T:System.Xml.XmlAttribute" /> con el <see cref="P:System.Xml.XmlDocument.Name" /> especificado.
        </summary>
      <returns>
          Nuevo objeto XmlAttribute.
        </returns>
      <param name="name">
              Nombre completo del atributo. Si el nombre contiene un carácter de dos puntos, la propiedad <see cref="P:System.Xml.XmlNode.Prefix" /> refleja la parte del nombre que va delante del carácter de dos puntos y la propiedad <see cref="P:System.Xml.XmlDocument.LocalName" /> refleja la parte que va detrás. El <see cref="P:System.Xml.XmlNode.NamespaceURI" /> queda vacío a menos que el prefijo sea un prefijo integrado conocido, como xmlns. En este caso, NamespaceURI tiene el valor http://www.w3.org/2000/xmlns/. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)">
      <summary>
          Crea un <see cref="T:System.Xml.XmlAttribute" /> con el nombre completo y el <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.
        </summary>
      <returns>
          Nuevo objeto XmlAttribute.
        </returns>
      <param name="qualifiedName">
              Nombre completo del atributo. Si el nombre contiene un carácter de dos puntos, la propiedad <see cref="P:System.Xml.XmlNode.Prefix" /> reflejará la parte del nombre que va delante del carácter de dos puntos y la propiedad <see cref="P:System.Xml.XmlDocument.LocalName" /> reflejará la parte que va detrás. 
            </param>
      <param name="namespaceURI">
              URI del espacio de nombres del atributo. Si el nombre completo incluye un prefijo de xmlns, este parámetro debe ser http://www.w3.org/2000/xmlns/. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary>
          Crea un <see cref="T:System.Xml.XmlAttribute" /> con los <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.
        </summary>
      <returns>
          Nuevo objeto XmlAttribute.
        </returns>
      <param name="prefix">
              Prefijo del atributo, si lo tiene. String.Empty y null son equivalentes. 
            </param>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI del espacio de nombres del atributo, si lo tiene. String.Empty y null son equivalentes. Si <paramref name="prefix" /> es xmlns, este parámetro debe ser http://www.w3.org/2000/xmlns/; en caso contrario, se produce una excepción. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateCDataSection(System.String)">
      <summary>
          Crea un objeto <see cref="T:System.Xml.XmlCDataSection" /> que contiene los datos especificados.
        </summary>
      <returns>
          Nuevo objeto XmlCDataSection.
        </returns>
      <param name="data">
              Contenido del nuevo objeto XmlCDataSection. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateComment(System.String)">
      <summary>
          Crea un objeto <see cref="T:System.Xml.XmlComment" /> que contiene los datos especificados.
        </summary>
      <returns>
          Nuevo objeto XmlComment.
        </returns>
      <param name="data">
              Contenido del nuevo objeto XmlComment. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)">
      <summary>
          Crea un atributo predeterminado con el prefijo, el nombre local y el identificador URI de espacio de nombres especificados.
        </summary>
      <returns>
          Nuevo objeto <see cref="T:System.Xml.XmlAttribute" />.
        </returns>
      <param name="prefix">
              Prefijo del atributo, si lo tiene. 
            </param>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del atributo, si lo tiene. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentFragment">
      <summary>
          Crea un objeto <see cref="T:System.Xml.XmlDocumentFragment" />.
        </summary>
      <returns>
          Nuevo objeto XmlDocumentFragment.
        </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
      <summary>
          Devuelve un nuevo objeto <see cref="T:System.Xml.XmlDocumentType" />.
        </summary>
      <returns>
          Nuevo objeto XmlDocumentType.
        </returns>
      <param name="name">
              Nombre del tipo de documento. 
            </param>
      <param name="publicId">
              Identificador público del tipo de documento o null. Puede especificar un URI público, así como un identificador de sistema para identificar la ubicación del subconjunto DTD externo.
            </param>
      <param name="systemId">
              Identificador de sistema del tipo de documento o null. Especifica la dirección URL de la ubicación del archivo para el subconjunto DTD externo.
            </param>
      <param name="internalSubset">
              Subconjunto interno de la DTD del tipo de documento o null. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String)">
      <summary>
          Crea un elemento con el nombre especificado.
        </summary>
      <returns>
          Nuevo objeto XmlElement.
        </returns>
      <param name="name">
              Nombre completo del elemento. Si el nombre contiene un carácter de dos puntos, la propiedad <see cref="P:System.Xml.XmlNode.Prefix" /> refleja la parte del nombre que va delante del carácter de dos puntos y la propiedad <see cref="P:System.Xml.XmlDocument.LocalName" /> refleja la parte que va detrás. El nombre completo no puede incluir un prefijo de 'xmlns'. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)">
      <summary>
          Crea un <see cref="T:System.Xml.XmlElement" /> con el nombre completo y el <see cref="P:System.Xml.XmlNode.NamespaceURI" />.
        </summary>
      <returns>
          Nuevo objeto XmlElement.
        </returns>
      <param name="qualifiedName">
              Nombre completo del elemento. Si el nombre contiene un carácter de dos puntos, la propiedad <see cref="P:System.Xml.XmlNode.Prefix" /> reflejará la parte del nombre que va delante del carácter de dos puntos y la propiedad <see cref="P:System.Xml.XmlDocument.LocalName" /> reflejará la parte que va detrás. El nombre completo no puede incluir un prefijo de 'xmlns'. 
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del elemento. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary>
          Crea un elemento con los valores <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.
        </summary>
      <returns>
          Nuevo objeto <see cref="T:System.Xml.XmlElement" />.
        </returns>
      <param name="prefix">
              Prefijo del nuevo elemento, si lo tiene. String.Empty y null son equivalentes. 
            </param>
      <param name="localName">
              Nombre local del nuevo elemento. 
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del nuevo elemento, si lo tiene. String.Empty y null son equivalentes. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateEntityReference(System.String)">
      <summary>
          Crea un objeto <see cref="T:System.Xml.XmlEntityReference" /> con el nombre especificado.
        </summary>
      <returns>
          Nuevo objeto XmlEntityReference.
        </returns>
      <param name="name">
              Nombre de la referencia a entidad. 
            </param>
      <exception cref="T:System.ArgumentException">
              El nombre no es válido (por ejemplo, no son válidos los nombres que empiezan con '#'). 
            </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator">
      <summary>
          Crea un nuevo objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para navegar por este documento.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>
          Crea un objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para navegar por este documento colocado en el nodo <see cref="T:System.Xml.XmlNode" /> especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
      <param name="node">
              <see cref="T:System.Xml.XmlNode" /> en el que se desea que el explorador se sitúe inicialmente. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)">
      <summary>
          Crea un <see cref="T:System.Xml.XmlNode" /> con el tipo de nodo, <see cref="P:System.Xml.XmlDocument.Name" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.
        </summary>
      <returns>
          Nuevo objeto XmlNode.
        </returns>
      <param name="nodeTypeString">
              Versión de cadena del <see cref="T:System.Xml.XmlNodeType" /> del nuevo nodo. Este parámetro debe ser uno de los valores de la tabla que figura más abajo. 
            </param>
      <param name="name">
              Nombre completo del nuevo nodo. Si el nombre contiene un carácter de dos puntos, se analiza en los componentes <see cref="P:System.Xml.XmlNode.Prefix" /> y <see cref="P:System.Xml.XmlDocument.LocalName" />. 
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del nuevo nodo. 
            </param>
      <exception cref="T:System.ArgumentException">
              No se ha proporcionado el nombre y XmlNodeType requiere un nombre, o <paramref name="nodeTypeString" /> no es una de las cadenas enumeradas más abajo. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)">
      <summary>
          Crea un <see cref="T:System.Xml.XmlNode" /> con los <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.
        </summary>
      <returns>
          Nuevo objeto XmlNode.
        </returns>
      <param name="type">
              XmlNodeType del nuevo nodo. 
            </param>
      <param name="name">
              Nombre completo del nuevo nodo. Si el nombre contiene un carácter de dos puntos, se analiza en los componentes <see cref="P:System.Xml.XmlNode.Prefix" /> y <see cref="P:System.Xml.XmlDocument.LocalName" />. 
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del nuevo nodo. 
            </param>
      <exception cref="T:System.ArgumentException">
              No se ha proporcionado el nombre y XmlNodeType requiere un nombre. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)">
      <summary>
          Crea un <see cref="T:System.Xml.XmlNode" /> con <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.
        </summary>
      <returns>
          Nuevo objeto XmlNode.
        </returns>
      <param name="type">
              XmlNodeType del nuevo nodo. 
            </param>
      <param name="prefix">
              Prefijo del nuevo nodo. 
            </param>
      <param name="name">
              Nombre local del nuevo nodo. 
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del nuevo nodo. 
            </param>
      <exception cref="T:System.ArgumentException">
              No se ha proporcionado el nombre y XmlNodeType requiere un nombre. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)">
      <summary>
          Crea un objeto <see cref="T:System.Xml.XmlProcessingInstruction" /> con el nombre y los datos especificados.
        </summary>
      <returns>
          Nuevo objeto XmlProcessingInstruction.
        </returns>
      <param name="target">
              Nombre de la instrucción de procesamiento. 
            </param>
      <param name="data">
              Datos para la instrucción de procesamiento. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)">
      <summary>
          Crea un nodo <see cref="T:System.Xml.XmlSignificantWhitespace" />.
        </summary>
      <returns>
          Nuevo nodo XmlSignificantWhitespace.
        </returns>
      <param name="text">
              La cadena debe contener sólo los caracteres siguientes: &amp;#20; &amp;#10; &amp;#13; y &amp;#9; 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateTextNode(System.String)">
      <summary>
          Crea un objeto <see cref="T:System.Xml.XmlText" /> con el texto especificado.
        </summary>
      <returns>
          Nuevo nodo XmlText.
        </returns>
      <param name="text">
              Texto del nodo Text. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateWhitespace(System.String)">
      <summary>
          Crea un nodo <see cref="T:System.Xml.XmlWhitespace" />.
        </summary>
      <returns>
          Nuevo nodo XmlWhitespace.
        </returns>
      <param name="text">
              La cadena debe contener sólo los caracteres siguientes: &amp;#20; &amp;#10; &amp;#13; y &amp;#9; 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
      <summary>
          Crea un nodo <see cref="T:System.Xml.XmlDeclaration" /> con los valores especificados.
        </summary>
      <returns>
          Nuevo nodo XmlDeclaration.
        </returns>
      <param name="version">
              La versión debe ser "1.0". 
            </param>
      <param name="encoding">
              Valor del atributo de codificación. Es la codificación que se utiliza cuando se guarda <see cref="T:System.Xml.XmlDocument" /> en un archivo o en una secuencia; por tanto, se debe establecer en una cadena admitida por la clase <see cref="T:System.Text.Encoding" /> pues, de lo contrario, <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> produce un error. Si es null o String.Empty, el método Save no escribe un atributo de codificación en la declaración XML y, por tanto, se utiliza la codificación predeterminada, UTF-8.
              Nota: si XmlDocument se guarda en <see cref="T:System.IO.TextWriter" /> o en <see cref="T:System.Xml.XmlTextWriter" />, se descartará este valor de codificación. En su lugar, se utiliza la codificación de TextWriter o de XmlTextWriter. De este modo se garantiza que el fragmento de XML que se escribe se puede volver a leer utilizando la codificación correcta. 
            </param>
      <param name="standalone">
              Este valor debe ser "yes" o "no". Si es null o String.Empty, el método Save no escribe un atributo independiente en la declaración XML. 
            </param>
      <exception cref="T:System.ArgumentException">
              Los valores de <paramref name="version" /> o <paramref name="standalone" /> son algo diferentes de los especificados más arriba. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentElement">
      <summary>
          Obtiene el <see cref="T:System.Xml.XmlElement" /> raíz del documento.
        </summary>
      <returns>
          XmlElement que representa la raíz del árbol del documento XML. Si no hay raíz, se devuelve null.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentType">
      <summary>
          Obtiene el nodo que contiene la declaración DOCTYPE.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> que contiene el DocumentType (declaración DOCTYPE).
        </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementById(System.String)">
      <summary>
          Obtiene el <see cref="T:System.Xml.XmlElement" /> con el identificador especificado.
        </summary>
      <returns>
          XmlElement con el identificador coincidente o null si no se encuentra un elemento coincidente.
        </returns>
      <param name="elementId">
              Identificador de atributo con el que debe haber una coincidencia. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)">
      <summary>
          Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlDocument.Name" /> especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes. Si ningún nodo coincide con <paramref name="name" />, se devolverá la colección vacía.
        </returns>
      <param name="name">
              Nombre completo que se va a hacer coincidir. Se compara con la propiedad Name del nodo coincidente. El valor especial "*" coincide con todas las etiquetas. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)">
      <summary>
          Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlDocument.LocalName" /> y el <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes. Si ningún nodo coincide con el <paramref name="localName" /> y <paramref name="namespaceURI" /> especificados, se devolverá la colección vacía.
        </returns>
      <param name="localName">
              Nombre local que se va a hacer coincidir. El valor especial "*" coincide con todas las etiquetas. 
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres que se va a hacer coincidir. 
            </param>
    </member>
    <member name="P:System.Xml.XmlDocument.Implementation">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.XmlImplementation" /> del documento actual.
        </summary>
      <returns>
          Objeto XmlImplementation del documento actual.
        </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
      <summary>
          Importa un nodo de otro documento al documento actual.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> importado.
        </returns>
      <param name="node">
              Nodo que se va a importar. 
            </param>
      <param name="deep">
              
                Es true para producir un clon profundo; en caso contrario, es false. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Llamar a este método en un tipo de nodo que no se puede importar. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerXml">
      <summary>
          Obtiene o establece el marcado que representa los nodos secundarios del nodo actual.
        </summary>
      <returns>
          Marcado de los nodos secundarios del nodo actual.
        </returns>
      <exception cref="T:System.Xml.XmlException">
              El código XML especificado al establecer esta propiedad no tiene un formato correcto. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlDocument.IsReadOnly">
      <summary>
          Obtiene un valor que indica si el nodo actual es de sólo lectura.
        </summary>
      <returns>
          
            Es true si el nodo actual es de sólo lectura; en caso contrario, es false. Los nodos XmlDocument siempre devuelven false.
        </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.Stream)">
      <summary>
          Carga el documento XML desde la secuencia especificada.
        </summary>
      <param name="inStream">
              Secuencia que contiene el documento XML que se va a cargar. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              Se ha producido un error de carga o de análisis en el documento XML. En este caso, el documento se queda vacío. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.TextReader)">
      <summary>
          Carga el documento XML desde el <see cref="T:System.IO.TextReader" /> especificado.
        </summary>
      <param name="txtReader">
              TextReader que se utiliza para introducir los datos XML en el documento. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              Se ha producido un error de carga o de análisis en el documento XML. En este caso, el documento se queda vacío. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.String)">
      <summary>
          Carga el documento XML desde la dirección URL especificada.
        </summary>
      <param name="filename">
              Dirección URL del archivo que contiene el documento XML que se va a cargar. La dirección URL puede ser un archivo local o una dirección HTTP URL (una dirección web).
            </param>
      <exception cref="T:System.Xml.XmlException">
              Se ha producido un error de carga o de análisis en el documento XML. En este caso, el documento se queda vacío. 
            </exception>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="filename" /> es una cadena de longitud cero, contiene sólo espacios en blanco o contiene uno o varios caracteres no válidos de los que se definen en <see cref="F:System.IO.Path.InvalidPathChars" />. 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="filename" /> es null. 
            </exception>
      <exception cref="T:System.IO.PathTooLongException">
              La ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema. Por ejemplo, en las plataformas basadas en Windows, las rutas de acceso deben ser inferiores a 248 caracteres y los nombres de archivo deben ser inferiores a 260 caracteres. 
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
              La ruta de acceso especificada no es válida (por ejemplo, se encuentra en una unidad no asignada). 
            </exception>
      <exception cref="T:System.IO.IOException">
              Se ha producido un error de E/S al abrir el archivo. 
            </exception>
      <exception cref="T:System.UnauthorizedAccessException">
              
                <paramref name="filename" /> especificó un archivo que es de sólo lectura.
              O bien 
              Esta operación no es compatible con la plataforma actual.
              O bien 
              
                <paramref name="filename" /> especificó un directorio.
              O bien 
              El llamador no dispone del permiso requerido. 
            </exception>
      <exception cref="T:System.IO.FileNotFoundException">
              No se encuentra el archivo especificado en <paramref name="filename" />. 
            </exception>
      <exception cref="T:System.NotSupportedException">
              
                <paramref name="filename" /> tiene un formato no válido. 
            </exception>
      <exception cref="T:System.Security.SecurityException">
              El llamador no dispone del permiso requerido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)">
      <summary>
          Carga el documento XML desde el <see cref="T:System.Xml.XmlReader" /> especificado.
        </summary>
      <param name="reader">
              XmlReader que se utiliza para introducir los datos XML en el documento. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              Se ha producido un error de carga o de análisis en el documento XML. En este caso, el documento se queda vacío. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.LoadXml(System.String)">
      <summary>
          Carga el documento XML desde la cadena especificada.
        </summary>
      <param name="xml">
              Cadena que contiene el documento XML que se va a cargar. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              Se ha producido un error de carga o de análisis en el documento XML. En este caso, el documento se queda vacío. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlDocument.LocalName">
      <summary>
          Obtiene el nombre local del nodo.
        </summary>
      <returns>
          Para nodos XmlDocument, el nombre local es #document.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Name">
      <summary>
          Obtiene el nombre completo del nodo.
        </summary>
      <returns>
          Para nodos XmlDocument, el nombre es #document.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocument.NameTable">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> asociado a esta implementación.
        </summary>
      <returns>
          XmlNameTable que permite obtener la versión subdivida de una cadena en el documento.
        </returns>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanged">
      <summary>
          Se produce cuando el <see cref="P:System.Xml.XmlNode.Value" /> de un nodo que pertenece a este documento se ha modificado.
        </summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanging">
      <summary>
          Se produce cuando el <see cref="P:System.Xml.XmlNode.Value" /> de un nodo que pertenece a este documento se va a modificar.
        </summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserted">
      <summary>
          Se produce cuando un nodo que pertenece a este documento se ha insertado en otro nodo.
        </summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserting">
      <summary>
          Se produce cuando un nodo que pertenece a este documento se va a insertar en otro nodo.
        </summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoved">
      <summary>
          Se produce cuando un nodo que pertenece a este documento se ha quitado de su nodo primario.
        </summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoving">
      <summary>
          Se produce cuando un nodo que pertenece a este documento se va a quitar del documento.
        </summary>
    </member>
    <member name="P:System.Xml.XmlDocument.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Tipo de nodo. Para nodos XmlDocument, este valor es XmlNodeType.Document.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocument.OwnerDocument">
      <summary>
          Obtiene el <see cref="T:System.Xml.XmlDocument" /> al que pertenece el nodo actual.
        </summary>
      <returns>
          Para nodos XmlDocument (<see cref="P:System.Xml.XmlDocument.NodeType" /> equivale a XmlNodeType.Document), esta propiedad devuelve siempre null.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocument.ParentNode">
      <summary>
          Obtiene el nodo primario de este nodo, en los nodos que pueden tener nodos primarios.
        </summary>
      <returns>
          Siempre devuelve null.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocument.PreserveWhitespace">
      <summary>
          Obtiene o establece un valor que indica si se va a conservar el espacio en blanco del contenido del elemento.
        </summary>
      <returns>
          
            Es true para conservar el espacio en blanco; en caso contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)">
      <summary>
          Crea un objeto <see cref="T:System.Xml.XmlNode" /> tomando como base la información de <see cref="T:System.Xml.XmlReader" />. El lector debe estar situado en un nodo o en un atributo.
        </summary>
      <returns>
          Nuevo XmlNode o null si no hay más nodos.
        </returns>
      <param name="reader">
              XML de origen. 
            </param>
      <exception cref="T:System.NullReferenceException">
              El lector está situado en un tipo de nodo que no se convierte en un nodo DOM válido (por ejemplo, EndElement o EndEntity). 
            </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.Stream)">
      <summary>
          Guarda el documento XML en la secuencia especificada.
        </summary>
      <param name="outStream">
              Secuencia en la que se desea guardar. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              La operación no produciría un documento XML con formato correcto (por ejemplo, faltarían el elemento de documento o las declaraciones XML duplicadas). 
            </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)">
      <summary>
          Guarda el documento XML en el <see cref="T:System.IO.TextWriter" /> especificado.
        </summary>
      <param name="writer">
              TextWriter en el que se desea guardar. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              La operación no produciría un documento XML con formato correcto (por ejemplo, faltarían el elemento de documento o las declaraciones XML duplicadas). 
            </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.String)">
      <summary>
          Guarda el documento XML en el archivo especificado.
        </summary>
      <param name="filename">
              Ubicación del archivo donde se desea guardar el documento. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              La operación no produciría un documento XML con formato correcto (por ejemplo, faltarían el elemento de documento o las declaraciones XML duplicadas). 
            </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)">
      <summary>
          Guarda el documento XML en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              La operación no produciría un documento XML con formato correcto (por ejemplo, faltarían el elemento de documento o las declaraciones XML duplicadas). 
            </exception>
    </member>
    <member name="P:System.Xml.XmlDocument.SchemaInfo">
      <summary>
          Devuelve el conjunto de información posterior a la validación del esquema (PSVI, Post-Schema-Validation-Infoset) del nodo.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que representa el PSVI del nodo.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Schemas">
      <summary>
          Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> asociado con este objeto <see cref="T:System.Xml.XmlDocument" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas XSD (lenguaje de definición de esquemas XML) asociado a <see cref="T:System.Xml.XmlDocument" />, o bien un objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vacío.
        </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)">
      <summary>
          Valida el objeto <see cref="T:System.Xml.XmlDocument" /> según los esquemas del lenguaje de definición de esquemas XML (XSD) de la propiedad <see cref="P:System.Xml.XmlDocument.Schemas" />.
        </summary>
      <param name="validationEventHandler">
              El objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recibe información sobre los errores y advertencias de validación de esquemas.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              Se ha producido un evento de validación de esquemas y no se ha especificado ningún objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" />.
            </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)">
      <summary>
          Valida el objeto <see cref="T:System.Xml.XmlNode" /> especificado según los esquemas del lenguaje de definición de esquemas XML (XSD) de la propiedad <see cref="P:System.Xml.XmlDocument.Schemas" />.
        </summary>
      <param name="validationEventHandler">
              El objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recibe información sobre los errores y advertencias de validación de esquemas.
            </param>
      <param name="nodeToValidate">
              El objeto <see cref="T:System.Xml.XmlNode" /> creado a partir de un <see cref="T:System.Xml.XmlDocument" /> que se va a validar.
            </param>
      <exception cref="T:System.ArgumentException">
              El parámetro del objeto <see cref="T:System.Xml.XmlNode" /> no se creó a partir de ningún objeto <see cref="T:System.Xml.XmlDocument" />.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El parámetro del objeto <see cref="T:System.Xml.XmlNode" /> no es ningún elemento, atributo, fragmento de documento ni el nodo raíz.
            </exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              Se ha producido un evento de validación del esquema y no se ha especificado ningún objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" />.
            </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda todos los nodos secundarios del nodo XmlDocument en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="xw">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo XmlDocument en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="P:System.Xml.XmlDocument.XmlResolver">
      <summary>
          Establece el objeto <see cref="T:System.Xml.XmlResolver" /> para utilizarlo en la resolución de recursos externos.
        </summary>
      <returns>
          XmlResolver que se va a utilizar.
          En la versión 1.1 de .NET Framework, el llamador debe ser de confianza para especificar un XmlResolver.
        </returns>
      <exception cref="T:System.Xml.XmlException">
              Esta propiedad se establece en null si se encuentra una DTD o una entidad externas. 
            </exception>
    </member>
    <member name="T:System.Xml.XmlDocumentFragment">
      <summary>
          Representa un objeto pequeño tamaño, que resulta útil para realizar operaciones de inserción de árboles.
        </summary>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)">
      <summary>
        </summary>
      <param name="ownerDocument">
            </param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo.
        </summary>
      <returns>
          Nodo clonado.
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false sólo para clonar el nodo en sí. 
            </param>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.InnerXml">
      <summary>
          Obtiene o establece el marcado que representa los nodos secundarios de este nodo.
        </summary>
      <returns>
          Marcado de los nodos secundarios de este nodo.
        </returns>
      <exception cref="T:System.Xml.XmlException">
              El código XML especificado al establecer esta propiedad no tiene un formato correcto. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.LocalName">
      <summary>
          Obtiene el nombre local del nodo.
        </summary>
      <returns>
          Para nodos XmlDocumentFragment, el nombre local es #document-fragment.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.Name">
      <summary>
          Obtiene el nombre completo del nodo.
        </summary>
      <returns>
          Para XmlDocumentFragment, el nombre es #document-fragment.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Para nodos XmlDocumentFragment, este valor es XmlNodeType.DocumentFragment.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.OwnerDocument">
      <summary>
          Obtiene el <see cref="T:System.Xml.XmlDocument" /> al que pertenece este nodo.
        </summary>
      <returns>
          XmlDocument al que pertenece este nodo.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.ParentNode">
      <summary>
          Obtiene el nodo primario de este nodo (para nodos que pueden tener nodos primarios).
        </summary>
      <returns>
          Elemento principal de este nodo.
          Para nodos XmlDocumentFragment, esta propiedad siempre es null.
        </returns>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="T:System.Xml.XmlDocumentType">
      <summary>
          Representa la declaración de tipo de documento.
        </summary>
    </member>
    <member name="M:System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>
        </summary>
      <param name="name">
            </param>
      <param name="publicId">
            </param>
      <param name="systemId">
            </param>
      <param name="internalSubset">
            </param>
      <param name="doc">
            </param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo.
        </summary>
      <returns>
          Nodo clonado.
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false sólo para clonar el nodo en sí. Para los nodos de tipo de documento, el nodo clonado incluye siempre el subárbol, independientemente del valor del parámetro. 
            </param>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Entities">
      <summary>
          Obtiene la colección de nodos <see cref="T:System.Xml.XmlEntity" /> declarada en la declaración de tipo de documento.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNamedNodeMap" /> que contiene los nodos XmlEntity. El objeto XmlNamedNodeMap devuelto es de sólo lectura.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.InternalSubset">
      <summary>
          Obtiene el valor del subconjunto interno de DTD (definición de tipo de documento) de la declaración DOCTYPE.
        </summary>
      <returns>
          Subconjunto interno de la DTD en la declaración DOCTYPE. Si no hay subconjunto interno de la DTD, se devuelve String.Empty.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.IsReadOnly">
      <summary>
          Obtiene un valor que indica si el nodo es de sólo lectura.
        </summary>
      <returns>
          
            Es true si el nodo es de sólo lectura; en caso contrario, es false.
          Como los nodos DocumentType son de sólo lectura, esta propiedad siempre devuelve true.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.LocalName">
      <summary>
          Obtiene el nombre local del nodo.
        </summary>
      <returns>
          Para nodos DocumentType, esta propiedad devuelve el nombre del tipo de documento.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Name">
      <summary>
          Obtiene el nombre completo del nodo.
        </summary>
      <returns>
          Para nodos DocumentType, esta propiedad devuelve el nombre del tipo de documento.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Para nodos DocumentType, este valor es XmlNodeType.DocumentType.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Notations">
      <summary>
          Obtiene la colección de nodos <see cref="T:System.Xml.XmlNotation" /> que está en la declaración de tipo de documento.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNamedNodeMap" /> que contiene los nodos XmlNotation. El objeto XmlNamedNodeMap devuelto es de sólo lectura.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.PublicId">
      <summary>
          Obtiene el valor del identificador público de la declaración DOCTYPE.
        </summary>
      <returns>
          Identificador público de la declaración DOCTYPE. Si no hay un identificador público, se devuelve String.Empty.
        </returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.SystemId">
      <summary>
          Obtiene el valor del identificador de sistema de la declaración DOCTYPE.
        </summary>
      <returns>
          Identificador del sistema de la declaración DOCTYPE. Si no hay un identificador del sistema, se devuelve String.Empty.
        </returns>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Para nodos XmlDocumentType, este método no surte ningún efecto.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="T:System.Xml.XmlElement">
      <summary>
          Representa un elemento.
        </summary>
    </member>
    <member name="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>
        </summary>
      <param name="prefix">
            </param>
      <param name="localName">
            </param>
      <param name="namespaceURI">
            </param>
      <param name="doc">
            </param>
    </member>
    <member name="P:System.Xml.XmlElement.Attributes">
      <summary>
          Obtiene un objeto <see cref="T:System.Xml.XmlAttributeCollection" /> que contiene la lista de atributos de este nodo.
        </summary>
      <returns>
          
            <see cref="T:System.Xml.XmlAttributeCollection" /> que contiene la lista de atributos de este nodo.
        </returns>
    </member>
    <member name="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo.
        </summary>
      <returns>
          Nodo clonado.
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado; es false para clonar sólo el nodo en sí (y sus atributos si el nodo es un XmlElement). 
            </param>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String)">
      <summary>
          Devuelve el valor del atributo con el nombre especificado.
        </summary>
      <returns>
          Valor del atributo especificado. Se devuelve una cadena vacía si no se encuentra un atributo coincidente o si el atributo no tiene un valor especificado o un valor predeterminado.
        </returns>
      <param name="name">
              Nombre del atributo que se va a recuperar. Es un nombre completo. Se compara con la propiedad Name del nodo coincidente. 
            </param>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
      <summary>
          Devuelve el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.
        </summary>
      <returns>
          Valor del atributo especificado. Se devuelve una cadena vacía si no se encuentra un atributo coincidente o si el atributo no tiene un valor especificado o un valor predeterminado.
        </returns>
      <param name="localName">
              Nombre local del atributo que se va a recuperar. 
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del atributo que se va a recuperar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
      <summary>
          Devuelve el XmlAttribute con el nombre especificado.
        </summary>
      <returns>
          XmlAttribute especificado o null si no se ha encontrado un atributo coincidente.
        </returns>
      <param name="name">
              Nombre del atributo que se va a recuperar. Es un nombre completo. Se compara con la propiedad Name del nodo coincidente. 
            </param>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
      <summary>
          Devuelve el <see cref="T:System.Xml.XmlAttribute" /> con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.
        </summary>
      <returns>
          XmlAttribute especificado o null si no se ha encontrado un atributo coincidente.
        </returns>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
      <summary>
          Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlElement.Name" /> especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes.
        </returns>
      <param name="name">
              Etiqueta de nombre que se va a hacer coincidir. Es un nombre completo. Se compara con la propiedad Name del nodo coincidente. El asterisco (*) es un valor especial que coincide con todas las etiquetas. 
            </param>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
      <summary>
          Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlElement.LocalName" /> y el <see cref="P:System.Xml.XmlElement.NamespaceURI" /> especificados.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes.
        </returns>
      <param name="localName">
              Nombre local que se va a hacer coincidir. El asterisco (*) es un valor especial que coincide con todas las etiquetas. 
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres que se va a hacer coincidir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String)">
      <summary>
          Determina si el nodo actual tiene un atributo con el nombre especificado.
        </summary>
      <returns>
          
            Es true si el nodo actual tiene el atributo especificado; en caso contrario, es false.
        </returns>
      <param name="name">
              Nombre del atributo que se va a buscar. Es un nombre completo. Se compara con la propiedad Name del nodo coincidente. 
            </param>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
      <summary>
          Determina si el nodo actual tiene un atributo con el nombre local y el identificador URI de espacio de nombres especificados.
        </summary>
      <returns>
          
            Es true si el nodo actual tiene el atributo especificado; en caso contrario, es false.
        </returns>
      <param name="localName">
              Nombre local del atributo que se va a buscar. 
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del atributo que se va a buscar. 
            </param>
    </member>
    <member name="P:System.Xml.XmlElement.HasAttributes">
      <summary>
          Obtiene un valor boolean que indica si el nodo actual tiene atributos.
        </summary>
      <returns>
          
            Es true si el nodo actual tiene atributos; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerText">
      <summary>
          Obtiene o establece los valores concatenados del nodo y de todos sus nodos secundarios.
        </summary>
      <returns>
          Valores concatenados del nodo y de todos sus nodos secundarios.
        </returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerXml">
      <summary>
          Obtiene o establece el marcado que representa sólo los nodos secundarios de este nodo.
        </summary>
      <returns>
          Marcado de los nodos secundarios de este nodo.
        </returns>
      <exception cref="T:System.Xml.XmlException">
              El código XML especificado al establecer esta propiedad no tiene un formato correcto. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlElement.IsEmpty">
      <summary>
          Obtiene o establece el formato de etiqueta del elemento.
        </summary>
      <returns>
          Devuelve true si el elemento se va a serializar en el formato corto de etiqueta, "&lt;item/&gt;"; false para el formato largo, "&lt;item&gt;&lt;/item&gt;".
          Cuando se configura esta propiedad, si se establece en true, se quitan los elementos secundarios del elemento y el elemento se serializa en el formato corto de etiqueta. Si se establece en false, se cambia el valor de la propiedad (independientemente de que el elemento tenga o no contenido); si el elemento está vacío, se serializa en el formato largo.
          Esta propiedad es una extensión de Microsoft a Document Object Model (DOM).
        </returns>
    </member>
    <member name="P:System.Xml.XmlElement.LocalName">
      <summary>
          Obtiene el nombre local del nodo actual.
        </summary>
      <returns>
          Nombre del nodo actual sin prefijo. Por ejemplo, LocalName es "book" para el elemento &lt;bk:book&gt;.
        </returns>
    </member>
    <member name="P:System.Xml.XmlElement.Name">
      <summary>
          Obtiene el nombre completo del nodo.
        </summary>
      <returns>
          Nombre completo del nodo. Para nodos XmlElement, éste es el nombre de etiqueta del elemento.
        </returns>
    </member>
    <member name="P:System.Xml.XmlElement.NamespaceURI">
      <summary>
          Obtiene el identificador URI de espacio de nombres de este nodo.
        </summary>
      <returns>
          Identificador URI de espacio de nombres de este nodo. Si no hay identificador URI de espacio de nombres, esta propiedad devuelve String.Empty.
        </returns>
    </member>
    <member name="P:System.Xml.XmlElement.NextSibling">
      <summary>
          Obtiene el <see cref="T:System.Xml.XmlNode" /> inmediatamente siguiente a este elemento.
        </summary>
      <returns>
          XmlNode inmediatamente siguiente a este elemento.
        </returns>
    </member>
    <member name="P:System.Xml.XmlElement.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Tipo de nodo. Para nodos XmlElement, este valor es XmlNodeType.Element.
        </returns>
    </member>
    <member name="P:System.Xml.XmlElement.OwnerDocument">
      <summary>
          Obtiene el <see cref="T:System.Xml.XmlDocument" /> al que pertenece este nodo.
        </summary>
      <returns>
          XmlDocument al que pertenece este elemento.
        </returns>
    </member>
    <member name="P:System.Xml.XmlElement.ParentNode">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:System.Xml.XmlElement.Prefix">
      <summary>
          Obtiene o establece el prefijo de espacio de nombres de este nodo.
        </summary>
      <returns>
          Prefijo de espacio de nombres de este nodo. Si no hay prefijo, esta propiedad devuelve String.Empty.
        </returns>
      <exception cref="T:System.ArgumentException">
              Este nodo es de sólo lectura. 
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El prefijo especificado contiene un carácter no válido.
              El prefijo especificado no está formado correctamente.
              El identificador URI de espacio de nombres de este nodo es null.
              El prefijo especificado es "xml" y el identificador URI de espacio de nombres de este nodo no es http://www.w3.org/XML/1998/namespace. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAll">
      <summary>
          Quita todos los atributos y nodos secundarios especificados del nodo actual. Los atributos predeterminados no se quitan.
        </summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAllAttributes">
      <summary>
          Quita todos los atributos especificados del elemento. Los atributos predeterminados no se quitan.
        </summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
      <summary>
          Quita un atributo por el nombre.
        </summary>
      <param name="name">
              Nombre del atributo que se va a quitar. Es un nombre completo. Se compara con la propiedad Name del nodo coincidente. 
            </param>
      <exception cref="T:System.ArgumentException">
              El nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
      <summary>
          Quita un atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado. (Si el atributo eliminado tiene un valor predeterminado, se reemplaza inmediatamente).
        </summary>
      <param name="localName">
              Nombre local del atributo que se va a quitar. 
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del atributo que se va a quitar. 
            </param>
      <exception cref="T:System.ArgumentException">
              El nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
      <summary>
          Quita del elemento el nodo de atributo con el índice especificado. (Si el atributo eliminado tiene un valor predeterminado, se reemplaza inmediatamente).
        </summary>
      <returns>
          Nodo de atributo que se quita o null si no hay un nodo en el índice especificado.
        </returns>
      <param name="i">
              Índice del nodo que se va a quitar. El primer nodo tiene índice 0. 
            </param>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
      <summary>
          Quita el <see cref="T:System.Xml.XmlAttribute" /> especificado mediante el nombre local y el identificador URI de espacio de nombres. (Si el atributo eliminado tiene un valor predeterminado, se reemplaza inmediatamente).
        </summary>
      <returns>
          XmlAttribute que se ha quitado o null si XmlElement no tiene un nodo de atributo coincidente.
        </returns>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo. 
            </param>
      <exception cref="T:System.ArgumentException">
              Este nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
      <summary>
          Quita el objeto <see cref="T:System.Xml.XmlAttribute" /> especificado.
        </summary>
      <returns>
          XmlAttribute que se ha quitado o null si <paramref name="oldAttr" /> no es un nodo de atributo de XmlElement.
        </returns>
      <param name="oldAttr">
              Nodo XmlAttribute que se va a quitar. Si el atributo que se quita tiene un valor predeterminado, se reemplaza inmediatamente. 
            </param>
      <exception cref="T:System.ArgumentException">
              Este nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlElement.SchemaInfo">
      <summary>
          Obtiene el conjunto de información posterior a la validación del esquema que se ha asignado a este nodo como resultado de dicha validación.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene el conjunto de información posterior a la validación del esquema de este nodo.
        </returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
      <summary>
          Establece el valor del atributo con el nombre especificado.
        </summary>
      <param name="name">
              Nombre del atributo que se va a crear o modificar. Es un nombre completo. Si el nombre contiene un carácter de dos puntos, se analiza en los componentes de prefijo y nombre local. 
            </param>
      <param name="value">
              Valor en que se va a establecer el atributo. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              El nombre especificado contiene un carácter no válido. 
            </exception>
      <exception cref="T:System.ArgumentException">
              El nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
      <summary>
          Establece el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.
        </summary>
      <returns>
          Valor del atributo.
        </returns>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo. 
            </param>
      <param name="value">
              Valor en que se va a establecer el atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
      <summary>
          Agrega el <see cref="T:System.Xml.XmlAttribute" /> especificado.
        </summary>
      <returns>
          XmlAttribute que se va a agregar.
        </returns>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
      <summary>
          Agrega el <see cref="T:System.Xml.XmlAttribute" /> especificado.
        </summary>
      <returns>
          Si el atributo reemplaza a un atributo existente del mismo nombre, se devolverá el XmlAttribute antiguo; en caso contrario, se devolverá null.
        </returns>
      <param name="newAttr">
              Nodo XmlAttribute que se va a agregar a la colección de atributos de este elemento. 
            </param>
      <exception cref="T:System.ArgumentException">
              <paramref name="newAttr" /> se creó a partir de un documento diferente del que creó este nodo. O este nodo es de sólo lectura. 
            </exception>
      <exception cref="T:System.InvalidOperationException">
              <paramref name="newAttr" /> ya es un atributo de otro objeto XmlElement. Los nodos XmlAttribute se deben clonar explícitamente para volver a utilizarlos en otros objetos XmlElement. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo actual en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="T:System.Xml.XmlEntity">
      <summary>
          Representa una declaración de entidad, como &lt;!ENTITY... &gt;.
        </summary>
    </member>
    <member name="P:System.Xml.XmlEntity.BaseURI">
      <summary>
          Obtiene el Identificador de recursos uniforme (URI) del modo actual.
        </summary>
      <returns>
          Ubicación desde la que se cargó el nodo.
        </returns>
    </member>
    <member name="M:System.Xml.XmlEntity.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo. Los nodos de entidad no se pueden clonar. Si se llama a este método en un objeto <see cref="T:System.Xml.XmlEntity" />, se produce una excepción.
        </summary>
      <returns>
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false sólo para clonar el nodo en sí.
            </param>
      <exception cref="T:System.InvalidOperationException">
              Los nodos de entidad no se pueden clonar. Si se llama a este método en un objeto <see cref="T:System.Xml.XmlEntity" />, se produce una excepción.
            </exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerText">
      <summary>
          Obtiene valores concatenados del nodo de la entidad y de todos su nodos secundarios.
        </summary>
      <returns>
          Valores concatenados del nodo y de todos sus nodos secundarios.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              Se intentó establecer la propiedad. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerXml">
      <summary>
          Obtiene el marcado que representa los nodos secundarios de este nodo.
        </summary>
      <returns>
          Para nodos XmlEntity, se devuelve String.Empty.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              Se intentó establecer la propiedad. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlEntity.IsReadOnly">
      <summary>
          Obtiene un valor que indica si el nodo es de sólo lectura.
        </summary>
      <returns>
          
            Es true si el nodo es de sólo lectura; en caso contrario, es false.
          Dado que los nodos XmlEntity son de sólo lectura, esta propiedad siempre devuelve true.
        </returns>
    </member>
    <member name="P:System.Xml.XmlEntity.LocalName">
      <summary>
          Obtiene el nombre del nodo sin el prefijo de espacio de nombres.
        </summary>
      <returns>
          Para nodos XmlEntity, esta propiedad devuelve el nombre de la entidad.
        </returns>
    </member>
    <member name="P:System.Xml.XmlEntity.Name">
      <summary>
          Obtiene el nombre del nodo.
        </summary>
      <returns>
          Nombre de la entidad.
        </returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NodeType">
      <summary>
          Obtiene el tipo del nodo.
        </summary>
      <returns>
          Tipo de nodo. Para nodos XmlEntity, el valor es XmlNodeType.Entity.
        </returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NotationName">
      <summary>
          Obtiene el nombre del atributo opcional NDATA en la declaración de la entidad.
        </summary>
      <returns>
          Nombre del atributo NDATA. Si no hay un atributo NDATA, se devuelve null.
        </returns>
    </member>
    <member name="P:System.Xml.XmlEntity.OuterXml">
      <summary>
          Obtiene el marcado que representa este nodo y todos sus nodos secundarios.
        </summary>
      <returns>
          Para nodos XmlEntity, se devuelve String.Empty.
        </returns>
    </member>
    <member name="P:System.Xml.XmlEntity.PublicId">
      <summary>
          Obtiene el valor del identificador público de la declaración de entidad.
        </summary>
      <returns>
          Identificador público de la entidad. Si no hay un identificador público, se devuelve null.
        </returns>
    </member>
    <member name="P:System.Xml.XmlEntity.SystemId">
      <summary>
          Obtiene el valor del identificador de sistema de la declaración de entidad.
        </summary>
      <returns>
          Identificador de sistema de la entidad. Si no hay un identificador del sistema, se devuelve null.
        </returns>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Para nodos XmlEntity, este método no surte ningún efecto.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Para nodos XmlEntity, este método no surte ningún efecto.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="T:System.Xml.XmlEntityReference">
      <summary>
          Representa un nodo de referencia a entidad.
        </summary>
    </member>
    <member name="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>
        </summary>
      <param name="name">
            </param>
      <param name="doc">
            </param>
    </member>
    <member name="P:System.Xml.XmlEntityReference.BaseURI">
      <summary>
          Obtiene el Identificador de recursos uniforme (URI) del nodo actual.
        </summary>
      <returns>
          Ubicación desde la que se cargó el nodo.
        </returns>
    </member>
    <member name="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo.
        </summary>
      <returns>
          Nodo clonado.
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false sólo para clonar el nodo en sí. Para nodos XmlEntityReference, este método devuelve siempre un nodo de referencia a entidad sin nodos secundarios. El texto de reemplazo se establece al insertar el nodo en otro primario. 
            </param>
    </member>
    <member name="P:System.Xml.XmlEntityReference.IsReadOnly">
      <summary>
          Obtiene un valor que indica si el nodo es de sólo lectura.
        </summary>
      <returns>
          
            Es true si el nodo es de sólo lectura; en caso contrario, es false.
          Como los nodos XmlEntityReference son de sólo lectura, esta propiedad siempre devuelve true.
        </returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.LocalName">
      <summary>
          Obtiene el nombre local del nodo.
        </summary>
      <returns>
          Para nodos XmlEntityReference, esta propiedad devuelve el nombre de la entidad a la que se hace referencia.
        </returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Name">
      <summary>
          Obtiene el nombre del nodo.
        </summary>
      <returns>
          Nombre de la entidad a la que se hace referencia.
        </returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.NodeType">
      <summary>
          Obtiene el tipo del nodo.
        </summary>
      <returns>
          Tipo de nodo. Para nodos XmlEntityReference, el valor es XmlNodeType.EntityReference.
        </returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Value">
      <summary>
          Obtiene o establece el valor del nodo.
        </summary>
      <returns>
          Valor del nodo. Para nodos XmlEntityReference, esta propiedad devuelve null.
        </returns>
      <exception cref="T:System.ArgumentException">
              El nodo es de sólo lectura. 
            </exception>
      <exception cref="T:System.InvalidOperationException">
              Establecer la propiedad. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="T:System.Xml.XmlException">
      <summary>
          Devuelve información detallada sobre la última excepción.
        </summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase XmlException.
        </summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase XmlException utilizando la información de los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.
        </summary>
      <param name="info">
              Objeto SerializationInfo que contiene todas las propiedades de una XmlException. 
            </param>
      <param name="context">
              Objeto StreamingContext que contiene la información de contexto. 
            </param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase XmlException con el mensaje de error especificado.
        </summary>
      <param name="message">
              Descripción de error. 
            </param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception)">
      <summary>
          Inicializa una nueva instancia de la clase XmlException.
        </summary>
      <param name="message">
              Descripción de la condición de error. 
            </param>
      <param name="innerException">
              <see cref="T:System.Exception" /> que inició XmlException, en caso de que exista. Este valor puede ser null. 
            </param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>
          Inicializa una nueva instancia de la clase XmlException con el mensaje, la excepción interna, el número de línea y la posición de línea especificados.
        </summary>
      <param name="message">
              Descripción de error. 
            </param>
      <param name="innerException">
              Excepción que es la causa de la excepción actual. Este valor puede ser null. 
            </param>
      <param name="lineNumber">
              Número de línea que indica dónde se produjo el error. 
            </param>
      <param name="linePosition">
              Posición de línea que indica dónde se produjo el error. 
            </param>
    </member>
    <member name="M:System.Xml.XmlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Transmite todas las propiedades XmlException a la clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> para el <see cref="T:System.Runtime.Serialization.StreamingContext" /> dado.
        </summary>
      <param name="info">
              Objeto SerializationInfo. 
            </param>
      <param name="context">
              Objeto StreamingContext. 
            </param>
    </member>
    <member name="P:System.Xml.XmlException.LineNumber">
      <summary>
          Obtiene el número de línea que indica dónde se produjo el error.
        </summary>
      <returns>
          Número de línea que indica dónde se produjo el error.
        </returns>
    </member>
    <member name="P:System.Xml.XmlException.LinePosition">
      <summary>
          Obtiene la posición de línea que indica dónde se produjo el error.
        </summary>
      <returns>
          Posición de línea que indica dónde se produjo el error.
        </returns>
    </member>
    <member name="P:System.Xml.XmlException.Message">
      <summary>
          Obtiene un mensaje que describe la excepción actual.
        </summary>
      <returns>
          Mensaje de error que explica la razón de la excepción.
        </returns>
    </member>
    <member name="P:System.Xml.XmlException.SourceUri">
      <summary>
          Obtiene la ubicación del archivo XML.
        </summary>
      <returns>
          Identificador URI de origen de los datos XML. Si no hay ningún URI de origen, esta propiedad devuelve una cadena vacía.
        </returns>
    </member>
    <member name="T:System.Xml.XmlImplementation">
      <summary>
          Define el contexto para un conjunto de objetos <see cref="T:System.Xml.XmlDocument" />.
        </summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlImplementation" />.
        </summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlImplementation" /> con el <see cref="T:System.Xml.XmlNameTable" /> especificado.
        </summary>
      <param name="nt">
              Objeto <see cref="T:System.Xml.XmlNameTable" />.
            </param>
    </member>
    <member name="M:System.Xml.XmlImplementation.CreateDocument">
      <summary>
          Crea una nueva colección <see cref="T:System.Xml.XmlDocument" />.
        </summary>
      <returns>
          Nuevo objeto XmlDocument.
        </returns>
    </member>
    <member name="M:System.Xml.XmlImplementation.HasFeature(System.String,System.String)">
      <summary>
          Comprueba si la implementación de DOM (Document Object Model) incluye una función específica.
        </summary>
      <returns>
          
            Es true si la función se implementa en la versión especificada; en caso contrario, es false.
          La siguiente tabla muestra las combinaciones que hacen que HasFeature devuelva true.
          
            
              
                
                  strFeature 
                
                
                  strVersion 
                
              
            
            
              
                XML 
              
              
                1.0 
              
            
            
              
                XML 
              
              
                2.0 
              
            
          
        </returns>
      <param name="strFeature">
              Nombre del paquete de la función que se va a comprobar. Este nombre no distingue entre mayúsculas y minúsculas. 
            </param>
      <param name="strVersion">
              Se trata del número de versión del nombre del paquete que se va a comprobar. Si no se ha especificado la versión (null), la compatibilidad con cualquier versión de la función hace que el método devuelva true. 
            </param>
    </member>
    <member name="T:System.Xml.XmlLinkedNode">
      <summary>
          Obtiene el nodo inmediatamente anterior o siguiente a éste.
        </summary>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.NextSibling">
      <summary>
          Obtiene el nodo inmediatamente siguiente a éste.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> inmediatamente siguiente a este nodo o null en caso de que uno no exista.
        </returns>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.PreviousSibling">
      <summary>
          Obtiene el nodo inmediatamente anterior a éste.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> anterior o null en caso de que uno no exista.
        </returns>
    </member>
    <member name="T:System.Xml.XmlNamedNodeMap">
      <summary>
          Representa una colección de nodos a los que se puede tener acceso por nombre o por índice.
        </summary>
    </member>
    <member name="P:System.Xml.XmlNamedNodeMap.Count">
      <summary>
          Obtiene el número de nodos de XmlNamedNodeMap.
        </summary>
      <returns>
          Número de nodos.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
      <summary>
          Proporciona funcionalidad para la iteración de estilo "foreach" en la colección de nodos de XmlNamedNodeMap.
        </summary>
      <returns>
          Objeto <see cref="T:System.Collections.IEnumerator" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
      <summary>
          Recupera un objeto <see cref="T:System.Xml.XmlNode" /> especificado por el nombre.
        </summary>
      <returns>
          XmlNode con el nombre especificado o null si no se encuentra ningún nodo coincidente.
        </returns>
      <param name="name">
              Nombre completo del nodo que se va a recuperar. Se compara con la propiedad <see cref="P:System.Xml.XmlNode.Name" /> del nodo coincidente. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
      <summary>
          Recupera un nodo con <see cref="P:System.Xml.XmlNode.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> coincidentes.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> con el nombre local y el identificador URI de espacio de nombres coincidentes o null si no se ha encontrado un nodo coincidente.
        </returns>
      <param name="localName">
              Nombre local del nodo que se va a recuperar. 
            </param>
      <param name="namespaceURI">
              El Identificador uniforme de recursos (Identificador URI) del espacio de nombres del nodo a recuperar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
      <summary>
          Recupera el nodo que se encuentra en el índice especificado en XmlNamedNodeMap.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> en el índice especificado. Si <paramref name="index" /> es menor que 0 o mayor o igual que la propiedad <see cref="P:System.Xml.XmlNamedNodeMap.Count" />, se devuelve null.
        </returns>
      <param name="index">
              Posición de índice del nodo que se va a recuperar de XmlNamedNodeMap. El índice es de base cero, por lo que el índice del primer nodo es 0 y el del último nodo es <see cref="P:System.Xml.XmlNamedNodeMap.Count" /> - 1. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
      <summary>
          Quita el nodo de XmlNamedNodeMap.
        </summary>
      <returns>
          XmlNode quitado de este XmlNamedNodeMap o null si no se ha encontrado un nodo coincidente.
        </returns>
      <param name="name">
              Nombre completo del nodo que se va a quitar. El nombre se compara con la propiedad <see cref="P:System.Xml.XmlNode.Name" /> del nodo coincidente. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
      <summary>
          Quita un nodo con <see cref="P:System.Xml.XmlNode.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> coincidentes.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> quitado o null si no se ha encontrado un nodo coincidente.
        </returns>
      <param name="localName">
              Nombre local del nodo que se va a quitar. 
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del nodo que se va a quitar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
      <summary>
          Agrega un <see cref="T:System.Xml.XmlNode" /> mediante su propiedad <see cref="P:System.Xml.XmlNode.Name" /> 
        </summary>
      <returns>
          Si <paramref name="node" /> reemplaza a un nodo existente con el mismo nombre, se devolverá el nodo antiguo; en caso contrario, se devolverá null.
        </returns>
      <param name="node">
              XmlNode que se almacenará en XmlNamedNodeMap. Si ya hay un nodo con ese nombre en el mapa, se reemplazará por el nuevo. 
            </param>
      <exception cref="T:System.ArgumentException">
              <paramref name="node" /> se creó a partir de un <see cref="T:System.Xml.XmlDocument" /> distinto al que creó XmlNamedNodeMap, o XmlNamedNodeMap es de sólo lectura. 
            </exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceManager">
      <summary>
          Resuelve, agrega y quita espacios de nombres en una colección y proporciona la administración del ámbito de estos espacios de nombres. 
        </summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlNamespaceManager" /> con el <see cref="T:System.Xml.XmlNameTable" /> especificado.
        </summary>
      <param name="nameTable">
              <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar. 
            </param>
      <exception cref="T:System.NullReferenceException">
              
                El constructor recibe null. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
      <summary>
          Agrega el espacio de nombres especificado a la colección.
        </summary>
      <param name="prefix">
              Prefijo que se va a asociar al espacio de nombres que se agrega. Utilice String.Empty para agregar un espacio de nombres predeterminado.
              
                Si se utiliza <see cref="T:System.Xml.XmlNamespaceManager" /> para resolver los espacios de nombres en una expresión XPath (XML Path Language), se ha de especificar un prefijo. Si una expresión XPath no incluye un prefijo, se supone que el identificador uniforme de recursos (URI) del espacio de nombres corresponde al espacio de nombres vacío. Para obtener más información sobre las expresiones XPath y <see cref="T:System.Xml.XmlNamespaceManager" />, vea los métodos <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> y <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />.
              
            </param>
      <param name="uri">
              Espacio de nombres que se va a agregar. 
            </param>
      <exception cref="T:System.ArgumentException">
              El valor de <paramref name="prefix" /> es "xml" o "xmlns". 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="prefix" /> o <paramref name="uri" /> es null. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
      <summary>
          Obtiene el identificador URI de espacio de nombres del espacio de nombres predeterminado.
        </summary>
      <returns>
          Devuelve el identificador URI de espacio de nombres del espacio de nombres predeterminado, o String.Empty si no hay espacio de nombres predeterminado.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
      <summary>
          Devuelve un enumerador que se utilizará para recorrer en iteración los espacios de nombres de <see cref="T:System.Xml.XmlNamespaceManager" />.
        </summary>
      <returns>
          <see cref="T:System.Collections.IEnumerator" /> que contiene los prefijos almacenados por <see cref="T:System.Xml.XmlNamespaceManager" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>
          Obtiene una colección de nombres de espacios de nombres por clave de prefijo que se puede utilizar para enumerar los espacios de nombres que actualmente se encuentran en el ámbito.
        </summary>
      <returns>
          Objeto <see cref="T:System.Collections.Specialized.StringDictionary" /> que contiene una colección de pares de espacios de nombres y prefijos que se encuentran actualmente en el ámbito.
        </returns>
      <param name="scope">
              Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica el tipo de nodos de espacio de nombres que se va a devolver.
            </param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
      <summary>
          Obtiene un valor que indica si el prefijo proporcionado tiene un espacio de nombres definido para el ámbito que se ha insertado.
        </summary>
      <returns>
          
            Es true si se ha definido un espacio de nombres; en caso contrario, es false.
        </returns>
      <param name="prefix">
              Prefijo del espacio de nombres que se desea buscar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
      <summary>
          Obtiene el identificador URI de espacio de nombres del prefijo especificado.
        </summary>
      <returns>
          Devuelve el identificador URI de espacio de nombres de <paramref name="prefix" /> o null si no se ha asignado un espacio de nombres. La cadena devuelta está subdividida.
          Para obtener más información sobre cadenas subdivididas, vea <see cref="T:System.Xml.XmlNameTable" />.
        </returns>
      <param name="prefix">
              Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase String.Empty. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
      <summary>
          Busca el prefijo declarado para el identificador URI de espacio de nombres especificado.
        </summary>
      <returns>
          Prefijo que coincide. Si no hay un prefijo asignado, el método devuelve String.Empty. Si se proporciona un valor nulo, devuelve null.
        </returns>
      <param name="uri">
              Espacio de nombres que se va a resolver para el prefijo. 
            </param>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.NameTable">
      <summary>
          Obtiene la <see cref="T:System.Xml.XmlNameTable" /> asociada a este objeto.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNameTable" /> que utiliza este objeto.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PopScope">
      <summary>
          Extrae un ámbito de espacio de nombres de la pila.
        </summary>
      <returns>
          
            Es true si quedan ámbitos de espacio de nombres en la pila; es false si no quedan espacios de nombres para extraer.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PushScope">
      <summary>
          Inserta un ámbito de espacio de nombres en la pila.
        </summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
      <summary>
          Quita el espacio de nombres dado del prefijo especificado.
        </summary>
      <param name="prefix">
              Prefijo del espacio de nombres. 
            </param>
      <param name="uri">
              Espacio de nombres que se va a quitar del prefijo especificado. El espacio de nombres quitado pertenece al ámbito de espacio de nombres actual. Los espacios de nombres que no pertenecen al ámbito actual no se tienen en cuenta. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="prefix" /> o <paramref name="uri" /> es null. 
            </exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceScope">
      <summary>
          Define el ámbito del espacio de nombres.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.All">
      <summary>
          Todos los espacios de nombres definidos en el ámbito del nodo actual. Esto incluye el espacio de nombres xmlns:xml que siempre se declara de manera implícita. No está definido el orden de los espacios de nombres que se devuelven.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.ExcludeXml">
      <summary>
          Todos los espacios de nombres definidos en el ámbito del nodo actual, excluido el espacio de nombres xmlns:xml, que siempre se declara implícitamente. No está definido el orden de los espacios de nombres que se devuelven.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.Local">
      <summary>
          Todos los espacios de nombres definidos localmente en el nodo actual.
        </summary>
    </member>
    <member name="T:System.Xml.XmlNameTable">
      <summary>
          Tabla de objetos en forma de cadena subdividida.
        </summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlNameTable" />. 
        </summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>
          Cuando se reemplaza en una clase derivada, subdivide la cadena especificada y la agrega a XmlNameTable.
        </summary>
      <returns>
          Cadena subdividida nueva o cadena existente si ya hay una. Si la longitud es cero, se devuelve String.Empty.
        </returns>
      <param name="array">
              Matriz de caracteres que contiene el nombre que se va a agregar. 
            </param>
      <param name="offset">
              Índice de base cero de la matriz que especifica el primer carácter del nombre. 
            </param>
      <param name="length">
              Número de caracteres del nombre. 
            </param>
      <exception cref="T:System.IndexOutOfRangeException">
              0 &gt; <paramref name="offset" />
              O bien
              
                <paramref name="offset" /> &gt;= <paramref name="array" /> .Length 
              O bien
              
                <paramref name="length" /> &gt;= <paramref name="array" /> .Length 
              Las condiciones anteriores no hacen que se produzca ninguna excepción si <paramref name="length" /> = 0.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="length" /> &lt; 0. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, subdivide la cadena especificada y la agrega a XmlNameTable.
        </summary>
      <returns>
          Cadena subdividida nueva o cadena existente si ya hay una.
        </returns>
      <param name="array">
              Nombre que se va a agregar. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="array" /> es null. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>
          Cuando se reemplaza en una clase derivada, se obtiene la cadena subdividida que contiene los mismos caracteres que el intervalo de caracteres especificado en una matriz determinada.
        </summary>
      <returns>
          Cadena subdividida o null si la cadena no se ha subdividido todavía. Si <paramref name="length" /> es cero, se devuelve String.Empty.
        </returns>
      <param name="array">
              Matriz de caracteres que contiene el nombre que se va a buscar. 
            </param>
      <param name="offset">
              Índice de base cero de la matriz que especifica el primer carácter del nombre. 
            </param>
      <param name="length">
              Número de caracteres del nombre. 
            </param>
      <exception cref="T:System.IndexOutOfRangeException">
              0 &gt; <paramref name="offset" />
              O bien
              
                <paramref name="offset" /> &gt;= <paramref name="array" /> .Length 
              O bien
              
                <paramref name="length" /> &gt;= <paramref name="array" /> .Length 
              Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="length" /> = 0.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="length" /> &lt; 0. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene la cadena subdividida que contiene el mismo valor que la cadena especificada.
        </summary>
      <returns>
          Cadena subdividida o null si la cadena no se ha subdividido todavía.
        </returns>
      <param name="array">
              Nombre que se va a buscar. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="array" /> es null. 
            </exception>
    </member>
    <member name="T:System.Xml.XmlNode">
      <summary>
          Representa un único nodo del documento XML. 
        </summary>
    </member>
    <member name="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)">
      <summary>
          Agrega el nodo especificado al final de la lista de nodos secundarios de este nodo.
        </summary>
      <returns>
          Nodo agregado.
        </returns>
      <param name="newChild">
              Nodo que se va a agregar. Todos el contenido del nodo que se va a agregar se pasa a la ubicación especificada. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.
              <paramref name="newChild" /> es un nodo primario de este nodo. 
            </exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.
              Este nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlNode.Attributes">
      <summary>
          Obtiene un objeto <see cref="T:System.Xml.XmlAttributeCollection" /> que contiene los atributos de este nodo.
        </summary>
      <returns>
          XmlAttributeCollection que contiene los atributos de este nodo.
          Si el nodo es del tipo XmlNodeType.Element, se devuelven sus atributos. En caso contrario, esta propiedad devuelve null.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.BaseURI">
      <summary>
          Obtiene el identificador URI base del nodo actual.
        </summary>
      <returns>
          Ubicación desde la que se cargó el nodo o String.Empty si el nodo no tiene un identificador URI base.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.ChildNodes">
      <summary>
          Obtiene todos los nodos secundarios del nodo.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNodeList" /> que contiene todos los nodos secundarios del nodo.
          Si no hay ningún nodo secundario, esta propiedad devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> vacío.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNode.Clone">
      <summary>
          Crea un duplicado de este nodo.
        </summary>
      <returns>
          Nodo clonado.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNode.CloneNode(System.Boolean)">
      <summary>
          Cuando se reemplaza en una clase derivada, crea un duplicado del nodo.
        </summary>
      <returns>
          Nodo clonado.
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false sólo para clonar el nodo en sí. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Llamar a este método en un tipo de nodo que no se puede clonar. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNode.CreateNavigator">
      <summary>
          Crea un objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para desplazarse por este objeto.
        </summary>
      <returns>
          Objeto XPathNavigator. XPathNavigator se sitúa en el nodo desde el que se llamó al método. No se sitúa en la raíz del documento.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.FirstChild">
      <summary>
          Obtiene el primer nodo secundario del nodo.
        </summary>
      <returns>
          Primer nodo secundario del nodo. Si no hay nodo secundario, se devuelve null.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetEnumerator">
      <summary>
          Proporciona funcionalidad para la iteración de estilo "foreach" en los nodos de XmlNode.
        </summary>
      <returns>
          Objeto <see cref="T:System.Collections.IEnumerator" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)">
      <summary>
          Busca la declaración xmlns más cercana para el prefijo especificado que está en el ámbito del nodo actual y devuelve el identificador URI de espacio de nombres de la declaración.
        </summary>
      <returns>
          Identificador URI de espacio de nombres del prefijo especificado.
        </returns>
      <param name="prefix">
              Prefijo cuyo identificador URI de espacio de nombres se desea buscar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)">
      <summary>
          Busca la declaración xmlns más cercana para el identificador URI de espacio de nombres especificado que está en el ámbito del nodo actual y devuelve el prefijo definido en la declaración.
        </summary>
      <returns>
          Prefijo del identificador URI de espacio de nombres especificado.
        </returns>
      <param name="namespaceURI">
              URI de espacio de nombres cuyo prefijo se desea buscar. 
            </param>
    </member>
    <member name="P:System.Xml.XmlNode.HasChildNodes">
      <summary>
          Obtiene un valor que indica si este nodo tiene nodos secundarios.
        </summary>
      <returns>
          
            Es true si el nodo tiene nodos secundarios; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerText">
      <summary>
          Obtiene o establece los valores concatenados del nodo y de todos sus nodos secundarios.
        </summary>
      <returns>
          Valores concatenados del nodo y de todos sus nodos secundarios.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerXml">
      <summary>
          Obtiene o establece el marcado que representa sólo los nodos secundarios de este nodo.
        </summary>
      <returns>
          Marcado de los nodos secundarios de este nodo.
          
            
              InnerXml no devuelve los atributos predeterminados.
          
        </returns>
      <exception cref="T:System.InvalidOperationException">
              Establecer esta propiedad en un nodo que no puede tener secundarios. 
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El código XML especificado al establecer esta propiedad no tiene un formato correcto. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>
          Inserta el nodo especificado inmediatamente detrás del nodo de referencia igualmente especificado.
        </summary>
      <returns>
          Nodo que se va a insertar.
        </returns>
      <param name="newChild">
              XmlNode que se va a insertar. 
            </param>
      <param name="refChild">
              XmlNode que es el nodo de referencia. <paramref name="newNode" /> se coloca detrás de <paramref name="refNode" />. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.
              <paramref name="newChild" /> es un nodo primario de este nodo. 
            </exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.
              <paramref name="refChild" /> no es un nodo secundario de este nodo.
              Este nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>
          Inserta el nodo especificado inmediatamente antes del nodo de referencia igualmente especificado.
        </summary>
      <returns>
          Nodo que se va a insertar.
        </returns>
      <param name="newChild">
              XmlNode que se va a insertar. 
            </param>
      <param name="refChild">
              XmlNode que es el nodo de referencia. <paramref name="newChild" /> se coloca delante de este nodo. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.
              <paramref name="newChild" /> es un nodo primario de este nodo. 
            </exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.
              <paramref name="refChild" /> no es un nodo secundario de este nodo.
              Este nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlNode.IsReadOnly">
      <summary>
          Obtiene un valor que indica si el nodo es de sólo lectura.
        </summary>
      <returns>
          
            Es true si el nodo es de sólo lectura; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String)">
      <summary>
          Obtiene el primer elemento secundario con el <see cref="P:System.Xml.XmlNode.Name" /> especificado.
        </summary>
      <returns>
          Primer <see cref="T:System.Xml.XmlElement" /> que coincide con el nombre especificado.
        </returns>
      <param name="name">
              Nombre completo del elemento que se va a recuperar. 
            </param>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String,System.String)">
      <summary>
          Obtiene el primer elemento secundario con el <see cref="P:System.Xml.XmlNode.LocalName" /> y el <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.
        </summary>
      <returns>
          Primer <see cref="T:System.Xml.XmlElement" /> con los parámetros <paramref name="localname" /> y <paramref name="ns" /> coincidentes.
        </returns>
      <param name="localname">
              Nombre local del elemento. 
            </param>
      <param name="ns">
              Identificador URI de espacio de nombres del elemento. 
            </param>
    </member>
    <member name="P:System.Xml.XmlNode.LastChild">
      <summary>
          Obtiene el último nodo secundario del nodo.
        </summary>
      <returns>
          Último nodo secundario del nodo. Si no hay nodo secundario, se devuelve null.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.LocalName">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el nombre local del nodo.
        </summary>
      <returns>
          Nombre del nodo sin prefijo. Por ejemplo, LocalName es "book" para el elemento &lt;bk:book&gt;.
          El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. 
          
            
              
                
                  Tipo 
                
                
                  Nombre 
                
              
            
            
              
                Atributo 
              
              
                Nombre local del atributo. 
              
            
            
              
                CDATA 
              
              
                #cdata-section 
              
            
            
              
                Comment 
              
              
                #comment 
              
            
            
              
                Document 
              
              
                #document 
              
            
            
              
                DocumentFragment 
              
              
                #document-fragment 
              
            
            
              
                DocumentType 
              
              
                Nombre del tipo de documento. 
              
            
            
              
                Elemento 
              
              
                Nombre local del elemento. 
              
            
            
              
                Entity 
              
              
                Nombre de la entidad. 
              
            
            
              
                EntityReference 
              
              
                Nombre de la entidad a la que se hace referencia. 
              
            
            
              
                Notation 
              
              
                Nombre de la notación. 
              
            
            
              
                ProcessingInstruction 
              
              
                Destino de la instrucción de procesamiento. 
              
            
            
              
                Text 
              
              
                #text 
              
            
            
              
                Whitespace 
              
              
                #whitespace 
              
            
            
              
                SignificantWhitespace 
              
              
                #significant-whitespace 
              
            
            
              
                XmlDeclaration 
              
              
                #xml-declaration 
              
            
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.Name">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el nombre completo del nodo.
        </summary>
      <returns>
          Nombre completo del nodo. El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. 
          
            
              
                
                  Tipo 
                
                
                  Nombre 
                
              
            
            
              
                Atributo 
              
              
                Nombre completo del atributo. 
              
            
            
              
                CDATA 
              
              
                #cdata-section 
              
            
            
              
                Comment 
              
              
                #comment 
              
            
            
              
                Document 
              
              
                #document 
              
            
            
              
                DocumentFragment 
              
              
                #document-fragment 
              
            
            
              
                DocumentType 
              
              
                Nombre del tipo de documento. 
              
            
            
              
                Elemento 
              
              
                Nombre completo del elemento. 
              
            
            
              
                Entity 
              
              
                Nombre de la entidad. 
              
            
            
              
                EntityReference 
              
              
                Nombre de la entidad a la que se hace referencia. 
              
            
            
              
                Notation 
              
              
                Nombre de la notación. 
              
            
            
              
                ProcessingInstruction 
              
              
                Destino de la instrucción de procesamiento. 
              
            
            
              
                Text 
              
              
                #text 
              
            
            
              
                Whitespace 
              
              
                #whitespace 
              
            
            
              
                SignificantWhitespace 
              
              
                #significant-whitespace 
              
            
            
              
                XmlDeclaration 
              
              
                #xml-declaration 
              
            
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.NamespaceURI">
      <summary>
          Obtiene el identificador URI de espacio de nombres de este nodo.
        </summary>
      <returns>
          Identificador URI de espacio de nombres de este nodo. Si no hay identificador URI de espacio de nombres, esta propiedad devuelve String.Empty.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.NextSibling">
      <summary>
          Obtiene el nodo inmediatamente siguiente a éste.
        </summary>
      <returns>
          XmlNode siguiente. Si no hay nodo siguiente, se devuelve null.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.NodeType">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.XmlNodeType" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNode.Normalize">
      <summary>
          Hace que todos los nodos XmlText de toda la profundidad del subárbol situado bajo XmlNode aparezcan de forma "normal", de modo que sólo el marcado (es decir, las etiquetas, comentarios, instrucciones de procesamiento, secciones CDATA y referencias a entidades) separa los nodos XmlText, es decir, no hay nodos XmlText adyacentes.
        </summary>
    </member>
    <member name="P:System.Xml.XmlNode.OuterXml">
      <summary>
          Obtiene el marcado que representa este nodo y todos sus nodos secundarios.
        </summary>
      <returns>
          Marcado que contiene este nodo y todos sus nodos secundarios.
          
            
              OuterXml no devuelve los atributos predeterminados.
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.OwnerDocument">
      <summary>
          Obtiene el <see cref="T:System.Xml.XmlDocument" /> al que pertenece este nodo.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlDocument" /> al que pertenece este nodo.
          Si el nodo es <see cref="T:System.Xml.XmlDocument" /> (NodeType es igual que XmlNodeType.Document), esta propiedad devuelve null.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.ParentNode">
      <summary>
          Obtiene el nodo primario de este nodo (para nodos que pueden tener nodos primarios).
        </summary>
      <returns>
          XmlNode que es el nodo primario del nodo actual. Si se acaba de crear un nodo y todavía no se ha agregado al árbol, o si se ha quitado un nodo del árbol, el nodo primario es null. Para todos los demás nodos, el valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. En la tabla siguiente se describen los valores devueltos posibles de la propiedad ParentNode.
          
            
              
                
                  NodeType 
                
                
                  Valor devuelto de ParentNode 
                
              
            
            
              
                Attribute, Document, DocumentFragment, Entity, Notation 
              
              
                Devuelve null; estos nodos no tienen nodos primarios. 
              
            
            
              
                CDATA 
              
              
                Devuelve el elemento o la referencia a entidad que contiene la sección CDATA. 
              
            
            
              
                Comment 
              
              
                Devuelve el elemento, la referencia a entidad, el tipo de documento o el documento que contiene el comentario. 
              
            
            
              
                DocumentType 
              
              
                Devuelve el nodo de documento. 
              
            
            
              
                Elemento 
              
              
                Devuelve el nodo primario del elemento. Si el elemento es el nodo raíz del árbol, el nodo primario es el nodo de documento. 
              
            
            
              
                EntityReference 
              
              
                Devuelve el elemento, el atributo o la referencia a entidad que contiene la referencia a entidad. 
              
            
            
              
                ProcessingInstruction 
              
              
                Devuelve el documento, el elemento, el tipo de documento o la referencia a entidad que contiene la instrucción de procesamiento. 
              
            
            
              
                Text 
              
              
                Devuelve el elemento primario, el atributo o la referencia a entidad que contiene el nodo de texto. 
              
            
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.Prefix">
      <summary>
          Obtiene o establece el prefijo de espacio de nombres de este nodo.
        </summary>
      <returns>
          Prefijo de espacio de nombres de este nodo. Por ejemplo, Prefix es "bk" para el elemento &lt;bk:book&gt;. Si no hay prefijo, esta propiedad devuelve String.Empty.
        </returns>
      <exception cref="T:System.ArgumentException">
              Este nodo es de sólo lectura. 
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El prefijo especificado contiene un carácter no válido.
              El prefijo especificado no está formado correctamente.
              El prefijo especificado es "xml" y el identificador URI de espacio de nombres de este nodo no es "http://www.w3.org/XML/1998/namespace".
              Este nodo es un atributo, el prefijo especificado es "xmlns" y su identificador URI de espacio de nombres no es "http://www.w3.org/2000/xmlns/".
              Este nodo es un atributo y su nombre completo es "xmlns". 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)">
      <summary>
          Agrega el nodo especificado al principio de la lista de nodos secundarios de este nodo.
        </summary>
      <returns>
          Nodo agregado.
        </returns>
      <param name="newChild">
              Nodo que se va a agregar. Todos el contenido del nodo que se va a agregar se pasa a la ubicación especificada.
            </param>
      <exception cref="T:System.InvalidOperationException">
              Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.
              <paramref name="newChild" /> es un nodo primario de este nodo. 
            </exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.
              Este nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousSibling">
      <summary>
          Obtiene el nodo inmediatamente anterior a éste.
        </summary>
      <returns>
          XmlNode anterior. Si no hay nodo anterior, se devuelve null.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveAll">
      <summary>
          Quita todos los atributos y nodos secundarios del nodo actual.
        </summary>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)">
      <summary>
          Quita el nodo secundario especificado.
        </summary>
      <returns>
          Nodo que se quita.
        </returns>
      <param name="oldChild">
              Nodo que se va a quitar. 
            </param>
      <exception cref="T:System.ArgumentException">
              <paramref name="oldChild" /> no es un nodo secundario de este nodo. O este nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>
          Reemplaza el nodo secundario <paramref name="oldChild" /> por el nodo <paramref name="newChild" />.
        </summary>
      <returns>
          Nodo que se reemplaza.
        </returns>
      <param name="newChild">
              Nuevo nodo que se va a agregar a la lista de nodos secundarios. 
            </param>
      <param name="oldChild">
              Nodo que se va a reemplazar en la lista. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.
              <paramref name="newChild" /> es un nodo primario de este nodo. 
            </exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.
              Este nodo es de sólo lectura.
              <paramref name="oldChild" /> no es un nodo secundario de este nodo. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlNode.SchemaInfo">
      <summary>
          Obtiene el conjunto de información posterior a la validación del esquema que se ha asignado a este nodo como resultado de dicha validación.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene el conjunto de información posterior a la validación del esquema de este nodo
        </returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String)">
      <summary>
          Selecciona una lista de nodos que coinciden con la expresión XPath.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNodeList" /> que contiene una colección de nodos que coinciden con la consulta XPath. No se debe esperar que XmlNodeList se conecte en tiempo real al documento XML. Es decir, puede que los cambios que aparecen en el documento XML no aparezcan en XmlNodeList y viceversa.
        </returns>
      <param name="xpath">
              Expresión XPath. 
            </param>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath contiene un prefijo. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)">
      <summary>
          Selecciona una lista de nodos que coinciden con la expresión XPath. Los prefijos encontrados en la expresión XPath se resuelven utilizando el <see cref="T:System.Xml.XmlNamespaceManager" /> proporcionado.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNodeList" /> que contiene una colección de nodos que coinciden con la consulta XPath. No se debe esperar que XmlNodeList se conecte en tiempo real al documento XML. Es decir, puede que los cambios que aparecen en el documento XML no aparezcan en XmlNodeList y viceversa.
        </returns>
      <param name="xpath">
              Expresión XPath. 
            </param>
      <param name="nsmgr">
              <see cref="T:System.Xml.XmlNamespaceManager" /> que se utiliza para resolver los espacios de nombres de los prefijos de la expresión XPath. 
            </param>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath contiene un prefijo que no está definido en XmlNamespaceManager. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String)">
      <summary>
          Selecciona el primer XmlNode que coincide con la expresión XPath.
        </summary>
      <returns>
          Primer XmlNode que coincide con la consulta XPath o null si no se encuentra un nodo coincidente. No se debe esperar que XmlNode se conecte en tiempo real al documento XML. Es decir, puede que los cambios que aparecen en el documento XML no aparezcan en XmlNode y viceversa.
        </returns>
      <param name="xpath">
              Expresión XPath. 
            </param>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath contiene un prefijo. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)">
      <summary>
          Selecciona el primer XmlNode que coincide con la expresión XPath. Los prefijos encontrados en la expresión XPath se resuelven utilizando el <see cref="T:System.Xml.XmlNamespaceManager" /> proporcionado.
        </summary>
      <returns>
          Primer XmlNode que coincide con la consulta XPath o null si no se encuentra un nodo coincidente. No se debe esperar que XmlNode se conecte en tiempo real al documento XML. Es decir, puede que los cambios que aparecen en el documento XML no aparezcan en XmlNode y viceversa.
        </returns>
      <param name="xpath">
              Expresión XPath. 
            </param>
      <param name="nsmgr">
              <see cref="T:System.Xml.XmlNamespaceManager" /> que se utiliza para resolver los espacios de nombres de los prefijos de la expresión XPath. 
            </param>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath contiene un prefijo que no está definido en XmlNamespaceManager. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNode.Supports(System.String,System.String)">
      <summary>
          Comprueba si la implementación de DOM incluye una característica específica.
        </summary>
      <returns>
          
            Es true si la función se implementa en la versión especificada; en caso contrario, es false. En la tabla siguiente se describen las combinaciones que devuelven true.
          
            
              
                
                  Característica 
                
                
                  Versión 
                
              
            
            
              
                XML 
              
              
                1.0 
              
            
            
              
                XML 
              
              
                2.0 
              
            
          
        </returns>
      <param name="feature">
              Nombre del paquete de la función que se va a comprobar. Este nombre no distingue entre mayúsculas y minúsculas. 
            </param>
      <param name="version">
              Se trata del número de versión del nombre del paquete que se va a comprobar. Si no se especifica la versión (null), la compatibilidad con cualquier versión de la característica hará que el método devuelva True. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.XmlNode.GetEnumerator" />.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#ICloneable#Clone">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.XmlNode.Clone" />.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:System.Xml.XmlNode.Value">
      <summary>
          Obtiene o establece el valor del nodo.
        </summary>
      <returns>
          El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. 
          
            
              
                
                  Tipo 
                
                
                  Valor 
                
              
            
            
              
                Atributo 
              
              
                Valor del atributo. 
              
            
            
              
                CDATASection 
              
              
                Contenido de la sección CDATA. 
              
            
            
              
                Comment 
              
              
                Contenido del comentario. 
              
            
            
              
                Document 
              
              
                
                  null. 
              
            
            
              
                DocumentFragment 
              
              
                
                  null. 
              
            
            
              
                DocumentType 
              
              
                
                  null. 
              
            
            
              
                Elemento 
              
              
                
                  null. Puede utilizar las propiedades <see cref="P:System.Xml.XmlElement.InnerText" /> o <see cref="P:System.Xml.XmlElement.InnerXml" /> para tener acceso al valor del nodo del elemento. 
              
            
            
              
                Entity 
              
              
                
                  null. 
              
            
            
              
                EntityReference 
              
              
                
                  null. 
              
            
            
              
                Notation 
              
              
                
                  null. 
              
            
            
              
                ProcessingInstruction 
              
              
                Todo el contenido, salvo el destino. 
              
            
            
              
                Text 
              
              
                Contenido del nodo Text. 
              
            
            
              
                SignificantWhitespace 
              
              
                Caracteres de espacio en blanco. El espacio en blanco puede estar formado por uno o varios caracteres de espacio, retornos de carro, saltos de línea o tabulaciones. 
              
            
            
              
                Whitespace 
              
              
                Caracteres de espacio en blanco. El espacio en blanco puede estar formado por uno o varios caracteres de espacio, retornos de carro, saltos de línea o tabulaciones. 
              
            
            
              
                XmlDeclaration 
              
              
                Contenido de la declaración (es decir, lo que aparece entre &lt;?xml y ?&gt;). 
              
            
          
        </returns>
      <exception cref="T:System.ArgumentException">
              Establecer el valor de un nodo que es de sólo lectura. 
            </exception>
      <exception cref="T:System.InvalidOperationException">
              Establecer el valor de un nodo que no debe tener un valor, por ejemplo, un nodo Element. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Cuando se reemplaza en una clase derivada, guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Cuando se reemplaza en una clase derivada, guarda el nodo actual en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="T:System.Xml.XmlNodeChangedAction">
      <summary>
          Especifica el tipo de cambio de nodo.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Insert">
      <summary>
          Se está insertando un nodo en el árbol.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Remove">
      <summary>
          Se está quitando un nodo del árbol.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Change">
      <summary>
          Se está modificando un valor de nodo.
        </summary>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventArgs">
      <summary>
          Proporciona datos para los eventos <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> y <see cref="E:System.Xml.XmlDocument.NodeRemoving" />.
        </summary>
    </member>
    <member name="M:System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlNodeChangedEventArgs" />.
        </summary>
      <param name="node">
              El <see cref="T:System.Xml.XmlNode" /> que generó el evento.
            </param>
      <param name="oldParent">
              El <see cref="T:System.Xml.XmlNode" /> primario anterior del <see cref="T:System.Xml.XmlNode" /> que generó el evento.
            </param>
      <param name="newParent">
              El nuevo <see cref="T:System.Xml.XmlNode" /> primario del <see cref="T:System.Xml.XmlNode" /> que generó el evento.
            </param>
      <param name="oldValue">
              El valor anterior del <see cref="T:System.Xml.XmlNode" /> que generó el evento.
            </param>
      <param name="newValue">
              El nuevo valor del <see cref="T:System.Xml.XmlNode" /> que generó el evento.
            </param>
      <param name="action">
              <see cref="T:System.Xml.XmlNodeChangedAction" />.
            </param>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Action">
      <summary>
          Obtiene un valor que indica qué tipo de evento de cambio de nodo se está produciendo.
        </summary>
      <returns>
          Valor de XmlNodeChangedAction que describe el evento de cambio de nodo.
          
            
              
                
                  Valor de XmlNodeChangedAction 
                
                
                  Descripción 
                
              
            
            
              
                Insert 
              
              
                Se ha insertado o se insertará un nodo. 
              
            
            
              
                Remove 
              
              
                Se ha quitado o se quitará un nodo. 
              
            
            
              
                Change 
              
              
                Se ha cambiado o se cambiará un nodo. 
              
            
          
          
            El valor de Action no distingue el momento en que se produjo el evento (antes o después). Se pueden crear controladores de eventos independientes para controlar ambas instancias.
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewParent">
      <summary>
          Obtiene el valor de la propiedad <see cref="P:System.Xml.XmlNode.ParentNode" /> tras finalizar la operación.
        </summary>
      <returns>
          Valor de ParentNode tras finalizar la operación. Esta propiedad devuelve null si se quita el nodo.
          
            Para los nodos de atributo, esta propiedad devuelve <see cref="P:System.Xml.XmlAttribute.OwnerElement" />.
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewValue">
      <summary>
          Obtiene el nuevo valor del nodo.
        </summary>
      <returns>
          Nuevo valor del nodo. Esta propiedad devuelve null si el nodo no es ni un atributo ni un nodo de texto, o si se quita el nodo.
          Si se llamó en un evento <see cref="E:System.Xml.XmlDocument.NodeChanging" />, NewValue devuelve el valor del nodo si el cambio tiene éxito. Si se llamó en un evento <see cref="E:System.Xml.XmlDocument.NodeChanged" />, NewValue devuelve el valor actual del nodo.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Node">
      <summary>
          Obtiene el <see cref="T:System.Xml.XmlNode" /> que se agrega, se quita o se cambia.
        </summary>
      <returns>
          XmlNode que se agrega, se quita o se cambia; esta propiedad nunca devuelve null.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldParent">
      <summary>
          Obtiene el valor de la propiedad <see cref="P:System.Xml.XmlNode.ParentNode" /> antes de que comience la operación.
        </summary>
      <returns>
          Valor de ParentNode antes de que comience la operación. Esta propiedad devuelve null si el nodo no tiene nodo primario.
          
            Para los nodos de atributo, esta propiedad devuelve <see cref="P:System.Xml.XmlAttribute.OwnerElement" />.
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldValue">
      <summary>
          Obtiene el valor original del nodo.
        </summary>
      <returns>
          Valor original del nodo. Esta propiedad devuelve null si el nodo no es ni un atributo ni un nodo de texto, o si se inserta el nodo.
          Si se llamó en un evento <see cref="E:System.Xml.XmlDocument.NodeChanging" />, OldValue devuelve el valor actual del nodo que se reemplazará si el cambio tiene éxito. Si se llamó en un evento <see cref="E:System.Xml.XmlDocument.NodeChanged" />, OldValue devuelve el valor del nodo previo al cambio.
        </returns>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventHandler">
      <summary>
          Representa el método que controla los eventos <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> y <see cref="E:System.Xml.XmlDocument.NodeRemoving" />.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="e">
              <see cref="T:System.Xml.XmlNodeChangedEventArgs" /> que contiene los datos del evento. 
            </param>
    </member>
    <member name="T:System.Xml.XmlNodeList">
      <summary>
          Representa una colección ordenada de nodos.
        </summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.#ctor"></member>
    <member name="P:System.Xml.XmlNodeList.Count">
      <summary>
          Obtiene el número de nodos de XmlNodeList.
        </summary>
      <returns>
          Número de nodos.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.GetEnumerator">
      <summary>
          Proporciona una iteración de estilo "foreach" simple a través de la colección de nodos de XmlNodeList.
        </summary>
      <returns>
          <see cref="T:System.Collections.IEnumerator" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.Item(System.Int32)">
      <summary>
          Recupera un nodo en el índice especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> de la colección. Si <paramref name="index" /> es mayor o igual que el número de nodos de la lista, esto devuelve null.
        </returns>
      <param name="index">
              Índice de base cero en la lista de nodos. 
            </param>
    </member>
    <member name="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
      <summary>
          Recupera un nodo en el índice especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> de la colección. Si el índice es mayor o igual que el número de nodos de la lista, esto devuelve null.
        </returns>
      <param name="i">
              Índice de base cero en la lista de nodos. 
            </param>
    </member>
    <member name="T:System.Xml.XmlNodeOrder">
      <summary>
          Describe el orden del documento de un nodo en comparación con un segundo nodo.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Before">
      <summary>
          El nodo actual de este explorador se sitúa delante del nodo actual del explorador proporcionado.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.After">
      <summary>
          El nodo actual de este explorador se sitúa detrás del nodo actual del explorador proporcionado.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Same">
      <summary>
          Los dos exploradores se sitúan en el mismo nodo.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Unknown">
      <summary>
          Las posiciones relativas de los nodos no se pueden determinar en el orden del documento. Esto puede producirse si los dos nodos residen en diferentes árboles.
        </summary>
    </member>
    <member name="T:System.Xml.XmlNodeReader">
      <summary>
          Representa un lector que proporciona acceso rápido, sin almacenamiento en caché y con desplazamiento sólo hacia delante, a los datos XML de un objeto <see cref="T:System.Xml.XmlNode" />.
        </summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
      <summary>
          Crea una instancia de la clase XmlNodeReader mediante el objeto <see cref="T:System.Xml.XmlNode" /> especificado.
        </summary>
      <param name="node">
              XmlNode que se desea leer. 
            </param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.AttributeCount">
      <summary>
          Obtiene el número de atributos del nodo actual.
        </summary>
      <returns>
          Número de atributos del nodo actual. Este número incluye los atributos predeterminados.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.BaseURI">
      <summary>
          Obtiene el URI base del nodo actual.
        </summary>
      <returns>
          URI base del nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
      <summary>
          Obtiene un valor que indica si <see cref="T:System.Xml.XmlNodeReader" /> implementa los métodos de lectura de contenido binario.
        </summary>
      <returns>
          
            Es true si se implementan los métodos de lectura de contenido binario; en caso contrario, es false. La clase <see cref="T:System.Xml.XmlNodeReader" /> siempre devuelve true.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanResolveEntity">
      <summary>
          Obtiene un valor que indica si este lector puede analizar y resolver entidades.
        </summary>
      <returns>
          
            Es true si el lector puede analizar y resolver entidades; en caso contrario, es false. XmlNodeReader siempre devuelve true.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Close">
      <summary>
          Cambia la propiedad <see cref="P:System.Xml.XmlNodeReader.ReadState" /> a Closed.
        </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Depth">
      <summary>
          Obtiene la profundidad del nodo actual en el documento XML.
        </summary>
      <returns>
          Profundidad del nodo actual en el documento XML.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.EOF">
      <summary>
          Obtiene un valor que indica si el lector está situado al final de la secuencia.
        </summary>
      <returns>
          
            Es true si el lector está situado al final de la secuencia; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
      <summary>
          Obtiene el valor del atributo con el índice especificado.
        </summary>
      <returns>
          Valor del atributo especificado.
        </returns>
      <param name="attributeIndex">
              Índice del atributo. El índice se basa en cero. El primer atributo tiene índice 0. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
      <summary>
          Obtiene el valor del atributo con el nombre especificado.
        </summary>
      <returns>
          Valor del atributo especificado. Si no se encuentra el atributo, se devuelve null.
        </returns>
      <param name="name">
              Nombre completo del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
      <summary>
          Obtiene el valor del atributo con el nombre local y el URI de espacio de nombres que se hayan especificado.
        </summary>
      <returns>
          Valor del atributo especificado. Si no se encuentra el atributo, se devuelve null.
        </returns>
      <param name="name">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasAttributes">
      <summary>
          Obtiene un valor que indica si el nodo actual tiene atributos.
        </summary>
      <returns>
          
            Es true si el nodo actual tiene atributos; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasValue">
      <summary>
          Obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlNodeReader.Value" />.
        </summary>
      <returns>
          
            Es true si el nodo en el que está situado actualmente el lector puede tener un Value; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsDefault">
      <summary>
          Obtiene un valor que indica si el nodo actual es un atributo generado a partir del valor predeterminado definido en la definición de tipo de documento (DTD) o en el esquema.
        </summary>
      <returns>
          
            Es true si el nodo actual es un atributo cuyo valor fue generado a partir del valor predeterminado definido en la DTD o el esquema; es false si el valor de atributo se estableció explícitamente.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsEmptyElement">
      <summary>
          Obtiene un valor que indica si el nodo actual es un elemento vacío; por ejemplo, &lt;MyElement/&gt;.
        </summary>
      <returns>
          
            Es true si el nodo actual es un elemento (<see cref="P:System.Xml.XmlNodeReader.NodeType" /> es igual a XmlNodeType.Element) y termina en /&gt;; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.LocalName">
      <summary>
          Obtiene el nombre local del nodo actual.
        </summary>
      <returns>
          Nombre del nodo actual sin prefijo. Por ejemplo, LocalName es book para el elemento &lt;bk:book&gt;.
          Para los tipos de nodo sin nombre (por ejemplo, Text, Comment, etc.), esta propiedad devuelve String.Empty.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
      <summary>
          Resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.
        </summary>
      <returns>
          URI de espacio de nombres al que se asigna el prefijo o null si no se encuentra ningún prefijo coincidente.
        </returns>
      <param name="prefix">
              Prefijo cuyo URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía. Esta cadena no necesita subdividirse. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
      <summary>
          Se desplaza hasta el atributo con el índice especificado.
        </summary>
      <param name="attributeIndex">
              Índice del atributo. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlReader.AttributeCount" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
      <summary>
          Se desplaza hasta el atributo con el nombre especificado.
        </summary>
      <returns>
          
            Es true si se encuentra el atributo; en caso contrario, es false. Si es false, no cambia la posición del lector.
        </returns>
      <param name="name">
              Nombre completo del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
      <summary>
          Se desplaza hasta el atributo con el nombre local y el URI de espacio de nombres que se hayan especificado.
        </summary>
      <returns>
          
            Es true si se encuentra el atributo; en caso contrario, es false. Si es false, no cambia la posición del lector.
        </returns>
      <param name="name">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToElement">
      <summary>
          Se desplaza hasta el elemento que contiene el nodo de atributo actual.
        </summary>
      <returns>
          
            Es true si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es false si el lector no está situado en un atributo (no cambia la posición del lector).
        </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
      <summary>
          Se desplaza hasta el primer atributo.
        </summary>
      <returns>
          
            Es true si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es false (no cambia la posición del lector).
        </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
      <summary>
          Se desplaza hasta el siguiente atributo.
        </summary>
      <returns>
          
            Es true si hay siguiente atributo; es false si no hay más atributos.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Name">
      <summary>
          Obtiene el nombre completo del nodo actual.
        </summary>
      <returns>
          Nombre completo del nodo actual. Por ejemplo, Name es bk:book para el elemento &lt;bk:book&gt;.
          El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlNodeReader.NodeType" /> del nodo. Los siguientes tipos de nodo devuelven los valores que figuran en la lista. Todos los demás tipos de nodo devuelven una cadena vacía.
          
            
              
                
                  Tipo de nodo 
                
                
                  Nombre 
                
              
            
            
              
                
                  Attribute
                
              
              
                Nombre del atributo. 
              
            
            
              
                
                  DocumentType
                
              
              
                Nombre del tipo de documento. 
              
            
            
              
                
                  Element
                
              
              
                Nombre de la etiqueta. 
              
            
            
              
                
                  EntityReference
                
              
              
                Nombre de la entidad a la que se hace referencia. 
              
            
            
              
                
                  ProcessingInstruction
                
              
              
                Destino de la instrucción de procesamiento. 
              
            
            
              
                
                  XmlDeclaration
                
              
              
                Cadena literal xml. 
              
            
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NamespaceURI">
      <summary>
          Obtiene el URI de espacio de nombres (según se define en la especificación relativa a espacios de nombres del Consorcio W3C) del nodo en el que está situado el lector.
        </summary>
      <returns>
          URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NameTable">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> asociado a esta implementación.
        </summary>
      <returns>
          XmlNameTable que permite obtener la versión subdividida de una cadena en el nodo.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.XmlNodeType" /> que representa el tipo del nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Prefix">
      <summary>
          Obtiene el prefijo de espacio de nombres asociado al nodo actual.
        </summary>
      <returns>
          Prefijo de espacio de nombres asociado al nodo actual.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Read">
      <summary>
          Lee el siguiente nodo de la secuencia.
        </summary>
      <returns>
          
            Es true si se lee correctamente el siguiente nodo; es false si no hay más nodos para leer.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadAttributeValue">
      <summary>
          Analiza el valor de atributo en uno o varios nodos Text, EntityReference o EndEntity.
        </summary>
      <returns>
          
            Es true si hay nodos para devolver.
          
            Es false si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se han leído todos los valores de atributo.
          Un atributo vacío, como misc="", devuelve true con un solo nodo cuyo valor es String.Empty.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el contenido y devuelve los bytes binarios descodificados en Base64.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              Búfer donde se va a copiar el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.
            </param>
      <param name="count">
              Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                El método <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.
            </exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el contenido y devuelve los bytes binarios descodificados en BinHex.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              Búfer donde se va a copiar el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.
            </param>
      <param name="count">
              Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                El método <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.
            </exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el elemento y descodifica el contenido Base64.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              Búfer donde se va a copiar el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.
            </param>
      <param name="count">
              Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual no es un nodo de elemento.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento contiene contenido mixto.
            </exception>
      <exception cref="T:System.FormatException">
              El contenido no puede convertirse en el tipo solicitado.
            </exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el elemento y descodifica el contenido BinHex.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              Búfer donde se va a copiar el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.
            </param>
      <param name="count">
              Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual no es un nodo de elemento.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento contiene contenido mixto.
            </exception>
      <exception cref="T:System.FormatException">
              El contenido no puede convertirse en el tipo solicitado.
            </exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.ReadState">
      <summary>
          Obtiene el estado del lector.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.ReadState" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadString">
      <summary>
          Lee el contenido de un nodo de elemento o de texto como una cadena.
        </summary>
      <returns>
          Contenido del nodo de elemento o de texto (puede incluir nodos CDATA, Text, etc.). Puede ser una cadena vacía si el lector está situado en un nodo que no sea de elemento ni de texto, o si no hay más contenido de texto para devolver en el contexto actual.
          
            Note: El nodo de texto puede ser un nodo de texto de elemento o de atributo.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ResolveEntity">
      <summary>
          Resuelve la referencia a entidad de los nodos EntityReference.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              El lector no se encuentra en un nodo EntityReference. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.SchemaInfo">
      <summary>
          Obtiene la información de esquema que se ha asignado al nodo actual.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene la información de esquema del nodo actual.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Skip">
      <summary>
          Omite los nodos secundarios del nodo actual.
        </summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.
        </summary>
      <returns>
        </returns>
      <param name="scope">
              
              
            </param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.
        </summary>
      <returns>
        </returns>
      <param name="prefix">
              
              
            </param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.
        </summary>
      <returns>
        </returns>
      <param name="namespaceName">
              
              
            </param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Value">
      <summary>
          Obtiene el valor de texto del nodo actual.
        </summary>
      <returns>
          El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlNodeReader.NodeType" /> del nodo. En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver. Todos los demás tipos de nodo devuelven String.Empty.
          
            
              
                
                  Tipo de nodo 
                
                
                  Valor 
                
              
            
            
              
                
                  Attribute
                
              
              
                Valor del atributo. 
              
            
            
              
                
                  CDATA
                
              
              
                Contenido de la sección CDATA. 
              
            
            
              
                
                  Comment
                
              
              
                Contenido del comentario. 
              
            
            
              
                
                  DocumentType
                
              
              
                Subconjunto interno. 
              
            
            
              
                
                  ProcessingInstruction
                
              
              
                Todo el contenido, salvo el destino. 
              
            
            
              
                
                  SignificantWhitespace
                
              
              
                Espacio en blanco entre marcas en un modelo de contenido mixto. 
              
            
            
              
                
                  Text
                
              
              
                Contenido del nodo de texto. 
              
            
            
              
                
                  Whitespace
                
              
              
                Espacio en blanco entre marcas. 
              
            
            
              
                
                  XmlDeclaration
                
              
              
                Contenido de la declaración. 
              
            
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlLang">
      <summary>
          Obtiene el ámbito de xml:lang actual.
        </summary>
      <returns>
          Ámbito de xml:lang actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlSpace">
      <summary>
          Obtiene el ámbito de xml:space actual.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.XmlSpace" />. Si no existe ningún ámbito de xml:space, el valor predeterminado de esta propiedad será XmlSpace.None.
        </returns>
    </member>
    <member name="T:System.Xml.XmlNodeType">
      <summary>
          Especifica el tipo de nodo.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.None">
      <summary>
          <see cref="T:System.Xml.XmlReader" /> devuelve este valor si no se ha llamado al método Read.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Element">
      <summary>
          Elemento (por ejemplo, &lt;item&gt;).
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Attribute">
      <summary>
          Atributo (por ejemplo, id='123').
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Text">
      <summary>
          Contenido de texto de un nodo.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.CDATA">
      <summary>
          Sección CDATA (por ejemplo, &lt;![CDATA[my escaped text]]&gt;).
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EntityReference">
      <summary>
          Referencia a una entidad (por ejemplo, &amp;num;).
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Entity">
      <summary>
          Declaración de entidad (por ejemplo, &lt;!ENTITY...&gt;).
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.ProcessingInstruction">
      <summary>
          Instrucción de procesamiento (por ejemplo, &lt;?pi test?&gt;).
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Comment">
      <summary>
          Comentario (por ejemplo, &lt;!-- my comment --&gt;).
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Document">
      <summary>
          Objeto de documento que, como raíz del árbol de documentos, proporciona acceso a todo el documento XML.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentType">
      <summary>
          Declaración de tipo de documento, indicada por la siguiente etiqueta (por ejemplo, &lt;!DOCTYPE...&gt;).
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentFragment">
      <summary>
          Fragmento de documento.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Notation">
      <summary>
          Notación en la declaración de tipo de documento (por ejemplo, &lt;!NOTATION...&gt;).
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Whitespace">
      <summary>
          Espacio en blanco entre marcas.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.SignificantWhitespace">
      <summary>
          Espacio en blanco entre marcas en un modelo de contenido mixto o espacio en blanco dentro del ámbito de xml:space="preserve".
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndElement">
      <summary>
          Etiqueta de elemento final (por ejemplo, &lt;/item&gt;) .
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndEntity">
      <summary>
          Se devuelve cuando XmlReader alcanza el final del reemplazo de entidad como resultado de una llamada al método <see cref="M:System.Xml.XmlReader.ResolveEntity" />.
        </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.XmlDeclaration">
      <summary>
          Declaración XML (por ejemplo, &lt;?xml version='1.0'?&gt; ).
        </summary>
    </member>
    <member name="T:System.Xml.XmlNotation">
      <summary>
          Representa una declaración de notación, tal como &lt;!NOTATION... &gt;.
        </summary>
    </member>
    <member name="M:System.Xml.XmlNotation.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo. Los nodos Notation no se pueden clonar. Si se llama a este método en un objeto <see cref="T:System.Xml.XmlNotation" />, se produce una excepción.
        </summary>
      <returns>
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false sólo para clonar el nodo en sí.
            </param>
      <exception cref="T:System.InvalidOperationException">
              Los nodos Notation no se pueden clonar. Si se llama a este método en un objeto <see cref="T:System.Xml.XmlNotation" />, se produce una excepción.
            </exception>
    </member>
    <member name="P:System.Xml.XmlNotation.InnerXml">
      <summary>
          Obtiene el marcado que representa los nodos secundarios de este nodo.
        </summary>
      <returns>
          Para nodos XmlNotation, se devuelve String.Empty.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              Se intentó establecer la propiedad. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlNotation.IsReadOnly">
      <summary>
          Obtiene un valor que indica si el nodo es de sólo lectura.
        </summary>
      <returns>
          
            Es true si el nodo es de sólo lectura; en caso contrario, es false.
          Como los nodos XmlNotation son de sólo lectura, esta propiedad siempre devuelve true.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNotation.LocalName">
      <summary>
          Obtiene el nombre del nodo actual sin el prefijo de espacio de nombres.
        </summary>
      <returns>
          Para nodos XmlNotation, esta propiedad devuelve el nombre de la notación.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNotation.Name">
      <summary>
          Obtiene el nombre del nodo actual.
        </summary>
      <returns>
          Nombre de la notación.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNotation.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Tipo de nodo. Para nodos XmlNotation, el valor es XmlNodeType.Notation.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNotation.OuterXml">
      <summary>
          Obtiene el marcado que representa este nodo y todos sus nodos secundarios.
        </summary>
      <returns>
          Para nodos XmlNotation, se devuelve String.Empty.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNotation.PublicId">
      <summary>
          Obtiene el valor del identificador público de la declaración de notación.
        </summary>
      <returns>
          Identificador público de la notación. Si no hay un identificador público, se devuelve null.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNotation.SystemId">
      <summary>
          Obtiene el valor del identificador de sistema de la declaración de notación.
        </summary>
      <returns>
          Identificador del sistema de la notación. Si no hay un identificador del sistema, se devuelve null.
        </returns>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Este método no tiene ningún efecto en nodos XmlNotation.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Este método no tiene ningún efecto en nodos XmlNotation.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="T:System.Xml.XmlOutputMethod">
      <summary>
          Especifica el método utilizado para serializar la salida de <see cref="T:System.Xml.XmlWriter" />.
        </summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Xml">
      <summary>
          Se serializa según las reglas de XML 1.0. 
        </summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Html">
      <summary>
          Serialice según las reglas de HTML especificadas por XSLT.
        </summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Text">
      <summary>
          Sólo se serializan los bloques de texto.
        </summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.AutoDetect">
      <summary>
          Las reglas de XSLT se usan para elegir entre los métodos de salida <see cref="F:System.Xml.XmlOutputMethod.Xml" /> y <see cref="F:System.Xml.XmlOutputMethod.Html" /> en tiempo de ejecución.
        </summary>
    </member>
    <member name="T:System.Xml.XmlParserContext">
      <summary>
          Proporciona toda la información de contexto que necesita el objeto <see cref="T:System.Xml.XmlReader" /> para analizar un fragmento de XML.
        </summary>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
      <summary>
          Inicializa una nueva instancia de la clase XmlParserContext con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI base, xml:lang, xml:space y tipo de documento especificados.
        </summary>
      <param name="nt">
              <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Si el valor es null, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />. Para obtener más información sobre las cadenas subdivididas, vea <see cref="T:System.Xml.XmlNameTable" />. 
            </param>
      <param name="nsMgr">
              <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o null. 
            </param>
      <param name="docTypeName">
              Nombre de la declaración de tipo de documento. 
            </param>
      <param name="pubId">
              Identificador público. 
            </param>
      <param name="sysId">
              Identificador de sistema. 
            </param>
      <param name="internalSubset">
              Subconjunto DTD interno. 
            </param>
      <param name="baseURI">
              Identificador URI base del fragmento de XML (la ubicación desde la que se cargó el fragmento). 
            </param>
      <param name="xmlLang">
              Ámbito de xml:lang. 
            </param>
      <param name="xmlSpace">
              Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de xml:space. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              
                <paramref name="nt" /> no es el mismo XmlNameTable utilizado para construir <paramref name="nsMgr" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>
          Inicializa una nueva instancia de la clase XmlParserContext con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI base, xml:lang, xml:space, codificación y tipo de documento especificados.
        </summary>
      <param name="nt">
              <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Si el valor es null, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />. Para obtener más información sobre las cadenas subdivididas, vea <see cref="T:System.Xml.XmlNameTable" />. 
            </param>
      <param name="nsMgr">
              <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o null. 
            </param>
      <param name="docTypeName">
              Nombre de la declaración de tipo de documento. 
            </param>
      <param name="pubId">
              Identificador público. 
            </param>
      <param name="sysId">
              Identificador de sistema. 
            </param>
      <param name="internalSubset">
              Subconjunto DTD interno. 
            </param>
      <param name="baseURI">
              Identificador URI base del fragmento de XML (la ubicación desde la que se cargó el fragmento). 
            </param>
      <param name="xmlLang">
              Ámbito de xml:lang. 
            </param>
      <param name="xmlSpace">
              Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de xml:space. 
            </param>
      <param name="enc">
              Objeto <see cref="T:System.Text.Encoding" /> que indica el valor de codificación. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              
                <paramref name="nt" /> no es el mismo XmlNameTable utilizado para construir <paramref name="nsMgr" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
      <summary>
          Inicializa una nueva instancia de la clase XmlParserContext con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, xml:lang y xml:space especificados.
        </summary>
      <param name="nt">
              <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Si el valor es null, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />. Para obtener más información sobre las cadenas subdivididas, vea <see cref="T:System.Xml.XmlNameTable" />. 
            </param>
      <param name="nsMgr">
              <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o null. 
            </param>
      <param name="xmlLang">
              Ámbito de xml:lang. 
            </param>
      <param name="xmlSpace">
              Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de xml:space. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              
                <paramref name="nt" /> no es el mismo XmlNameTable utilizado para construir <paramref name="nsMgr" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>
          Inicializa una nueva instancia de la clase XmlParserContext con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, xml:lang y xml:space especificados y codificación.
        </summary>
      <param name="nt">
              <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Si el valor es null, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />. Para obtener más información sobre las cadenas atomizadas, vea <see cref="T:System.Xml.XmlNameTable" />. 
            </param>
      <param name="nsMgr">
              <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o null. 
            </param>
      <param name="xmlLang">
              Ámbito de xml:lang. 
            </param>
      <param name="xmlSpace">
              Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de xml:space. 
            </param>
      <param name="enc">
              Objeto <see cref="T:System.Text.Encoding" /> que indica el valor de codificación. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              
                <paramref name="nt" /> no es el mismo XmlNameTable utilizado para construir <paramref name="nsMgr" />. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlParserContext.BaseURI">
      <summary>
          Obtiene o establece el identificador URI base.
        </summary>
      <returns>
          Identificador URI base para resolver el archivo DTD.
        </returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.DocTypeName">
      <summary>
          Obtiene o establece el nombre de la declaración de tipo de documento.
        </summary>
      <returns>
          Nombre de la declaración de tipo de documento.
        </returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.Encoding">
      <summary>
          Obtiene o establece el tipo de codificación.
        </summary>
      <returns>
          Objeto <see cref="T:System.Text.Encoding" /> que indica el tipo de codificación.
        </returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.InternalSubset">
      <summary>
          Obtiene o establece el subconjunto DTD interno.
        </summary>
      <returns>
          Subconjunto DTD interno. Por ejemplo, esta propiedad devuelve todo lo que se encuentra entre los corchetes &lt;!DOCTYPE doc [...]&gt;.
        </returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NamespaceManager">
      <summary>
          Obtiene o establece el <see cref="T:System.Xml.XmlNamespaceManager" />.
        </summary>
      <returns>
          XmlNamespaceManager.
        </returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NameTable">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Para obtener más información sobre las cadenas atomizadas, vea <see cref="T:System.Xml.XmlNameTable" />.
        </summary>
      <returns>
          XmlNameTable.
        </returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.PublicId">
      <summary>
          Obtiene o establece el identificador público.
        </summary>
      <returns>
          Identificador público.
        </returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.SystemId">
      <summary>
          Obtiene o establece el identificador de sistema.
        </summary>
      <returns>
          Identificador de sistema.
        </returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlLang">
      <summary>
          Obtiene o establece el ámbito de xml:lang actual.
        </summary>
      <returns>
          Ámbito de xml:lang actual. Si en el ámbito no hay ningún xml:lang, se devuelve String.Empty.
        </returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlSpace">
      <summary>
          Obtiene o establece el ámbito de xml:space actual.
        </summary>
      <returns>
          Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de xml:space.
        </returns>
    </member>
    <member name="T:System.Xml.XmlProcessingInstruction">
      <summary>
          Representa una instrucción de procesamiento que XML define para conservar información específica del procesador en el texto del documento.
        </summary>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.#ctor(System.String,System.String,System.Xml.XmlDocument)">
      <summary>
        </summary>
      <param name="target">
            </param>
      <param name="data">
            </param>
      <param name="doc">
            </param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo.
        </summary>
      <returns>
          Nodo duplicado.
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false sólo para clonar el nodo en sí. 
            </param>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Data">
      <summary>
          Obtiene o establece el contenido de la instrucción de procesamiento, excepto el destino.
        </summary>
      <returns>
          Contenido de la instrucción de procesamiento, excepto el destino.
        </returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.InnerText">
      <summary>
          Obtiene o establece los valores concatenados del nodo y de todos sus nodos secundarios.
        </summary>
      <returns>
          Valores concatenados del nodo y de todos sus nodos secundarios.
        </returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.LocalName">
      <summary>
          Obtiene el nombre local del nodo.
        </summary>
      <returns>
          Para los nodos de instrucción de procesamiento, esta propiedad devuelve el destino de la instrucción de procesamiento.
        </returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Name">
      <summary>
          Obtiene el nombre completo del nodo.
        </summary>
      <returns>
          Para los nodos de instrucción de procesamiento, esta propiedad devuelve el destino de la instrucción de procesamiento.
        </returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Para los nodos XmlProcessingInstruction, este valor es XmlNodeType.ProcessingInstruction.
        </returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Target">
      <summary>
          Obtiene el destino de la instrucción de procesamiento.
        </summary>
      <returns>
          Destino de la instrucción de procesamiento.
        </returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Value">
      <summary>
          Obtiene o establece el valor del nodo.
        </summary>
      <returns>
          Todo el contenido de la instrucción de procesamiento, excepto el destino.
        </returns>
      <exception cref="T:System.ArgumentException">
              El nodo es de sólo lectura. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Dado que los nodos ProcessingInstruction no tienen elementos secundarios, este método no tiene ningún efecto.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="T:System.Xml.XmlQualifiedName">
      <summary>
          Representa un nombre XML completo.
        </summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlQualifiedName" />.
        </summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlQualifiedName" /> con el nombre especificado.
        </summary>
      <param name="name">
              Nombre local que se va a utilizar como nombre del objeto <see cref="T:System.Xml.XmlQualifiedName" />. 
            </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlQualifiedName" /> con el nombre y el espacio de nombres especificados.
        </summary>
      <param name="name">
              Nombre local que se va a utilizar como nombre del objeto <see cref="T:System.Xml.XmlQualifiedName" />. 
            </param>
      <param name="ns">
              Espacio de nombres para el objeto <see cref="T:System.Xml.XmlQualifiedName" />. 
            </param>
    </member>
    <member name="F:System.Xml.XmlQualifiedName.Empty">
      <summary>
          Proporciona un <see cref="T:System.Xml.XmlQualifiedName" /> vacío.
        </summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
      <summary>
          Determina si el objeto <see cref="T:System.Xml.XmlQualifiedName" /> especificado es igual al objeto <see cref="T:System.Xml.XmlQualifiedName" /> actual. 
        </summary>
      <returns>
          
            Es true si los dos son un objeto de la misma instancia; en caso contrario, es false.
        </returns>
      <param name="other">
              Objeto <see cref="T:System.Xml.XmlQualifiedName" /> que se va comparar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.GetHashCode">
      <summary>
          Devuelve el código hash del <see cref="T:System.Xml.XmlQualifiedName" />.
        </summary>
      <returns>
          Código hash de este objeto.
        </returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.IsEmpty">
      <summary>
          Obtiene un valor que indica si el objeto <see cref="T:System.Xml.XmlQualifiedName" /> está vacío.
        </summary>
      <returns>
          
            true si el nombre y el espacio de nombres corresponden a cadenas vacías; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Name">
      <summary>
          Obtiene una representación de cadena del nombre completo de <see cref="T:System.Xml.XmlQualifiedName" />.
        </summary>
      <returns>
          Representación de cadena del nombre completo o de String.Empty si no hay un nombre que esté definido para el objeto.
        </returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Namespace">
      <summary>
          Obtiene una representación de cadena del espacio de nombres de <see cref="T:System.Xml.XmlQualifiedName" />.
        </summary>
      <returns>
          Representación de cadena del espacio de nombres o de String.Empty si no hay un espacio de nombres que esté definido para el objeto.
        </returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Equality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>
          Compara dos objetos <see cref="T:System.Xml.XmlQualifiedName" />.
        </summary>
      <returns>
          
            Es true si los dos objetos tienen los mismos valores de nombre y de espacio de nombres; en caso contrario, es false.
        </returns>
      <param name="a">
              <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar. 
            </param>
      <param name="b">
              <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Inequality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>
          Compara dos objetos <see cref="T:System.Xml.XmlQualifiedName" />.
        </summary>
      <returns>
          
            Es true si los valores de nombre y de espacio de nombres de los dos objetos se diferencian en algo; en caso contrario, es false.
        </returns>
      <param name="a">
              <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar. 
            </param>
      <param name="b">
              <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString">
      <summary>
          Devuelve el valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" />.
        </summary>
      <returns>
          Valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" /> con el formato de namespace:localname. Si el objeto no tiene un espacio de nombres definido, el método sólo devuelve el nombre local.
        </returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
      <summary>
          Devuelve el valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" />.
        </summary>
      <returns>
          Valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" /> con el formato de namespace:localname. Si el objeto no tiene un espacio de nombres definido, el método sólo devuelve el nombre local.
        </returns>
      <param name="name">
              Nombre del objeto. 
            </param>
      <param name="ns">
              Espacio de nombres del objeto. 
            </param>
    </member>
    <member name="T:System.Xml.XmlReader">
      <summary>
          Representa un lector que proporciona acceso rápido a datos XML, sin almacenamiento en caché y con desplazamiento sólo hacia delante.
        </summary>
    </member>
    <member name="M:System.Xml.XmlReader.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase XmlReader.
        </summary>
    </member>
    <member name="P:System.Xml.XmlReader.AttributeCount">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el número de atributos en el nodo actual.
        </summary>
      <returns>
          Número de atributos del nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.BaseURI">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el identificador URI base del nodo actual.
        </summary>
      <returns>
          Identificador URI base del nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadBinaryContent">
      <summary>
          Obtiene un valor que indica si <see cref="T:System.Xml.XmlReader" /> implementa los métodos de lectura de contenido binario.
        </summary>
      <returns>
          
            Es true si se implementan los métodos de lectura de contenido binario; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadValueChunk">
      <summary>
          Obtiene un valor que indica si <see cref="T:System.Xml.XmlReader" /> implementa el método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />. 
        </summary>
      <returns>
          
            Es true si <see cref="T:System.Xml.XmlReader" /> implementa el método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanResolveEntity">
      <summary>
          Obtiene un valor que indica si este lector puede analizar y resolver entidades.
        </summary>
      <returns>
          
            Es true si el lector puede analizar y resolver entidades; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Xml.XmlReader.Close">
      <summary>
          Cuando se reemplaza en una clase derivada, cambia <see cref="P:System.Xml.XmlReader.ReadState" /> a Closed.
        </summary>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> mediante la secuencia especificada.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> utilizado para leer los datos que contiene la secuencia. 
        </returns>
      <param name="input">
              Secuencia que contiene los datos XML. 
              <see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación. Cuando se especifica la codificación, esta se utiliza para seguir leyendo la secuencia, y el procesamiento continúa analizando la entrada como una secuencia de caracteres (Unicode).
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> es null.
            </exception>
      <exception cref="T:System.Security.SecurityException">
              El <see cref="T:System.Xml.XmlReader" /> no tiene los permisos suficientes para tener acceso a la ubicación de los datos XML.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con la secuencia y el objeto <see cref="T:System.Xml.XmlReaderSettings" /> especificados.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.
        </returns>
      <param name="input">
              Secuencia que contiene los datos XML. 
              <see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación. Cuando se especifica la codificación, esta se utiliza para seguir leyendo la secuencia, y el procesamiento continúa analizando la entrada como una secuencia de caracteres (Unicode).
            </param>
      <param name="settings">
              Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />. Este valor puede ser null.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> utilizando la secuencia, el URI base y el objeto <see cref="T:System.Xml.XmlReaderSettings" /> especificados.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.
        </returns>
      <param name="input">
              Secuencia que contiene los datos XML. 
              <see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación. Cuando se especifica la codificación, esta se utiliza para seguir leyendo la secuencia, y el procesamiento continúa analizando la entrada como una secuencia de caracteres (Unicode).
            </param>
      <param name="settings">
              Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />. Este valor puede ser null.
            </param>
      <param name="baseUri">
              URI base de la entidad o documento que se lee. Este valor puede ser null.
              
                El URI base se utiliza para resolver el URI relativo del documento XML. No utilice un URI base de un origen en el que no confíe.
              
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> utilizando la secuencia y los objetos <see cref="T:System.Xml.XmlReaderSettings" /> y <see cref="T:System.Xml.XmlParserContext" /> especificados.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.
        </returns>
      <param name="input">
              Secuencia que contiene los datos XML. 
              <see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación. Cuando se especifica la codificación, esta se utiliza para seguir leyendo la secuencia, y el procesamiento continúa analizando la entrada como una secuencia de caracteres (Unicode).
            </param>
      <param name="settings">
              Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />. Este valor puede ser null.
            </param>
      <param name="inputContext">
              Objeto <see cref="T:System.Xml.XmlParserContext" /> que proporciona la información de contexto necesaria para analizar el fragmento XML. La información de contexto puede incluir el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar, la codificación, el ámbito del espacio de nombres, el ámbito actual de xml:lang y xml:space, el URI base y la definición de tipo de documento. 
              Este valor puede ser null.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con el objeto <see cref="T:System.IO.TextReader" /> especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.
        </returns>
      <param name="input">
              <see cref="T:System.IO.TextReader" /> desde el que se leen los datos XML. Dado que <see cref="T:System.IO.TextReader" /> devuelve una secuencia de caracteres Unicode, el objeto <see cref="T:System.Xml.XmlReader" /> no utiliza la codificación especificada en la declaración XML para descodificar la secuencia de datos.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> mediante los objetos <see cref="T:System.IO.TextReader" /> y <see cref="T:System.Xml.XmlReaderSettings" /> especificados.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.
        </returns>
      <param name="input">
              <see cref="T:System.IO.TextReader" /> desde el que se leen los datos XML. Dado que <see cref="T:System.IO.TextReader" /> devuelve una secuencia de caracteres Unicode, el objeto <see cref="T:System.Xml.XmlReader" /> no utiliza la codificación especificada en la declaración XML para descodificar la secuencia de datos.
            </param>
      <param name="settings">
              Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar el nuevo <see cref="T:System.Xml.XmlReader" />. Este valor puede ser null.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> mediante los objetos <see cref="T:System.IO.TextReader" /> y <see cref="T:System.Xml.XmlReaderSettings" /> especificados y el URI base.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.
        </returns>
      <param name="input">
              <see cref="T:System.IO.TextReader" /> desde el que se leen los datos XML. Dado que <see cref="T:System.IO.TextReader" /> devuelve una secuencia de caracteres Unicode, el objeto <see cref="T:System.Xml.XmlReader" /> no utiliza la codificación especificada en la declaración XML para descodificar la secuencia de datos.
            </param>
      <param name="settings">
              Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />. Este valor puede ser null.
            </param>
      <param name="baseUri">
              URI base de la entidad o documento que se lee. Este valor puede ser null.
              
                El URI base se utiliza para resolver el URI relativo del documento XML. No utilice un URI base de un origen en el que no confíe.
              
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> mediante los objetos <see cref="T:System.IO.TextReader" />, <see cref="T:System.Xml.XmlReaderSettings" /> y <see cref="T:System.Xml.XmlParserContext" /> especificados.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.
        </returns>
      <param name="input">
              <see cref="T:System.IO.TextReader" /> desde el que se leen los datos XML. Dado que <see cref="T:System.IO.TextReader" /> devuelve una secuencia de caracteres Unicode, el objeto <see cref="T:System.Xml.XmlReader" /> no utiliza la codificación especificada en la declaración XML para descodificar la secuencia de datos.
            </param>
      <param name="settings">
              Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />. Este valor puede ser null.
            </param>
      <param name="inputContext">
              Objeto <see cref="T:System.Xml.XmlParserContext" /> que proporciona la información de contexto necesaria para analizar el fragmento XML. La información de contexto puede incluir el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar, la codificación, el ámbito del espacio de nombres, el ámbito actual de xml:lang y xml:space, el URI base y la definición de tipo de documento. 
              Este valor puede ser null.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> es null.
            </exception>
      <exception cref="T:System.ArgumentException">
              Tanto la propiedad <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> como la propiedad <see cref="P:System.Xml.XmlParserContext.NameTable" /> contienen valores. Sólo se puede establecer y utilizar una de estas propiedades NameTable.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con el URI especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML. 
        </returns>
      <param name="inputUri">
              URI del archivo que contiene los datos XML. La clase <see cref="T:System.Xml.XmlUrlResolver" /> se utiliza para convertir la ruta de acceso en una representación de datos canónicos.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="inputUri" /> es null.
            </exception>
      <exception cref="T:System.Security.SecurityException">
              El <see cref="T:System.Xml.XmlReader" /> no tiene los permisos suficientes para tener acceso a la ubicación de los datos XML.
            </exception>
      <exception cref="T:System.IO.FileNotFoundException">
              El archivo que identifica el URI no existe.
            </exception>
      <exception cref="T:System.UriFormatException">
              El formato del URI no es correcto.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
      <summary>
          Crea una nueva instancia con el URI y <see cref="T:System.Xml.XmlReaderSettings" /> especificados.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.
        </returns>
      <param name="inputUri">
              URI del archivo que contiene los datos XML. El objeto <see cref="T:System.Xml.XmlResolver" /> del objeto <see cref="T:System.Xml.XmlReaderSettings" /> se utiliza para convertir la ruta de acceso en una representación de datos canónicos. Si <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> es null, se utiliza un nuevo objeto <see cref="T:System.Xml.XmlUrlResolver" />.
            </param>
      <param name="settings">
              Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />. Este valor puede ser null.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="inputUri" /> es null.
            </exception>
      <exception cref="T:System.IO.FileNotFoundException">
              No se encuentra el archivo especificado por el URI.
            </exception>
      <exception cref="T:System.UriFormatException">
              El formato del URI no es correcto.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> mediante el URI y los objetos <see cref="T:System.Xml.XmlReaderSettings" /> y <see cref="T:System.Xml.XmlParserContext" /> especificados.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> para leer datos XML.
        </returns>
      <param name="inputUri">
              URI del archivo que contiene los datos XML. El objeto <see cref="T:System.Xml.XmlResolver" /> del objeto <see cref="T:System.Xml.XmlReaderSettings" /> se utiliza para convertir la ruta de acceso en una representación de datos canónicos. Si <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> es null, se utiliza un nuevo objeto <see cref="T:System.Xml.XmlUrlResolver" />.
            </param>
      <param name="settings">
              Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />. Este valor puede ser null.
            </param>
      <param name="inputContext">
              Objeto <see cref="T:System.Xml.XmlParserContext" /> que proporciona la información de contexto necesaria para analizar el fragmento XML. La información de contexto puede incluir el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar, la codificación, el ámbito del espacio de nombres, el ámbito actual de xml:lang y xml:space, el URI base y la definición de tipo de documento. 
              Este valor puede ser null.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de inputUri es null.
            </exception>
      <exception cref="T:System.Security.SecurityException">
              El <see cref="T:System.Xml.XmlReader" /> no tiene los permisos suficientes para tener acceso a la ubicación de los datos XML.
            </exception>
      <exception cref="T:System.ArgumentException">
              Tanto la propiedad <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> como la propiedad <see cref="P:System.Xml.XmlParserContext.NameTable" /> contienen valores. Sólo se puede establecer y utilizar una de estas propiedades NameTable.
            </exception>
      <exception cref="T:System.IO.FileNotFoundException">
              No se encuentra el archivo especificado por el URI.
            </exception>
      <exception cref="T:System.UriFormatException">
              El formato del URI no es correcto.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con los objetos <see cref="T:System.Xml.XmlReader" /> y <see cref="T:System.Xml.XmlReaderSettings" /> especificados.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> que contiene el objeto <see cref="T:System.Xml.XmlReader" /> especificado.
        </returns>
      <param name="reader">
              Objeto <see cref="T:System.Xml.XmlReader" /> que desea utilizar como lector subyacente.
            </param>
      <param name="settings">
              Objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlReader" />.
              El nivel de conformidad del objeto <see cref="T:System.Xml.XmlReaderSettings" /> debe coincidir con el del lector subyacente o establecerse en <see cref="F:System.Xml.ConformanceLevel.Auto" />.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="reader" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              Si el objeto <see cref="T:System.Xml.XmlReaderSettings" /> especifica un nivel de conformidad que no es coherente con nivel de conformidad del lector subyacente.
              O bien
              El objeto <see cref="T:System.Xml.XmlReader" /> subyacente está en un estado de <see cref="F:System.Xml.ReadState.Error" /> o <see cref="F:System.Xml.ReadState.Closed" />.
            </exception>
    </member>
    <member name="P:System.Xml.XmlReader.Depth">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene la profundidad del nodo actual en el documento XML.
        </summary>
      <returns>
          Profundidad del nodo actual en el documento XML.
        </returns>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados que utiliza el objeto <see cref="T:System.Xml.XmlReader" /> y, opcionalmente, los recursos administrados. 
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto recursos administrados como no administrados y false para liberar únicamente recursos no administrados.
            </param>
    </member>
    <member name="P:System.Xml.XmlReader.EOF">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene un valor que indica si el lector está situado al final de la secuencia.
        </summary>
      <returns>
          
            Es true si el lector está situado al final de la secuencia; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor del atributo con el índice especificado.
        </summary>
      <returns>
          Valor del atributo especificado. Este método no desplaza el lector.
        </returns>
      <param name="i">
              Índice del atributo. El índice se basa en cero. El primer atributo tiene índice 0. 
            </param>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor del atributo con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada.
        </summary>
      <returns>
          Valor del atributo especificado. Si no se encuentra el atributo, se devuelve null.
        </returns>
      <param name="name">
              Nombre completo del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor del atributo con las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificadas.
        </summary>
      <returns>
          Valor del atributo especificado. Si no se encuentra el atributo, se devuelve null. Este método no desplaza el lector.
        </returns>
      <param name="name">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="P:System.Xml.XmlReader.HasAttributes">
      <summary>
          Obtiene un valor que indica si el nodo actual tiene atributos.
        </summary>
      <returns>
          
            Es true si el nodo actual tiene atributos; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.HasValue">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlReader.Value" />.
        </summary>
      <returns>
          
            Es true si el nodo en el que está situado actualmente el lector puede tener un Value; en caso contrario, es false. Si es false, el nodo tiene un valor de String.Empty.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.IsDefault">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene un valor que indica si el nodo actual es un atributo generado a partir del valor predeterminado definido en la DTD o el esquema.
        </summary>
      <returns>
          
            Es true si el nodo actual es un atributo cuyo valor fue generado a partir del valor predeterminado definido en la DTD o el esquema; es false si el valor de atributo se estableció explícitamente.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.IsEmptyElement">
      <summary>
          Cuando se invalida en una clase derivada, obtiene un valor que indica si el nodo actual es un elemento vacío (por ejemplo, &lt;MyElement/&gt;).
        </summary>
      <returns>
          
            Es true si el nodo actual es un elemento (<see cref="P:System.Xml.XmlReader.NodeType" /> es igual a XmlNodeType.Element) que termina en /&gt;; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsName(System.String)">
      <summary>
          Obtiene un valor que indica si el argumento de cadena es un nombre XML válido.
        </summary>
      <returns>
          
            Es true si el nombre es válido; en caso contrario, es false.
        </returns>
      <param name="str">
              Nombre que se va a validar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
      <summary>
          Obtiene un valor que indica si el argumento de cadena es un símbolo (token) de nombre XML válido.
        </summary>
      <returns>
          
            Es true si es un símbolo de nombre válido; en caso contrario, es false.
        </returns>
      <param name="str">
              Símbolo de nombre que se va a validar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement">
      <summary>
          Llama al método <see cref="M:System.Xml.XmlReader.MoveToContent" /> y comprueba si el nodo de contenido actual es una etiqueta de apertura o una etiqueta de elemento vacío.
        </summary>
      <returns>
          
            Es true si <see cref="M:System.Xml.XmlReader.MoveToContent" /> encuentra una etiqueta de apertura o una etiqueta de elemento vacío; es false si se encuentra un tipo de nodo que no sea XmlNodeType.Element.
        </returns>
      <exception cref="T:System.Xml.XmlException">
              Se detecta XML incorrecto en la secuencia de entrada. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
      <summary>
          Llama al método <see cref="M:System.Xml.XmlReader.MoveToContent" /> y comprueba si el nodo de contenido actual es una etiqueta de apertura o una etiqueta de elemento vacío y si la propiedad <see cref="P:System.Xml.XmlReader.Name" /> del elemento encontrado coincide con el argumento especificado.
        </summary>
      <returns>
          
            true si el nodo resultante es un elemento y la propiedad Name coincide con la cadena especificada. false si se encuentra un tipo de nodo que no es XmlNodeType.Element o la propiedad Name del elemento no coincide con la cadena especificada.
        </returns>
      <param name="name">
              Cadena que se compara con la propiedad Name del elemento encontrado. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              Se detecta XML incorrecto en la secuencia de entrada. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
      <summary>
          Llama al método <see cref="M:System.Xml.XmlReader.MoveToContent" /> y comprueba si el nodo de contenido actual es una etiqueta de apertura o una etiqueta de elemento vacío y si las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento encontrado coinciden con las cadenas especificadas.
        </summary>
      <returns>
          
            true si el nodo resultante es un elemento. false si se encuentra un tipo de nodo que no es XmlNodeType.Element o si las propiedades LocalName y NamespaceURI del elemento no coinciden con las cadenas especificadas.
        </returns>
      <param name="localname">
              Cadena con la que se compara la propiedad LocalName del elemento encontrado. 
            </param>
      <param name="ns">
              Cadena con la que se compara la propiedad NamespaceURI del elemento encontrado. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              Se detecta XML incorrecto en la secuencia de entrada. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.Int32)">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor del atributo con el índice especificado.
        </summary>
      <returns>
          Valor del atributo especificado.
        </returns>
      <param name="i">
              Índice del atributo. 
            </param>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor del atributo con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada.
        </summary>
      <returns>
          Valor del atributo especificado. Si no se encuentra el atributo, se devuelve null.
        </returns>
      <param name="name">
              Nombre completo del atributo. 
            </param>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor del atributo con las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificadas.
        </summary>
      <returns>
          Valor del atributo especificado. Si no se encuentra el atributo, se devuelve null.
        </returns>
      <param name="name">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="P:System.Xml.XmlReader.LocalName">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el nombre local del nodo actual.
        </summary>
      <returns>
          Nombre del nodo actual sin prefijo. Por ejemplo, LocalName es book para el elemento &lt;bk:book&gt;.
          Para los tipos de nodo sin nombre (por ejemplo, Text, Comment, etc.), esta propiedad devuelve String.Empty.
        </returns>
    </member>
    <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.
        </summary>
      <returns>
          Identificador URI de espacio de nombres al que se asigna el prefijo o null si no se encuentra ningún prefijo coincidente.
        </returns>
      <param name="prefix">
              Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía. 
            </param>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
      <summary>
          Cuando se reemplaza en una clase derivada, se desplaza al atributo con el índice especificado.
        </summary>
      <param name="i">
              Índice del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, se desplaza al atributo con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada.
        </summary>
      <returns>
          
            Es true si se encuentra el atributo; en caso contrario, es false. Si es false, no cambia la posición del lector.
        </returns>
      <param name="name">
              Nombre completo del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, se desplaza al atributo con las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificadas.
        </summary>
      <returns>
          
            Es true si se encuentra el atributo; en caso contrario, es false. Si es false, no cambia la posición del lector.
        </returns>
      <param name="name">
              Nombre local del atributo. 
            </param>
      <param name="ns">
              URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContent">
      <summary>
          Comprueba si el nodo actual es un nodo de contenido (texto sin espacios en blanco, CDATA, Element, EndElement, EntityReference o EndEntity). Si el nodo no es un nodo de contenido, el lector salta hasta el siguiente nodo de contenido o el final del archivo. Omite los siguientes tipos de nodo: ProcessingInstruction, DocumentType, Comment, Whitespace o SignificantWhitespace.
        </summary>
      <returns>
          <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo actual encontrado por el método o XmlNodeType.None si el lector ha alcanzado el final de la secuencia de entrada.
        </returns>
      <exception cref="T:System.Xml.XmlException">
              XML incorrecto que se encuentra en la secuencia de entrada. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToElement">
      <summary>
          Cuando se reemplaza en una clase derivada, se desplaza al elemento que contiene el nodo de atributo actual.
        </summary>
      <returns>
          
            Es true si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es false si el lector no está situado en un atributo (no cambia la posición del lector).
        </returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToFirstAttribute">
      <summary>
          Cuando se reemplaza en una clase derivada, se desplaza hasta el primer atributo.
        </summary>
      <returns>
          
            Es true si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es false (no cambia la posición del lector).
        </returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToNextAttribute">
      <summary>
          Cuando se reemplaza en una clase derivada, se desplaza hasta el siguiente atributo.
        </summary>
      <returns>
          
            Es true si hay siguiente atributo; es false si no hay más atributos.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.Name">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el nombre completo del nodo actual.
        </summary>
      <returns>
          Nombre completo del nodo actual. Por ejemplo, Name es bk:book para el elemento &lt;bk:book&gt;.
          El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo. Los siguientes tipos de nodo devuelven los valores que figuran en la lista. Todos los demás tipos de nodo devuelven una cadena vacía.
          
            
              
                
                  Tipo de nodo 
                
                
                  Nombre 
                
              
            
            
              
                
                  Attribute
                
              
              
                Nombre del atributo. 
              
            
            
              
                
                  DocumentType
                
              
              
                Nombre del tipo de documento. 
              
            
            
              
                
                  Element
                
              
              
                Nombre de la etiqueta. 
              
            
            
              
                
                  EntityReference
                
              
              
                Nombre de la entidad a la que se hace referencia. 
              
            
            
              
                
                  ProcessingInstruction
                
              
              
                Destino de la instrucción de procesamiento. 
              
            
            
              
                
                  XmlDeclaration
                
              
              
                Cadena literal xml. 
              
            
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.NamespaceURI">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el identificador URI de espacio de nombres (según se define en la especificación relativa a espacios de nombres del Consorcio W3C) del nodo en el que está situado el lector.
        </summary>
      <returns>
          Identificador URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.NameTable">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> que está asociado a esta implementación.
        </summary>
      <returns>
          XmlNameTable que permite obtener la versión subdividida de una cadena en el nodo.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.NodeType">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.XmlNodeType" /> que representa el tipo del nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.Prefix">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el prefijo de espacio de nombres asociado al nodo actual.
        </summary>
      <returns>
          Prefijo de espacio de nombres asociado al nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.QuoteChar">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el carácter de comillas entre las que se encierra el valor de un nodo de atributo.
        </summary>
      <returns>
          Carácter de comillas (" o ') entre las que se encierra el valor de un nodo de atributo.
        </returns>
    </member>
    <member name="M:System.Xml.XmlReader.Read">
      <summary>
          Cuando se reemplaza en una clase derivada, lee el siguiente nodo de la secuencia.
        </summary>
      <returns>
          
            Es true si se lee correctamente el siguiente nodo; es false si no hay más nodos para leer.
        </returns>
      <exception cref="T:System.Xml.XmlException">
              Se ha producido un error al analizar el fragmento de XML. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAttributeValue">
      <summary>
          Cuando se reemplaza en una clase derivada, analiza el valor de atributo en uno o varios nodos Text, EntityReference o EndEntity.
        </summary>
      <returns>
          
            Es true si hay nodos para devolver.
          
            Es false si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se han leído todos los valores de atributo.
          Un atributo vacío, como misc="", devuelve true con un solo nodo cuyo valor es String.Empty.
        </returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>
          Lee el contenido como objeto del tipo especificado.
        </summary>
      <returns>
          Contenido de texto concatenado o valor de atributo convertido en el tipo solicitado.
        </returns>
      <param name="returnType">
              Tipo del valor que se va a devolver.
              
                Con el lanzamiento de .NET Framework 3.5, el valor del parámetro <paramref name="returnType" /> ahora puede ser el tipo de <see cref="T:System.DateTimeOffset" />.
              
            </param>
      <param name="namespaceResolver">
              Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipos. Por ejemplo, se puede utilizar al convertir un objeto <see cref="T:System.Xml.XmlQualifiedName" /> en xs:string.
              Este valor puede ser null.
            </param>
      <exception cref="T:System.FormatException">
              El formato del contenido no es correcto para el tipo de destino.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión intentada no es válida.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="returnType" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual no es un tipo de nodo compatible. Vea la siguiente tabla para obtener información detallada.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el contenido y devuelve los bytes binarios descodificados en Base64.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              Búfer donde se va a copiar el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.
            </param>
      <param name="count">
              Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                El método <see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.
            </exception>
      <exception cref="T:System.NotSupportedException">
              La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el contenido y devuelve los bytes binarios descodificados de BinHex.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              Búfer donde se va a copiar el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.
            </param>
      <param name="count">
              Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                El método <see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.
            </exception>
      <exception cref="T:System.NotSupportedException">
              La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBoolean">
      <summary>
          Lee el contenido de texto en la posición actual como valor Boolean.
        </summary>
      <returns>
          El contenido del texto como objeto <see cref="T:System.Boolean" />.
        </returns>
      <exception cref="T:System.InvalidCastException">
              La conversión intentada no es válida.
            </exception>
      <exception cref="T:System.FormatException">
              El formato de la cadena no es válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTime">
      <summary>
          Lee el contenido de texto en la posición actual como objeto <see cref="T:System.DateTime" />.
        </summary>
      <returns>
          El contenido del texto como objeto <see cref="T:System.DateTime" />.
        </returns>
      <exception cref="T:System.InvalidCastException">
              La conversión intentada no es válida.
            </exception>
      <exception cref="T:System.FormatException">
              El formato de la cadena no es válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDecimal">
      <summary>
          Lee el contenido de texto en la posición actual como objeto <see cref="T:System.Decimal" />.
        </summary>
      <returns>
          El contenido de texto en la posición actual como objeto <see cref="T:System.Decimal" />.
        </returns>
      <exception cref="T:System.InvalidCastException">
              La conversión intentada no es válida.
            </exception>
      <exception cref="T:System.FormatException">
              El formato de la cadena no es válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDouble">
      <summary>
          Lee el contenido de texto en la posición actual como número de punto flotante de precisión doble.
        </summary>
      <returns>
          El contenido de texto como número de punto flotante de precisión doble.
        </returns>
      <exception cref="T:System.InvalidCastException">
              La conversión intentada no es válida.
            </exception>
      <exception cref="T:System.FormatException">
              El formato de la cadena no es válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsFloat">
      <summary>
          Lee el contenido de texto en la posición actual como número de punto flotante de precisión simple.
        </summary>
      <returns>
          El contenido de texto en la posición actual como número de punto flotante de precisión simple.
        </returns>
      <exception cref="T:System.InvalidCastException">
              La conversión intentada no es válida.
            </exception>
      <exception cref="T:System.FormatException">
              El formato de la cadena no es válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsInt">
      <summary>
          Lee el contenido de texto en la posición actual como entero de 32 bits con signo.
        </summary>
      <returns>
          El contenido de texto como entero de 32 bits con signo.
        </returns>
      <exception cref="T:System.InvalidCastException">
              La conversión intentada no es válida.
            </exception>
      <exception cref="T:System.FormatException">
              El formato de la cadena no es válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsLong">
      <summary>
          Lee el contenido de texto en la posición actual como entero de 64 bits con signo.
        </summary>
      <returns>
          El contenido de texto como entero de 64 bits con signo.
        </returns>
      <exception cref="T:System.InvalidCastException">
              La conversión intentada no es válida.
            </exception>
      <exception cref="T:System.FormatException">
              El formato de la cadena no es válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObject">
      <summary>
          Lee el contenido de texto en la posición actual como <see cref="T:System.Object" />.
        </summary>
      <returns>
          El contenido de texto como el objeto de Common Language Runtime (CLR) más adecuado.
        </returns>
      <exception cref="T:System.InvalidCastException">
              La conversión intentada no es válida.
            </exception>
      <exception cref="T:System.FormatException">
              El formato de la cadena no es válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsString">
      <summary>
          Lee el contenido de texto en la posición actual como objeto <see cref="T:System.String" />.
        </summary>
      <returns>
          El contenido del texto como objeto <see cref="T:System.String" />.
        </returns>
      <exception cref="T:System.InvalidCastException">
              La conversión intentada no es válida.
            </exception>
      <exception cref="T:System.FormatException">
              El formato de la cadena no es válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>
          Lee el contenido de los elementos como el tipo solicitado.
        </summary>
      <returns>
          Contenido de elementos convertido en el objeto con tipo solicitado.
        </returns>
      <param name="returnType">
              Tipo del valor que se va a devolver.
              
                Con el lanzamiento de .NET Framework 3.5, el valor del parámetro <paramref name="returnType" /> ahora puede ser el tipo de <see cref="T:System.DateTimeOffset" />.
              
            </param>
      <param name="namespaceResolver">
              Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipos.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido del elemento no se puede convertir en el tipo solicitado.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
      <summary>
          Comprueba que el nombre local especificado y el URI de espacio de nombres coinciden con los del elemento actual y, a continuación, lee el contenido de los elementos como el tipo solicitado.
        </summary>
      <returns>
          Contenido de elementos convertido en el objeto con tipo solicitado.
        </returns>
      <param name="returnType">
              Tipo del valor que se va a devolver.
              
                Con el lanzamiento de .NET Framework 3.5, el valor del parámetro <paramref name="returnType" /> ahora puede ser el tipo de <see cref="T:System.DateTimeOffset" />.
              
            </param>
      <param name="namespaceResolver">
              Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipos.
            </param>
      <param name="localName">
              Nombre local del elemento.
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del elemento.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido del elemento no se puede convertir en el tipo solicitado.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
      <exception cref="T:System.ArgumentException">
              El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el elemento y descodifica el contenido de Base64.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              Búfer donde se va a copiar el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.
            </param>
      <param name="count">
              Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual no es un nodo de elemento.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.
            </exception>
      <exception cref="T:System.NotSupportedException">
              La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento contiene un contenido mixto.
            </exception>
      <exception cref="T:System.FormatException">
              El contenido no puede convertirse en el tipo solicitado.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el elemento y descodifica el contenido de BinHex.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              Búfer donde se va a copiar el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.
            </param>
      <param name="count">
              Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual no es un nodo de elemento.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.
            </exception>
      <exception cref="T:System.NotSupportedException">
              La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento contiene un contenido mixto.
            </exception>
      <exception cref="T:System.FormatException">
              El contenido no puede convertirse en el tipo solicitado.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
      <summary>
          Lee el elemento actual y devuelve el contenido como objeto <see cref="T:System.Boolean" />.
        </summary>
      <returns>
          Contenido de elemento como objeto <see cref="T:System.Boolean" />.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido de elemento no puede convertirse en un objeto <see cref="T:System.Boolean" />.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
      <summary>
          Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.Boolean" />.
        </summary>
      <returns>
          Contenido de elemento como objeto <see cref="T:System.Boolean" />.
        </returns>
      <param name="localName">
              Nombre local del elemento.
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del elemento.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido del elemento no se puede convertir en el tipo solicitado.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
      <exception cref="T:System.ArgumentException">
              El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
      <summary>
          Lee el elemento actual y devuelve el contenido como objeto <see cref="T:System.DateTime" />.
        </summary>
      <returns>
          Contenido de elemento como objeto <see cref="T:System.DateTime" />.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido de elemento no puede convertirse en un objeto <see cref="T:System.DateTime" />.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
      <summary>
          Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.DateTime" />.
        </summary>
      <returns>
          El contenido del elemento como objeto <see cref="T:System.DateTime" />.
        </returns>
      <param name="localName">
              Nombre local del elemento.
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del elemento.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido del elemento no se puede convertir en el tipo solicitado.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
      <exception cref="T:System.ArgumentException">
              El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
      <summary>
          Lee el elemento actual y devuelve el contenido como objeto <see cref="T:System.Decimal" />.
        </summary>
      <returns>
          Contenido de elemento como objeto <see cref="T:System.Decimal" />.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido de elemento no puede convertirse en <see cref="T:System.Decimal" />.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
      <summary>
          Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.Decimal" />.
        </summary>
      <returns>
          Contenido de elemento como objeto <see cref="T:System.Decimal" />.
        </returns>
      <param name="localName">
              Nombre local del elemento.
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del elemento.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido de elemento no puede convertirse en <see cref="T:System.Decimal" />.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
      <exception cref="T:System.ArgumentException">
              El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble">
      <summary>
          Lee el elemento actual y devuelve el contenido como número de punto flotante de precisión doble.
        </summary>
      <returns>
          El contenido del elemento como número de punto flotante de precisión doble.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido del elemento no se puede convertir en número de punto flotante de precisión doble.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
      <summary>
          Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como número de punto flotante de precisión doble.
        </summary>
      <returns>
          El contenido del elemento como número de punto flotante de precisión doble.
        </returns>
      <param name="localName">
              Nombre local del elemento.
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del elemento.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido del elemento no se puede convertir en el tipo solicitado.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
      <exception cref="T:System.ArgumentException">
              El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat">
      <summary>
          Lee el elemento actual y devuelve el contenido como número de punto flotante de precisión simple.
        </summary>
      <returns>
          El contenido del elemento como número de punto flotante de precisión simple.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido del elemento no se puede convertir en número de punto flotante de precisión simple.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
      <summary>
          Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como número de punto flotante de precisión simple.
        </summary>
      <returns>
          El contenido del elemento como número de punto flotante de precisión simple.
        </returns>
      <param name="localName">
              Nombre local del elemento.
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del elemento.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido del elemento no se puede convertir en número de punto flotante de precisión simple.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
      <exception cref="T:System.ArgumentException">
              El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt">
      <summary>
          Lee el elemento actual y devuelve el contenido como entero de 32 bits con signo.
        </summary>
      <returns>
          El elemento contiene un entero de 32 bits con signo.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido del elemento no se puede convertir en un entero de 32 bits con signo.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
      <summary>
          Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee el elemento actual y devuelve el contenido como entero de 32 bits con signo.
        </summary>
      <returns>
          El elemento contiene un entero de 32 bits con signo.
        </returns>
      <param name="localName">
              Nombre local del elemento.
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del elemento.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido del elemento no se puede convertir en un entero de 32 bits con signo.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
      <exception cref="T:System.ArgumentException">
              El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong">
      <summary>
          Lee el elemento actual y devuelve el contenido como entero de 64 bits con signo.
        </summary>
      <returns>
          El elemento contiene un entero de 64 bits con signo.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido del elemento no se puede convertir en un entero de 64 bits con signo.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
      <summary>
          Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee el elemento actual y devuelve el contenido como entero de 64 bits con signo.
        </summary>
      <returns>
          El elemento contiene un entero de 64 bits con signo.
        </returns>
      <param name="localName">
              Nombre local del elemento.
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del elemento.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido del elemento no se puede convertir en un entero de 64 bits con signo.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
      <exception cref="T:System.ArgumentException">
              El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject">
      <summary>
          Lee el elemento actual y devuelve el contenido como objeto <see cref="T:System.Object" />.
        </summary>
      <returns>
          Objeto de Common Language Runtime (CLR) del tipo más adecuado al que se le ha aplicado la conversión boxing. La propiedad <see cref="P:System.Xml.XmlReader.ValueType" /> determina el tipo CLR adecuado. Si el contenido se escribe como tipo de lista, este método devuelve una matriz de objetos del tipo adecuado a los que se les ha aplicado la conversión boxing.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido del elemento no se puede convertir en el tipo solicitado.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
      <summary>
          Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.Object" />.
        </summary>
      <returns>
          Objeto de Common Language Runtime (CLR) del tipo más adecuado al que se le ha aplicado la conversión boxing. La propiedad <see cref="P:System.Xml.XmlReader.ValueType" /> determina el tipo CLR adecuado. Si el contenido se escribe como tipo de lista, este método devuelve una matriz de objetos del tipo adecuado a los que se les ha aplicado la conversión boxing.
        </returns>
      <param name="localName">
              Nombre local del elemento.
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del elemento.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido del elemento no se puede convertir en el tipo solicitado.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
      <exception cref="T:System.ArgumentException">
              El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString">
      <summary>
          Lee el elemento actual y devuelve el contenido como objeto <see cref="T:System.String" />.
        </summary>
      <returns>
          Contenido de elemento como objeto <see cref="T:System.String" />.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido de elemento no puede convertirse en un objeto <see cref="T:System.String" />.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
      <summary>
          Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.String" />.
        </summary>
      <returns>
          Contenido de elemento como objeto <see cref="T:System.String" />.
        </returns>
      <param name="localName">
              Nombre local del elemento.
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del elemento.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento actual contiene elementos secundarios.
              O bien,
              El contenido de elemento no puede convertirse en un objeto <see cref="T:System.String" />.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Se llama al método con argumentos null.
            </exception>
      <exception cref="T:System.ArgumentException">
              El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString">
      <summary>
          Lee un elemento de sólo texto.
        </summary>
      <returns>
          Texto que contiene el elemento leído. Cadena vacía si el elemento está vacío (&lt;item&gt;&lt;/item&gt; o &lt;item/&gt;).
        </returns>
      <exception cref="T:System.Xml.XmlException">
              El siguiente nodo de contenido no es una etiqueta de apertura o el elemento encontrado no contiene un valor de texto simple. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String)">
      <summary>
          Comprueba si la propiedad <see cref="P:System.Xml.XmlReader.Name" /> del elemento encontrado coincide con la cadena especificada antes de leer un elemento de sólo texto.
        </summary>
      <returns>
          Texto que contiene el elemento leído. Cadena vacía si el elemento está vacío (&lt;item&gt;&lt;/item&gt; o &lt;item/&gt;).
        </returns>
      <param name="name">
              Nombre que se va a comprobar. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              Si el siguiente nodo de contenido no es una etiqueta de apertura; si el elemento Name no coincide con el argumento especificado o si el elemento encontrado no contiene un valor de texto simple. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
      <summary>
          Comprueba si las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento encontrado coinciden con las cadenas especificadas antes de leer un elemento de sólo texto.
        </summary>
      <returns>
          Texto que contiene el elemento leído. Cadena vacía si el elemento está vacío (&lt;item&gt;&lt;/item&gt; o &lt;item/&gt;).
        </returns>
      <param name="localname">
              Nombre local que se va a comprobar. 
            </param>
      <param name="ns">
              Identificador URI de espacio de nombres que se va a comprobar. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              Si el siguiente nodo de contenido no es una etiqueta de apertura; si el elemento LocalName o NamespaceURI no coincide con los argumentos especificados o si el elemento encontrado no contiene un valor de texto simple. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadEndElement">
      <summary>
          Comprueba si el nodo de contenido actual es una etiqueta de cierre y desplaza el lector hasta el siguiente nodo.
        </summary>
      <exception cref="T:System.Xml.XmlException">
              El nodo actual no es una etiqueta de cierre o si se encuentra XML incorrecto en la secuencia de entrada. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXml">
      <summary>
          Cuando se reemplaza en una clase derivada, lee todo el contenido, incluido el marcado, como una cadena.
        </summary>
      <returns>
          Todo el contenido XML, incluido el marcado, del nodo actual. Si el nodo actual no tiene nodos secundarios, se devuelve una cadena vacía.
          Si el nodo actual no es un elemento ni un atributo, se devuelve una cadena vacía.
        </returns>
      <exception cref="T:System.Xml.XmlException">
              El fragmento de XML no está bien formado o se ha producido un error al analizarlo. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXml">
      <summary>
          Cuando se reemplaza en una clase derivada, lee el contenido, incluido el marcado, que representa este nodo y todos sus nodos secundarios.
        </summary>
      <returns>
          Si el lector está situado en un nodo de elemento o de atributo, este método devuelve todo el contenido XML, incluido el marcado, del nodo actual y de todos sus nodos secundarios; en caso contrario, devuelve una cadena vacía.
        </returns>
      <exception cref="T:System.Xml.XmlException">
              El fragmento de XML no está bien formado o se ha producido un error al analizarlo. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement">
      <summary>
          Comprueba si el nodo actual es un elemento y desplaza el lector hasta el siguiente nodo.
        </summary>
      <exception cref="T:System.Xml.XmlException">
              
                <see cref="M:System.Xml.XmlReader.IsStartElement" /> devuelve false. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
      <summary>
          Comprueba si el nodo de contenido actual es un elemento con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada y desplaza el lector hasta el siguiente nodo.
        </summary>
      <param name="name">
              Nombre completo del elemento. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              
                <see cref="M:System.Xml.XmlReader.IsStartElement" /> devuelve false o si la propiedad <see cref="P:System.Xml.XmlReader.Name" /> del elemento no coincide con el parámetro <paramref name="name" /> especificado. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
      <summary>
          Comprueba si el nodo de contenido actual es un elemento con las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificadas y desplaza el lector hasta el siguiente nodo.
        </summary>
      <param name="localname">
              Nombre local del elemento. 
            </param>
      <param name="ns">
              Identificador URI de espacio de nombres del elemento. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              
                <see cref="M:System.Xml.XmlReader.IsStartElement" /> devuelve false, o las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento encontrado no coinciden con los argumentos especificados. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlReader.ReadState">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el estado del lector.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.ReadState" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadString">
      <summary>
          Cuando se reemplaza en una clase derivada, lee el contenido de un nodo de elemento o de texto como una cadena.
        </summary>
      <returns>
          El contenido del elemento o una cadena vacía.
        </returns>
      <exception cref="T:System.Xml.XmlException">
              Se ha producido un error al analizar el fragmento de XML. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadSubtree">
      <summary>
          Devuelve una nueva instancia de XmlReader que se puede utilizar para leer el nodo actual y todos sus descendientes.
        </summary>
      <returns>
          Una nueva instancia de XmlReader establecida en ReadState.Initial. Una llamada al método <see cref="M:System.Xml.XmlReader.Read" /> coloca el nuevo objeto XmlReader en el nodo que era el actual antes de la llamada al método ReadSubtree.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El objeto XmlReader no se coloca en ningún elemento cuando se llama a este método.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
      <summary>
          Hace avanzar el objeto <see cref="T:System.Xml.XmlReader" /> hasta al siguiente elemento descendiente con el nombre completo especificado.
        </summary>
      <returns>
          
            Es true si se encuentra un elemento descendiente; en caso contrario, es false. Si no se encuentra ningún elemento secundario relacionado, el objeto <see cref="T:System.Xml.XmlReader" /> se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es XmlNodeType.EndElement) del elemento.
          Si el <see cref="T:System.Xml.XmlReader" /> no se coloca en un elemento cuando se llama a <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />, este método devuelve false y la posición del <see cref="T:System.Xml.XmlReader" /> no cambia.
        </returns>
      <param name="name">
              Nombre completo del elemento al que se desea desplazar.
            </param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
      <summary>
          Hace avanzar el objeto <see cref="T:System.Xml.XmlReader" /> hasta el siguiente elemento descendiente que tenga el URI de espacio de nombres y el nombre local especificados.
        </summary>
      <returns>
          
            Es true si se encuentra un elemento descendiente; en caso contrario, es false. Si no se encuentra ningún elemento secundario relacionado, el objeto <see cref="T:System.Xml.XmlReader" /> se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es XmlNodeType.EndElement) del elemento.
          Si el <see cref="T:System.Xml.XmlReader" /> no se coloca en un elemento cuando se llama a <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />, este método devuelve false y la posición del <see cref="T:System.Xml.XmlReader" /> no cambia.
        </returns>
      <param name="localName">
              Nombre local del elemento al que se desea desplazar.
            </param>
      <param name="namespaceURI">
              URI del espacio de nombres del elemento al que se desea desplazar.
            </param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
      <summary>
          Lee hasta que encuentra un elemento con el nombre completo especificado.
        </summary>
      <returns>
          
            Es true si se encuentra un elemento coincidente; de lo contrario, es false y el objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de final de archivo.
        </returns>
      <param name="name">
              Nombre completo del elemento.
            </param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
      <summary>
          Lee hasta que encuentra un elemento con el nombre local y el URI de espacio de nombres especificados.
        </summary>
      <returns>
          
            Es true si se encuentra un elemento coincidente; de lo contrario, es false y el objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de final de archivo.
        </returns>
      <param name="localName">
              Nombre local del elemento.
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del elemento.
            </param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
      <summary>
          Hace avanzar el objeto XmlReader hasta al siguiente elemento relacionado con el nombre completo especificado.
        </summary>
      <returns>
          
            Es true si se encuentra un elemento relacionado; en caso contrario, es false. Si no se encuentra ningún elemento relacionado, el objeto XmlReader se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es XmlNodeType.EndElement) del elemento principal.
        </returns>
      <param name="name">
              Nombre completo del elemento relacionado al que se desea desplazar.
            </param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
      <summary>
          Hace avanzar el objeto XmlReader hasta el siguiente elemento relacionado que tenga el URI del espacio de nombres y el nombre local especificados.
        </summary>
      <returns>
          
            Es true si se encuentra un elemento relacionado; en caso contrario, es false. Si no se encuentra ningún elemento relacionado, el objeto XmlReader se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es XmlNodeType.EndElement) del elemento principal.
        </returns>
      <param name="localName">
              Nombre local del elemento relacionado al que se desea desplazar.
            </param>
      <param name="namespaceURI">
              URI del espacio de nombres del elemento relacionado al que se desea desplazar
            </param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
      <summary>
          Lee grandes secuencias de texto incrustadas en un documento XML.
        </summary>
      <returns>
          Número de caracteres leídos en el búfer. Si no hay más contenido de texto, se devuelve el valor cero.
        </returns>
      <param name="buffer">
              Matriz de caracteres que sirve como búfer en el que se escribe el contenido de texto. Este valor no puede ser null.
            </param>
      <param name="index">
              Desplazamiento en el búfer en el que <see cref="T:System.Xml.XmlReader" /> puede empezar a copiar los resultados.
            </param>
      <param name="count">
              Número máximo de caracteres que se van a copiar en el búfer. El número real de caracteres copiados se devuelve desde este método.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual no tiene ningún valor (<see cref="P:System.Xml.XmlReader.HasValue" /> es false).
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.
            </exception>
      <exception cref="T:System.NotSupportedException">
              La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El formato de los datos XML no es correcto.
            </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ResolveEntity">
      <summary>
          Cuando se reemplaza en una clase derivada, resuelve la referencia a entidad para los nodos EntityReference.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              El lector no está situado en un nodo EntityReference; esta implementación del lector no puede resolver entidades (<see cref="P:System.Xml.XmlReader.CanResolveEntity" /> devuelve false). 
            </exception>
    </member>
    <member name="P:System.Xml.XmlReader.SchemaInfo">
      <summary>
          Obtiene la información del esquema asignada al nodo actual como resultado de la validación del esquema.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene la información de esquema del nodo actual. La información del esquema se puede establecer en elementos, atributos o nodos de texto con un <see cref="P:System.Xml.XmlReader.ValueType" /> no nulo (valores con tipo). 
          Si el nodo actual no es ninguno de los tipos de nodo anteriores, o si la instancia de XmlReader no proporciona la información del esquema, esta propiedad devuelve null.
          Si los objetos <see cref="T:System.Xml.XmlTextReader" /> y <see cref="T:System.Xml.XmlValidatingReader" /> llaman a esta propiedad, siempre devuelve null. Estas implementaciones de XmlReader no exponen ninguna información de esquema a través de la propiedad SchemaInfo.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.Settings">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.XmlReaderSettings" /> utilizado para crear esta instancia de <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReaderSettings" /> utilizado para crear esta instancia del lector. Si este lector no se creó utilizando el método <see cref="Overload:System.Xml.XmlReader.Create" />, esta propiedad devuelve null.
        </returns>
    </member>
    <member name="M:System.Xml.XmlReader.Skip">
      <summary>
          Omite los nodos secundarios del nodo actual.
        </summary>
    </member>
    <member name="M:System.Xml.XmlReader.System#IDisposable#Dispose">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.IDisposable.Dispose" />.
        </summary>
    </member>
    <member name="P:System.Xml.XmlReader.Value">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor de texto del nodo actual.
        </summary>
      <returns>
          El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo. En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver. Todos los demás tipos de nodo devuelven String.Empty.
          
            
              
                
                  Tipo de nodo 
                
                
                  Valor 
                
              
            
            
              
                
                  Attribute
                
              
              
                Valor del atributo. 
              
            
            
              
                
                  CDATA
                
              
              
                Contenido de la sección CDATA. 
              
            
            
              
                
                  Comment
                
              
              
                Contenido del comentario. 
              
            
            
              
                
                  DocumentType
                
              
              
                Subconjunto interno. 
              
            
            
              
                
                  ProcessingInstruction
                
              
              
                Todo el contenido, salvo el destino. 
              
            
            
              
                
                  SignificantWhitespace
                
              
              
                Espacio en blanco entre marcas en un modelo de contenido mixto. 
              
            
            
              
                
                  Text
                
              
              
                Contenido del nodo de texto. 
              
            
            
              
                
                  Whitespace
                
              
              
                Espacio en blanco entre marcas. 
              
            
            
              
                
                  XmlDeclaration
                
              
              
                Contenido de la declaración. 
              
            
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.ValueType">
      <summary>
          Obtiene el tipo de Common Language Runtime (CLR) del nodo actual.
        </summary>
      <returns>
          Tipo de CLR correspondiente al valor con tipo del nodo. El valor predeterminado es System.String.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.XmlLang">
      <summary>
          Cuando se reemplaza en una clase derivada, se obtiene el ámbito de xml:lang actual.
        </summary>
      <returns>
          Ámbito de xml:lang actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReader.XmlSpace">
      <summary>
          Cuando se reemplaza en una clase derivada, se obtiene el ámbito de xml:space actual.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.XmlSpace" />. Si no existe ningún ámbito de xml:space, el valor predeterminado de esta propiedad será XmlSpace.None.
        </returns>
    </member>
    <member name="T:System.Xml.XmlReaderSettings">
      <summary>
          Especifica un conjunto de características compatibles en el objeto <see cref="T:System.Xml.XmlReader" /> creado mediante el método <see cref="Overload:System.Xml.XmlReader.Create" />.
        </summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlReaderSettings" />.
        </summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CheckCharacters">
      <summary>
          Obtiene o establece un valor que indica si se va a realizar la comprobación de caracteres.
        </summary>
      <returns>
          
            Es true si se va a realizar la comprobación de caracteres; en caso contrario, es false. El valor predeterminado es true.
          
            Si <see cref="T:System.Xml.XmlReader" /> procesa datos de texto, siempre comprueba que los nombres XML y el contenido de texto son válidos, independientemente de la configuración de la propiedad. Al establecer la propiedad <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> en false, se desactiva la comprobación de caracteres en las referencias a entidades de caracteres.
          
        </returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Clone">
      <summary>
          Crea una copia de la instancia de <see cref="T:System.Xml.XmlReaderSettings" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReaderSettings" /> clonado.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CloseInput">
      <summary>
          Obtiene o establece un valor que indica si se debe cerrar la secuencia o el objeto <see cref="T:System.IO.TextReader" /> subyacente al cerrar el lector.
        </summary>
      <returns>
          
            Es true para cerrar la secuencia o <see cref="T:System.IO.TextReader" /> subyacente al cerrar el lector; en caso contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ConformanceLevel">
      <summary>
          Obtiene o establece el nivel de conformidad que cumplirá <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.ConformanceLevel" />. El valor predeterminado es ConformanceLevel.Document.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreComments">
      <summary>
          Obtiene o establece un valor que indica si se van a omitir los comentarios.
        </summary>
      <returns>
          
            Es true para omitir los comentarios; en caso contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions">
      <summary>
          Obtiene o establece un valor que indica si se van a omitir las instrucciones de procesamiento.
        </summary>
      <returns>
          
            Es true para omitir las instrucciones de procesamiento; en caso contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreWhitespace">
      <summary>
          Obtiene o establece un valor que indica si se va a omitir el espacio en blanco no significativo.
        </summary>
      <returns>
          
            Es true para omitir el espacio en blanco; en caso contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LineNumberOffset">
      <summary>
          Obtiene o establece el desplazamiento del número de línea del objeto <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <returns>
          Desplazamiento del número de línea. El valor predeterminado es 0.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LinePositionOffset">
      <summary>
          Obtiene o establece el desplazamiento de la posición de línea del objeto <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <returns>
          Desplazamiento del número de línea. El valor predeterminado es 0.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities">
      <summary>
          Obtiene o establece un valor que indica el número máximo de caracteres permitido en un documento que resulta de expandir las entidades.
        </summary>
      <returns>
          El número máximo de caracteres permitido de las entidades expandidas. El valor predeterminado es 0.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument">
      <summary>
          Obtiene o establece un valor que indica el número máximo de caracteres permitido en un documento XML. Un valor cero (0) significa que no existe ningún límite en el tamaño del documento XML. Un valor distinto de cero especifica el tamaño máximo, en caracteres.
        </summary>
      <returns>
          El número máximo de caracteres permitido en un documento XML. El valor predeterminado es 0.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.NameTable">
      <summary>
          Obtiene o establece el objeto <see cref="T:System.Xml.XmlNameTable" /> utilizado para las comparaciones de cadenas subdivididas.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlNameTable" /> que almacena todas las cadenas subdivididas que utilizan todas las instancias del objeto <see cref="T:System.Xml.XmlReader" /> creadas mediante este objeto <see cref="T:System.Xml.XmlReaderSettings" />.
          El valor predeterminado es null. La instancia de <see cref="T:System.Xml.XmlReader" /> creada utilizará un nuevo objeto <see cref="T:System.Xml.NameTable" /> vacío si este valor es null.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ProhibitDtd">
      <summary>
          Obtiene o establece un valor que indica si se va a prohibir el procesamiento de la definición de tipo de documento (DTD).
        </summary>
      <returns>
          
            Es true para prohibir el procesamiento de DTD; en caso contrario, es false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Reset">
      <summary>
          Restablece los miembros de la clase de configuración a sus valores predeterminados.
        </summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Schemas">
      <summary>
          Obtiene o establece el <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que se va a utilizar al realizar la validación del esquema.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que se va a utilizar. El valor predeterminado es un objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vacío
        </returns>
    </member>
    <member name="E:System.Xml.XmlReaderSettings.ValidationEventHandler">
      <summary>
          Se produce cuando el lector encuentra errores de validación.
        </summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationFlags">
      <summary>
          Obtiene o establece un valor que indica la configuración de validación de esquemas. Esta configuración se aplica a los objetos <see cref="T:System.Xml.XmlReader" /> que validan esquemas (con la propiedad <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> establecida en ValidationType.Schema).
        </summary>
      <returns>
          Un conjunto de los valores <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> y <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> están habilitados de forma predeterminada. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> y <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> están deshabilitados de forma predeterminada.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationType">
      <summary>
          Obtiene o establece un valor que indica si el objeto <see cref="T:System.Xml.XmlReader" /> realizará la validación o la asignación de tipos al leer.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.ValidationType" />. El valor predeterminado es ValidationType.None.
        </returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.XmlResolver">
      <summary>
          Establece el objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para obtener acceso a documentos externos.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para tener acceso a documentos externos. Si se establece en null, se produce una excepción <see cref="T:System.Xml.XmlException" /> cuando el objeto <see cref="T:System.Xml.XmlReader" /> intenta obtener acceso a un recurso externo. El valor predeterminado es un nuevo objeto <see cref="T:System.Xml.XmlUrlResolver" /> sin credenciales.
        </returns>
    </member>
    <member name="T:System.Xml.XmlResolver">
      <summary>
          Resuelve los recursos XML externos designados por un identificador de recursos uniforme (URI). 
        </summary>
    </member>
    <member name="M:System.Xml.XmlResolver.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlResolver" />.
        </summary>
    </member>
    <member name="P:System.Xml.XmlResolver.Credentials">
      <summary>
          Cuando se reemplaza en una clase derivada, establece las credenciales utilizadas para autenticar las solicitudes Web.
        </summary>
      <returns>
          Objeto <see cref="T:System.Net.ICredentials" />. Si no se establece esta propiedad, el valor predeterminado es null; es decir, el objeto XmlResolver no tiene credenciales de usuario.
        </returns>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>
          Cuando se reemplaza en una clase derivada, asigna un identificador URI a un objeto que contiene el recurso real.
        </summary>
      <returns>
          Objeto System.IO.Stream o null si se especifica un tipo que no sea una secuencia.
        </returns>
      <param name="absoluteUri">
              Identificador URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />. 
            </param>
      <param name="role">
              La versión actual no utiliza este parámetro al resolver identificadores URI. Se incluye para futuros fines de extensibilidad. Por ejemplo, se puede asignar esto a xlink:role y utilizar como un argumento específico de la implementación en otros escenarios. 
            </param>
      <param name="ofObjectToReturn">
              Tipo de objeto que se va a devolver. La versión actual sólo devuelve objetos System.IO.Stream. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              
                <paramref name="ofObjectToReturn" /> no es un tipo null ni Stream. 
            </exception>
      <exception cref="T:System.UriFormatException">
              El identificador URI especificado no es un identificador URI absoluto. 
            </exception>
      <exception cref="T:System.NullReferenceException">
              
                <paramref name="absoluteUri" /> es null. 
            </exception>
      <exception cref="T:System.Exception">
              Se ha producido un error en tiempo de ejecución (por ejemplo, una interrupción en la conexión con el servidor). 
            </exception>
    </member>
    <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, resuelve el identificador URI absoluto a partir de los identificadores URI base y relativo.
        </summary>
      <returns>
          <see cref="T:System.Uri" /> que representa el URI absoluto o null si el URI relativo no se puede resolver.
        </returns>
      <param name="baseUri">
              Identificador URI base que se utiliza para resolver el identificador URI relativo 
            </param>
      <param name="relativeUri">
              Identificador URI que se va a resolver. El identificador URI puede ser absoluto o relativo. Si es absoluto, este valor reemplaza de manera efectiva el valor de <paramref name="baseUri" />. Si es relativo, se combina con <paramref name="baseUri" /> para formar un identificador URI absoluto. 
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="relativeUri" /> es null
            </exception>
    </member>
    <member name="T:System.Xml.XmlSecureResolver">
      <summary>
          Ayuda a proteger otra implementación de <see cref="T:System.Xml.XmlResolver" /> ajustando el objeto <see cref="T:System.Xml.XmlResolver" /> y restringiendo los recursos a los que tiene acceso el <see cref="T:System.Xml.XmlResolver" /> subyacente.
        </summary>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlSecureResolver" /> con los objetos <see cref="T:System.Xml.XmlResolver" /> y <see cref="T:System.Security.PermissionSet" /> especificados.
        </summary>
      <param name="resolver">
              <see cref="T:System.Xml.XmlResolver" /> contenido por <see cref="T:System.Xml.XmlSecureResolver" />. 
            </param>
      <param name="permissionSet">
              <see cref="T:System.Security.PermissionSet" /> que se va a aplicar al <see cref="T:System.Xml.XmlResolver" /> subyacente. El <see cref="T:System.Xml.XmlSecureResolver" /> llama a <see cref="M:System.Security.PermissionSet.PermitOnly" /> en el objeto <see cref="T:System.Security.PermissionSet" /> antes de llamar a <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente. 
            </param>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlSecureResolver" /> con los objetos <see cref="T:System.Xml.XmlResolver" /> y <see cref="T:System.Security.Policy.Evidence" /> especificados.
        </summary>
      <param name="resolver">
              <see cref="T:System.Xml.XmlResolver" /> contenido por <see cref="T:System.Xml.XmlSecureResolver" />. 
            </param>
      <param name="evidence">
              <see cref="T:System.Security.Policy.Evidence" /> utilizado para crear el objeto <see cref="T:System.Security.PermissionSet" /> que se aplicará al <see cref="T:System.Xml.XmlResolver" /> subyacente. El <see cref="T:System.Xml.XmlSecureResolver" /> llama a <see cref="M:System.Security.PermissionSet.PermitOnly" /> en el objeto <see cref="T:System.Security.PermissionSet" /> creado antes de llamar a <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente. 
            </param>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlSecureResolver" /> con el objeto <see cref="T:System.Xml.XmlResolver" /> y la dirección URL especificados.
        </summary>
      <param name="resolver">
              <see cref="T:System.Xml.XmlResolver" /> contenido por <see cref="T:System.Xml.XmlSecureResolver" />. 
            </param>
      <param name="securityUrl">
              Dirección URL utilizada para crear el objeto <see cref="T:System.Security.PermissionSet" /> que se aplicará al <see cref="T:System.Xml.XmlResolver" /> subyacente. El <see cref="T:System.Xml.XmlSecureResolver" /> llama a <see cref="M:System.Security.PermissionSet.PermitOnly" /> en el objeto <see cref="T:System.Security.PermissionSet" /> creado antes de llamar a <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente. 
            </param>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)">
      <summary>
          Crea un objeto <see cref="T:System.Security.Policy.Evidence" /> con la dirección URL proporcionada.
        </summary>
      <returns>
          Objeto <see cref="T:System.Security.Policy.Evidence" /> generado a partir de la dirección URL proporcionada, definida por la directiva predeterminada.
        </returns>
      <param name="securityUrl">
              Dirección URL utilizada para crear el objeto <see cref="T:System.Security.Policy.Evidence" />. 
            </param>
    </member>
    <member name="P:System.Xml.XmlSecureResolver.Credentials">
      <summary>
          Establece las credenciales utilizadas para autenticar las solicitudes Web.
        </summary>
      <returns>
          Objeto <see cref="T:System.Net.ICredentials" />. <see cref="T:System.Xml.XmlSecureResolver" /> establece las credenciales dadas en el <see cref="T:System.Xml.XmlResolver" /> subyacente. Si no se establece esta propiedad, el valor predeterminado es null; es decir, el objeto <see cref="T:System.Xml.XmlSecureResolver" /> no tiene credenciales de usuario.
        </returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>
          Asigna de forma segura un identificador URI a un objeto que contiene el recurso real. Este método establece provisionalmente el objeto <see cref="T:System.Security.PermissionSet" /> creado en el constructor llamando a <see cref="M:System.Security.PermissionSet.PermitOnly" /> antes de llamar a GetEntity en el <see cref="T:System.Xml.XmlResolver" /> subyacente para abrir el recurso.
        </summary>
      <returns>
          Objeto <see cref="T:System.IO.Stream" /> devuelto por una llamada a GetEntity en el <see cref="T:System.Xml.XmlResolver" />. Si se especifica un tipo que no sea Stream, se devuelve null.
        </returns>
      <param name="absoluteUri">
              Identificador URI devuelto desde <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />. 
            </param>
      <param name="role">
              La versión actual no utiliza este parámetro al resolver identificadores URI. Se incluye para futuros fines de extensibilidad. Por ejemplo, se puede asignar a xlink:role y utilizar como argumento específico de la implementación en otros escenarios. 
            </param>
      <param name="ofObjectToReturn">
              Tipo de objeto que se va a devolver. La versión actual sólo devuelve objetos <see cref="T:System.IO.Stream" />. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              
                <paramref name="ofObjectToReturn" /> no es un tipo null ni <see cref="T:System.IO.Stream" />. 
            </exception>
      <exception cref="T:System.UriFormatException">
              El identificador URI especificado no es un identificador URI absoluto. 
            </exception>
      <exception cref="T:System.NullReferenceException">
              
                <paramref name="absoluteUri" /> es null. 
            </exception>
      <exception cref="T:System.Exception">
              Se ha producido un error en tiempo de ejecución (por ejemplo, una interrupción en la conexión con el servidor). 
            </exception>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
      <summary>
          Resuelve el identificador URI absoluto a partir de los URI base y relativo llamando a ResolveUri en el <see cref="T:System.Xml.XmlResolver" /> subyacente.
        </summary>
      <returns>
          <see cref="T:System.Uri" /> que representa el identificador URI o null si el URI relativo no se puede resolver (devuelto mediante una llamada a ResolveUri en el <see cref="T:System.Xml.XmlResolver" /> subyacente).
        </returns>
      <param name="baseUri">
              Identificador URI base que se utiliza para resolver el identificador URI relativo 
            </param>
      <param name="relativeUri">
              Identificador URI que se va a resolver. El identificador URI puede ser absoluto o relativo. Si es absoluto, este valor reemplaza de manera efectiva el valor de <paramref name="baseUri" />. Si es relativo, se combina con <paramref name="baseUri" /> para formar un identificador URI absoluto. 
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="relativeUri" /> es null. 
            </exception>
    </member>
    <member name="T:System.Xml.XmlSignificantWhitespace">
      <summary>
          Representa el espacio en blanco entre marcas en un nodo de contenido mixto o espacio en blanco dentro del ámbito xml:space= "preserve". También se hace referencia a esto como espacio en blanco significativo.
        </summary>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlSignificantWhitespace" />.
        </summary>
      <param name="strData">
              Caracteres de espacio en blanco del nodo.
            </param>
      <param name="doc">
              Objeto <see cref="T:System.Xml.XmlDocument" />.
            </param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo.
        </summary>
      <returns>
          Nodo clonado.
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false sólo para clonar el nodo en sí. Para los nodos de espacio en blanco significativo, el nodo clonado incluye siempre el valor de los datos, con independencia del valor del parámetro. 
            </param>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.LocalName">
      <summary>
          Obtiene el nombre local del nodo.
        </summary>
      <returns>
          Para los nodos XmlSignificantWhitespace, esta propiedad devuelve #significant-whitespace.
        </returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Name">
      <summary>
          Obtiene el nombre completo del nodo.
        </summary>
      <returns>
          Para los nodos XmlSignificantWhitespace, esta propiedad devuelve #significant-whitespace.
        </returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Para los nodos XmlSignificantWhitespace, este valor es XmlNodeType.SignificantWhitespace.
        </returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.ParentNode">
      <summary>
          Obtiene el elemento primario del nodo actual.
        </summary>
      <returns>
          Nodo <see cref="T:System.Xml.XmlNode" /> primario del nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Value">
      <summary>
          Obtiene o establece el valor del nodo.
        </summary>
      <returns>
          Caracteres de espacio en blanco encontrados en el nodo.
        </returns>
      <exception cref="T:System.ArgumentException">
              Establecimiento de Value en caracteres de espacio en blanco no válidos. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="T:System.Xml.XmlSpace">
      <summary>
          Especifica el ámbito de xml:space actual.
        </summary>
    </member>
    <member name="F:System.Xml.XmlSpace.None">
      <summary>
          Sin ámbito de xml:space.
        </summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Default">
      <summary>
          El ámbito de xml:space equivale a default.
        </summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Preserve">
      <summary>
          El ámbito de xml:space equivale a preserve.
        </summary>
    </member>
    <member name="T:System.Xml.XmlText">
      <summary>
          Representa el contenido de texto de un elemento o atributo.
        </summary>
    </member>
    <member name="M:System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>
        </summary>
      <param name="strData">
            </param>
      <param name="doc">
            </param>
    </member>
    <member name="M:System.Xml.XmlText.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo.
        </summary>
      <returns>
          Nodo clonado.
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false sólo para clonar el nodo en sí. 
            </param>
    </member>
    <member name="P:System.Xml.XmlText.LocalName">
      <summary>
          Obtiene el nombre local del nodo.
        </summary>
      <returns>
          Para nodos de texto, esta propiedad devuelve #text.
        </returns>
    </member>
    <member name="P:System.Xml.XmlText.Name">
      <summary>
          Obtiene el nombre completo del nodo.
        </summary>
      <returns>
          Para nodos de texto, esta propiedad devuelve #text.
        </returns>
    </member>
    <member name="P:System.Xml.XmlText.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Para nodos de texto, este valor es XmlNodeType.Text.
        </returns>
    </member>
    <member name="P:System.Xml.XmlText.ParentNode">
      <summary>
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:System.Xml.XmlText.SplitText(System.Int32)">
      <summary>
          Divide el nodo en dos nodos en el desplazamiento especificado, manteniéndolos en el árbol como nodos relacionados.
        </summary>
      <returns>
          Nuevo nodo.
        </returns>
      <param name="offset">
              Desplazamiento en el que se va a dividir el nodo. 
            </param>
    </member>
    <member name="P:System.Xml.XmlText.Value">
      <summary>
          Obtiene o establece el valor del nodo.
        </summary>
      <returns>
          Contenido del nodo Text.
        </returns>
    </member>
    <member name="M:System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda todos los secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Los nodos XmlText no tienen secundarios, por lo que este método no tiene ningún efecto.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              XmlWriter en el que se desea guardar. 
            </param>
    </member>
    <member name="T:System.Xml.XmlTextReader">
      <summary>
          Representa un lector que proporciona acceso rápido a datos XML, sin almacenamiento en caché y con desplazamiento sólo hacia delante.
        </summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor">
      <summary>
          Inicializa una nueva instancia de XmlTextReader.
        </summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la secuencia especificada.
        </summary>
      <param name="input">
              Secuencia que contiene los datos que se van a leer. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="input" /> es null. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la secuencia y el objeto <see cref="T:System.Xml.XmlNameTable" /> especificados.
        </summary>
      <param name="input">
              Secuencia que contiene los datos que se van a leer. 
            </param>
      <param name="nt">
              XmlNameTable que se va a utilizar. 
            </param>
      <exception cref="T:System.NullReferenceException">
              El valor de <paramref name="input" /> o <paramref name="nt" /> es null. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la secuencia y los objetos <see cref="T:System.Xml.XmlNodeType" /> y <see cref="T:System.Xml.XmlParserContext" /> especificados.
        </summary>
      <param name="xmlFragment">
              Secuencia que contiene el fragmento de XML que se va a analizar. 
            </param>
      <param name="fragType">
              <see cref="T:System.Xml.XmlNodeType" /> del fragmento de XML. Esto también determina lo que puede contener el fragmento. Vea la tabla que figura a continuación. 
            </param>
      <param name="context">
              <see cref="T:System.Xml.XmlParserContext" /> donde se va a analizar <paramref name="xmlFragment" />. Esto incluye el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar, la codificación, el ámbito de espacio de nombres, el ámbito de xml:lang actual y el ámbito de xml:space. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              
                <paramref name="fragType" /> no es Element, Attribute ni Document XmlNodeType. 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="xmlFragment" /> es null. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la clase <see cref="T:System.IO.TextReader" /> especificada.
        </summary>
      <param name="input">
              TextReader que contiene los datos XML que se van a leer. 
            </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el <see cref="T:System.IO.TextReader" /> y el <see cref="T:System.Xml.XmlNameTable" /> que se hayan especificado.
        </summary>
      <param name="input">
              TextReader que contiene los datos XML que se van a leer. 
            </param>
      <param name="nt">
              XmlNameTable que se va a utilizar. 
            </param>
      <exception cref="T:System.NullReferenceException">
              El valor de <paramref name="nt" /> es null. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el archivo especificado.
        </summary>
      <param name="url">
              Dirección URL del archivo que contiene los datos XML. La propiedad <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor. 
            </param>
      <exception cref="T:System.IO.FileNotFoundException">
              No se puede encontrar el archivo especificado.
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
              No se puede encontrar parte del nombre de archivo o del directorio.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                <paramref name="url" /> es una cadena vacía.
            </exception>
      <exception cref="T:System.Net.WebException">
              No se puede resolver el nombre de archivo remoto.
              O bien,
              Se ha producido un error al procesar la solicitud.
            </exception>
      <exception cref="T:System.UriFormatException">
              
                <paramref name="url" /> no es un URI válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la dirección URL y la secuencia especificadas.
        </summary>
      <param name="url">
              Dirección URL que se va a utilizar para resolver los recursos externos. La propiedad <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor. 
            </param>
      <param name="input">
              Secuencia que contiene los datos que se van a leer. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="input" /> es null. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la dirección URL, la secuencia y el objeto <see cref="T:System.Xml.XmlNameTable" /> especificados.
        </summary>
      <param name="url">
              Dirección URL que se va a utilizar para resolver los recursos externos. La propiedad <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor. Si la dirección <paramref name="url" /> es null, BaseURI se establece en String.Empty. 
            </param>
      <param name="input">
              Secuencia que contiene los datos que se van a leer. 
            </param>
      <param name="nt">
              XmlNameTable que se va a utilizar. 
            </param>
      <exception cref="T:System.NullReferenceException">
              El valor de <paramref name="input" /> o <paramref name="nt" /> es null. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la dirección URL y el objeto <see cref="T:System.IO.TextReader" /> especificados.
        </summary>
      <param name="url">
              Dirección URL que se va a utilizar para resolver los recursos externos. La propiedad <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor. 
            </param>
      <param name="input">
              TextReader que contiene los datos XML que se van a leer. 
            </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la dirección URL, <see cref="T:System.IO.TextReader" /> y <see cref="T:System.Xml.XmlNameTable" /> especificados.
        </summary>
      <param name="url">
              Dirección URL que se va a utilizar para resolver los recursos externos. La propiedad <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor. Si la dirección <paramref name="url" /> es null, BaseURI se establece en String.Empty. 
            </param>
      <param name="input">
              TextReader que contiene los datos XML que se van a leer. 
            </param>
      <param name="nt">
              XmlNameTable que se va a utilizar. 
            </param>
      <exception cref="T:System.NullReferenceException">
              El valor de <paramref name="nt" /> es null. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el archivo y el objeto <see cref="T:System.Xml.XmlNameTable" /> especificados.
        </summary>
      <param name="url">
              Dirección URL del archivo que contiene los datos XML que se van a leer. 
            </param>
      <param name="nt">
              XmlNameTable que se va a utilizar. 
            </param>
      <exception cref="T:System.NullReferenceException">
              El valor de <paramref name="nt" /> es null.
            </exception>
      <exception cref="T:System.IO.FileNotFoundException">
              No se puede encontrar el archivo especificado.
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
              No se puede encontrar parte del nombre de archivo o del directorio.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                <paramref name="url" /> es una cadena vacía.
            </exception>
      <exception cref="T:System.Net.WebException">
              No se puede resolver el nombre de archivo remoto.
              O bien,
              Se ha producido un error al procesar la solicitud.
            </exception>
      <exception cref="T:System.UriFormatException">
              
                <paramref name="url" /> no es un URI válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la cadena y los objetos <see cref="T:System.Xml.XmlNodeType" /> y <see cref="T:System.Xml.XmlParserContext" /> especificados.
        </summary>
      <param name="xmlFragment">
              Cadena que contiene el fragmento de XML que se va a analizar. 
            </param>
      <param name="fragType">
              <see cref="T:System.Xml.XmlNodeType" /> del fragmento de XML. Esto también determina lo que puede contener la cadena del fragmento. Vea la tabla que figura a continuación. 
            </param>
      <param name="context">
              <see cref="T:System.Xml.XmlParserContext" /> donde se va a analizar <paramref name="xmlFragment" />. Esto incluye el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar, la codificación, el ámbito de espacio de nombres, el ámbito de xml:lang actual y el ámbito de xml:space. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              
                <paramref name="fragType" /> no es Element, Attribute ni DocumentXmlNodeType. 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="xmlFragment" /> es null. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la clase <see cref="T:System.Xml.XmlNameTable" /> especificada.
        </summary>
      <param name="nt">
              XmlNameTable que se va a utilizar. 
            </param>
    </member>
    <member name="P:System.Xml.XmlTextReader.AttributeCount">
      <summary>
          Obtiene el número de atributos del nodo actual.
        </summary>
      <returns>
          Número de atributos del nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.BaseURI">
      <summary>
          Obtiene el identificador URI base del nodo actual.
        </summary>
      <returns>
          Identificador URI base del nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadBinaryContent">
      <summary>
          Obtiene un valor que indica si <see cref="T:System.Xml.XmlTextReader" /> implementa los métodos de lectura de contenido binario.
        </summary>
      <returns>
          
            Es true si se implementan los métodos de lectura de contenido binario; en caso contrario, es false. La clase <see cref="T:System.Xml.XmlTextReader" /> siempre devuelve true.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadValueChunk">
      <summary>
          Obtiene un valor que indica si <see cref="T:System.Xml.XmlTextReader" /> implementa el método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.
        </summary>
      <returns>
          
            Es true si <see cref="T:System.Xml.XmlTextReader" /> implementa el método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />; en caso contrario, es false. La clase <see cref="T:System.Xml.XmlTextReader" /> siempre devuelve false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanResolveEntity">
      <summary>
          Obtiene un valor que indica si este lector puede analizar y resolver entidades.
        </summary>
      <returns>
          
            Es true si el lector puede analizar y resolver entidades; en caso contrario, es false. La clase XmlTextReader siempre devuelve true.
        </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Close">
      <summary>
          Cambia la propiedad <see cref="P:System.Xml.XmlReader.ReadState" /> a Closed.
        </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Depth">
      <summary>
          Obtiene la profundidad del nodo actual en el documento XML.
        </summary>
      <returns>
          Profundidad del nodo actual en el documento XML.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Encoding">
      <summary>
          Obtiene la codificación del documento.
        </summary>
      <returns>
          Valor de codificación. Si no existe ningún atributo de codificación y no hay ninguna marca de orden de bytes, se utiliza el valor predeterminado UTF-8.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EntityHandling">
      <summary>
          Obtiene o establece un valor que especifica cómo controla el lector las entidades.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.EntityHandling" />. Si no se especifica ningún valor para EntityHandling, el valor predeterminado es EntityHandling.ExpandCharEntities.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EOF">
      <summary>
          Obtiene un valor que indica si el lector está situado al final de la secuencia.
        </summary>
      <returns>
          
            Es true si el lector está situado al final de la secuencia; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
      <summary>
          Obtiene el valor del atributo con el índice especificado.
        </summary>
      <returns>
          Valor del atributo especificado.
        </returns>
      <param name="i">
              Índice del atributo. El índice se basa en cero. El primer atributo tiene índice 0. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlTextReader.AttributeCount" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
      <summary>
          Obtiene el valor del atributo con el nombre especificado.
        </summary>
      <returns>
          Valor del atributo especificado. Si no se encuentra el atributo, se devuelve null.
        </returns>
      <param name="name">
              Nombre completo del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
      <summary>
          Obtiene el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.
        </summary>
      <returns>
          Valor del atributo especificado. Si no se encuentra el atributo, se devuelve null. Este método no desplaza el lector.
        </returns>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>
          Obtiene una colección que contiene todos los espacios de nombres que hay actualmente en el ámbito.
        </summary>
      <returns>
          Objeto <see cref="T:System.Collections.IDictionary" /> que contiene todos los espacios de nombres que hay actualmente en el ámbito. Si el lector no se coloca en un elemento, se devuelve un diccionario vacío (sin ningún espacio de nombres).
        </returns>
      <param name="scope">
              Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica el tipo de nodos de espacio de nombres que se va a devolver.
            </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetRemainder">
      <summary>
          Obtiene el resto de XML con búfer.
        </summary>
      <returns>
          <see cref="T:System.IO.TextReader" /> que contiene el resto de XML con búfer.
        </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.HasLineInfo">
      <summary>
          Obtiene un valor que indica si la clase puede devolver información de línea.
        </summary>
      <returns>
          
            Es true si la clase puede devolver información de línea; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.HasValue">
      <summary>
          Obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlTextReader.Value" /> con un valor distinto de String.Empty.
        </summary>
      <returns>
          
            Es true si el nodo en el que está situado actualmente el lector puede tener un Value; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsDefault">
      <summary>
          Obtiene un valor que indica si el nodo actual es un atributo generado a partir del valor predeterminado definido en la DTD o el esquema.
        </summary>
      <returns>
          Esta propiedad devuelve siempre false. (<see cref="T:System.Xml.XmlTextReader" /> no expande los atributos predeterminados). 
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsEmptyElement">
      <summary>
          Obtiene un valor que indica si el nodo actual es un elemento vacío; por ejemplo, &lt;MyElement/&gt;.
        </summary>
      <returns>
          
            Es true si el nodo actual es un elemento (<see cref="P:System.Xml.XmlTextReader.NodeType" /> es igual a XmlNodeType.Element) que termina en /&gt;; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LineNumber">
      <summary>
          Obtiene el número de línea actual.
        </summary>
      <returns>
          Número de línea actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LinePosition">
      <summary>
          Obtiene la posición de línea actual.
        </summary>
      <returns>
          Posición de línea actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LocalName">
      <summary>
          Obtiene el nombre local del nodo actual.
        </summary>
      <returns>
          Nombre del nodo actual sin prefijo. Por ejemplo, LocalName es book para el elemento &lt;bk:book&gt;.
          Para los tipos de nodo sin nombre (por ejemplo, Text, Comment, etc.), esta propiedad devuelve String.Empty.
        </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
      <summary>
          Resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.
        </summary>
      <returns>
          Identificador URI de espacio de nombres al que se asigna el prefijo o null si no se encuentra ningún prefijo coincidente.
        </returns>
      <param name="prefix">
              Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía. Esta cadena no necesita subdividirse. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              La propiedad <see cref="P:System.Xml.XmlTextReader.Namespaces" /> se establece en true y el valor de <paramref name="prefix" /> es null. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
      <summary>
          Se desplaza hasta el atributo con el índice especificado.
        </summary>
      <param name="i">
              Índice del atributo. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlReader.AttributeCount" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
      <summary>
          Se desplaza hasta el atributo con el nombre especificado.
        </summary>
      <returns>
          
            Es true si se encuentra el atributo; en caso contrario, es false. Si es false, no cambia la posición del lector.
        </returns>
      <param name="name">
              Nombre completo del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
      <summary>
          Se desplaza hasta el atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.
        </summary>
      <returns>
          
            Es true si se encuentra el atributo; en caso contrario, es false. Si es false, no cambia la posición del lector.
        </returns>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToElement">
      <summary>
          Se desplaza hasta el elemento que contiene el nodo de atributo actual.
        </summary>
      <returns>
          
            Es true si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es false si el lector no está situado en un atributo (no cambia la posición del lector).
        </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
      <summary>
          Se desplaza hasta el primer atributo.
        </summary>
      <returns>
          
            Es true si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es false (no cambia la posición del lector).
        </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToNextAttribute">
      <summary>
          Se desplaza hasta el siguiente atributo.
        </summary>
      <returns>
          
            Es true si hay siguiente atributo; es false si no hay más atributos.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Name">
      <summary>
          Obtiene el nombre completo del nodo actual.
        </summary>
      <returns>
          Nombre completo del nodo actual. Por ejemplo, Name es bk:book para el elemento &lt;bk:book&gt;.
          El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlTextReader.NodeType" /> del nodo. Los siguientes tipos de nodo devuelven los valores que figuran en la lista. Todos los demás tipos de nodo devuelven una cadena vacía.
          
            
              
                
                  Tipo de nodo 
                
                
                  Nombre 
                
              
            
            
              
                
                  Attribute
                
              
              
                Nombre del atributo. 
              
            
            
              
                
                  DocumentType
                
              
              
                Nombre del tipo de documento. 
              
            
            
              
                
                  Element
                
              
              
                Nombre de la etiqueta. 
              
            
            
              
                
                  EntityReference
                
              
              
                Nombre de la entidad a la que se hace referencia. 
              
            
            
              
                
                  ProcessingInstruction
                
              
              
                Destino de la instrucción de procesamiento. 
              
            
            
              
                
                  XmlDeclaration
                
              
              
                Cadena literal xml. 
              
            
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Namespaces">
      <summary>
          Obtiene o establece un valor que indica si se ha de aplicar la compatibilidad de espacio de nombres.
        </summary>
      <returns>
          
            Es true si se ha de aplicar la compatibilidad de espacio de nombres; en caso contrario, es false. El valor predeterminado es true.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              Se ha establecido esta propiedad después de producirse una operación de lectura (<see cref="P:System.Xml.XmlTextReader.ReadState" /> no es ReadState.Initial). 
            </exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.NamespaceURI">
      <summary>
          Obtiene el identificador URI de espacio de nombres (según se define en la especificación relativa a espacios de nombres del Consorcio W3C) del nodo en el que está situado el lector.
        </summary>
      <returns>
          Identificador URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NameTable">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> asociado a esta implementación.
        </summary>
      <returns>
          XmlNameTable que permite obtener la versión subdividida de una cadena en el nodo.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.XmlNodeType" /> que representa el tipo del nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Normalization">
      <summary>
          Obtiene o establece un valor que indica si se deben normalizar los valores de atributo y de espacio en blanco.
        </summary>
      <returns>
          
            Es true si se deben normalizar; en caso contrario, es false. El valor predeterminado es false.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              Esta propiedad se establece cuando el lector está cerrado (<see cref="P:System.Xml.XmlTextReader.ReadState" /> es ReadState.Closed). 
            </exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.Prefix">
      <summary>
          Obtiene el prefijo de espacio de nombres asociado al nodo actual.
        </summary>
      <returns>
          Prefijo de espacio de nombres asociado al nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.ProhibitDtd">
      <summary>
          Obtiene o establece un valor que indica si se debe permitir el procesamiento de DTD.
        </summary>
      <returns>
          
            Es true para no permitir el procesamiento de DTD; de lo contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.QuoteChar">
      <summary>
          Obtiene el carácter de comillas entre las que se encierra el valor de un nodo de atributo.
        </summary>
      <returns>
          Carácter de comillas (" o ') entre las que se encierra el valor de un nodo de atributo.
        </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Read">
      <summary>
          Lee el siguiente nodo de la secuencia.
        </summary>
      <returns>
          
            Es true si se lee correctamente el siguiente nodo; es false si no hay más nodos para leer.
        </returns>
      <exception cref="T:System.Xml.XmlException">
              Se ha producido un error al analizar el fragmento de XML. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadAttributeValue">
      <summary>
          Analiza el valor de atributo en uno o varios nodos Text, EntityReference o EndEntity.
        </summary>
      <returns>
          
            Es true si hay nodos para devolver.
          
            Es false si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se han leído todos los valores de atributo.
          Un atributo vacío, como misc="", devuelve true con un solo nodo cuyo valor es String.Empty.
        </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Descodifica Base64 y devuelve los bytes binarios descodificados.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="array">
              Matriz de caracteres que sirve como búfer en el que se escribe el contenido de texto. 
            </param>
      <param name="offset">
              Índice de base cero de la matriz que especifica dónde el método puede comenzar a escribir en el búfer. 
            </param>
      <param name="len">
              Número de bytes que se van a escribir en el búfer. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              La secuencia Base64 no es válida. 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="array" /> es null. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="offset" /> &lt; 0, o <paramref name="len" /> &lt; 0, o <paramref name="len" /> &gt; <paramref name="array" /> .Length- <paramref name="offset" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Descodifica BinHex y devuelve los bytes binarios descodificados.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="array">
              Matriz de bytes que sirve como búfer en el que se escriben los bytes binarios descodificados. 
            </param>
      <param name="offset">
              Índice de base cero de la matriz que especifica dónde el método puede comenzar a escribir en el búfer. 
            </param>
      <param name="len">
              Número de bytes que se van a escribir en el búfer. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              La secuencia BinHex no es válida. 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="array" /> es null. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="offset" /> &lt; 0, o <paramref name="len" /> &lt; 0, o <paramref name="len" /> &gt; <paramref name="array" /> .Length- <paramref name="offset" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
      <summary>
          Lee el contenido de texto de un elemento en un búfer de caracteres. Este método se ha diseñado para leer grandes secuencias de texto incrustado llamando sucesivamente al método.
        </summary>
      <returns>
          Número de caracteres que se han leído. Puede ser 0 si el lector no está situado en un elemento o si no hay más contenido de texto para devolver en el contexto actual.
        </returns>
      <param name="buffer">
              Matriz de caracteres que sirve como búfer en el que se escribe el contenido de texto. 
            </param>
      <param name="index">
              Posición en el <paramref name="buffer" /> donde el método puede comenzar a escribir contenido de texto. 
            </param>
      <param name="count">
              Número de caracteres que se van a escribir en el <paramref name="buffer" />. 
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="count" /> es mayor que el espacio especificado en <paramref name="buffer" /> (<paramref name="index" /> del tamaño de búfer). 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" />
                &lt; 0 o <paramref name="count" />&lt; 0. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el contenido y devuelve los bytes binarios descodificados de Base64.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              Búfer donde se va a copiar el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.
            </param>
      <param name="count">
              Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                En el nodo actual, no se admite el método <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el contenido y devuelve los bytes binarios descodificados de BinHex.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              Búfer donde se va a copiar el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.
            </param>
      <param name="count">
              Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                El método <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.
            </exception>
      <exception cref="T:System.NotSupportedException">
              La implementación de <see cref="T:System.Xml.XmlTextReader" /> no admite este método.
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el elemento y descodifica el contenido Base64.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              Búfer donde se va a copiar el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.
            </param>
      <param name="count">
              Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual no es un nodo de elemento.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.
            </exception>
      <exception cref="T:System.NotSupportedException">
              La implementación de <see cref="T:System.Xml.XmlTextReader" /> no admite este método.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento contiene un contenido mixto.
            </exception>
      <exception cref="T:System.FormatException">
              El contenido no puede convertirse en el tipo solicitado.
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el elemento y descodifica el contenido de BinHex.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              Búfer donde se va a copiar el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.
            </param>
      <param name="count">
              Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual no es un nodo de elemento.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.
            </exception>
      <exception cref="T:System.NotSupportedException">
              La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento contiene un contenido mixto.
            </exception>
      <exception cref="T:System.FormatException">
              El contenido no puede convertirse en el tipo solicitado.
            </exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.ReadState">
      <summary>
          Obtiene el estado del lector.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.ReadState" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadString">
      <summary>
          Lee el contenido de un nodo de texto o un elemento como cadena.
        </summary>
      <returns>
          Contenido del nodo de elemento o de texto. Puede ser una cadena vacía si el lector está situado en un nodo que no sea de elemento ni de texto, o si no hay más contenido de texto para devolver en el contexto actual.
          
            Note: El nodo de texto puede ser un nodo de texto de elemento o de atributo.
        </returns>
      <exception cref="T:System.Xml.XmlException">
              Se ha producido un error al analizar el fragmento de XML. 
            </exception>
      <exception cref="T:System.InvalidOperationException">
              Se ha intentado realizar una operación no válida. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResetState">
      <summary>
          Restablece el estado del lector en ReadState.Initial.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              Se llama a ResetState si el lector se construyó mediante <see cref="T:System.Xml.XmlParserContext" />. 
            </exception>
      <exception cref="T:System.Xml.XmlException">
              Los documentos de una sola secuencia no comparten la misma codificación.
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResolveEntity">
      <summary>
          Resuelve la referencia a entidad de los nodos EntityReference.
        </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Settings">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.XmlReaderSettings" /> utilizado para crear esta instancia de <see cref="T:System.Xml.XmlTextReader" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReaderSettings" /> utilizado para crear esta instancia de <see cref="T:System.Xml.XmlTextReader" />; es null si el lector no se creó mediante el método <see cref="Overload:System.Xml.XmlReader.Create" />. 
        </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Skip">
      <summary>
          Omite los nodos secundarios del nodo actual.
        </summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.
        </summary>
      <returns>
          <see cref="T:System.Collections.IDictionary" /> que contiene los espacios de nombres que hay actualmente en el ámbito.
        </returns>
      <param name="scope">
              Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica el tipo de nodos de espacio de nombres que se va a devolver.
            </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.
        </summary>
      <returns>
          El espacio de nombres del URI que está asignado al prefijo; es null si el prefijo no está asignado a ningún espacio de nombres de URI.
        </returns>
      <param name="prefix">
              Prefijo cuyo URI de espacio de nombres se desea buscar.
            </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.
        </summary>
      <returns>
          Prefijo asignado al URI del espacio de nombres; es null si este URI no está asignado a ningún prefijo.
        </returns>
      <param name="namespaceName">
              URI de espacio de nombres cuyo prefijo se desea buscar.
            </param>
    </member>
    <member name="P:System.Xml.XmlTextReader.Value">
      <summary>
          Obtiene el valor de texto del nodo actual.
        </summary>
      <returns>
          El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlTextReader.NodeType" /> del nodo. En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver. Todos los demás tipos de nodo devuelven String.Empty.
          
            
              
                
                  Tipo de nodo 
                
                
                  Valor 
                
              
            
            
              
                
                  Attribute
                
              
              
                Valor del atributo. 
              
            
            
              
                
                  CDATA
                
              
              
                Contenido de la sección CDATA. 
              
            
            
              
                
                  Comment
                
              
              
                Contenido del comentario. 
              
            
            
              
                
                  DocumentType
                
              
              
                Subconjunto interno. 
              
            
            
              
                
                  ProcessingInstruction
                
              
              
                Todo el contenido, salvo el destino. 
              
            
            
              
                
                  SignificantWhitespace
                
              
              
                El espacio en blanco que se encuentra en el ámbito de xml:space= 'preserve'. 
              
            
            
              
                
                  Text
                
              
              
                Contenido del nodo de texto. 
              
            
            
              
                
                  Whitespace
                
              
              
                Espacio en blanco entre marcas. 
              
            
            
              
                
                  XmlDeclaration
                
              
              
                Contenido de la declaración. 
              
            
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.WhitespaceHandling">
      <summary>
          Obtiene o establece un valor que indica cómo se controla el espacio en blanco.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.WhitespaceHandling" />. El valor predeterminado es WhitespaceHandling.All (devuelve los nodos Whitespace y SignificantWhitespace).
        </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
              Se ha especificado un valor no válido. 
            </exception>
      <exception cref="T:System.InvalidOperationException">
              Esta propiedad se establece cuando el lector está cerrado (<see cref="P:System.Xml.XmlTextReader.ReadState" /> es ReadState.Closed). 
            </exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlLang">
      <summary>
          Obtiene el ámbito de xml:lang actual.
        </summary>
      <returns>
          Ámbito de xml:lang actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlResolver">
      <summary>
          Establece el objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver las referencias a DTD.
        </summary>
      <returns>
          XmlResolver que se va a utilizar. Si se establece en null, los recursos externos no se resuelven.
          En la versión 1.1 de .NET Framework, el llamador debe ser de plena confianza para poder especificar un objeto XmlResolver.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlSpace">
      <summary>
          Obtiene el ámbito de xml:space actual.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.XmlSpace" />. Si no existe ningún ámbito de xml:space, el valor predeterminado de esta propiedad será XmlSpace.None.
        </returns>
    </member>
    <member name="T:System.Xml.XmlTextWriter">
      <summary>
          Representa un sistema de escritura que proporciona un medio rápido, sin almacenamiento en caché y con desplazamiento sólo hacia delante para generar secuencias o archivos con datos XML que satisface las recomendaciones relativas a espacios de nombres en XML y Extensible Markup Language (XML) 1.0 del Consorcio W3C.
        </summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>
          Crea una instancia de la clase XmlTextWriter mediante la secuencia y la codificación especificadas.
        </summary>
      <param name="w">
              Secuencia en la que se desea escribir. 
            </param>
      <param name="encoding">
              Codificación que se va a generar. Si la codificación es null, escribe la secuencia como UTF-8 y omite el atributo de codificación de la instrucción ProcessingInstruction. 
            </param>
      <exception cref="T:System.ArgumentException">
              No se admite la codificación o no se puede escribir en la secuencia. 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="w" /> es null. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
      <summary>
          Crea una instancia de la clase XmlTextWriter mediante el objeto <see cref="T:System.IO.TextWriter" /> especificado.
        </summary>
      <param name="w">
              TextWriter en el que se va a escribir. Se supone que TextWriter ya está establecido en la codificación correcta. 
            </param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
      <summary>
          Crea una instancia de la clase <see cref="T:System.Xml.XmlTextWriter" /> mediante el archivo especificado.
        </summary>
      <param name="filename">
              Nombre del archivo en el que se va a escribir. Si existe el archivo, lo truncará y lo sobrescribirá con el nuevo contenido. 
            </param>
      <param name="encoding">
              Codificación que se va a generar. Si la codificación es null, escribe el archivo como UTF-8 y omite el atributo de codificación de la instrucción ProcessingInstruction. 
            </param>
      <exception cref="T:System.ArgumentException">
              No se admite la codificación; el nombre de archivo está vacío, sólo contiene espacios en blanco o contiene uno o más caracteres no válidos. 
            </exception>
      <exception cref="T:System.UnauthorizedAccessException">
              Acceso denegado. 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El nombre de archivo es null. 
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
              No se encuentra el directorio en el que hay que escribir. 
            </exception>
      <exception cref="T:System.IO.IOException">
              El nombre de archivo incluye una sintaxis no correcta o no válida para el nombre de archivo, el nombre de directorio o la etiqueta de volumen. 
            </exception>
      <exception cref="T:System.Security.SecurityException">
              El llamador no dispone del permiso requerido. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.BaseStream">
      <summary>
          Obtiene el objeto de secuencia subyacente.
        </summary>
      <returns>
          Secuencia en la que está escribiendo XmlTextWriter o null si se construyó XmlTextWriter mediante <see cref="T:System.IO.TextWriter" /> que no se hereda de la clase <see cref="T:System.IO.StreamWriter" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Close">
      <summary>
          Cierra esta secuencia y la secuencia subyacente.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              Después de llamar a Close o si el resultado de dicha llamada no es un documento XML válido, se realiza una llamada para escribir más resultados. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Flush">
      <summary>
          Vuelca el contenido del búfer en las secuencias subyacentes y también vuelca la secuencia subyacente.
        </summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Formatting">
      <summary>
          Indica cómo se da formato al resultado.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.Formatting" />. El valor predeterminado es Formatting.None (sin formato especial).
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Indentation">
      <summary>
          Obtiene o establece el número de caracteres IndentChars que se escriben para cada nivel de la jerarquía cuando la propiedad <see cref="P:System.Xml.XmlTextWriter.Formatting" /> está establecida en Formatting.Indented.
        </summary>
      <returns>
          Número de caracteres IndentChars de cada nivel. El valor predeterminado es 2.
        </returns>
      <exception cref="T:System.ArgumentException">
              Establecimiento de esta propiedad en un valor negativo. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.IndentChar">
      <summary>
          Obtiene o establece el carácter que se va a utilizar para aplicar sangría cuando la propiedad <see cref="P:System.Xml.XmlTextWriter.Formatting" /> se establece en Formatting.Indented.
        </summary>
      <returns>
          Carácter que se va a utilizar para la sangría. El valor predeterminado es el carácter de espacio.
          
            XmlTextWriter permite establecer esta propiedad en cualquier carácter. Para asegurar la validez de XML, es preciso especificar un carácter de espacio en blanco válido: 0x9, 0x10, 0x13 ó 0x20.
          
        </returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
      <summary>
          Devuelve el prefijo más próximo definido en el ámbito de espacio de nombres actual correspondiente al identificador URI de espacio de nombres.
        </summary>
      <returns>
          Prefijo que coincide. O bien null si no se encuentra ningún URI de espacio de nombres coincidente en el ámbito actual.
        </returns>
      <param name="ns">
              URI de espacio de nombres cuyo prefijo se desea buscar. 
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="ns" /> es null o String.Empty. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Namespaces">
      <summary>
          Obtiene o establece un valor que indica si se ha de aplicar la compatibilidad de espacio de nombres.
        </summary>
      <returns>
          
            true para admitir los espacios de nombres; en caso contrario, false.
          El valor predeterminado es true.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              Esta propiedad sólo se puede cambiar en el estado WriteState.Start. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.QuoteChar">
      <summary>
          Obtiene o establece qué carácter se va a utilizar para delimitar los valores de atributo.
        </summary>
      <returns>
          Carácter que se va a utilizar para delimitar los valores de atributo. Debe ser un carácter de comillas simples (&amp;#39;) o comillas dobles (&amp;#34;). Las comillas dobles son el valor predeterminado.
        </returns>
      <exception cref="T:System.ArgumentException">
              Establecimiento de esta propiedad en un valor distinto de comillas dobles o simples. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Codifica los bytes binarios especificados en base64 y escribe el texto resultante.
        </summary>
      <param name="buffer">
              Matriz de bytes que se va a codificar. 
            </param>
      <param name="index">
              Posición en el búfer que indica el inicio de los bytes que se van a escribir. 
            </param>
      <param name="count">
              Número de bytes que se van a escribir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="buffer" /> es null. 
            </exception>
      <exception cref="T:System.ArgumentException">
              La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> o <paramref name="count" /> es menor que cero. 
            </exception>
      <exception cref="T:System.InvalidOperationException">
              <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es Closed. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Codifica los bytes binarios especificados como binhex y escribe el texto resultante.
        </summary>
      <param name="buffer">
              Matriz de bytes que se va a codificar. 
            </param>
      <param name="index">
              Posición en el búfer que indica el inicio de los bytes que se van a escribir. 
            </param>
      <param name="count">
              Número de bytes que se van a escribir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="buffer" /> es null. 
            </exception>
      <exception cref="T:System.ArgumentException">
              La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> o <paramref name="count" /> es menor que cero. 
            </exception>
      <exception cref="T:System.InvalidOperationException">
              <see cref="P:System.Xml.XmlTextWriter.WriteState" /> está cerrado. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
      <summary>
          Escribe un bloque &lt;![CDATA[...]]&gt; que contiene el texto especificado.
        </summary>
      <param name="text">
              Texto que se va a colocar en el bloque CDATA. 
            </param>
      <exception cref="T:System.ArgumentException">
              El texto daría como resultado un documento XML con formato incorrecto. 
            </exception>
      <exception cref="T:System.InvalidOperationException">
              <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es Closed. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
      <summary>
          Impone la generación de una entidad de caracteres para el valor de carácter Unicode especificado.
        </summary>
      <param name="ch">
              Carácter Unicode para el cual se va a generar una entidad de caracteres. 
            </param>
      <exception cref="T:System.ArgumentException">
              El carácter está comprendido en el intervalo de caracteres de par suplente 0xd800 - 0xdfff; en caso contrario, el texto dará como resultado un documento XML de formato incorrecto. 
            </exception>
      <exception cref="T:System.InvalidOperationException">
              <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es Closed. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>
          Escribe texto en un búfer cada vez.
        </summary>
      <param name="buffer">
              Matriz de caracteres que contiene el texto que se va a escribir. 
            </param>
      <param name="index">
              Posición en el búfer que indica el inicio del texto que se va a escribir. 
            </param>
      <param name="count">
              Número de caracteres que se van a escribir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="buffer" /> es null. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> o <paramref name="count" /> es menor que cero. 
              O bien
              La longitud de búfer menos <paramref name="index" /> es menor que <paramref name="count" />; la llamada tiene como resultado la división de los caracteres de par suplente o la escritura de un par suplente no válido.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              <see cref="P:System.Xml.XmlTextWriter.WriteState" /> está cerrado. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
      <summary>
          Escribe un comentario &lt;!--...--&gt; que contiene el texto especificado.
        </summary>
      <param name="text">
              Texto que se va a colocar en el comentario. 
            </param>
      <exception cref="T:System.ArgumentException">
              El texto daría como resultado un documento XML de formato incorrecto 
            </exception>
      <exception cref="T:System.InvalidOperationException">
              <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es Closed. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>
          Escribe la declaración DOCTYPE con el nombre y los atributos opcionales especificados.
        </summary>
      <param name="name">
              Nombre de DOCTYPE. No puede estar vacío. 
            </param>
      <param name="pubid">
              Si su valor no es nulo, también se escribe PUBLIC "pubid" "sysid" donde <paramref name="pubid" /> y <paramref name="sysid" /> se reemplazan por el valor de los argumentos especificados. 
            </param>
      <param name="sysid">
              Si el valor de <paramref name="pubid" /> es nulo y el de <paramref name="sysid" /> no lo es, se escribe System "sysid", donde <paramref name="sysid" /> se reemplaza por el valor de este argumento. 
            </param>
      <param name="subset">
              En caso de un valor no nulo, se escribe [subset] donde subset se reemplaza por el valor de este argumento. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se llamó a este método fuera del prólogo (después del elemento raíz). 
            </exception>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="name" /> es null o String.Empty.
              O bien 
              El valor de <paramref name="name" /> daría como resultado un archivo XML no válido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndAttribute">
      <summary>
          Cierra la anterior llamada al método <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.
        </summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndDocument">
      <summary>
          Cierra todos los elementos o atributos abiertos y coloca de nuevo el sistema de escritura en el estado de inicio.
        </summary>
      <exception cref="T:System.ArgumentException">
              El documento XML no es válido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndElement">
      <summary>
          Cierra un elemento y extrae el correspondiente ámbito de espacio de nombres.
        </summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
      <summary>
          Escribe una referencia a entidad de la siguiente manera: &amp; &amp;name;.
        </summary>
      <param name="name">
              Nombre de la referencia a entidad. 
            </param>
      <exception cref="T:System.ArgumentException">
              El texto generaría un documento XML de formato incorrecto o <paramref name="name" /> es null o String.Empty. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteFullEndElement">
      <summary>
          Cierra un elemento y extrae el correspondiente ámbito de espacio de nombres.
        </summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteName(System.String)">
      <summary>
          Escribe el nombre especificado, asegurando que se trata de un nombre válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).
        </summary>
      <param name="name">
              Nombre que se va a escribir. 
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="name" /> no es un nombre XML válido; o <paramref name="name" /> es null o String.Empty. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
      <summary>
          Escribe el nombre especificado, asegurando que NmToken es válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).
        </summary>
      <param name="name">
              Nombre que se va a escribir. 
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="name" /> no es un NmToken válido; o <paramref name="name" /> es null o String.Empty. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>
          Escribe una instrucción de procesamiento con un espacio entre el nombre y el texto: &lt;?nombre texto?&gt;.
        </summary>
      <param name="name">
              Nombre de la instrucción de procesamiento. 
            </param>
      <param name="text">
              Texto que se va a incluir en la instrucción de procesamiento. 
            </param>
      <exception cref="T:System.ArgumentException">
              El texto daría como resultado un documento XML con formato incorrecto.
              
                <paramref name="name" /> es null o String.Empty.
              Este método se utiliza para crear una declaración XML después de llamar al método <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
      <summary>
          Escribe el nombre completo del espacio de nombres. Este método busca el prefijo que está en el ámbito del espacio de nombres especificado.
        </summary>
      <param name="localName">
              Nombre local que se va a escribir. 
            </param>
      <param name="ns">
              URI de espacio de nombres que se va a asociar al nombre. 
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="localName" /> es null o String.Empty.
              
                <paramref name="localName" /> no es un nombre válido según la especificación relativa a espacios de nombres del Consorcio W3C. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>
          Escribe manualmente el marcado sin formato de un búfer de caracteres.
        </summary>
      <param name="buffer">
              Matriz de caracteres que contiene el texto que se va a escribir. 
            </param>
      <param name="index">
              Posición en el búfer que indica el inicio del texto que se va a escribir. 
            </param>
      <param name="count">
              Número de caracteres que se van a escribir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="buffer" /> es null. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> o <paramref name="count" /> es menor que cero.
              O bien
              La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
      <summary>
          Escribe manualmente el marcado sin formato de una cadena.
        </summary>
      <param name="data">
              Cadena que contiene el texto que se va a escribir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>
          Escribe el inicio de un atributo.
        </summary>
      <param name="prefix">
              
                Prefijo Namespace del atributo. 
            </param>
      <param name="localName">
              
                LocalName del atributo. 
            </param>
      <param name="ns">
              
                NamespaceURI del atributo 
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="localName" /> es null o String.Empty. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument">
      <summary>
          Escribe la declaración XML con la versión "1.0".
        </summary>
      <exception cref="T:System.InvalidOperationException">
              Éste no es el primer método Write al que se llama después de llamar al constructor. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
      <summary>
          Escribe la declaración XML con la versión "1.0" así como el atributo independiente.
        </summary>
      <param name="standalone">
              Si es true, escribirá "standalone=yes"; si es false, escribirá "standalone=no". 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Éste no es el primer método Write al que se llama después de llamar al constructor. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>
          Escribe la etiqueta de apertura especificada y la asocia al espacio de nombres y al prefijo especificados.
        </summary>
      <param name="prefix">
              Prefijo de espacio de nombres del elemento. 
            </param>
      <param name="localName">
              Nombre local del elemento. 
            </param>
      <param name="ns">
              Identificador URI de espacio de nombres que se va a asociar al elemento. Si este espacio de nombres ya está en el ámbito y tiene asociado un prefijo, el sistema de escritura también lo escribe automáticamente. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              El sistema de escritura está cerrado. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.WriteState">
      <summary>
          Obtiene el estado del sistema de escritura.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.WriteState" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteString(System.String)">
      <summary>
          Escribe el contenido de texto especificado.
        </summary>
      <param name="text">
              Texto que se va a escribir. 
            </param>
      <exception cref="T:System.ArgumentException">
              La cadena de texto contiene un par suplente no válido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>
          Genera y escribe la entidad de carácter suplente del par de caracteres suplentes.
        </summary>
      <param name="lowChar">
              Suplente bajo. Debe ser un valor comprendido entre 0xDC00 y 0xDFFF. 
            </param>
      <param name="highChar">
              Suplente alto. Debe ser un valor comprendido entre 0xD800 y 0xDBFF. 
            </param>
      <exception cref="T:System.Exception">
              Se ha pasado un par de caracteres suplentes no válido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
      <summary>
          Escribe el espacio en blanco especificado.
        </summary>
      <param name="ws">
              Cadena de caracteres de espacio en blanco. 
            </param>
      <exception cref="T:System.ArgumentException">
              La cadena no contiene caracteres de espacio en blanco. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlLang">
      <summary>
          Obtiene el ámbito de xml:lang actual.
        </summary>
      <returns>
          El xml:lang actual o null si no hay xml:lang en el ámbito actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlSpace">
      <summary>
          Obtiene <see cref="T:System.Xml.XmlSpace" /> que representa el ámbito de xml:space actual.
        </summary>
      <returns>
          XmlSpace que representa el ámbito de xml:space actual.
          
            
              
                
                  Valor 
                
                
                  Significado 
                
              
            
            
              
                None 
              
              
                Éste es el valor predeterminado si no existe ningún ámbito de xml:space. 
              
            
            
              
                Default 
              
              
                El ámbito actual es xml:space="default". 
              
            
            
              
                Preserve 
              
              
                El ámbito actual es xml:space="preserve". 
              
            
          
        </returns>
    </member>
    <member name="T:System.Xml.XmlTokenizedType">
      <summary>
          Representa el tipo XML de la cadena. Esto permite que la cadena se lea como un tipo XML concreto; por ejemplo, un tipo de sección CDATA.
        </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.CDATA">
      <summary>
          Tipo CDATA.
        </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ID">
      <summary>
          Tipo ID.
        </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREF">
      <summary>
          Tipo IDREF.
        </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREFS">
      <summary>
          Tipo IDREFS.
        </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITY">
      <summary>
          Tipo ENTITY.
        </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITIES">
      <summary>
          Tipo ENTITIES.
        </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKEN">
      <summary>
          Tipo NMTOKEN.
        </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKENS">
      <summary>
          Tipo NMTOKENS.
        </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NOTATION">
      <summary>
          Tipo NOTATION.
        </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENUMERATION">
      <summary>
          Tipo ENUMERATION.
        </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.QName">
      <summary>
          Tipo QName.
        </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NCName">
      <summary>
          Tipo NCName.
        </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.None">
      <summary>
          Sin tipo.
        </summary>
    </member>
    <member name="T:System.Xml.XmlUrlResolver">
      <summary>
          Resuelve los recursos XML externos designados por un identificador de recursos uniforme (URI).
        </summary>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.#ctor">
      <summary>
          Crea una nueva instancia de la clase XmlUrlResolver.
        </summary>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Credentials">
      <summary>
          Establece las credenciales utilizadas para autenticar las solicitudes Web.
        </summary>
      <returns>
          Objeto <see cref="T:System.Net.ICredentials" />. Si no se establece esta propiedad, el valor predeterminado es null; es decir, el objeto XmlUrlResolver no tiene credenciales de usuario.
        </returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>
          Asigna un identificador URI a un objeto que contiene el recurso real.
        </summary>
      <returns>
          Objeto System.IO.Stream o null si se especifica un tipo que no sea una secuencia.
        </returns>
      <param name="absoluteUri">
              Identificador URI devuelto por el método <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />
            </param>
      <param name="role">
              La implementación actual no utiliza este parámetro al resolver identificadores URI. Se incluye para futuros fines de extensibilidad. Por ejemplo, se puede asignar esto a xlink:role y utilizar como un argumento específico de la implementación en otros escenarios. 
            </param>
      <param name="ofObjectToReturn">
              Tipo de objeto que se va a devolver. La implementación actual sólo devuelve objetos System.IO.Stream. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              
                <paramref name="ofObjectToReturn" /> no es un tipo null ni Stream. 
            </exception>
      <exception cref="T:System.UriFormatException">
              El identificador URI especificado no es un identificador URI absoluto. 
            </exception>
      <exception cref="T:System.NullReferenceException">
              
                <paramref name="absoluteUri" /> es null. 
            </exception>
      <exception cref="T:System.Exception">
              Se ha producido un error en tiempo de ejecución (por ejemplo, una interrupción en la conexión con el servidor). 
            </exception>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
      <summary>
          Resuelve el URI absoluto a partir de los URI base y relativo.
        </summary>
      <returns>
          <see cref="T:System.Uri" /> que representa el URI absoluto o null si el URI relativo no se puede resolver.
        </returns>
      <param name="baseUri">
              Identificador URI base que se utiliza para resolver el identificador URI relativo
            </param>
      <param name="relativeUri">
              Identificador URI que se va a resolver. El identificador URI puede ser absoluto o relativo. Si es absoluto, este valor reemplaza de manera efectiva el valor de <paramref name="baseUri" />. Si es relativo, se combina con <paramref name="baseUri" /> para formar un identificador URI absoluto.
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="relativeUri" /> es null
            </exception>
    </member>
    <member name="T:System.Xml.XmlValidatingReader">
      <summary>
          Representa un lector que proporciona validación de definiciones de tipos de documentos (DTD), de esquemas reducidos de datos XML (esquemas XDR) y del lenguaje de definición de esquemas XML (esquemas XSD).
        </summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>
          Inicializa una nueva instancia de la clase XmlValidatingReader con los valores especificados.
        </summary>
      <param name="xmlFragment">
              Secuencia que contiene el fragmento de XML que se va a analizar. 
            </param>
      <param name="fragType">
              <see cref="T:System.Xml.XmlNodeType" /> del fragmento de XML. Esto determina lo que puede contener el fragmento (vea la tabla que figura más abajo). 
            </param>
      <param name="context">
              <see cref="T:System.Xml.XmlParserContext" /> en el que se analizará el fragmento de XML. Esto incluye el objeto <see cref="T:System.Xml.XmlNameTable" /> que se utiliza, la codificación, el ámbito de espacio de nombres, el xml:lang actual y el ámbito de xml:space. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              
                <paramref name="fragType" /> no es uno de los tipos de nodo que se enumeran en la tabla que figura más abajo. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>
          Inicializa una nueva instancia de la clase XmlValidatingReader con los valores especificados.
        </summary>
      <param name="xmlFragment">
              Cadena que contiene el fragmento de XML que se va a analizar. 
            </param>
      <param name="fragType">
              <see cref="T:System.Xml.XmlNodeType" /> del fragmento de XML. Esto determina también lo que puede contener la cadena del fragmento (vea la tabla que figura más abajo). 
            </param>
      <param name="context">
              <see cref="T:System.Xml.XmlParserContext" /> en el que se analizará el fragmento de XML. Esto incluye el objeto <see cref="T:System.Xml.NameTable" /> que se va a utilizar, la codificación, el ámbito de espacio de nombres, el xml:lang actual y el ámbito de xml:space. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              
                <paramref name="fragType" /> no es uno de los tipos de nodo que se enumeran en la tabla que figura más abajo. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
      <summary>
          Inicializa una nueva instancia de la clase XmlValidatingReader que valida el contenido devuelto por el objeto <see cref="T:System.Xml.XmlReader" /> especificado.
        </summary>
      <param name="reader">
              XmlReader en el que se va a leer durante la validación. La implementación actual sólo admite <see cref="T:System.Xml.XmlTextReader" />. 
            </param>
      <exception cref="T:System.ArgumentException">
              El lector especificado no es XmlTextReader. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.AttributeCount">
      <summary>
          Obtiene el número de atributos del nodo actual.
        </summary>
      <returns>
          Número de atributos del nodo actual. Este número incluye los atributos predeterminados.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.BaseURI">
      <summary>
          Obtiene el identificador URI base del nodo actual.
        </summary>
      <returns>
          Identificador URI base del nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
      <summary>
          Obtiene un valor que indica si <see cref="T:System.Xml.XmlValidatingReader" /> implementa los métodos de lectura de contenido binario.
        </summary>
      <returns>
          
            Es true si se implementan métodos de lectura de contenido binario; de lo contrario false. La clase <see cref="T:System.Xml.XmlValidatingReader" /> devuelve true.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanResolveEntity">
      <summary>
          Obtiene un valor que indica si este lector puede analizar y resolver entidades.
        </summary>
      <returns>
          
            Es true si el lector puede analizar y resolver entidades; en caso contrario, es false. XmlValidatingReader siempre devuelve true.
        </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Close">
      <summary>
          Cambia la propiedad <see cref="P:System.Xml.XmlReader.ReadState" /> a Closed.
        </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Depth">
      <summary>
          Obtiene la profundidad del nodo actual en el documento XML.
        </summary>
      <returns>
          Profundidad del nodo actual en el documento XML.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Encoding">
      <summary>
          Obtiene el atributo de codificación del documento.
        </summary>
      <returns>
          Valor de codificación. Si no existe ningún atributo de codificación y no hay ninguna marca de orden de bytes, se utiliza el valor predeterminado UTF-8.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EntityHandling">
      <summary>
          Obtiene o establece un valor que especifica cómo controla el lector las entidades.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.EntityHandling" />. Si no se especifica ningún valor EntityHandling, se utiliza el valor predeterminado EntityHandling.ExpandEntities.
        </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
              Se ha especificado un valor no válido. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EOF">
      <summary>
          Obtiene un valor que indica si el lector está situado al final de la secuencia.
        </summary>
      <returns>
          
            Es true si el lector está situado al final de la secuencia; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
      <summary>
          Obtiene el valor del atributo con el índice especificado.
        </summary>
      <returns>
          Valor del atributo especificado.
        </returns>
      <param name="i">
              Índice del atributo. El índice se basa en cero. El primer atributo tiene índice 0. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
      <summary>
          Obtiene el valor del atributo con el nombre especificado.
        </summary>
      <returns>
          Valor del atributo especificado. Si no se encuentra el atributo, se devuelve null.
        </returns>
      <param name="name">
              Nombre completo del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
      <summary>
          Obtiene el valor del atributo que tiene el nombre local y el identificador uniforme de recursos (URI) de espacio de nombres especificados.
        </summary>
      <returns>
          Valor del atributo especificado. Si no se encuentra el atributo, se devuelve null. Este método no desplaza el lector.
        </returns>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.HasLineInfo">
      <summary>
          Obtiene un valor que indica si la clase puede devolver información de línea.
        </summary>
      <returns>
          
            Es true si la clase puede devolver información de línea; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.HasValue">
      <summary>
          Obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlValidatingReader.Value" /> con un valor distinto de String.Empty.
        </summary>
      <returns>
          
            Es true si el nodo en el que está situado actualmente el lector puede tener un Value; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsDefault">
      <summary>
          Obtiene un valor que indica si el nodo actual es un atributo generado a partir del valor predeterminado definido en la definición de tipo de documento (DTD) o el esquema.
        </summary>
      <returns>
          
            Es true si el nodo actual es un atributo cuyo valor fue generado a partir del valor predeterminado definido en la DTD o el esquema; es false si el valor de atributo se estableció explícitamente.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsEmptyElement">
      <summary>
          Obtiene un valor que indica si el nodo actual es un elemento vacío; por ejemplo, &lt;MyElement/&gt;.
        </summary>
      <returns>
          
            Es true si el nodo actual es un elemento (<see cref="P:System.Xml.XmlValidatingReader.NodeType" /> es igual a XmlNodeType.Element) que termina en /&gt;; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LineNumber">
      <summary>
          Obtiene el número de línea actual.
        </summary>
      <returns>
          Número de línea actual. El valor inicial de esta propiedad es 1.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LinePosition">
      <summary>
          Obtiene la posición de línea actual.
        </summary>
      <returns>
          Posición de línea actual. El valor inicial de esta propiedad es 1.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LocalName">
      <summary>
          Obtiene el nombre local del nodo actual.
        </summary>
      <returns>
          Nombre del nodo actual sin prefijo. Por ejemplo, LocalName es book para el elemento &lt;bk:book&gt;.
          Para los tipos de nodo sin nombre (por ejemplo, Text, Comment, etc.), esta propiedad devuelve String.Empty.
        </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
      <summary>
          Resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.
        </summary>
      <returns>
          Identificador URI de espacio de nombres al que se asigna el prefijo o null si no se encuentra ningún prefijo coincidente.
        </returns>
      <param name="prefix">
              Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía. 
            </param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
      <summary>
          Se desplaza hasta el atributo con el índice especificado.
        </summary>
      <param name="i">
              Índice del atributo. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlReader.AttributeCount" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
      <summary>
          Se desplaza hasta el atributo con el nombre especificado.
        </summary>
      <returns>
          
            Es true si se encuentra el atributo; en caso contrario, es false. Si es false, no cambia la posición del lector.
        </returns>
      <param name="name">
              Nombre completo del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
      <summary>
          Se desplaza hasta el atributo que tiene el nombre local e Identificador uniforme de recursos (URI) de espacio de nombres especificados.
        </summary>
      <returns>
          
            Es true si se encuentra el atributo; en caso contrario, es false. Si es false, no cambia la posición del lector.
        </returns>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToElement">
      <summary>
          Se desplaza hasta el elemento que contiene el nodo de atributo actual.
        </summary>
      <returns>
          
            Es true si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es false si el lector no está situado en un atributo (no cambia la posición del lector).
        </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
      <summary>
          Se desplaza hasta el primer atributo.
        </summary>
      <returns>
          
            Es true si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es false (no cambia la posición del lector).
        </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
      <summary>
          Se desplaza hasta el siguiente atributo.
        </summary>
      <returns>
          
            Es true si hay siguiente atributo; es false si no hay más atributos.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Name">
      <summary>
          Obtiene el nombre completo del nodo actual.
        </summary>
      <returns>
          Nombre completo del nodo actual. Por ejemplo, Name es bk:book para el elemento &lt;bk:book&gt;.
          El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> del nodo. Los siguientes tipos de nodo devuelven los valores que figuran en la lista. Todos los demás tipos de nodo devuelven una cadena vacía.
          
            
              
                
                  Tipo de nodo 
                
                
                  Nombre 
                
              
            
            
              
                
                  Attribute
                
              
              
                Nombre del atributo. 
              
            
            
              
                
                  DocumentType
                
              
              
                Nombre del tipo de documento. 
              
            
            
              
                
                  Element
                
              
              
                Nombre de la etiqueta. 
              
            
            
              
                
                  EntityReference
                
              
              
                Nombre de la entidad a la que se hace referencia. 
              
            
            
              
                
                  ProcessingInstruction
                
              
              
                Destino de la instrucción de procesamiento. 
              
            
            
              
                
                  XmlDeclaration
                
              
              
                Cadena literal xml. 
              
            
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Namespaces">
      <summary>
          Obtiene o establece un valor que indica si se ha de aplicar la compatibilidad de espacio de nombres.
        </summary>
      <returns>
          
            Es true si se ha de aplicar la compatibilidad de espacio de nombres; en caso contrario, es false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NamespaceURI">
      <summary>
          Obtiene el identificador de recursos uniforme (URI) del espacio de nombres (según se define en la especificación de espacio de nombres del Consorcio W3C) del nodo donde se coloca el lector.
        </summary>
      <returns>
          Identificador URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NameTable">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> asociado a esta implementación.
        </summary>
      <returns>
          
            XmlNameTable que permite obtener la versión subdividida de una cadena del nodo.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NodeType">
      <summary>
          Obtiene el tipo del nodo actual.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.XmlNodeType" /> que representa el tipo del nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Prefix">
      <summary>
          Obtiene el prefijo de espacio de nombres asociado al nodo actual.
        </summary>
      <returns>
          Prefijo de espacio de nombres asociado al nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.QuoteChar">
      <summary>
          Obtiene el carácter de comillas entre las que se encierra el valor de un nodo de atributo.
        </summary>
      <returns>
          Carácter de comillas (" o ') entre las que se encierra el valor de un nodo de atributo.
        </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Read">
      <summary>
          Lee el siguiente nodo de la secuencia.
        </summary>
      <returns>
          
            Es true si se lee correctamente el siguiente nodo; es false si no hay más nodos para leer.
        </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
      <summary>
          Analiza el valor de atributo en uno o varios nodos Text, EntityReference o EndEntity.
        </summary>
      <returns>
          
            Es true si hay nodos para devolver.
          
            Es false si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se han leído todos los valores de atributo.
          Un atributo vacío, como misc="", devuelve true con un solo nodo cuyo valor es String.Empty.
        </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el contenido y devuelve bytes binarios descodificados en Base64.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              El búfer en el que se copia el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              La posición de desplazamiento en el búfer dónde se va a comenzar a copiar el resultado.
            </param>
      <param name="count">
              El número máximo de bytes que se copian en el búfer. El número real de bytes copiados se devuelve desde este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice en el búfer o el índice + recuento es mayor que el tamaño de búfer asignado.
            </exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el contenido y devuelve bytes binarios descodificados en BinHex.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              El búfer en el que se copia el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              La posición de desplazamiento en el búfer dónde se va a comenzar a copiar el resultado.
            </param>
      <param name="count">
              El número máximo de bytes que se copian en el búfer. El número real de bytes copiados se devuelve desde este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              
                <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice en el búfer o el índice + recuento es mayor que el tamaño de búfer asignado.
            </exception>
      <exception cref="T:System.NotSupportedException">
              La implementación de <see cref="T:System.Xml.XmlValidatingReader" /> no admite este método.
            </exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el elemento y descodifica el contenido en Base64.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              El búfer en el que se copia el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              La posición de desplazamiento en el búfer dónde se va a comenzar a copiar el resultado.
            </param>
      <param name="count">
              El número máximo de bytes que se copian en el búfer. El número real de bytes copiados se devuelve desde este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual no es un nodo de elemento.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice en el búfer o el índice + recuento es mayor que el tamaño de búfer asignado.
            </exception>
      <exception cref="T:System.NotSupportedException">
              La implementación de <see cref="T:System.Xml.XmlValidatingReader" /> no admite este método.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento contiene un contenido mixto.
            </exception>
      <exception cref="T:System.FormatException">
              El contenido no se puede convertir al tipo solicitado.
            </exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Lee el elemento y descodifica el contenido en BinHex.
        </summary>
      <returns>
          Número de bytes escritos en el búfer.
        </returns>
      <param name="buffer">
              El búfer en el que se copia el texto resultante. Este valor no puede ser null.
            </param>
      <param name="index">
              La posición de desplazamiento en el búfer dónde se va a comenzar a copiar el resultado.
            </param>
      <param name="count">
              El número máximo de bytes que se copian en el búfer. El número real de bytes copiados se devuelve desde este método.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="buffer" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual no es un nodo de elemento.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El índice en el búfer o el índice + recuento es mayor que el tamaño de búfer asignado.
            </exception>
      <exception cref="T:System.NotSupportedException">
              La implementación de <see cref="T:System.Xml.XmlValidatingReader" /> no admite este método.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El elemento contiene un contenido mixto.
            </exception>
      <exception cref="T:System.FormatException">
              El contenido no se puede convertir al tipo solicitado.
            </exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Reader">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.XmlReader" /> que se utiliza para construir este objeto XmlValidatingReader.
        </summary>
      <returns>
          XmlReader que se especifica en el constructor.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ReadState">
      <summary>
          Obtiene el estado del lector.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.ReadState" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadString">
      <summary>
          Lee el contenido de un nodo de elemento o de texto como una cadena.
        </summary>
      <returns>
          Contenido del nodo de elemento o de texto. Puede ser una cadena vacía si el lector está situado en un nodo que no sea de elemento ni de texto, o si no hay más contenido de texto para devolver en el contexto actual.
          
            El nodo de texto puede ser un nodo de texto de elemento o de atributo.
          
        </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadTypedValue">
      <summary>
          Obtiene el tipo de Common Language Runtime para el tipo de esquema XSD (esquema del lenguaje de definición de esquemas XML) especificado.
        </summary>
      <returns>
          Tipo de Common Language Runtime para el tipo de esquema XML especificado.
        </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ResolveEntity">
      <summary>
          Resuelve la referencia a entidad de los nodos EntityReference.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              El lector no se encuentra en un nodo EntityReference. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Schemas">
      <summary>
          Obtiene un objeto <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> que se va a utilizar para validación.
        </summary>
      <returns>
          XmlSchemaCollection que se va a utilizar para validación.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.SchemaType">
      <summary>
          Obtiene un objeto de tipo de esquema.
        </summary>
      <returns>
          
            <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> o <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, dependiendo de que el valor del nodo sea un tipo de esquema XSD (lenguaje de definición de esquemas XML) integrado o un tipo simpleType o complexType definido por el usuario; null si el nodo actual no tiene tipo de esquema.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Settings">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.XmlReaderSettings" /> utilizado para crear esta instancia de <see cref="T:System.Xml.XmlValidatingReader" />.
        </summary>
      <returns>
          
            Es null porque no se crean instancias de los objetos <see cref="T:System.Xml.XmlValidatingReader" /> utilizando la clase <see cref="T:System.Xml.XmlReaderSettings" /> y el método <see cref="Overload:System.Xml.XmlReader.Create" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.
        </summary>
      <returns>
        </returns>
      <param name="scope">
              
              
            </param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.
        </summary>
      <returns>
        </returns>
      <param name="prefix">
              
              
            </param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.
        </summary>
      <returns>
        </returns>
      <param name="namespaceName">
              
              
            </param>
    </member>
    <member name="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
      <summary>
          Establece un controlador de eventos para recibir información acerca de los errores de validación de definiciones de tipos de documentos (DTD), del esquema XDR (esquema reducido de datos XML) y del esquema XSD (esquema del lenguaje de definición de esquemas XML).
        </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ValidationType">
      <summary>
          Obtiene o establece un valor que indica el tipo de validación que se realiza.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.ValidationType" />. Si esta propiedad no está establecida, se utiliza el valor predeterminado ValidationType.Auto.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              Establecimiento de la propiedad después de haber llamado a Read. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Value">
      <summary>
          Obtiene el valor de texto del nodo actual.
        </summary>
      <returns>
          El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> del nodo. En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver. Todos los demás tipos de nodo devuelven String.Empty.
          
            
              
                
                  Tipo de nodo 
                
                
                  Valor 
                
              
            
            
              
                
                  Attribute
                
              
              
                Valor del atributo. 
              
            
            
              
                
                  CDATA
                
              
              
                Contenido de la sección CDATA. 
              
            
            
              
                
                  Comment
                
              
              
                Contenido del comentario. 
              
            
            
              
                
                  DocumentType
                
              
              
                Subconjunto interno. 
              
            
            
              
                
                  ProcessingInstruction
                
              
              
                Todo el contenido, salvo el destino. 
              
            
            
              
                
                  SignificantWhitespace
                
              
              
                Espacio en blanco entre marcas en un modelo de contenido mixto. 
              
            
            
              
                
                  Text
                
              
              
                Contenido del nodo Text. 
              
            
            
              
                
                  Whitespace
                
              
              
                Espacio en blanco entre marcas. 
              
            
            
              
                
                  XmlDeclaration
                
              
              
                Contenido de la declaración. 
              
            
          
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlLang">
      <summary>
          Obtiene el ámbito de xml:lang actual.
        </summary>
      <returns>
          Ámbito de xml:lang actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlResolver">
      <summary>
          Establece el objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver las referencias a ubicación de esquemas y definiciones de tipos de documentos (DTD) externos. XmlResolver también se utiliza para controlar los elementos de inclusión o importación detectados en esquemas XSD (Lenguaje de definición de esquemas XML).
        </summary>
      <returns>
          XmlResolver que se va a utilizar. Si se establece en null, los recursos externos no se resuelven.
          En la versión 1.1 de .NET Framework, el llamador debe ser de plena confianza para poder especificar XmlResolver.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlSpace">
      <summary>
          Obtiene el ámbito de xml:space actual.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.XmlSpace" />. Si no existe ningún ámbito de xml:space, el valor predeterminado de esta propiedad será XmlSpace.None.
        </returns>
    </member>
    <member name="T:System.Xml.XmlWhitespace">
      <summary>
          Representa los espacios en blanco en el contenido del elemento.
        </summary>
    </member>
    <member name="M:System.Xml.XmlWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlWhitespace" />.
        </summary>
      <param name="strData">
              Caracteres de espacio en blanco del nodo.
            </param>
      <param name="doc">
              Objeto <see cref="T:System.Xml.XmlDocument" />.
            </param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.CloneNode(System.Boolean)">
      <summary>
          Crea un duplicado de este nodo.
        </summary>
      <returns>
          Nodo clonado.
        </returns>
      <param name="deep">
              
                Es true para clonar de forma recursiva el subárbol del nodo especificado y false sólo para clonar el nodo en sí. Para los nodos de espacio en blanco, el nodo clonado incluye siempre el valor de los datos, con independencia del valor del parámetro. 
            </param>
    </member>
    <member name="P:System.Xml.XmlWhitespace.LocalName">
      <summary>
          Obtiene el nombre local del nodo.
        </summary>
      <returns>
          Para los nodos XmlWhitespace, esta propiedad devuelve #whitespace.
        </returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Name">
      <summary>
          Obtiene el nombre completo del nodo.
        </summary>
      <returns>
          Para los nodos XmlWhitespace, esta propiedad devuelve #whitespace.
        </returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.NodeType">
      <summary>
          Obtiene el tipo del nodo.
        </summary>
      <returns>
          En el caso de nodos XmlWhitespace, el valor es <see cref="F:System.Xml.XmlNodeType.Whitespace" />.
        </returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.ParentNode">
      <summary>
          Obtiene el elemento primario del nodo actual.
        </summary>
      <returns>
          Nodo <see cref="T:System.Xml.XmlNode" /> primario del nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Value">
      <summary>
          Obtiene o establece el valor del nodo.
        </summary>
      <returns>
          Caracteres de espacio en blanco encontrados en el nodo.
        </returns>
      <exception cref="T:System.ArgumentException">
              Establecimiento de <see cref="P:System.Xml.XmlWhitespace.Value" /> en caracteres de espacio en blanco no válidos. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
          Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              <see cref="T:System.Xml.XmlWriter" /> en el que se debe guardar. 
            </param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>
          Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="w">
              <see cref="T:System.Xml.XmlWriter" /> en el que se desea guardar.
            </param>
    </member>
    <member name="T:System.Xml.XmlWriter">
      <summary>
          Representa un sistema de escritura que constituye un medio rápido, no almacenado en caché y de sólo avance para generar secuencias o archivos con datos XML.
        </summary>
    </member>
    <member name="M:System.Xml.XmlWriter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlWriter" />.
        </summary>
    </member>
    <member name="M:System.Xml.XmlWriter.Close">
      <summary>
          Cuando se reemplaza en una clase derivada, cierra esta secuencia y la secuencia subyacente.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              Después de llamar a Close o si el resultado de dicha llamada no es un documento XML válido, se realiza una llamada para escribir más resultados. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante la secuencia especificada.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" />.
        </returns>
      <param name="output">
              Secuencia en la que se desea escribir. <see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa a la secuencia especificada.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="stream" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante la secuencia y el objeto <see cref="T:System.Xml.XmlWriterSettings" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" />.
        </returns>
      <param name="output">
              Secuencia en la que se desea escribir. <see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa a la secuencia especificada.
            </param>
      <param name="settings">
              Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es null, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.
              Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="stream" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el <see cref="T:System.IO.TextWriter" /> especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" />.
        </returns>
      <param name="output">
              <see cref="T:System.IO.TextWriter" /> en el que se desea escribir. <see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa al <see cref="T:System.IO.TextWriter" /> especificado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="text" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante los objetos <see cref="T:System.IO.TextWriter" /> y <see cref="T:System.Xml.XmlWriterSettings" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" />.
        </returns>
      <param name="output">
              <see cref="T:System.IO.TextWriter" /> en el que se desea escribir. <see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa al <see cref="T:System.IO.TextWriter" /> especificado.
            </param>
      <param name="settings">
              Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es null, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.
              Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="text" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el nombre de archivo especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" />.
        </returns>
      <param name="outputFileName">
              Archivo en el que se desea escribir. <see cref="T:System.Xml.XmlWriter" /> crea un archivo en la ruta de acceso especificada y lo escribe con la sintaxis de texto de XML 1.0. <paramref name="outputFileName" /> debe ser una ruta del sistema de archivos.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="url" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el nombre de archivo y el objeto <see cref="T:System.Xml.XmlWriterSettings" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" />.
        </returns>
      <param name="outputFileName">
              Archivo en el que se desea escribir. <see cref="T:System.Xml.XmlWriter" /> crea un archivo en la ruta de acceso especificada y lo escribe con la sintaxis de texto de XML 1.0. <paramref name="outputFileName" /> debe ser una ruta del sistema de archivos.
            </param>
      <param name="settings">
              Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es null, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.
              Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="url" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el <see cref="T:System.Text.StringBuilder" /> especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" />.
        </returns>
      <param name="output">
              <see cref="T:System.Text.StringBuilder" /> en el que se va a escribir. El contenido que escribe <see cref="T:System.Xml.XmlWriter" /> se anexa a <see cref="T:System.Text.StringBuilder" />.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="builder" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante los objetos <see cref="T:System.Text.StringBuilder" /> y <see cref="T:System.Xml.XmlWriterSettings" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" />.
        </returns>
      <param name="output">
              <see cref="T:System.Text.StringBuilder" /> en el que se va a escribir. El contenido que escribe <see cref="T:System.Xml.XmlWriter" /> se anexa a <see cref="T:System.Text.StringBuilder" />.
            </param>
      <param name="settings">
              Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es null, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.
              Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="builder" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" /> que envuelve el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.
        </returns>
      <param name="output">
              Objeto <see cref="T:System.Xml.XmlWriter" /> que desea utilizar como sistema de escritura subyacente.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="writer" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
      <summary>
          Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante los objetos <see cref="T:System.Xml.XmlWriter" /> y <see cref="T:System.Xml.XmlWriterSettings" /> especificados.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" /> que envuelve el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.
        </returns>
      <param name="output">
              Objeto <see cref="T:System.Xml.XmlWriter" /> que desea utilizar como sistema de escritura subyacente.
            </param>
      <param name="settings">
              Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es null, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.
              Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="writer" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
      <summary>
          Libera los recursos no administrados que utiliza el objeto <see cref="T:System.Xml.XmlWriter" /> y, opcionalmente, los recursos administrados.
        </summary>
      <param name="disposing">
              
                Es true para liberar tanto recursos administrados como no administrados y false para liberar únicamente recursos no administrados.
            </param>
    </member>
    <member name="M:System.Xml.XmlWriter.Flush">
      <summary>
          Cuando se reemplaza en una clase derivada, vuelca el contenido del búfer en las secuencias subyacentes y también vuelca la secuencia subyacente.
        </summary>
    </member>
    <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, devuelve el prefijo más próximo definido en el ámbito de espacio de nombres actual correspondiente al identificador URI de espacio de nombres.
        </summary>
      <returns>
          Prefijo coincidente o null si no se encuentra ningún identificador URI de espacio de nombres coincidente en el ámbito actual.
        </returns>
      <param name="ns">
              Identificador URI de espacio de nombres cuyo prefijo se desea buscar. 
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="ns" /> es null o String.Empty. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlWriter.Settings">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.XmlWriterSettings" /> utilizado para crear esta instancia de <see cref="T:System.Xml.XmlWriter" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriterSettings" /> utilizado para crear esta instancia del sistema de escritura. Si este sistema de escritura no se creó utilizando el método <see cref="Overload:System.Xml.XmlWriter.Create" />, esta propiedad devuelve null.
        </returns>
    </member>
    <member name="M:System.Xml.XmlWriter.System#IDisposable#Dispose">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.IDisposable.Dispose" />.
        </summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe todos los atributos que se encuentran en la posición actual en <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <param name="reader">
              XmlReader del que se van a copiar los atributos. 
            </param>
      <param name="defattr">
              
                Es true para copiar los atributos predeterminados de XmlReader; en caso contrario, es false. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="reader" /> es null. 
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El lector no está en ningún nodo element, attribute o XmlDeclaration. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe el atributo con el valor y nombre local especificados.
        </summary>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="value">
              Valor del atributo. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              El estado del método de escritura no es WriteState.Element o está cerrado. 
            </exception>
      <exception cref="T:System.ArgumentException">
              El valor de atributo xml:space o xml:lang no es válido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe un atributo con el valor, nombre local e identificador URI del espacio de nombres especificados.
        </summary>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="ns">
              Identificador URI de espacio de nombres que se va asociar al atributo. 
            </param>
      <param name="value">
              Valor del atributo. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              El estado del método de escritura no es WriteState.Element o está cerrado. 
            </exception>
      <exception cref="T:System.ArgumentException">
              El valor de atributo xml:space o xml:lang no es válido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe el atributo con el prefijo, el nombre local, el identificador URI de espacio de nombres y el valor especificados.
        </summary>
      <param name="prefix">
              Prefijo de espacio de nombres del atributo. 
            </param>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="ns">
              URI de espacio de nombres del atributo. 
            </param>
      <param name="value">
              Valor del atributo. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              El estado del método de escritura no es WriteState.Element o está cerrado. 
            </exception>
      <exception cref="T:System.ArgumentException">
              El valor de atributo xml:space o xml:lang no es válido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Cuando se reemplaza en una clase derivada, codifica los bytes binarios especificados en Base64 y escribe el texto resultante.
        </summary>
      <param name="buffer">
              Matriz de bytes que se va a codificar. 
            </param>
      <param name="index">
              Posición en el búfer que indica el inicio de los bytes que se van a escribir. 
            </param>
      <param name="count">
              Número de bytes que se van a escribir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="buffer" /> es null. 
            </exception>
      <exception cref="T:System.ArgumentException">
              La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> o <paramref name="count" /> es menor que cero. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>
          Cuando se reemplaza en una clase derivada, codifica los bytes binarios especificados en BinHex y escribe el texto resultante.
        </summary>
      <param name="buffer">
              Matriz de bytes que se va a codificar. 
            </param>
      <param name="index">
              Posición en el búfer que indica el inicio de los bytes que se van a escribir. 
            </param>
      <param name="count">
              Número de bytes que se van a escribir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="buffer" /> es null. 
            </exception>
      <exception cref="T:System.ArgumentException">
              La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> o <paramref name="count" /> es menor que cero. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe un bloque &lt;![CDATA[...]]&gt; que contiene el texto especificado.
        </summary>
      <param name="text">
              Texto que se va a colocar en el bloque CDATA. 
            </param>
      <exception cref="T:System.ArgumentException">
              El texto daría como resultado un documento XML con formato incorrecto. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
      <summary>
          Cuando se reemplaza en una clase derivada, impone la generación de una entidad de caracteres para el valor de carácter Unicode especificado.
        </summary>
      <param name="ch">
              Carácter Unicode para el que se va a generar una entidad de caracteres. 
            </param>
      <exception cref="T:System.ArgumentException">
              El carácter está en el intervalo de caracteres de par suplente, 0xd800 - 0xdfff. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe texto en un búfer cada vez.
        </summary>
      <param name="buffer">
              Matriz de caracteres que contiene el texto que se va a escribir. 
            </param>
      <param name="index">
              Posición en el búfer que indica el inicio del texto que se va a escribir. 
            </param>
      <param name="count">
              Número de caracteres que se van a escribir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="buffer" /> es null. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> o <paramref name="count" /> es menor que cero. 
              O bien
              La longitud de búfer menos <paramref name="index" /> es menor que <paramref name="count" />; la llamada tiene como resultado la división de los caracteres de par suplente o la escritura de un par suplente no válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe un comentario &lt;!--...--&gt; que contiene el texto especificado.
        </summary>
      <param name="text">
              Texto que se va a colocar en el comentario. 
            </param>
      <exception cref="T:System.ArgumentException">
              El texto daría como resultado un documento XML con formato incorrecto. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe la declaración DOCTYPE con el nombre y atributos opcionales especificados.
        </summary>
      <param name="name">
              Nombre de DOCTYPE. No puede estar vacío. 
            </param>
      <param name="pubid">
              Si su valor no es nulo, también se escribe PUBLIC "pubid" "sysid", donde <paramref name="pubid" /> y <paramref name="sysid" /> se reemplazan por el valor de los argumentos especificados. 
            </param>
      <param name="sysid">
              Si el valor de <paramref name="pubid" /> es null y el de <paramref name="sysid" /> no lo es, se escribe System "sysid", donde <paramref name="sysid" /> se reemplaza por el valor de este argumento. 
            </param>
      <param name="subset">
              En caso de un valor no nulo, se escribe [subset] donde subset se reemplaza por el valor de este argumento. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se llamó a este método fuera del prólogo (después del elemento raíz). 
            </exception>
      <exception cref="T:System.ArgumentException">
              El valor de <paramref name="name" /> daría como resultado un archivo XML no válido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe un elemento con el valor y nombre local especificados.
        </summary>
      <param name="localName">
              Nombre local del elemento. 
            </param>
      <param name="value">
              Valor del elemento. 
            </param>
      <exception cref="T:System.ArgumentException">
              El valor <paramref name="localName" /> es null o una cadena vacía.
              O bien,
              Los valores de parámetro no son válidos.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe un elemento con el valor, nombre local e identificador URI del espacio de nombres especificados.
        </summary>
      <param name="localName">
              Nombre local del elemento. 
            </param>
      <param name="ns">
              Identificador URI de espacio de nombres que se va a asociar al elemento. 
            </param>
      <param name="value">
              Valor del elemento. 
            </param>
      <exception cref="T:System.ArgumentException">
              El valor <paramref name="localName" /> es null o una cadena vacía.
              O bien,
              Los valores de parámetro no son válidos. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
      <summary>
          Escribe un elemento con el nombre local especificado, el URI de espacio de nombres y el valor.
        </summary>
      <param name="prefix">
              Prefijo del elemento.
            </param>
      <param name="localName">
              Nombre local del elemento.
            </param>
      <param name="ns">
              Identificador URI de espacio de nombres del elemento.
            </param>
      <param name="value">
              Valor del elemento.
            </param>
      <exception cref="T:System.ArgumentException">
              El valor <paramref name="localName" /> es null o una cadena vacía.
              O bien,
              Los valores de parámetro no son válidos.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttribute">
      <summary>
          Cuando se reemplaza en una clase derivada, cierra la llamada a <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> anterior.
        </summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocument">
      <summary>
          Cuando se reemplaza en una clase derivada, cierra todos los elementos o atributos abiertos y vuelve a colocar el sistema de escritura en el estado de inicio.
        </summary>
      <exception cref="T:System.ArgumentException">
              El documento XML no es válido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElement">
      <summary>
          Cuando se reemplaza en una clase derivada, cierra un elemento y extrae el ámbito de espacio de nombres correspondiente.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              Esto da como resultado un documento XML no válido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
      <summary>
          Cuando se invalida en una clase derivada, escribe una referencia a entidad de la siguiente forma: &amp;name;.
        </summary>
      <param name="name">
              Nombre de la referencia a entidad. 
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="name" /> es null o String.Empty. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElement">
      <summary>
          Cuando se reemplaza en una clase derivada, cierra un elemento y extrae el ámbito de espacio de nombres correspondiente.
        </summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe el nombre especificado, comprobando que sea un nombre válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).
        </summary>
      <param name="name">
              Nombre que se va a escribir. 
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="name" /> no es un nombre XML válido, o <paramref name="name" /> es null o String.Empty. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe el nombre especificado, comprobando que sea un NmToken válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).
        </summary>
      <param name="name">
              Nombre que se va a escribir. 
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="name" /> no es un NmToken válido, o bien <paramref name="name" /> es null o String.Empty. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>
          Cuando se reemplaza en una clase derivada, copia todo el contenido del lector en el sistema de escritura y desplaza el lector al inicio del siguiente nodo relacionado.
        </summary>
      <param name="reader">
              <see cref="T:System.Xml.XmlReader" /> desde el que se va a leer. 
            </param>
      <param name="defattr">
              
                Es true para copiar los atributos predeterminados de XmlReader; en caso contrario, es false. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="reader" /> es null. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary>
          Copia todo el contenido del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> en el sistema de escritura. La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> permanece inalterada.
        </summary>
      <param name="navigator">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> del que se va a copiar.
            </param>
      <param name="defattr">
              
                Es true para copiar los atributos predeterminados; en caso contrario, es false.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="navigator" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe una instrucción de procesamiento con un espacio entre el nombre y el texto: &lt;?nombre texto?&gt;.
        </summary>
      <param name="name">
              Nombre de la instrucción de procesamiento. 
            </param>
      <param name="text">
              Texto que se va a incluir en la instrucción de procesamiento. 
            </param>
      <exception cref="T:System.ArgumentException">
              El texto daría como resultado un documento XML con formato incorrecto.
              
                <paramref name="name" /> es null o String.Empty.
              Este método se utiliza para crear una declaración XML después de llamar al método <see cref="M:System.Xml.XmlWriter.WriteStartDocument" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe el nombre completo de espacio de nombres. Este método busca el prefijo que está en el ámbito del espacio de nombres especificado.
        </summary>
      <param name="localName">
              Nombre local que se va a escribir. 
            </param>
      <param name="ns">
              Identificador URI de espacio de nombres del nombre. 
            </param>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="localName" /> es null o String.Empty.
              
                <paramref name="localName" /> no es un nombre válido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe marcado sin formato manualmente desde un búfer de caracteres.
        </summary>
      <param name="buffer">
              Matriz de caracteres que contiene el texto que se va a escribir. 
            </param>
      <param name="index">
              Posición en el búfer que indica el inicio del texto que se va a escribir. 
            </param>
      <param name="count">
              Número de caracteres que se van a escribir. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="buffer" /> es null. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> o <paramref name="count" /> es menor que cero. 
              O bien
              La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe marcado sin formato manualmente desde una cadena.
        </summary>
      <param name="data">
              Cadena que contiene el texto que se va a escribir. 
            </param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
      <summary>
          Escribe el inicio de un atributo con el nombre local especificado.
        </summary>
      <param name="localName">
              Nombre local del atributo.
            </param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
      <summary>
          Escribe el inicio de un atributo con el URI de espacio de nombres y el nombre local especificados.
        </summary>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="ns">
              URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe el inicio de un atributo con el prefijo, el nombre local y el URI de espacio de nombres especificados.
        </summary>
      <param name="prefix">
              Prefijo de espacio de nombres del atributo. 
            </param>
      <param name="localName">
              Nombre local del atributo. 
            </param>
      <param name="ns">
              Identificador URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe la declaración XML con la versión "1.0".
        </summary>
      <exception cref="T:System.InvalidOperationException">
              Éste no es el primer método Write al que se llama después de llamar al constructor. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe la declaración XML con la versión "1.0" y el atributo independiente.
        </summary>
      <param name="standalone">
              Si es true, escribirá "standalone=yes"; si es false, escribirá "standalone=no". 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Éste no es el primer método Write al que se llama después de llamar al constructor. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe una etiqueta de apertura con el nombre local especificado.
        </summary>
      <param name="localName">
              Nombre local del elemento. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              El sistema de escritura está cerrado. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe la etiqueta de apertura especificada y la asocia al espacio de nombres especificado.
        </summary>
      <param name="localName">
              Nombre local del elemento. 
            </param>
      <param name="ns">
              Identificador URI de espacio de nombres que se va a asociar al elemento. Si este espacio de nombres ya está en el ámbito y tiene asociado un prefijo, el sistema de escritura escribe automáticamente también dicho prefijo. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              El sistema de escritura está cerrado. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe la etiqueta de apertura especificada y la asocia al espacio de nombres y prefijo especificados.
        </summary>
      <param name="prefix">
              Prefijo de espacio de nombres del elemento. 
            </param>
      <param name="localName">
              Nombre local del elemento. 
            </param>
      <param name="ns">
              Identificador URI de espacio de nombres que se va a asociar al elemento. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              El sistema de escritura está cerrado. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlWriter.WriteState">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el estado del sistema de escritura.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.WriteState" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe el contenido de texto especificado.
        </summary>
      <param name="text">
              Texto que se va a escribir. 
            </param>
      <exception cref="T:System.ArgumentException">
              La cadena de texto contiene un par suplente no válido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>
          Cuando se reemplaza en una clase derivada, genera y escribe la entidad de carácter suplente para el par de caracteres suplentes.
        </summary>
      <param name="lowChar">
              Suplente bajo. Debe ser un valor comprendido entre 0xDC00 y 0xDFFF. 
            </param>
      <param name="highChar">
              Suplente alto. Debe ser un valor comprendido entre 0xD800 y 0xDBFF. 
            </param>
      <exception cref="T:System.Exception">
              Se ha pasado un par de caracteres suplentes no válido. 
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
      <summary>
          Escribe un valor de <see cref="T:System.Boolean" />.
        </summary>
      <param name="value">
              Valor <see cref="T:System.Boolean" /> que se va a escribir.
            </param>
      <exception cref="T:System.ArgumentException">
              Se ha especificado un valor no válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
      <summary>
          Escribe un valor de <see cref="T:System.DateTime" />.
        </summary>
      <param name="value">
              Valor <see cref="T:System.DateTime" /> que se va a escribir.
            </param>
      <exception cref="T:System.ArgumentException">
              Se ha especificado un valor no válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
      <summary>
          Escribe un valor <see cref="T:System.Decimal" />.
        </summary>
      <param name="value">
              Valor <see cref="T:System.Decimal" /> que se va a escribir.
            </param>
      <exception cref="T:System.ArgumentException">
              Se ha especificado un valor no válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Double)">
      <summary>
          Escribe un valor <see cref="T:System.Double" />.
        </summary>
      <param name="value">
              Valor <see cref="T:System.Double" /> que se va a escribir.
            </param>
      <exception cref="T:System.ArgumentException">
              Se ha especificado un valor no válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
      <summary>
          Escribe un valor <see cref="T:System.Int32" />.
        </summary>
      <param name="value">
              Valor <see cref="T:System.Int32" /> que se va a escribir.
            </param>
      <exception cref="T:System.ArgumentException">
              Se ha especificado un valor no válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
      <summary>
          Escribe un valor <see cref="T:System.Int64" />.
        </summary>
      <param name="value">
              Valor <see cref="T:System.Int64" /> que se va a escribir.
            </param>
      <exception cref="T:System.ArgumentException">
              Se ha especificado un valor no válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Object)">
      <summary>
          Escribe el valor del objeto.
        </summary>
      <param name="value">
              Valor del objeto que se va a escribir. 
              
                Con el lanzamiento de .NET Framework 3.5, este método acepta <see cref="T:System.DateTimeOffset" /> como parámetro.
              
            </param>
      <exception cref="T:System.ArgumentException">
              Se ha especificado un valor no válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Single)">
      <summary>
          Escribe un número de punto flotante de precisión simple.
        </summary>
      <param name="value">
              El número de punto flotante de precisión simple que se va a escribir.
            </param>
      <exception cref="T:System.ArgumentException">
              Se ha especificado un valor no válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.String)">
      <summary>
          Escribe un valor <see cref="T:System.String" />.
        </summary>
      <param name="value">
              Valor <see cref="T:System.String" /> que se va a escribir.
            </param>
      <exception cref="T:System.ArgumentException">
              Se ha especificado un valor no válido.
            </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, escribe el espacio en blanco especificado.
        </summary>
      <param name="ws">
              Cadena de caracteres de espacio en blanco. 
            </param>
      <exception cref="T:System.ArgumentException">
              La cadena no contiene caracteres de espacio en blanco. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlLang">
      <summary>
          Cuando se reemplaza en una clase derivada, se obtiene el ámbito de xml:lang actual.
        </summary>
      <returns>
          El xml:lang actual o es null si no hay ningún xml:lang en el ámbito actual.
        </returns>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlSpace">
      <summary>
          Cuando se reemplaza en una clase derivada, se obtiene un <see cref="T:System.Xml.XmlSpace" /> que representa el ámbito de xml:space actual.
        </summary>
      <returns>
          XmlSpace que representa el ámbito de xml:space actual.
          
            
              
                
                  Valor 
                
                
                  Significado 
                
              
            
            
              
                
                  None
                
              
              
                Éste es el valor predeterminado si no existe ningún ámbito de xml:space. 
              
            
            
              
                
                  Default
                
              
              
                El ámbito actual es xml:space="default". 
              
            
            
              
                
                  Preserve
                
              
              
                El ámbito actual es xml:space="preserve". 
              
            
          
        </returns>
    </member>
    <member name="T:System.Xml.XmlWriterSettings">
      <summary>
          Especifica un conjunto de características compatibles en el objeto <see cref="T:System.Xml.XmlWriter" /> creado mediante el método <see cref="Overload:System.Xml.XmlWriter.Create" />.
        </summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlWriterSettings" />.
        </summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CheckCharacters">
      <summary>
          Obtiene o establece un valor que indica si se va a realizar la comprobación de caracteres.
        </summary>
      <returns>
          
            Es true si se va a realizar la comprobación de caracteres; en caso contrario, es false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Clone">
      <summary>
          Crea una copia de la instancia de <see cref="T:System.Xml.XmlWriterSettings" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriterSettings" /> clonado.
        </returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CloseOutput">
      <summary>
          Obtiene o establece un valor que indica si el objeto <see cref="T:System.Xml.XmlWriter" /> también debe cerrar la secuencia subyacente o <see cref="T:System.IO.TextWriter" /> cuando se llama al método <see cref="M:System.Xml.XmlWriter.Close" />.
        </summary>
      <returns>
          
            Es true para cerrar también la secuencia subyacente o <see cref="T:System.IO.TextWriter" />; en caso contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.ConformanceLevel">
      <summary>
          Obtiene o establece el nivel de conformidad que cumple <see cref="T:System.Xml.XmlWriter" />.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.ConformanceLevel" />. El valor predeterminado es ConformanceLevel.Document.
        </returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Encoding">
      <summary>
          Obtiene o establece la codificación de texto que se va a utilizar.
        </summary>
      <returns>
          Codificación de texto que se va a utilizar. El valor predeterminado es Encoding.UTF8.
        </returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Indent">
      <summary>
          Obtiene o establece un valor que indica si se va a aplicar sangría a los elementos.
        </summary>
      <returns>
          
            Es true para escribir elementos individuales en líneas nuevas y aplicar sangría; en caso contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.IndentChars">
      <summary>
          Obtiene o establece la cadena de caracteres que se va a utilizar al aplicar sangría. Esta opción se utiliza cuando la propiedad <see cref="P:System.Xml.XmlWriterSettings.Indent" /> se establece en true.
        </summary>
      <returns>
          Cadena de caracteres que se va a utilizar al aplicar sangría. Se puede establecer en cualquier valor de cadena. Sin embargo, para garantizar la validez del contenido XML, debe especificar sólo caracteres de espacio en blanco válidos, como caracteres de espacio, tabulaciones, retornos de carro y avances de línea. El valor predeterminado es dos espacios.
        </returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineChars">
      <summary>
          Obtiene o establece la cadena de caracteres que se va a utilizar para los saltos de línea. 
        </summary>
      <returns>
          Cadena de caracteres que se va a utilizar para los saltos de línea. Se puede establecer en cualquier valor de cadena. Sin embargo, para garantizar la validez del contenido XML, debe especificar sólo caracteres de espacio en blanco válidos, como caracteres de espacio, tabulaciones, retornos de carro y avances de línea. El valor predeterminado es \r\n (retorno de carro, nueva línea).
        </returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineHandling">
      <summary>
          Obtiene o establece un valor que indica si se deben normalizar los saltos de línea en el resultado.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.NewLineHandling" />. El valor predeterminado es <see cref="F:System.Xml.NewLineHandling.Replace" />.
        </returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineOnAttributes">
      <summary>
          Obtiene o establece un valor que indica si los atributos se deben escribir en una nueva línea.
        </summary>
      <returns>
          
            Es true para escribir los atributos en líneas individuales; en caso contrario, es false. El valor predeterminado es false.
          
            Esta configuración no se aplica cuando el valor de la propiedad <see cref="P:System.Xml.XmlWriterSettings.Indent" /> es false.
          
          Cuando <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> se establece en true, a cada atributo le precede una nueva línea y un nivel adicional de sangría.
        </returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration">
      <summary>
          Obtiene o establece un valor que indica si debe escribir una declaración XML.
        </summary>
      <returns>
          
            Es true para omitir la declaración XML; en caso contrario, es false. El valor predeterminado es false, se escribe una declaración XML.
        </returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OutputMethod">
      <summary>
          Obtiene el método utilizado para serializar el resultado de <see cref="T:System.Xml.XmlWriter" />.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.XmlOutputMethod" />. El valor predeterminado es <see cref="F:System.Xml.XmlOutputMethod.Xml" />.
        </returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Reset">
      <summary>
          Restablece los miembros de la clase de configuración a sus valores predeterminados.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.IXmlSchemaInfo">
      <summary>
          Define el conjunto de información posterior a la validación del esquema de un nodo XML validado.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsDefault">
      <summary>
          Obtiene un valor que indica si el nodo XML validado se ha establecido como resultado de la aplicación de un valor predeterminado durante la validación del esquema del lenguaje de definición de esquemas XML (XSD).
        </summary>
      <returns>
          
            Es true si este nodo XML validado se estableció como resultado de aplicar un valor predeterminado durante la validación del esquema; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsNil">
      <summary>
          Obtiene un valor que indica si el valor de este nodo XML validado es nil.
        </summary>
      <returns>
          
            Es true si el valor para este nodo XML validado es nulo; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.MemberType">
      <summary>
          Obtiene el tipo de esquema dinámico de este nodo XML validado.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute">
      <summary>
          Obtiene el <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> compilado correspondiente a este nodo XML validado.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaElement">
      <summary>
          Obtiene el <see cref="T:System.Xml.Schema.XmlSchemaElement" /> compilado correspondiente a este nodo XML validado.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaElement" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaType">
      <summary>
          Obtiene el tipo estático de esquema del lenguaje de definición de esquemas XML (XSD) del nodo XML validado.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaType" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.Validity">
      <summary>
          Obtiene el valor de <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> del nodo XML validado.
        </summary>
      <returns>
          Valor de <see cref="T:System.Xml.Schema.XmlSchemaValidity" />.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventArgs">
      <summary>
          Devuelve información detallada relacionada con ValidationEventHandler.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Exception">
      <summary>
          Obtiene la excepción <see cref="T:System.Xml.Schema.XmlSchemaException" /> asociada al evento de validación.
        </summary>
      <returns>
          Excepción XmlSchemaException asociada al evento de validación.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Message">
      <summary>
          Obtiene la descripción de texto correspondiente al evento de validación.
        </summary>
      <returns>
          Descripción de texto.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Severity">
      <summary>
          Obtiene la gravedad del evento de validación.
        </summary>
      <returns>
          Valor de <see cref="T:System.Xml.Schema.XmlSeverityType" /> que representa la gravedad del evento de validación.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventHandler">
      <summary>
          Representa el método de devolución de llamada que controlará los eventos de validación del esquema XML y <see cref="T:System.Xml.Schema.ValidationEventArgs" />.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="e">
              <see cref="T:System.Xml.Schema.ValidationEventArgs" /> que contiene los datos del evento. 
            </param>
    </member>
    <member name="T:System.Xml.Schema.XmlAtomicValue">
      <summary>
          Representa el valor con tipo de un atributo o elemento XML validado. La clase <see cref="T:System.Xml.Schema.XmlAtomicValue" /> no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.Clone">
      <summary>
          Devuelve una copia de este objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" />.
        </summary>
      <returns>
          Copia del objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" /> de este objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.IsNode">
      <summary>
          Obtiene un valor que indica si el atributo o el elemento XML validado es un nodo XPath o un valor atómico.
        </summary>
      <returns>
          
            Es true si el atributo o elemento XML validado es un nodo XPath; false si el atributo o elemento XML validado es un valor atómico.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlAtomicValue.Clone" />.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ToString">
      <summary>
          Obtiene el valor string del atributo o elemento XML validado.
        </summary>
      <returns>
          Valor string del atributo o elemento XML validado.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.TypedValue">
      <summary>
          Obtiene el atributo o elemento XML validado actual en forma de objeto empaquetado del tipo más apropiado de Microsoft .NET Framework según el tipo de esquema.
        </summary>
      <returns>
          Atributo o elemento XML validado actual en forma de objeto empaquetado del tipo de .NET Framework que sea más adecuado.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.Value">
      <summary>
          Obtiene el valor string del atributo o elemento XML validado.
        </summary>
      <returns>
          Valor string del atributo o elemento XML validado.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>
          Devuelve el valor del atributo o elemento XML validado como el tipo especificado mediante el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de espacio de nombres.
        </summary>
      <returns>
          Valor del atributo o elemento XML validado como el tipo solicitado.
        </returns>
      <param name="type">
              Tipo en el que se devolverá el atributo o elemento XML validado.
            </param>
      <param name="nsResolver">
              Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de los espacios de nombres.
            </param>
      <exception cref="T:System.FormatException">
              El valor del atributo o elemento XML validado no tiene el formato correcto para el tipo de destino.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión que se ha intentado no es válida.
            </exception>
      <exception cref="T:System.OverflowException">
              La conversión que se ha intentado ha producido un desbordamiento.
            </exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsBoolean">
      <summary>
          Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.Boolean" />.
        </summary>
      <returns>
          Valor del atributo o elemento XML validado en forma de <see cref="T:System.Boolean" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.Boolean" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.Boolean" /> que se ha intentado no es válida.
            </exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDateTime">
      <summary>
          Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.DateTime" />.
        </summary>
      <returns>
          Valor del atributo o elemento XML validado en forma de <see cref="T:System.DateTime" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.DateTime" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.DateTime" /> que se ha intentado no es válida.
            </exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDouble">
      <summary>
          Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.Double" />.
        </summary>
      <returns>
          Valor del atributo o elemento XML validado en forma de <see cref="T:System.Double" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.Double" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.Double" /> que se ha intentado no es válida.
            </exception>
      <exception cref="T:System.OverflowException">
              La conversión que se ha intentado ha producido un desbordamiento.
            </exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsInt">
      <summary>
          Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.Int32" />.
        </summary>
      <returns>
          Valor del atributo o elemento XML validado en forma de <see cref="T:System.Int32" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.Int32" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.Int32" /> que se ha intentado no es válida.
            </exception>
      <exception cref="T:System.OverflowException">
              La conversión que se ha intentado ha producido un desbordamiento.
            </exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsLong">
      <summary>
          Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.Int64" />.
        </summary>
      <returns>
          Valor del atributo o elemento XML validado en forma de <see cref="T:System.Int64" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.Int64" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.Int64" /> que se ha intentado no es válida.
            </exception>
      <exception cref="T:System.OverflowException">
              La conversión que se ha intentado ha producido un desbordamiento.
            </exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueType">
      <summary>
          Obtiene el tipo de Microsoft .NET Framework del atributo o elemento XML validado.
        </summary>
      <returns>
          Tipo de .NET Framework del atributo o elemento XML validado. El valor predeterminado es <see cref="T:System.String" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.XmlType">
      <summary>
          Obtiene el valor <see cref="T:System.Xml.Schema.XmlSchemaType" /> del atributo o elemento XML validado.
        </summary>
      <returns>
          Valor <see cref="T:System.Xml.Schema.XmlSchemaType" /> del atributo o elemento XML validado.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchema">
      <summary>
          Una representación en memoria de un Esquema XML según se indica en las especificaciones XML Schema Part 1: Structures y XML Schema Part 2: Datatypes de World Wide Web Consortium (W3C).
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchema" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
      <summary>
          Obtiene o establece el formato de los atributos declarados en el espacio de nombres de destino del esquema.
        </summary>
      <returns>
          El valor de <see cref="T:System.Xml.Schema.XmlSchemaForm" /> que indica si es necesario calificar los atributos del espacio de nombres de destino con el espacio de nombres como prefijo. El valor predeterminado es <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeGroups">
      <summary>
          Obtiene el valor posterior a la compilación del esquema de todos los grupos de atributos globales del esquema.
        </summary>
      <returns>
          Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todos los grupos de atributos globales del esquema.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Attributes">
      <summary>
          Obtiene el valor posterior a la compilación del esquema para todos los atributos del esquema.
        </summary>
      <returns>
          Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todos los atributos del esquema.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.BlockDefault">
      <summary>
          Obtiene o establece el atributo blockDefault, que establece el valor predeterminado del atributo block en elementos y tipos complejos en el targetNamespace del esquema.
        </summary>
      <returns>
          Un valor de <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> que representa los distintos métodos para impedir la derivación. El valor predeterminado es XmlSchemaDerivationMethod.None.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
      <summary>
          Compila el Modelo de objetos de esquemas XML (SOM) en información de esquemas para la validación. Se utiliza para comprobar la estructura sintáctica y semántica del SOM generado mediante programación. La comprobación de la validación semántica se realiza durante la compilación.
        </summary>
      <param name="validationEventHandler">
              Controlador de eventos de validación que recibe información acerca de los errores de validación del esquema XML. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
      <summary>
          Compila el Modelo de objetos de esquemas XML (SOM) en información de esquemas para la validación. Se utiliza para comprobar la estructura sintáctica y semántica del SOM generado mediante programación. La comprobación de la validación semántica se realiza durante la compilación.
        </summary>
      <param name="validationEventHandler">
              Controlador de eventos de validación que recibe información acerca de los errores de validación del esquema XML. 
            </param>
      <param name="resolver">
              Objeto XmlResolver utilizado para resolver los espacios de nombres a los que se hace referencia en los elementos include e import. 
            </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
      <summary>
          Obtiene o establece el formato de los elementos declarados en el espacio de nombres de destino del esquema.
        </summary>
      <returns>
          El valor de <see cref="T:System.Xml.Schema.XmlSchemaForm" /> que indica si es necesario calificar los elementos del espacio de nombres de destino con el espacio de nombres como prefijo. El valor predeterminado es <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Elements">
      <summary>
          Obtiene el valor posterior a la compilación del esquema para todos los elementos del esquema.
        </summary>
      <returns>
          Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todos los elementos del esquema.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.FinalDefault">
      <summary>
          Obtiene o establece el atributo finalDefault que establece el valor predeterminado del atributo final en elementos y tipos complejos en el espacio de nombres de destino del esquema.
        </summary>
      <returns>
          Un valor de <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> que representa los distintos métodos para impedir la derivación. El valor predeterminado es XmlSchemaDerivationMethod.None.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Groups">
      <summary>
          Obtiene el valor posterior a la compilación del esquema de todos los grupos del esquema.
        </summary>
      <returns>
          Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todos los grupos del esquema.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Id">
      <summary>
          Obtiene o establece el identificador de cadena.
        </summary>
      <returns>
          Identificador de cadena. El valor predeterminado es String.Empty.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Includes">
      <summary>
          Obtiene la colección de esquemas incluidos e importados.
        </summary>
      <returns>
          Una <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de los esquemas incluidos e importados.
        </returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
      <summary>
          El espacio de nombres de instancia del esquema XML. Este campo es constante. 
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.IsCompiled">
      <summary>
          Indica si el esquema se ha compilado.
        </summary>
      <returns>
          
            Es true si el esquema se ha compilado; de lo contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Items">
      <summary>
          Obtiene la colección de elementos de esquema del esquema y se utiliza para agregar nuevos tipos de elemento en el nivel de elemento schema.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de los elementos de esquema del esquema.
        </returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.Namespace">
      <summary>
          El espacio de nombres del esquema XML. Este campo es constante.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Notations">
      <summary>
          Obtiene el valor posterior a la compilación del esquema para todas las notaciones del esquema.
        </summary>
      <returns>
          Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todas las notaciones del esquema.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
      <summary>
          Lee un esquema XML de la secuencia proporcionada.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa el esquema XML.
        </returns>
      <param name="stream">
              Secuencia de datos suministrada. 
            </param>
      <param name="validationEventHandler">
              Controlador de eventos de validación que recibe información acerca de los errores de validación del esquema XML. 
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">
              Se produce una <see cref="T:System.Xml.Schema.XmlSchemaException" /> si no se especifica ningún <see cref="T:System.Xml.Schema.ValidationEventHandler" />.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>
          Lee un esquema XML de <see cref="T:System.IO.TextReader" /> que se haya proporcionado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa el esquema XML.
        </returns>
      <param name="reader">
              TextReader que contiene el esquema XML que se va a leer. 
            </param>
      <param name="validationEventHandler">
              Controlador de eventos de validación que recibe información acerca de los errores de validación del esquema XML. 
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">
              Se produce una <see cref="T:System.Xml.Schema.XmlSchemaException" /> si no se especifica ningún <see cref="T:System.Xml.Schema.ValidationEventHandler" />.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>
          Lee un esquema XML de <see cref="T:System.Xml.XmlReader" /> que se haya proporcionado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa el esquema XML.
        </returns>
      <param name="reader">
              XmlReader que contiene el esquema XML que se va a leer. 
            </param>
      <param name="validationEventHandler">
              Controlador de eventos de validación que recibe información acerca de los errores de validación del esquema XML. 
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">
              Se produce una <see cref="T:System.Xml.Schema.XmlSchemaException" /> si no se especifica ningún <see cref="T:System.Xml.Schema.ValidationEventHandler" />.
            </exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.SchemaTypes">
      <summary>
          Obtiene el valor posterior a la compilación del esquema de todos los tipos de esquema del esquema.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de todos los tipos de esquema del esquema.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.TargetNamespace">
      <summary>
          Obtiene o establece el Identificador uniforme de recursos (Identificador URI) del espacio de nombres de destino del esquema.
        </summary>
      <returns>
          El espacio de nombres de destino del esquema.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
      <summary>
          Obtiene y establece los atributos cualificados que no pertenecen al espacio de nombres de destino del esquema.
        </summary>
      <returns>
          Una matriz de objetos <see cref="T:System.Xml.XmlAttribute" /> cualificados que no pertenecen al espacio de nombres de destino del esquema.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Version">
      <summary>
          Obtiene o establece la versión del esquema.
        </summary>
      <returns>
          Versión del esquema. El valor predeterminado es String.Empty.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
      <summary>
          Escribe el esquema XML en la secuencia de datos suministrada.
        </summary>
      <param name="stream">
              Secuencia de datos suministrada. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
      <summary>
          Escribe el esquema XML en el <see cref="T:System.IO.Stream" /> proporcionado utilizando el <see cref="T:System.Xml.XmlNamespaceManager" /> especificado.
        </summary>
      <param name="stream">
              Secuencia de datos suministrada. 
            </param>
      <param name="namespaceManager">
              <see cref="T:System.Xml.XmlNamespaceManager" />.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
      <summary>
          Escribe el esquema XML en el <see cref="T:System.IO.TextWriter" /> proporcionado.
        </summary>
      <param name="writer">
              <see cref="T:System.IO.TextWriter" /> en el que se va a escribir.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
      <summary>
          Escribe el esquema XML en el <see cref="T:System.IO.TextWriter" /> proporcionado.
        </summary>
      <param name="writer">
              <see cref="T:System.IO.TextWriter" /> en el que se va a escribir.
            </param>
      <param name="namespaceManager">
              <see cref="T:System.Xml.XmlNamespaceManager" />. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
      <summary>
          Escribe el esquema XML en el <see cref="T:System.Xml.XmlWriter" /> proporcionado.
        </summary>
      <param name="writer">
              <see cref="T:System.Xml.XmlWriter" /> en el que se va a escribir. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
      <summary>
          Escribe el esquema XML en el <see cref="T:System.Xml.XmlWriter" /> proporcionado.
        </summary>
      <param name="writer">
              <see cref="T:System.Xml.XmlWriter" /> en el que se va a escribir.
            </param>
      <param name="namespaceManager">
              <see cref="T:System.Xml.XmlNamespaceManager" />. 
            </param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAll">
      <summary>
          Representa el elemento all (compositor) del Consorcio W3C.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAll.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAll" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAll.Items">
      <summary>
          Obtiene la colección de los elementos XmlSchemaElement incluidos en el compositor all.
        </summary>
      <returns>
          Colección de elementos incluidos en XmlSchemaAll.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotated">
      <summary>
          Clase base de cualquier elemento que pueda contener elementos de anotación.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotated.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAnnotated" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Annotation">
      <summary>
          Obtiene o establece la propiedad annotation.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" /> que representa la propiedad annotation.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Id">
      <summary>
          Obtiene o establece el identificador de cadena.
        </summary>
      <returns>
          Id. de la cadena. El valor predeterminado es String.Empty.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes">
      <summary>
          Obtiene o establece los atributos cualificados que no pertenecen al espacio de nombres de destino del esquema actual.
        </summary>
      <returns>
          Una matriz de objetos <see cref="T:System.Xml.XmlAttribute" /> cualificados que no pertenecen al espacio de nombres de destino del esquema.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotation">
      <summary>
          Representa el elemento annotation del Consorcio W3C.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotation.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Id">
      <summary>
          Obtiene o establece el identificador de cadena.
        </summary>
      <returns>
          Id. de la cadena. El valor predeterminado es String.Empty.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Items">
      <summary>
          Obtiene la colección Items que se utiliza para almacenar los elementos secundarios appinfo y documentation.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de elementos secundarios appinfo y documentation.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.UnhandledAttributes">
      <summary>
          Obtiene o establece los atributos cualificados que no pertenecen al espacio de nombres de destino del esquema.
        </summary>
      <returns>
          Una matriz de objetos <see cref="T:System.Xml.XmlAttribute" /> que no pertenecen al espacio de nombres de destino del esquema.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAny">
      <summary>
          Representa el elemento any del Consorcio W3C.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAny.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAny" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.Namespace">
      <summary>
          Obtiene o establece los espacios de nombres que contienen los elementos que pueden utilizarse.
        </summary>
      <returns>
          Espacios de nombres de los elementos que están disponibles para su uso. El valor predeterminado es ##any.
          Optional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.ProcessContents">
      <summary>
          Obtiene o establece información sobre la forma en que una aplicación o un procesador XML deben controlar la validación de documentos XML para los elementos especificados por el elemento any.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />. Si no se especifica ningún atributo processContents, el valor predeterminado es Strict.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnyAttribute">
      <summary>
          Representa el elemento anyAttribute del Consorcio W3C.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.Namespace">
      <summary>
          Obtiene o establece los espacios de nombres que contienen los atributos que pueden utilizarse.
        </summary>
      <returns>
          Espacios de nombres de los atributos que están disponibles para su uso. El valor predeterminado es ##any.
          Optional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.ProcessContents">
      <summary>
          Obtiene o establece información sobre la forma en que una aplicación o un procesador XML deben controlar la validación de documentos XML para los atributos especificados por el elemento anyAttribute.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />. Si no se especifica ningún atributo processContents, el valor predeterminado es Strict.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAppInfo">
      <summary>
          Representa el elemento appinfo del Consorcio W3C.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAppInfo.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAppInfo" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Markup">
      <summary>
          Obtiene o establece una matriz de objetos <see cref="T:System.Xml.XmlNode" /> que representa los nodos secundarios de appinfo.
        </summary>
      <returns>
          Una matriz de objetos <see cref="T:System.Xml.XmlNode" /> que representa los nodos secundarios de appinfo.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Source">
      <summary>
          Obtiene o establece el origen de la información de la aplicación.
        </summary>
      <returns>
          Referencia a un identificador uniforme de recurso (URI). El valor predeterminado es String.Empty.
          Opcional.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttribute">
      <summary>
          Representa el elemento attribute del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Los atributos facilitan información adicional sobre otros elementos de documento. La etiqueta de atributo se anida entre las etiquetas de un elemento de documento del esquema. El documento XML muestra los atributos como elementos con nombre en la etiqueta de apertura de un elemento.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType">
      <summary>
          Obtiene un objeto <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo del atributo basado en <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> o <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> del atributo.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeType">
      <summary>
          Obtiene el objeto de Common Language Runtime (CLR) en función del <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> o del <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> del atributo que contiene el valor posterior a la compilación de la propiedad AttributeType.
        </summary>
      <returns>
          Objeto Common Runtime Library (CLR) que contiene el valor posterior a la compilación de la propiedad AttributeType.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.DefaultValue">
      <summary>
          Obtiene o establece el valor predeterminado del atributo.
        </summary>
      <returns>
          Valor predeterminado del atributo. El valor predeterminado es una referencia nula.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.FixedValue">
      <summary>
          Obtiene o establece el valor fijo del atributo.
        </summary>
      <returns>
          Valor fijo del atributo. El valor predeterminado es null.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Form">
      <summary>
          Obtiene o establece el formato del atributo.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. El valor predeterminado es el valor de <see cref="P:System.Xml.Schema.XmlSchema.AttributeFormDefault" /> del elemento de esquema en el que está contenido el atributo.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Name">
      <summary>
          Obtiene o establece el nombre del atributo.
        </summary>
      <returns>
          Nombre del atributo.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.QualifiedName">
      <summary>
          Obtiene el nombre completo del atributo.
        </summary>
      <returns>
          Valor posterior a la compilación de la propiedad QualifiedName.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.RefName">
      <summary>
          Obtiene o establece el nombre de un atributo declarado en este esquema (u otro esquema indicado por el espacio de nombres especificado).
        </summary>
      <returns>
          Nombre del atributo declarado.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType">
      <summary>
          Obtiene el tipo de atributo o establece el tipo de atributo en un tipo simple.
        </summary>
      <returns>
          Tipo simple definido en este esquema.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName">
      <summary>
          Obtiene o establece el nombre del tipo simple definido en este esquema (u otro esquema indicado por el espacio de nombres especificado).
        </summary>
      <returns>
          Nombre del tipo simple.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Use">
      <summary>
          Obtiene o establece información sobre la forma de utilizar el atributo.
        </summary>
      <returns>
          Puede tener uno de los siguientes valores: None, Prohibited, Optional o Required. El valor predeterminado es Optional.
          Opcional.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroup">
      <summary>
          Representa el elemento attributeGroup del esquema XML tal como lo especifica World Wide Web Consortium (W3C). AttributesGroups proporciona un mecanismo para agrupar un conjunto de declaraciones de atributos de forma que puedan incorporarse como un grupo en definiciones de tipos complejos.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroup.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.AnyAttribute">
      <summary>
          Obtiene o establece el componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del grupo de atributos.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Attributes">
      <summary>
          Obtiene la colección de atributos del grupo de atributos. Contiene los elementos XmlSchemaAttribute y XmlSchemaAttributeGroupRef.
        </summary>
      <returns>
          Colección de atributos del grupo de atributos.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Name">
      <summary>
          Obtiene o establece el nombre del grupo de atributos.
        </summary>
      <returns>
          Nombre del grupo de atributos.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.QualifiedName">
      <summary>
          Obtiene el nombre completo del grupo de atributos.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre completo del grupo de atributos.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.RedefinedAttributeGroup">
      <summary>
          Obtiene la propiedad de grupo del atributo redefinido del esquema XML.
        </summary>
      <returns>
          Propiedad de grupo del atributo redefinido.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroupRef">
      <summary>
          Representa el elemento attributeGroup con el atributo ref del esquema XML tal como lo especifica World Wide Web Consortium (W3C). AttributesGroupRef es la referencia para un attributeGroup, la propiedad de nombre contiene el grupo de atributos al que se hace referencia. 
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroupRef.#ctor"></member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroupRef.RefName">
      <summary>
          Obtiene o establece el nombre del elemento attributeGroup al que se hace referencia.
        </summary>
      <returns>
          Nombre del grupo de atributos al que se hace referencia. El valor debe ser de tipo QName.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaChoice">
      <summary>
          Representa el elemento choice (compositor) del esquema XML tal como lo especifica World Wide Web Consortium (W3C). choice sólo permite que aparezca uno de sus elementos secundarios en una instancia. 
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaChoice.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaChoice" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaChoice.Items">
      <summary>
          Obtiene la colección de los elementos incluidos con el compositor (choice): XmlSchemaElement, XmlSchemaGroupRef, XmlSchemaChoice, XmlSchemaSequence o XmlSchemaAny.
        </summary>
      <returns>
          Colección de elementos incluidos en XmlSchemaChoice.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollection">
      <summary>
          Contiene una caché de esquemas del lenguaje de definición de esquemas XML (esquemas XSD) y esquemas reducidos de datos XML (esquemas XDR). No se puede heredar esta clase.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase XmlSchemaCollection.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
      <summary>
          Inicializa una nueva instancia de la clase XmlSchemaCollection con el objeto <see cref="T:System.Xml.XmlNameTable" /> especificado. XmlNameTable se utiliza cuando se cargan esquemas.
        </summary>
      <param name="nametable">
              XmlNameTable que se va a utilizar. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
      <summary>
          Agrega el esquema localizado por la dirección URL especificada a la colección de esquemas.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> agregado a la colección de esquemas; null si el esquema que se va agregar es un esquema XDR o si existen errores de compilación en el esquema.
        </returns>
      <param name="ns">
              URI del espacio de nombres asociado al esquema. Para los esquemas XML, normalmente será targetNamespace. 
            </param>
      <param name="uri">
              Dirección URL que especifica el esquema que se va a cargar. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              El esquema no es válido. 
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
      <summary>
          Agrega el esquema que contiene el objeto <see cref="T:System.Xml.XmlReader" /> a la colección de esquemas.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> agregado a la colección de esquemas; null si el esquema que se va agregar es un esquema XDR o si existen errores de compilación en el esquema.
        </returns>
      <param name="ns">
              URI del espacio de nombres asociado al esquema. Para los esquemas XML, normalmente será targetNamespace. 
            </param>
      <param name="reader">
              
                <see cref="T:System.Xml.XmlReader" /> que contiene el esquema que se va a agregar. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              El esquema no es válido. 
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>
          Agrega el esquema que contiene el objeto <see cref="T:System.Xml.XmlReader" /> a la colección de esquemas. El <see cref="T:System.Xml.XmlResolver" /> especificado se utiliza para resolver los recursos externos.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> agregado a la colección de esquemas; null si el esquema que se va agregar es un esquema XDR o si existen errores de compilación en el esquema.
        </returns>
      <param name="ns">
              URI del espacio de nombres asociado al esquema. Para los esquemas XML, normalmente será targetNamespace. 
            </param>
      <param name="reader">
              
                <see cref="T:System.Xml.XmlReader" /> que contiene el esquema que se va a agregar. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para resolver los espacios de nombres a los que se hace referencia en los elementos include e import o en el atributo x-schema (esquemas XDR). Si es null, las referencias externas no se resuelven. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              El esquema no es válido. 
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
      <summary>
          Agrega <see cref="T:System.Xml.Schema.XmlSchema" /> a la colección.
        </summary>
      <returns>
          Objeto XmlSchema.
        </returns>
      <param name="schema">
              XmlSchema que se va a agregar a la colección. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
      <summary>
          Agrega <see cref="T:System.Xml.Schema.XmlSchema" /> a la colección. El <see cref="T:System.Xml.XmlResolver" /> especificado se utiliza para resolver las referencias externas.
        </summary>
      <returns>
          XmlSchema agregado a la colección de esquemas.
        </returns>
      <param name="schema">
              XmlSchema que se va a agregar a la colección. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para resolver los espacios de nombres a los que se hace referencia en los elementos include e import. Si es null, las referencias externas no se resuelven. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              El esquema no es válido. 
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
      <summary>
          Agrega todos los espacios de nombres definidos en una colección especificada (incluidos sus esquemas asociados) a esta colección.
        </summary>
      <param name="schema">
              XmlSchemaCollection que desea agregar a esta colección. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
      <summary>
          Obtiene un valor que indica si un esquema con el espacio de nombres especificado se encuentra en la colección.
        </summary>
      <returns>
          
            true si un esquema con el espacio de nombres especificado se encuentra en la colección; en caso contrario, false.
        </returns>
      <param name="ns">
              URI del espacio de nombres asociado al esquema. Para los esquemas XML, normalmente será el espacio de nombres de destino. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
      <summary>
          Obtiene un valor que indica si el targetNamespace del <see cref="T:System.Xml.Schema.XmlSchema" /> especificado se encuentra en la colección.
        </summary>
      <returns>
          
            true si existe un esquema en la colección con el mismo targetNamespace; en caso contrario, false.
        </returns>
      <param name="schema">
              Objeto XmlSchema. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>
          Copia todos los objetos XmlSchema de esta colección en la matriz especificada a partir del índice indicado.
        </summary>
      <param name="array">
              Matriz en la que se van a copiar los objetos. 
            </param>
      <param name="index">
              Índice de <paramref name="array" /> donde se iniciará la copia. 
            </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Count">
      <summary>
          Obtiene el número de espacios de nombres definidos en esta colección.
        </summary>
      <returns>
          Número de espacios de nombres definidos en esta colección.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
      <summary>
          Proporciona compatibilidad con la iteración de estilo "for each" a través de la colección de esquemas.
        </summary>
      <returns>
          Enumerador para la iteración a través de todos los esquemas de la colección actual.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
      <summary>
          Obtiene el <see cref="T:System.Xml.Schema.XmlSchema" /> asociado al URI del espacio de nombres especificado.
        </summary>
      <returns>
          XmlSchema asociado al URI del espacio de nombres; null si no se ha cargado ningún esquema asociado al espacio de nombres especificado o si el espacio de nombres está asociado a un esquema XDR.
        </returns>
      <param name="ns">
              URI del espacio de nombres asociado al esquema que desea que se devuelva. Normalmente será el targetNamespace del esquema. 
            </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.NameTable">
      <summary>
          Obtiene el valor predeterminado de XmlNameTable que XmlSchemaCollection utiliza al cargar nuevos esquemas.
        </summary>
      <returns>
          Objeto XmlNameTable.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />.
        </summary>
      <param name="array">
              Matriz en la que se van a copiar los objetos. 
            </param>
      <param name="index">
              Índice de <paramref name="array" /> donde se iniciará la copia. 
            </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" />.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.IsSynchronized" />.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.SyncRoot" />.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
      <summary>
          Establece un controlador de eventos para recibir información sobre errores de validación de esquemas XDR y XML.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollectionEnumerator">
      <summary>
          Admite una iteración simple a través de una colección. No se puede heredar esta clase.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> actual de la colección.
        </summary>
      <returns>
          XmlSchema actual de la colección.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext">
      <summary>
          Desplaza el enumerador al siguiente esquema de la colección.
        </summary>
      <returns>
          
            true si el desplazamiento se realizó correctamente; false si el enumerador alcanzó el final de la colección.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current" />.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext" />.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System.Collections.IEnumerator.Reset" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCompilationSettings">
      <summary>
          Proporciona opciones de compilación de esquema para la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCompilationSettings.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" />. 
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck">
      <summary>
          Obtiene o establece un valor que indica si <see cref="T:System.Xml.Schema.XmlSchemaSet" /> debe comprobar las infracciones de atribución de partícula única (UPA, Unique Particle Attribution).
        </summary>
      <returns>
          
            true si <see cref="T:System.Xml.Schema.XmlSchemaSet" /> debe comprobar las infracciones de atribución de partícula única (UPA); de lo contrario, false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContent">
      <summary>
          Representa el elemento complexContent del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase representa el modelo de contenido complejo para los tipos complejos. Contiene extensiones o restricciones con respecto a un tipo complejo que sólo contiene elementos o contenido mixto.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContent.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.Content">
      <summary>
          Obtiene o establece el contenido.
        </summary>
      <returns>
          Una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" /> o <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.IsMixed">
      <summary>
          Obtiene o establece la información que determina si el tipo tiene un modelo de contenido mixto.
        </summary>
      <returns>
          Si esta propiedad es true, se permite que aparezcan datos de tipo carácter entre los elementos secundarios del tipo complejo (modelo de contenido mixto). El valor predeterminado es false.
          Opcional.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentExtension">
      <summary>
          Representa el elemento extension del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase es para tipos complejos con un modelo de contenido complejo derivado mediante extension. Extiende el tipo complejo agregando atributos o elementos.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentExtension.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.AnyAttribute">
      <summary>
          Obtiene o establece el componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del modelo de contenido complejo.
        </summary>
      <returns>
          Componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del modelo de contenido complejo.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Attributes">
      <summary>
          Obtiene la colección de atributos del contenido complejo. Contiene los elementos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.
        </summary>
      <returns>
          Colección de atributos del contenido complejo.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.BaseTypeName">
      <summary>
          Obtiene o establece el nombre del tipo complejo del que se deriva este tipo mediante Extension.
        </summary>
      <returns>
          Nombre del tipo complejo del que se deriva este tipo mediante Extension.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Particle">
      <summary>
          Obtiene o establece una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.
        </summary>
      <returns>
          Una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentRestriction">
      <summary>
          Representa el elemento restriction del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase es para tipos complejos con un modelo de contenido complejo derivado mediante restriction. Restringe el contenido del tipo complejo a un subconjunto del tipo complejo heredado.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentRestriction.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.AnyAttribute">
      <summary>
          Obtiene o establece el componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del modelo de contenido complejo.
        </summary>
      <returns>
          Componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del modelo de contenido complejo.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Attributes">
      <summary>
          Obtiene la colección de atributos del tipo complejo. Contiene los elementos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.
        </summary>
      <returns>
          Colección de atributos del tipo complejo.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.BaseTypeName">
      <summary>
          Obtiene o establece el nombre de un tipo complejo del que se deriva este tipo mediante Restriction.
        </summary>
      <returns>
          Nombre del tipo complejo del que se deriva este tipo mediante Restriction.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Particle">
      <summary>
          Obtiene o establece una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.
        </summary>
      <returns>
          Una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexType">
      <summary>
          Representa el elemento complexType del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase define un tipo complejo que determina el conjunto de atributos y el contenido de un elemento.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexType.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute">
      <summary>
          Obtiene o establece el valor del componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del tipo complejo.
        </summary>
      <returns>
          Componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del tipo complejo.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Attributes">
      <summary>
          Obtiene la colección de atributos del tipo complejo.
        </summary>
      <returns>
          Contiene las clases <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
      <summary>
          Obtiene la colección de todos los atributos compilados de este tipo complejo y sus tipos base.
        </summary>
      <returns>
          Colección de todos los atributos de este tipo complejo y sus tipos base. Valor posterior a la compilación de la propiedad AttributeUses.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
      <summary>
          Obtiene el valor posterior a la compilación para anyAttribute para este tipo complejo y sus tipos base.
        </summary>
      <returns>
          Valor posterior a la compilación del elemento anyAttribute.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Block">
      <summary>
          Obtiene o establece el atributo block.
        </summary>
      <returns>
          El atributo block impide un tipo complejo se utilice en el tipo de derivación especificado. El valor predeterminado es XmlSchemaDerivationMethod.None.
          Optional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
      <summary>
          Obtiene el valor una vez que el tipo se compila en el conjunto de información posterior a la validación del esquema (infoset). Este valor indica la forma en que se aplica el tipo cuando xsi:type se utiliza en el documento de instancia.
        </summary>
      <returns>
          Valor del conjunto de información posterior a la validación del esquema. El valor predeterminado es BlockDefault en el elemento schema.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel">
      <summary>
          Obtiene o establece el <see cref="T:System.Xml.Schema.XmlSchemaContentModel" /> posterior a la compilación de este tipo complejo.
        </summary>
      <returns>
          Tipo de modelo de contenido que es una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /> o <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
      <summary>
          Obtiene el modelo de contenido del tipo complejo que contiene el valor posterior a la compilación.
        </summary>
      <returns>
          Valor posterior a la compilación del modelo de contenido para el tipo complejo.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
      <summary>
          Obtiene la partícula que contiene el valor posterior a la compilación de la partícula <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" />.
        </summary>
      <returns>
          Partícula para el tipo de contenido. Valor posterior a la compilación de la partícula <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
      <summary>
          Obtiene o establece la información que determina si el elemento complexType puede utilizarse en el documento de instancia.
        </summary>
      <returns>
          Si es true, un elemento no puede utilizar este elemento complexType directamente y debe utilizar un tipo complejo que se deriva de este elemento complexType. El valor predeterminado es false.
          Optional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
      <summary>
          Obtiene o establece la información que determina si el tipo complejo tiene un modelo de contenido mixto (marcado dentro del contenido).
        </summary>
      <returns>
          
            true si los datos de tipo carácter pueden aparecer entre los elementos secundarios de este tipo complejo; en caso contrario false. El valor predeterminado es false.
          Optional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
      <summary>
          Obtiene o establece el tipo de compositor como una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.
        </summary>
      <returns>
          Tipo de compositor.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContent">
      <summary>
          Clase abstracta para el contenido del esquema.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContent.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaContent" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentModel">
      <summary>
          Especifica el orden y la estructura de los elementos secundarios de un tipo.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContentModel.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaContentModel" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaContentModel.Content">
      <summary>
          Obtiene o establece el contenido del tipo.
        </summary>
      <returns>
          Proporciona el contenido del tipo.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentProcessing">
      <summary>
          Proporciona información acerca del modo de validación del reemplazo de los elementos any y anyAttribute.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.None">
      <summary>
          Los elementos de documento no se validan.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Skip">
      <summary>
          Los elementos de documento deben estar formado por código XML de formato correcto y no se validan mediante el esquema.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Lax">
      <summary>
          Si se encuentra el esquema asociado, se validarán los elementos del documento. De lo contrario, no se iniciará ningún error.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Strict">
      <summary>
          El procesador del esquema debe encontrar un esquema asociado al espacio de nombres indicado para validar los elementos del documento.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentType">
      <summary>
          Enumeraciones para el modelo de contenido del tipo complejo. Representa el contenido del conjunto de información posterior a la validación del esquema (infoset).
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.TextOnly">
      <summary>
          Contenido de sólo texto.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Empty">
      <summary>
          Contenido vacío.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.ElementOnly">
      <summary>
          Contenido de sólo elemento.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Mixed">
      <summary>
          Contenido mixto.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatype">
      <summary>
          La clase <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> es una clase abstracta para asignar los tipos del lenguaje de definición de esquemas XML (XSD) a los tipos de Common Language Runtime (CLR).
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
      <summary>
          Convierte el valor especificado, cuyo tipo es una de las representaciones de Common Language Runtime (CLR) válidas del tipo de esquema XML representado mediante <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, en el tipo CLR especificado.
        </summary>
      <returns>
          Valor de entrada convertido.
        </returns>
      <param name="value">
              El valor de entrada que se va a convertir al tipo especificado.
            </param>
      <param name="targetType">
              Tipo de destino en el que se va a convertir el valor de entrada.
            </param>
      <exception cref="T:System.ArgumentNullException">
              Los parámetros <see cref="T:System.Object" /> o <see cref="T:System.Type" /> son null.
            </exception>
      <exception cref="T:System.InvalidCastException">
              El tipo representado mediante <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> no admite una conversión del tipo del valor especificado al tipo especificado.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>
          Convierte el valor especificado, cuyo tipo es una de las representaciones de Common Language Runtime (CLR) válidas del tipo de esquema XML representado mediante <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, en el tipo CLR especificado mediante <see cref="T:System.Xml.IXmlNamespaceResolver" /> si <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representa el tipo xs:QName o un tipo derivado de éste.
        </summary>
      <returns>
          Valor de entrada convertido.
        </returns>
      <param name="value">
              El valor de entrada que se va a convertir al tipo especificado.
            </param>
      <param name="targetType">
              Tipo de destino en el que se va a convertir el valor de entrada.
            </param>
      <param name="namespaceResolver">
              Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver los prefijos de espacio de nombres. Esto sólo sirve si <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representa el tipo xs:QName o un tipo derivado de éste.
            </param>
      <exception cref="T:System.ArgumentNullException">
              Los parámetros <see cref="T:System.Object" /> o <see cref="T:System.Type" /> son null.
            </exception>
      <exception cref="T:System.InvalidCastException">
              El tipo representado mediante <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> no admite una conversión del tipo del valor especificado al tipo especificado.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
      <summary>
          El método <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> siempre devuelve false.
        </summary>
      <returns>
          Siempre devuelve false.
        </returns>
      <param name="datatype">
              <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
      <summary>
          Cuando se reemplaza en una clase derivada, valida el objeto string especificado frente a un tipo simple integrado o definido por el usuario.
        </summary>
      <returns>
          Objeto <see cref="T:System.Object" /> que se puede convertir sin ningún riesgo en el tipo que devuelve la propiedad <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />.
        </returns>
      <param name="s">
              string que se validará frente al tipo simple.
            </param>
      <param name="nameTable">
              <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para la atomización mientras se analiza string si este objeto <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representa el tipo xs:NCName. 
            </param>
      <param name="nsmgr">
              Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se va a utilizar mientras se analiza string si este objeto <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representa el tipo xs:QName.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              El valor de entrada no es una instancia válida de este tipo de esquema XML de W3C.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El valor que se va a analizar no puede ser null.
            </exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el tipo de string de la forma descrita en las especificaciones de XML 1.0 del World Wide Web Consortium (W3C).
        </summary>
      <returns>
          Valor <see cref="T:System.Xml.XmlTokenizedType" /> de string.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
      <summary>
          Obtiene el valor <see cref="T:System.Xml.Schema.XmlTypeCode" /> del tipo simple.
        </summary>
      <returns>
          Valor <see cref="T:System.Xml.Schema.XmlTypeCode" /> del tipo simple.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el tipo Common Language Runtime (CLR) del elemento.
        </summary>
      <returns>
          El tipo de Common Language Runtime (CLR) del elemento.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.Variety">
      <summary>
          Obtiene el valor <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> del tipo simple.
        </summary>
      <returns>
          Valor <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> del tipo simple.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatypeVariety">
      <summary>
          Especifica la variedad de tipo de datos del esquema del consorcio XML W3C del tipo.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Atomic">
      <summary>
          Tipo atómico del esquema XML W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.List">
      <summary>
          Tipo de lista del esquema XML W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Union">
      <summary>
          Tipo de unión del esquema XML W3C.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDerivationMethod">
      <summary>
          Proporciona distintos métodos para impedir la derivación.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Empty">
      <summary>
          Reemplaza el método de derivación predeterminado para permitir cualquier derivación.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Substitution">
      <summary>
          Hace referencia a derivaciones mediante Substitution.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Extension">
      <summary>
          Hace referencia a derivaciones mediante Extension.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Restriction">
      <summary>
          Hace referencia a derivaciones mediante Restriction.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.List">
      <summary>
          Hace referencia a derivaciones mediante List.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Union">
      <summary>
          Hace referencia a derivaciones mediante Union.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.All">
      <summary>
          
            #all. Hace referencia a todos los métodos de derivación.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.None">
      <summary>
          Acepta el método de derivación predeterminado.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDocumentation">
      <summary>
          Representa el elemento documentation del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase especifica la información los usuarios van a leer o utilizar en una annotation.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDocumentation.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaDocumentation" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Language">
      <summary>
          Obtiene o establece el atributo xml:lang. Sirve como indicador del lenguaje utilizado en el contenido.
        </summary>
      <returns>
          Atributo xml:lang.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Markup">
      <summary>
          Obtiene o establece una matriz de XmlNodes que representa los nodos secundarios de la documentación.
        </summary>
      <returns>
          Matriz que representa los nodos secundarios de la documentación.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Source">
      <summary>
          Obtiene o establece el origen del Identificador uniforme de recursos (Identificador URI) de la información.
        </summary>
      <returns>
          Referencia de la dirección URI. El valor predeterminado es String.Empty.
          Opcional.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaElement">
      <summary>
          Representa el elemento element del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase es la clase base para todos los tipos de partícula y se utiliza para describir un elemento en un documento XML.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaElement.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaElement" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Block">
      <summary>
          Obtiene o establece una derivación Block.
        </summary>
      <returns>
          Atributo utilizado para bloquear un tipo de derivación. El valor predeterminado es XmlSchemaDerivationMethod.None.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.BlockResolved">
      <summary>
          Obtiene el valor posterior a la compilación de la propiedad Block.
        </summary>
      <returns>
          Valor posterior a la compilación de la propiedad Block. El valor predeterminado es BlockDefault en el elemento schema.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Constraints">
      <summary>
          Obtiene la colección de restricciones del elemento.
        </summary>
      <returns>
          Colección de restricciones.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.DefaultValue">
      <summary>
          Obtiene o establece el valor predeterminado del elemento si su contenido es un tipo simple o el contenido del elemento es textOnly.
        </summary>
      <returns>
          Valor predeterminado del elemento. El valor predeterminado es una referencia nula.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementSchemaType">
      <summary>
          Obtiene un objeto <see cref="T:System.Xml.Schema.XmlSchemaType" /> que representa el tipo del elemento basado en <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaType" /> o los valores <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName" /> del elemento.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaType" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementType">
      <summary>
          Obtiene un objeto Common Language Runtime (CLR) en función del <see cref="T:System.Xml.Schema.XmlSchemaElement" /> o del <see cref="T:System.Xml.Schema.XmlSchemaElement" /> del elemento, que contiene el valor posterior a la compilación de la propiedad ElementType.
        </summary>
      <returns>
          Objeto Common Language Runtime. Valor posterior a la compilación de la propiedad ElementType.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Final">
      <summary>
          Obtiene o establece la propiedad Final para indicar que no se permiten más derivaciones.
        </summary>
      <returns>
          Propiedad Final. El valor predeterminado es XmlSchemaDerivationMethod.None.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FinalResolved">
      <summary>
          Obtiene el valor posterior a la compilación de la propiedad Final.
        </summary>
      <returns>
          Valor posterior a la compilación de la propiedad Final. El valor predeterminado es el valor FinalDefault del elemento schema.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FixedValue">
      <summary>
          Obtiene o establece el valor fijo.
        </summary>
      <returns>
          Valor fijo predeterminado que no puede modificarse. El valor predeterminado es una referencia nula.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Form">
      <summary>
          Obtiene o establece el formato del elemento.
        </summary>
      <returns>
          Formato del elemento. El valor predeterminado es <see cref="P:System.Xml.Schema.XmlSchema.ElementFormDefault" />.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsAbstract">
      <summary>
          Obtiene o establece la información que indica si el elemento puede utilizarse en un documento de instancia.
        </summary>
      <returns>
          Si es true, el elemento no puede aparecer en el documento de instancia. El valor predeterminado es false.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsNillable">
      <summary>
          Obtiene o establece la información que indica si xsi:nil puede aparecer en los datos de instancia. Indica si puede asignarse un valor nulo explícito al elemento.
        </summary>
      <returns>
          Si nil es true, permite que una instancia del elemento tenga el atributo nil establecido en true. El atributo nil se define como parte del espacio de nombres del esquema XML para las instancias. El valor predeterminado es false.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Name">
      <summary>
          Obtiene o establece el nombre del elemento.
        </summary>
      <returns>
          Nombre del elemento. El valor predeterminado es String.Empty.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.QualifiedName">
      <summary>
          Obtiene el nombre cualificado real del elemento especificado. 
        </summary>
      <returns>
          Nombre cualificado del elemento. Valor posterior a la compilación de la propiedad QualifiedName.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.RefName">
      <summary>
          Obtiene o establece el nombre de referencia de un elemento declarado en este esquema (u otro esquema indicado por el espacio de nombres especificado).
        </summary>
      <returns>
          Nombre de referencia del elemento.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaType">
      <summary>
          Obtiene o establece el tipo del elemento. Puede ser un tipo complejo o un tipo simple.
        </summary>
      <returns>
          Tipo del elemento.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName">
      <summary>
          Obtiene o establece un tipo de datos integrado definido en este esquema u otro esquema indicado por el espacio de nombres especificado.
        </summary>
      <returns>
          Nombre del tipo de datos integrado.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SubstitutionGroup">
      <summary>
          Obtiene o establece el nombre de un elemento que se sustituye por este elemento.
        </summary>
      <returns>
          Nombre cualificado de un elemento que se sustituye por este elemento.
          Opcional.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaEnumerationFacet">
      <summary>
          Representa el aspecto enumeration del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase especifica una lista de valores válidos para un elemento simpleType. La declaración está contenida dentro de una declaración restriction.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaEnumerationFacet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaException">
      <summary>
          Devuelve información detallada acerca de la excepción del esquema.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaException" />.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Construye un nuevo objeto XmlSchemaException con la información de SerializationInfo y StreamingContext especificada que contiene todas las propiedades de la excepción XmlSchemaException.
        </summary>
      <param name="info">
              SerializationInfo.
            </param>
      <param name="context">
              StreamingContext.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaException" /> con el mensaje de excepción especificado.
        </summary>
      <param name="message">
              Descripción string de la condición de error.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaException" /> con el mensaje de excepción y el objeto <see cref="T:System.Exception" /> original que ha producido la excepción especificada.
        </summary>
      <param name="message">
              Descripción string de la condición de error.
            </param>
      <param name="innerException">
              El objeto T:System.Exceptionms-help://AstroNS2/cpref/html/T_System_Exception.htm original que produjo esta excepción.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaException" /> con el mensaje de excepción especificado y el objeto <see cref="T:System.Exception" /> original, el número de línea y la posición de la línea del código XML que produce la excepción especificada.
        </summary>
      <param name="message">
              Descripción string de la condición de error.
            </param>
      <param name="innerException">
              El objeto T:System.Exceptionms-help://AstroNS2/cpref/html/T_System_Exception.htm original que produjo esta excepción.
            </param>
      <param name="lineNumber">
              Número de línea del código XML que ha producido esta excepción.
            </param>
      <param name="linePosition">
              Posición de la línea del código XML que ha producido esta excepción.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Transmite todas las propiedades XmlSchemaException a la clase SerializationInfo para el StreamingContext dado.
        </summary>
      <param name="info">
              SerializationInfo. 
            </param>
      <param name="context">
              Información de StreamingContext. 
            </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LineNumber">
      <summary>
          Obtiene el número de línea que indica dónde se produjo el error.
        </summary>
      <returns>
          Número de línea que indica dónde se produjo el error.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LinePosition">
      <summary>
          Obtiene la posición de línea que indica dónde se produjo el error.
        </summary>
      <returns>
          Posición de línea que indica dónde se produjo el error.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.Message">
      <summary>
          Obtiene la descripción de la condición de error de esta excepción.
        </summary>
      <returns>
          La descripción de la condición de error de esta excepción.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceSchemaObject">
      <summary>
          XmlSchemaObject que ha producido la excepción XmlSchemaException.
        </summary>
      <returns>
          Una instancia de objeto válida representa un error de validación estructural en el modelo de objeto de esquema (SOM) XML.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceUri">
      <summary>
          Obtiene la ubicación del Identificador uniforme de recursos (URI) del esquema que produjo la excepción.
        </summary>
      <returns>
          La ubicación del URI del esquema que produjo la excepción.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaExternal">
      <summary>
          Clase abstracta. Proporciona información sobre el esquema incluido.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaExternal.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaExternal" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Id">
      <summary>
          Obtiene o establece el identificador de cadena.
        </summary>
      <returns>
          Id. de la cadena. El valor predeterminado es String.Empty.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Schema">
      <summary>
          Obtiene o establece el XmlSchema del esquema al que se hace referencia.
        </summary>
      <returns>
          XmlSchema del esquema al que se hace referencia.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.SchemaLocation">
      <summary>
          Obtiene o establece la ubicación del identificador URI (Identificador de recursos uniforme) del esquema, que indica al procesador del esquema dónde reside el esquema físicamente.
        </summary>
      <returns>
          Ubicación de la dirección URI del esquema.
          Opcional para esquemas importados.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.UnhandledAttributes">
      <summary>
          Obtiene y establece los atributos cualificados que no pertenecen al espacio de nombres de destino del esquema.
        </summary>
      <returns>
          Atributos cualificados que pertenecen a otro espacio de nombres de destino.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFacet">
      <summary>
          Clase abstracta para todos los aspectos que se utilizan cuando los tipos simples se derivan mediante Restriction.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFacet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaFacet" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.IsFixed">
      <summary>
          Obtiene o establece la información que indica que este aspecto es fijo.
        </summary>
      <returns>
          Si es true, el valor es fijo; en caso contrario, false. El valor predeterminado es false.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.Value">
      <summary>
          Obtiene o establece el atributo value del aspecto.
        </summary>
      <returns>
          Atributo de valor.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaForm">
      <summary>
          Indica si los atributos o los elementos deben calificarse con un espacio de nombres como prefijo.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.None">
      <summary>
          El formato de elemento y de atributo no se especifica en el esquema.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Qualified">
      <summary>
          Los atributos y los elementos deben estar calificados con el espacio de nombres como prefijo.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Unqualified">
      <summary>
          Los elementos y los atributos no deben estar calificados con el espacio de nombres como prefijo.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet">
      <summary>
          Especifica una restricción del número de dígitos que se pueden especificar para el valor de fracción de un elemento simpleType. El valor de fractionDigits debe ser un entero positivo. Representa el aspecto fractionDigits del Consorcio W3C.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFractionDigitsFacet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroup">
      <summary>
          Representa el elemento group del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase define grupos en el nivel del schema a los que se hace referencia desde los tipos complejos. Agrupa un conjunto de declaraciones de elementos de forma que puedan incorporarse como un grupo en definiciones de tipos complejos.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroup.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Name">
      <summary>
          Obtiene o establece el nombre del grupo de esquemas.
        </summary>
      <returns>
          Nombre del grupo de esquemas.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Particle">
      <summary>
          Obtiene o establece una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.
        </summary>
      <returns>
          Una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.QualifiedName">
      <summary>
          Obtiene el nombre completo del grupo de esquemas.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre completo del grupo de esquemas.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupBase">
      <summary>
          Clase abstracta para <see cref="T:System.Xml.Schema.XmlSchemaAll" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroupBase.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaGroupBase" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupBase.Items">
      <summary>
          Esta colección se utiliza para agregar nuevos elementos al compositor.
        </summary>
      <returns>
          Objeto XmlSchemaObjectCollection.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupRef">
      <summary>
          Representa el elemento group con el atributo ref del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase se utiliza dentro de tipos complejos que hacen referencia a un group definido en el nivel schema.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroupRef.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.Particle">
      <summary>
          Obtiene una de las clases <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> que contiene el valor posterior a la compilación de la propiedad Particle.
        </summary>
      <returns>
          Valor posterior a la compilación de la propiedad Particle que es una de las clases <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.RefName">
      <summary>
          Obtiene o establece el nombre de un grupo definido en este esquema (u otro esquema indicado por el espacio de nombres especificado).
        </summary>
      <returns>
          Nombre de un grupo definido en este esquema.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaIdentityConstraint">
      <summary>
          Clase para las restricciones de identidad: elementos key, keyref y unique.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaIdentityConstraint.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaIdentityConstraint" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Fields">
      <summary>
          Obtiene la colección de campos que se aplican como elementos secundarios del selector de expresiones del lenguaje Xpath (XML Path Language, lenguaje de rutas XML).
        </summary>
      <returns>
          Colección de campos.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Name">
      <summary>
          Obtiene o establece el nombre de la restricción de identidad.
        </summary>
      <returns>
          Nombre de la restricción de identidad.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.QualifiedName">
      <summary>
          Obtiene el nombre completo de la restricción de identidad, que contiene el valor posterior a la compilación de la propiedad QualifiedName.
        </summary>
      <returns>
          Valor posterior a la compilación de la propiedad QualifiedName.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Selector">
      <summary>
          Obtiene o establece el elemento selector de la expresión XPath.
        </summary>
      <returns>
          Elemento selector de la expresión XPath.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaImport">
      <summary>
          Representa el elemento import del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase se utiliza para importar componentes del esquema desde otros esquemas.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaImport.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaImport" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Annotation">
      <summary>
          Obtiene o establece la propiedad annotation.
        </summary>
      <returns>
          Anotación.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Namespace">
      <summary>
          Obtiene o establece el espacio de nombres de destino del esquema importado como referencia del Identificador de recursos uniforme (URI).
        </summary>
      <returns>
          Espacio de nombres de destino del esquema importado como referencia de la dirección URI.
          Opcional.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInclude">
      <summary>
          Representa el elemento include del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase se utiliza para incluir declaraciones y definiciones a partir de un esquema externo. Las declaraciones y definiciones incluidas están disponibles entonces para su procesamiento en el esquema contenedor.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInclude.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInclude" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInclude.Annotation">
      <summary>
          Obtiene o establece la propiedad annotation.
        </summary>
      <returns>
          Anotación.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference">
      <summary>
          Infiere un esquema del lenguaje de definición de esquemas XML (XSD) a partir de un documento XML. La clase <see cref="T:System.Xml.Schema.XmlSchemaInference" /> no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInference" />.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)">
      <summary>
          Infiere un esquema del lenguaje de definición de esquemas XML (XSD) a partir del documento XML incluido en el objeto <see cref="T:System.Xml.XmlReader" /> especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas inferidos.
        </returns>
      <param name="instanceDocument">
              Objeto <see cref="T:System.Xml.XmlReader" /> que contiene el documento XML del que se va a inferir un esquema.
            </param>
      <exception cref="T:System.Xml.XmlException">
              El documento XML no tiene un formato correcto.
            </exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">
              El objeto <see cref="T:System.Xml.XmlReader" /> no se coloca en el nodo raíz ni en un elemento. Se produce un error durante el proceso de inferencia del esquema.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)">
      <summary>
          Infiere un esquema del lenguaje de definición de esquemas XML (XSD) a partir del documento XML incluido en el objeto <see cref="T:System.Xml.XmlReader" /> especificado, y refina el esquema inferido utilizando un esquema existente en el objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado con el mismo espacio de nombres de destino.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas inferidos.
        </returns>
      <param name="instanceDocument">
              Objeto <see cref="T:System.Xml.XmlReader" /> que contiene el documento XML del que se va a inferir un esquema.
            </param>
      <param name="schemas">
              Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene un esquema existente utilizado para refinar el esquema inferido.
            </param>
      <exception cref="T:System.Xml.XmlException">
              El documento XML no tiene un formato correcto.
            </exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">
              El objeto <see cref="T:System.Xml.XmlReader" /> no se coloca en el nodo raíz ni en un elemento. Se produce un error durante el proceso de inferencia del esquema.
            </exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.Occurrence">
      <summary>
          Obtiene o establece el valor de <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> que afecta a las declaraciones de aparición de esquemas que se infieren del documento XML.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.TypeInference">
      <summary>
          Obtiene o establece el valor de <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> que afecta a los tipos que se infieren del documento XML.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference.InferenceOption">
      <summary>
          Afecta a la aparición y a la información de tipos que infiere la clase <see cref="T:System.Xml.Schema.XmlSchemaInference" /> para los atributos y elementos de un documento XML. 
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted">
      <summary>
          Indica que debería inferirse una declaración de esquema más restrictiva para un elemento o atributo concreto.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed">
      <summary>
          Indica que debería inferirse una declaración de esquema menos restrictiva para un elemento o atributo concreto.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInferenceException">
      <summary>
          Devuelve información sobre los errores que encuentra la clase <see cref="T:System.Xml.Schema.XmlSchemaInference" /> al inferir un esquema de un documento XML.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> con los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificados que contienen todas las propiedades de <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.
        </summary>
      <param name="info">
              Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.
            </param>
      <param name="context">
              Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> con el mensaje de error especificado.
        </summary>
      <param name="message">
              Descripción del error.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> con el mensaje de error especificado y la <see cref="T:System.Exception" /> original que ha producido la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> especificada.
        </summary>
      <param name="message">
              Descripción del error.
            </param>
      <param name="innerException">
              Objeto <see cref="T:System.Exception" /> que contiene la excepción original que ha producido <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> con el mensaje de error especificado, la <see cref="T:System.Exception" /> original que ha producido la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> especificada y el número y la posición de la línea en la que se encuentra el error del documento XML especificado.
        </summary>
      <param name="message">
              Descripción del error.
            </param>
      <param name="innerException">
              Objeto <see cref="T:System.Exception" /> que contiene la excepción original que ha producido <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.
            </param>
      <param name="lineNumber">
              Número de línea del documento XML que ha producido la excepción <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.
            </param>
      <param name="linePosition">
              Posición de la línea del documento XML que ha producido la excepción <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Transmite todas las propiedades del objeto <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> al objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado para el objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificado.
        </summary>
      <param name="info">
              Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.
            </param>
      <param name="context">
              Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.
            </param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInfo">
      <summary>
          Representa el conjunto de información posterior a la validación del esquema de un nodo XML validado.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInfo.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInfo" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.ContentType">
      <summary>
          Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchemaContentType" /> correspondiente al tipo de contenido de este nodo XML validado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaContentType" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsDefault">
      <summary>
          Obtiene o establece un valor que indica si el nodo XML validado se ha establecido como resultado de la aplicación de un valor predeterminado durante la validación de esquema del lenguaje de definición de esquemas XML (XSD).
        </summary>
      <returns>
          Valor de bool.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsNil">
      <summary>
          Obtiene o establece un valor que indica si el valor del nodo XML validado es nil.
        </summary>
      <returns>
          Valor de bool.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.MemberType">
      <summary>
          Obtiene o establece el tipo de esquema dinámico de este nodo XML validado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
      <summary>
          Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> compilado correspondiente a este nodo XML validado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
      <summary>
          Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" /> compilado correspondiente a este nodo XML validado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
      <summary>
          Obtiene o establece el tipo de esquema estático del lenguaje de definición de esquemas XML (XSD) de este nodo XML validado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaType" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.Validity">
      <summary>
          Obtiene o establece el valor <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> del nodo XML validado.
        </summary>
      <returns>
          Valor de <see cref="T:System.Xml.Schema.XmlSchemaValidity" />.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKey">
      <summary>
          Esta clase representa el elemento key del esquema XML tal como lo especifica World Wide Web Consortium (W3C).
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKey.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaKey" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKeyref">
      <summary>
          Esta clase representa el elemento keyref del esquema XML tal como lo especifica World Wide Web Consortium (W3C).
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKeyref.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaKeyref" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaKeyref.Refer">
      <summary>
          Obtiene o establece el nombre de la clave a la que hace referencia esta restricción en otro tipo simple o complejo.
        </summary>
      <returns>
          Tipo QName de la clave a la que hace referencia esta restricción.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaLengthFacet">
      <summary>
          Representa el aspecto length del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase puede utilizarse para especificar una restricción en la longitud de un elemento simpleType en el tipo de datos.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaLengthFacet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet">
      <summary>
          Representa el elemento maxExclusive del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase puede utilizarse para especificar una restricción en el valor máximo de un elemento simpleType. El valor del elemento debe ser menor que el valor del elemento maxExclusive.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxExclusiveFacet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet">
      <summary>
          Representa el elemento maxInclusive del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase puede utilizarse para especificar una restricción en el valor máximo de un elemento simpleType. El valor del elemento debe ser menor o igual que el valor del elemento maxInclusive.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxInclusiveFacet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxLengthFacet">
      <summary>
          Representa el elemento maxLength del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en la longitud máxima del valor de datos de un elemento simpleType. La longitud debe ser menor que el valor del elemento maxLength.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxLengthFacet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet">
      <summary>
          Representa el elemento minExclusive del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase puede utilizarse para especificar una restricción en el valor mínimo de un elemento simpleType. El valor del elemento debe ser mayor que el valor del elemento minExclusive.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinExclusiveFacet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet">
      <summary>
          Representa el elemento minInclusive del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase puede utilizarse para especificar una restricción en el valor mínimo de un elemento simpleType. El valor del elemento debe ser mayor o igual que el valor del elemento minInclusive.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinInclusiveFacet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinLengthFacet">
      <summary>
          Representa el elemento minLength del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase puede utilizarse para especificar una restricción en la longitud mínima del valor de datos de un elemento simpleType. La longitud debe ser mayor que el valor del elemento minLength.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinLengthFacet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNotation">
      <summary>
          Representa el elemento notation del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Una declaración notation del Esquema XML es una reconstrucción de declaraciones XML 1.0 NOTATION. El propósito de las notaciones es describir el formato de los datos que no sean de tipo XML de un documento XML.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNotation.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Name">
      <summary>
          Obtiene o establece el nombre de la notación.
        </summary>
      <returns>
          Nombre de la notación.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Public">
      <summary>
          Obtiene o establece el identificador public.
        </summary>
      <returns>
          Identificador public. El valor debe ser un identificador de recursos uniforme (URI) válido.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.System">
      <summary>
          Obtiene o establece el identificador system.
        </summary>
      <returns>
          Identificador system. El valor debe ser una dirección URI válida.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNumericFacet">
      <summary>
          Clase que se utiliza para definir aspectos numeric. Esta clase es la clase base para las clases de aspecto numérico como <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNumericFacet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaNumericFacet" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObject">
      <summary>
          Representa la clase raíz para la jerarquía del modelo de objetos de esquema Xml y actúa como clase base para clases como <see cref="T:System.Xml.Schema.XmlSchema" />.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObject.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaObject" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LineNumber">
      <summary>
          Obtiene o establece el número de línea del archivo al que hace referencia el elemento schema.
        </summary>
      <returns>
          Número de línea.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LinePosition">
      <summary>
          Obtiene o establece la posición de la línea en el archivo al que hace referencia el elemento schema.
        </summary>
      <returns>
          Posición de línea.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Namespaces">
      <summary>
          Obtiene o establece el objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que se va a utilizar con este objeto de esquema.
        </summary>
      <returns>
          Propiedad <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> del objeto de esquema.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Parent">
      <summary>
          Obtiene o establece el elemento primario de este <see cref="T:System.Xml.Schema.XmlSchemaObject" />.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaObject" /> primario de este <see cref="T:System.Xml.Schema.XmlSchemaObject" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.SourceUri">
      <summary>
          Obtiene o establece la ubicación de origen del archivo que cargó el esquema.
        </summary>
      <returns>
          Ubicación de origen (dirección URI) del archivo.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectCollection">
      <summary>
          Una colección de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase XmlSchemaObjectCollection.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
      <summary>
          Inicializa una nueva instancia de la clase XmlSchemaObjectCollection que toma un <see cref="T:System.Xml.Schema.XmlSchemaObject" />.
        </summary>
      <param name="parent">
              <see cref="T:System.Xml.Schema.XmlSchemaObject" />. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
      <summary>
          Agrega un objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> a la colección XmlSchemaObjectCollection.
        </summary>
      <returns>
          Índice donde se ha agregado el elemento.
        </returns>
      <param name="item">
              <see cref="T:System.Xml.Schema.XmlSchemaObject" />. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> es menor que cero.
              O bien,
              
                <paramref name="index" /> es mayor que Count. 
            </exception>
      <exception cref="T:System.InvalidCastException">
              El parámetro <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado no es de tipo <see cref="T:System.Xml.Schema.XmlSchemaExternal" /> o sus tipos derivados <see cref="T:System.Xml.Schema.XmlSchemaImport" />, <see cref="T:System.Xml.Schema.XmlSchemaInclude" /> y <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
      <summary>
          Indica si el <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado existe en XmlSchemaObjectCollection.
        </summary>
      <returns>
          
            true si el nombre completo especificado se encuentra en la colección; en caso contrario, devuelve false. Si se suministra un valor null, se devuelve false porque no existe ningún nombre cualificado con un nombre nulo.
        </returns>
      <param name="item">
              <see cref="T:System.Xml.Schema.XmlSchemaObject" />. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
      <summary>
          Copia todos los <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de la colección a la matriz especificada, a partir del índice indicado.
        </summary>
      <param name="array">
              Matriz unidimensional que constituye el destino de los elementos copiados desde XmlSchemaObjectCollection. La matriz debe tener una indización de base cero. 
            </param>
      <param name="index">
              Índice de base cero de la matriz donde comienza la copia. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                <paramref name="array" /> es una referencia nula (Nothing en Visual Basic). 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> es menor que cero. 
            </exception>
      <exception cref="T:System.ArgumentException">
              
                <paramref name="array" /> es multi-dimensional.
              O bien, 
              
                <paramref name="index" /> es igual o mayor que la longitud de <paramref name="array" />.
              O bien, 
              El número de elementos del <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de origen es mayor que el espacio disponible desde el índice hasta el final de la matriz de destino. 
            </exception>
      <exception cref="T:System.InvalidCastException">
              El tipo del <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de origen no puede convertirse automáticamente al tipo de la matriz de destino. 
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
      <summary>
          Devuelve un enumerador para recorrer en iteración los XmlSchemaObjects incluidos en XmlSchemaObjectCollection.
        </summary>
      <returns>
          El iterador devuelve <see cref="T:System.Xml.Schema.XmlSchemaObjectEnumerator" />.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
      <summary>
          Obtiene el índice de colección correspondiente al objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado.
        </summary>
      <returns>
          Índice correspondiente al objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado.
        </returns>
      <param name="item">
              <see cref="T:System.Xml.Schema.XmlSchemaObject" /> cuyo índice se desea devolver. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
      <summary>
          Inserta <see cref="T:System.Xml.Schema.XmlSchemaObject" /> en XmlSchemaObjectCollection.
        </summary>
      <param name="index">
              Índice de base cero donde debe insertarse el elemento. 
            </param>
      <param name="item">
              <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que se va a insertar. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> es menor que cero.
              O bien,
              
                <paramref name="index" /> es mayor que Count. 
            </exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
      <summary>
          Obtiene el <see cref="T:System.Xml.Schema.XmlSchemaObject" /> en el índice especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que se encuentra en el índice especificado.
        </returns>
      <param name="index">
              Índice del objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" />. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
      <summary>
          
            OnClear se invoca antes del comportamiento Clear estándar. Para obtener más información, vea el método OnClear para <see cref="T:System.Collections.CollectionBase" />.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
      <summary>
          
            OnInsert se invoca antes del comportamiento Insert estándar. Para obtener más información, vea el método OnInsert para <see cref="T:System.Collections.CollectionBase" />.
        </summary>
      <param name="index">
              Índice de <see cref="T:System.Xml.Schema.XmlSchemaObject" />. 
            </param>
      <param name="item">
              Elemento. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
      <summary>
          
            OnRemove se invoca antes del comportamiento Remove estándar. Para obtener más información, vea el método OnRemove para <see cref="T:System.Collections.CollectionBase" />.
        </summary>
      <param name="index">
              Índice de <see cref="T:System.Xml.Schema.XmlSchemaObject" />. 
            </param>
      <param name="item">
              Elemento. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
          
            OnSet se invoca antes del comportamiento Set estándar. Para obtener más información, vea el método OnSet para <see cref="T:System.Collections.CollectionBase" />.
        </summary>
      <param name="index">
              Índice de <see cref="T:System.Xml.Schema.XmlSchemaObject" />. 
            </param>
      <param name="oldValue">
              Antiguo valor. 
            </param>
      <param name="newValue">
              Valor nuevo. 
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
      <summary>
          Quita <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de XmlSchemaObjectCollection.
        </summary>
      <param name="item">
              <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que se va a quitar. 
            </param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectEnumerator">
      <summary>
          Representa el enumerador para <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> actual de la colección.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaObject" /> actual.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext">
      <summary>
          Se desplaza al siguiente elemento de la colección.
        </summary>
      <returns>
          
            false al final de la colección.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset">
      <summary>
          Restablece el enumerador al principio de la colección.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current" />.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext" />.
        </summary>
      <returns>
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Reset">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectTable">
      <summary>
          Proporciona las colecciones para los elementos contenidos en la clase <see cref="T:System.Xml.Schema.XmlSchema" /> (por ejemplo, Attributes, AttributeGroups, Elements, etcétera). 
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Contains(System.Xml.XmlQualifiedName)">
      <summary>
          Determina si el nombre completo especificado existe en la colección.
        </summary>
      <returns>
          
            true si el nombre completo especificado se encuentra en la colección; de lo contrario, false.
        </returns>
      <param name="name">
              Objeto <see cref="T:System.Xml.XmlQualifiedName" />.
            </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Count">
      <summary>
          Obtiene el número de elementos incluidos en la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.
        </summary>
      <returns>
          El número de elementos incluidos en la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.GetEnumerator">
      <summary>
          Devuelve un enumerador que puede recorrer en iteración la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.
        </summary>
      <returns>
          El objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> que puede recorrer en iteración la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Item(System.Xml.XmlQualifiedName)">
      <summary>
          Devuelve el elemento de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> especificada por su nombre completo.
        </summary>
      <returns>
          El objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> del elemento de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> especificada por su nombre completo.
        </returns>
      <param name="name">
              Nombre <see cref="T:System.Xml.XmlQualifiedName" /> del elemento que se va a devolver.
            </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Names">
      <summary>
          Devuelve una colección de todos los elementos con nombre de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.
        </summary>
      <returns>
          Una colección de todos los elementos con nombre de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Values">
      <summary>
          Devuelve una colección de todos los valores de todos los elementos de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.
        </summary>
      <returns>
          Una colección de todos los valores de todos los elementos de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaParticle">
      <summary>
          La clase abstracta para eso es la clase base para todos los tipos de partícula (por ejemplo, <see cref="T:System.Xml.Schema.XmlSchemaAny" />).
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaParticle.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaParticle" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccurs">
      <summary>
          Obtiene o establece el número máximo de veces que puede producirse la partícula.
        </summary>
      <returns>
          Número máximo de veces que puede producirse la partícula. El valor predeterminado es 1.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccursString">
      <summary>
          Obtiene o establece el número en forma de valor de tipo cadena. Número máximo de veces que puede producirse la partícula.
        </summary>
      <returns>
          El número como valor de cadena. String.Empty indica que MaxOccurs es igual al valor predeterminado. El valor predeterminado es una referencia nula.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccurs">
      <summary>
          Obtiene o establece el número mínimo de veces que puede producirse la partícula.
        </summary>
      <returns>
          Número mínimo de veces que puede producirse la partícula. El valor predeterminado es 1.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccursString">
      <summary>
          Obtiene o establece el número en forma de valor de tipo cadena. Número mínimo de veces que puede producirse la partícula.
        </summary>
      <returns>
          El número como valor de cadena. String.Empty indica que MinOccurs es igual al valor predeterminado. El valor predeterminado es una referencia nula.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaPatternFacet">
      <summary>
          Representa el elemento pattern del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase puede utilizarse para especificar una restricción en el valor introducido para un elemento simpleType.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaPatternFacet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaRedefine">
      <summary>
          Representa el elemento redefine del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase puede utilizarse para permitir redefinir tipos simples y complejos, grupos y grupos de atributos de archivos de esquema externos en el esquema actual. Esta clase también puede utilizarse para proporcionar la versión para los elementos del esquema.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaRedefine.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.AttributeGroups">
      <summary>
          Obtiene <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los atributos del esquema, que contiene el valor posterior a la compilación de la propiedad AttributeGroups.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los atributos del esquema. Valor posterior a la compilación de la propiedad AttributeGroups.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Groups">
      <summary>
          Obtiene la tabla <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los grupos del esquema, donde se incluye el valor posterior a la compilación de la propiedad Groups.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los grupos del esquema. Valor posterior a la compilación de la propiedad Groups.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Items">
      <summary>
          Obtiene la colección de las siguientes clases: <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> y <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.
        </summary>
      <returns>
          Elementos incluidos en el elemento redefinido.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.SchemaTypes">
      <summary>
          Obtiene <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los tipos simples y complejos del esquema, donde se incluye el valor posterior a la compilación de la propiedad SchemaTypes.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los tipos de esquema del esquema. Valor posterior a la compilación de la propiedad SchemaTypes.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSequence">
      <summary>
          Representa el elemento sequence (compositor) del esquema XML tal como lo especifica World Wide Web Consortium (W3C). sequence requiere que los elementos del grupo aparezcan en la secuencia especificada dentro del elemento que los contiene.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSequence.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSequence.Items">
      <summary>
          Elementos incluidos dentro del compositor. Colección de <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> o <see cref="T:System.Xml.Schema.XmlSchemaAny" />.
        </summary>
      <returns>
          Elementos incluidos dentro del compositor.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSet">
      <summary>
          Contiene una caché de esquemas del lenguaje de definición de esquemas XML (XSD). 
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" /> con la clase<see cref="T:System.Xml.XmlNameTable" /> especificada.
        </summary>
      <param name="nameTable">
              Objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El objeto <see cref="T:System.Xml.XmlNameTable" /> que se pasa como parámetro es null.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
      <summary>
          Agrega el esquema del lenguaje de definición de esquemas XML (XSD) de la dirección URL especificada a <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> si el esquema es válido. Si el esquema no es válido y se especifica <see cref="T:System.Xml.Schema.ValidationEventHandler" />, se devolverá el valor null y se iniciará el evento de validación adecuado. De lo contrario, se produce una excepción <see cref="T:System.Xml.Schema.XmlSchemaException" />.
        </returns>
      <param name="targetNamespace">
              Propiedad de esquema targetNamespace o valor null para utilizar el targetNamespace especificado en el esquema.
            </param>
      <param name="schemaUri">
              Dirección URL que especifica el esquema que se va a cargar.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">
              El esquema no es válido.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              La dirección URL que se pasa como parámetro es null o <see cref="F:System.String.Empty" />.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
      <summary>
          Agrega el esquema del lenguaje de definición de esquemas XML (XSD) incluido en <see cref="T:System.Xml.XmlReader" /> a <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> si el esquema es válido. Si el esquema no es válido y se especifica <see cref="T:System.Xml.Schema.ValidationEventHandler" />, se devolverá el valor null y se iniciará el evento de validación adecuado. De lo contrario, se produce una excepción <see cref="T:System.Xml.Schema.XmlSchemaException" />.
        </returns>
      <param name="targetNamespace">
              Propiedad de esquema targetNamespace o valor null para utilizar el targetNamespace especificado en el esquema.
            </param>
      <param name="schemaDocument">
              Objeto <see cref="T:System.Xml.XmlReader" />.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">
              El esquema no es válido.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El objeto <see cref="T:System.Xml.XmlReader" /> que se pasa como parámetro es null.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
      <summary>
          Agrega el <see cref="T:System.Xml.Schema.XmlSchema" /> predeterminado a <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> si el esquema es válido. Si el esquema no es válido y se especifica <see cref="T:System.Xml.Schema.ValidationEventHandler" />, se devolverá el valor null y se iniciará el evento de validación adecuado. De lo contrario, se producirá una excepción <see cref="T:System.Xml.Schema.XmlSchemaException" />.
        </returns>
      <param name="schema">
              Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar a <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">
              El esquema no es válido.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro es null.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
      <summary>
          Agrega todos los esquemas del lenguaje de definición de esquemas XML (XSD) de la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificada a <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <param name="schemas">
              Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">
              Un esquema de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> no es válido.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que se pasa como parámetro es null.
            </exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
      <summary>
          Obtiene o establece <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> para el objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> para la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />. El valor predeterminado es una instancia de <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> con la propiedad <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> establecida en true.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Compile">
      <summary>
          Compila los esquemas del lenguaje de definición de esquemas XML (XSD) agregados a <see cref="T:System.Xml.Schema.XmlSchemaSet" /> en un esquema lógico.
        </summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">
              Se ha producido un error al validar y compilar los esquemas de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
      <summary>
          Indica si un esquema del lenguaje de definición de esquemas XML (XSD) con el URI del espacio de nombres de destino especificado está en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <returns>
          Devuelve true si hay un esquema con el URI de espacio de nombres de destino especificado en <see cref="T:System.Xml.Schema.XmlSchemaSet" />; en el caso contrario, false.
        </returns>
      <param name="targetNamespace">
              Propiedad de esquema targetNamespace.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
      <summary>
          Indica si el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado del lenguaje de definición de esquemas XML (XSD) está en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <returns>
          Devuelve true si el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> está en <see cref="T:System.Xml.Schema.XmlSchemaSet" />; de lo contrario, devolverá false.
        </returns>
      <param name="schema">
              Objeto <see cref="T:System.Xml.Schema.XmlSchema" />.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que se pasa como parámetro es null.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>
          Copia todos los objetos <see cref="T:System.Xml.Schema.XmlSchema" /> de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> en la matriz especificada a partir del índice indicado.
        </summary>
      <param name="schemas">
              Matriz en la que se van a copiar los objetos.
            </param>
      <param name="index">
              Índice de la matriz en la que se iniciará la copia.
            </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.Count">
      <summary>
          Obtiene el número de esquemas lógicos del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <returns>
          Número de esquemas lógicos que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
      <summary>
          Obtiene todos los atributos globales de todos los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
      <summary>
          Obtiene todos los elementos globales de todos los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
      <summary>
          Obtiene todos los tipos simples y complejos de los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
      <summary>
          Indica si los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" /> han sido compilados.
        </summary>
      <returns>
          Devuelve true si los esquemas de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> se han compilado desde la última vez que se agregó o quitó un esquema de <see cref="T:System.Xml.Schema.XmlSchemaSet" />; de lo contrario, devolverá false.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.NameTable">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> predeterminado que utiliza <see cref="T:System.Xml.Schema.XmlSchemaSet" /> al cargar los nuevos esquemas del lenguaje de definición de esquemas XML (XSD).
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNameTable" />.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
      <summary>
          Quita el esquema del lenguaje de definición de esquemas XML (XSD) especificado de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se ha eliminado de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> o el valor null si no se ha encontrado el esquema en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </returns>
      <param name="schema">
              Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a quitar de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">
              El esquema no es válido.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro es null.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
      <summary>
          Quita el esquema del lenguaje de definición de esquemas XML (XSD) especificado y todos los esquemas que importa de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <returns>
          Devuelve el valor true si el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> y todas sus importaciones se han eliminado correctamente; de lo contrario, devuelve false.
        </returns>
      <param name="schemaToRemove">
              Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a quitar de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro es null.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
      <summary>
          Vuelve a procesar un esquema del lenguaje de definición de esquemas XML (XSD) que ya existe en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> si el esquema es válido. Si el esquema no es válido y se especifica un <see cref="T:System.Xml.Schema.ValidationEventHandler" />, se devolverá el valor null y se iniciará el evento de validación adecuado. De lo contrario, se produce una excepción <see cref="T:System.Xml.Schema.XmlSchemaException" />.
        </returns>
      <param name="schema">
              Esquema que se va a volver a procesar.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">
              El esquema no es válido.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro es null.
            </exception>
      <exception cref="T:System.ArgumentException">
              El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro no se encuentra todavía en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas">
      <summary>
          Devuelve una colección de todos los esquemas del lenguaje de definición de esquemas XML (XSD) de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Collections.ICollection" /> que contiene todos los esquemas que se han agregado a <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Si no se ha agregado ningún esquema a <see cref="T:System.Xml.Schema.XmlSchemaSet" />, se devuelve un objeto <see cref="T:System.Collections.ICollection" /> vacío.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
      <summary>
          Devuelve una colección de todos los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" /> y que pertenecen al espacio de nombres especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Collections.ICollection" /> que contiene todos los esquemas agregados a la clase<see cref="T:System.Xml.Schema.XmlSchemaSet" /> que pertenece al espacio de nombres especificado. Si no se ha agregado ningún esquema a <see cref="T:System.Xml.Schema.XmlSchemaSet" />, se devuelve un objeto <see cref="T:System.Collections.ICollection" /> vacío.
        </returns>
      <param name="targetNamespace">
              Propiedad de esquema targetNamespace.
            </param>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
      <summary>
          Establece un controlador de eventos para recibir información sobre los errores de validación de esquemas del lenguaje de definición de esquemas XML (XSD).
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
      <summary>
          Establece el objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para resolver espacios de nombres o ubicaciones a las que se hace referencia en los elementos de inclusión e importación de un esquema.
        </summary>
      <returns>
          Establece el objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para resolver los espacios de nombres y ubicaciones a las que se hace referencia en los elementos de inclusión e importación de un esquema.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContent">
      <summary>
          Representa el elemento simpleContent del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase es para los tipos simples y complejos con modelo de contenido simple.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContent.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContent.Content">
      <summary>
          Obtiene una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" /> o <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.
        </summary>
      <returns>
          Contenido incluido en la clase XmlSchemaSimpleContentRestriction o XmlSchemaSimpleContentExtension.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentExtension">
      <summary>
          Representa el elemento extension de contenido sencillo del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase puede utilizarse para derivar tipos simples mediante extension. Esas derivaciones se utilizan para extender el contenido de tipo simple del elemento agregando atributos.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentExtension.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.AnyAttribute">
      <summary>
          Obtiene o establece el XmlSchemaAnyAttribute que se va a utilizar para el valor del atributo.
        </summary>
      <returns>
          XmlSchemaAnyAttribute.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.Attributes">
      <summary>
          Obtiene la colección de <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.
        </summary>
      <returns>
          Colección de atributos del elemento simpleType.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.BaseTypeName">
      <summary>
          Obtiene o establece el nombre de un tipo de datos integrado o de un tipo simple a partir del que se extiende este tipo.
        </summary>
      <returns>
          Nombre del tipo base.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction">
      <summary>
          Representa el elemento restriction de contenido sencillo del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase puede utilizarse para derivar tipos simples mediante restriction. Esas derivaciones pueden utilizarse para restringir el intervalo de valores para el elemento a un subconjunto de los valores especificados en el tipo simple heredado.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentRestriction.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.AnyAttribute">
      <summary>
          Obtiene o establece un <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> que se va a utilizar para el valor del atributo.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> para el valor del atributo.
          Opcional.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Attributes">
      <summary>
          Obtiene la colección <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> de atributos de tipo simple.
        </summary>
      <returns>
          Colección de atributos de un tipo simple.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseType">
      <summary>
          Obtiene o establece el valor base del tipo simple.
        </summary>
      <returns>
          Valor base del tipo simple.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseTypeName">
      <summary>
          Obtiene o establece el nombre del tipo de datos integrado o del tipo simple a partir del que se deriva este tipo.
        </summary>
      <returns>
          Nombre del tipo base.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Facets">
      <summary>
          Obtiene o establece un aspecto del Esquema XML. 
        </summary>
      <returns>
          Una de las clases de aspecto siguientes:
          
            <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleType">
      <summary>
          Representa el elemento simpleType de contenido sencillo del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase define un tipo simple. Los tipos simples pueden especificar información y restricciones para el valor de atributos o elementos que sólo contengan texto.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleType.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleType.Content">
      <summary>
          Obtiene o establece <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" /> o <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.
        </summary>
      <returns>
          XmlSchemaSimpleTypeUnion, XmlSchemaSimpleTypeList o XmlSchemaSimpleTypeRestriction.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeContent">
      <summary>
          Clase abstracta para las clases de contenido de tipo simple.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeContent.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeContent" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeList">
      <summary>
          Representa el elemento list del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase puede utilizarse para definir un elemento simpleType como una lista de valores de un tipo de datos especificado.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType">
      <summary>
          Obtiene o establece el <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo del elemento simpleType basándose en los valores <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType" /> y <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName" /> del tipo simple.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo del elemento simpleType.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType">
      <summary>
          Obtiene o establece el elemento simpleType que se deriva del tipo especificado por el valor base.
        </summary>
      <returns>
          Tipo de elemento para el elemento de tipo simple.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName">
      <summary>
          Obtiene o establece el nombre de un tipo de datos integrado o de un elemento simpleType definido en este esquema (u otro esquema indicado por el espacio de nombres especificado).
        </summary>
      <returns>
          Nombre de tipo de la lista de tipos simples.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction">
      <summary>
          Representa el elemento restriction de los tipos sencillos del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase puede utilizarse para restringir el elemento simpleType.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseType">
      <summary>
          Obtiene o establece información sobre el tipo base.
        </summary>
      <returns>
          Tipo base del elemento simpleType.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseTypeName">
      <summary>
          Obtiene o establece el nombre del tipo base cualificado.
        </summary>
      <returns>
          Nombre cualificado del tipo base de restricción del tipo simple.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.Facets">
      <summary>
          Obtiene o establece un aspecto del Esquema XML. 
        </summary>
      <returns>
          Una de las clases de aspecto siguientes:
          
            <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion">
      <summary>
          Representa el elemento union de los tipos sencillos del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Un tipo de datos union puede utilizarse para especificar el contenido de un simpleType. El valor del elemento simpleType debe ser cualquiera de un conjunto de tipos de datos alternativos especificado en la unión. Los tipos Union siempre son tipos derivados y deben comprender al menos dos tipos de datos alternativos.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeUnion.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseMemberTypes">
      <summary>
          Obtiene una matriz de objetos <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representan el tipo del elemento simpleType basándose en los valores <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes" /> y <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes" /> del tipo simple.
        </summary>
      <returns>
          Una matriz de objetos <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo del elemento simpleType especificado.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes">
      <summary>
          Obtiene la colección de tipos base.
        </summary>
      <returns>
          Colección de valores base de tipos simples.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes">
      <summary>
          Obtiene o establece la matriz de nombres completos de miembros de tipos de datos integrados o de elementos simpleType definidos en este esquema (u otro esquema indicado por el espacio de nombres especificado).
        </summary>
      <returns>
          Matriz que consta de una lista de miembros de tipos de datos integrados o tipos simples.
          
          
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet">
      <summary>
          Representa el aspecto totalDigits del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase puede utilizarse para especificar una restricción en cuanto al número de dígitos que se pueden especificar para el valor de un elemento simpleType. El valor de totalDigits debe ser un entero positivo.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaTotalDigitsFacet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaType">
      <summary>
          Clase base para todos los tipos simples y complejos.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaType" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
      <summary>
          Obtiene el tipo de objeto posterior a la compilación o el tipo de datos del lenguaje de definición de esquemas XML (XSD) integrado, el elemento simpleType o el elemento complexType. Se trata de una propiedad del conjunto de información posterior a la compilación del esquema.
        </summary>
      <returns>
          Tipo de datos XSD integrado, elemento simpleType o elemento complexType.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType">
      <summary>
          Obtiene el valor posterior a la compilación para el tipo base de este tipo de esquema.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaType" /> que representa el tipo base de este tipo de esquema.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Datatype">
      <summary>
          Obtiene el valor posterior a la compilación para el tipo de datos del tipo complejo.
        </summary>
      <returns>
          Valor <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> de la compilación posterior al esquema.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
      <summary>
          Obtiene la información posterior a la compilación sobre cómo se ha derivado este elemento de su tipo base.
        </summary>
      <returns>
          Uno de los valores <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> válidos.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Final">
      <summary>
          Obtiene o establece el atributo final de la derivación de tipo que indica si se permiten más derivaciones.
        </summary>
      <returns>
          Uno de los valores <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> válidos. El valor predeterminado es <see cref="F:System.Xml.Schema.XmlSchemaDerivationMethod.None" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
      <summary>
          Obtiene el valor posterior a la compilación de la propiedad <see cref="P:System.Xml.Schema.XmlSchemaType.Final" />.
        </summary>
      <returns>
          Valor posterior a la compilación de la propiedad <see cref="P:System.Xml.Schema.XmlSchemaType.Final" />. El valor predeterminado es el valor del atributo finalDefault del elemento schema.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)">
      <summary>
          Devuelve el valor <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa el tipo complejo integrado del tipo complejo especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa el tipo complejo integrado.
        </returns>
      <param name="typeCode">
              Uno de los valores <see cref="T:System.Xml.Schema.XmlTypeCode" /> que representan el tipo complejo.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
      <summary>
          Devuelve el valor <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa el tipo complejo integrado del tipo complejo especificado mediante un nombre completo.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa el tipo complejo integrado.
        </returns>
      <param name="qualifiedName">
              <see cref="T:System.Xml.XmlQualifiedName" /> del tipo complejo.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El parámetro <see cref="T:System.Xml.XmlQualifiedName" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
      <summary>
          Devuelve el valor <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo simple integrado del tipo simple especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo simple integrado.
        </returns>
      <param name="typeCode">
              Uno de los valores <see cref="T:System.Xml.Schema.XmlTypeCode" /> que representan el tipo simple.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
      <summary>
          Devuelve el valor <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo simple integrado del tipo simple especificado mediante un nombre completo.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo simple integrado.
        </returns>
      <param name="qualifiedName">
              <see cref="T:System.Xml.XmlQualifiedName" /> del tipo simple.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El parámetro <see cref="T:System.Xml.XmlQualifiedName" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
      <summary>
          Devuelve un valor que indica si el tipo de esquema derivado especificado se deriva del tipo de esquema base especificado
        </summary>
      <returns>
          
            Es true si el tipo derivado se derivado del tipo base; de lo contrario, es false.
        </returns>
      <param name="derivedType">
              <see cref="T:System.Xml.Schema.XmlSchemaType" /> derivado que se va a probar.
            </param>
      <param name="baseType">
              Tipo <see cref="T:System.Xml.Schema.XmlSchemaType" /> base que se toma como referencia para probar el tipo <see cref="T:System.Xml.Schema.XmlSchemaType" /> derivado.
            </param>
      <param name="except">
              Uno de los valores <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> que representan un método de derivación de tipos que se va a excluir de la prueba.
            </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.IsMixed">
      <summary>
          Obtiene o establece un valor que indica si el modelo de contenido de este tipo es mixto. Esta propiedad sólo es válida en un tipo complejo.
        </summary>
      <returns>
          
            true si el modelo de contenido del tipo es mixto; de lo contrario, false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Name">
      <summary>
          Obtiene o establece el nombre del tipo.
        </summary>
      <returns>
          Nombre del tipo.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.QualifiedName">
      <summary>
          Obtiene el nombre cualificado del tipo generado a partir del atributo Name de este tipo. Se trata de una propiedad posterior a la compilación del esquema.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlQualifiedName" /> del tipo creado a partir del atributo Name de este tipo.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.TypeCode">
      <summary>
          Obtiene el valor <see cref="T:System.Xml.Schema.XmlTypeCode" /> del tipo.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.Schema.XmlTypeCode" />.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUnique">
      <summary>
          Representa el elemento unique del esquema XML tal como lo especifica World Wide Web Consortium (W3C). Esta clase puede utilizarse para identificar una restricción única entre un conjunto de elementos.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaUnique.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaUnique" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUse">
      <summary>
          Indicador de la forma en que se utiliza el atributo.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.None">
      <summary>
          No se ha especificado la forma de utilizar el atributo.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Optional">
      <summary>
          El atributo es opcional.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Prohibited">
      <summary>
          El atributo no puede utilizarse.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Required">
      <summary>
          El atributo debe aparecer una vez.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationException">
      <summary>
          Representa la excepción que se produce cuando se detectan advertencias y errores de validación de esquema del lenguaje de definición de esquemas XML (XSD) que se está validando. 
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificados.
        </summary>
      <param name="info">
              Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.
            </param>
      <param name="context">
              Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con el mensaje de excepción especificado.
        </summary>
      <param name="message">
              Descripción string de la condición de error.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con el mensaje de excepción y el objeto <see cref="T:System.Exception" /> original que ha producido la excepción especificada.
        </summary>
      <param name="message">
              Descripción string de la condición de error.
            </param>
      <param name="innerException">
              Objeto <see cref="T:System.Exception" /> original que ha producido esta excepción.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con el mensaje de excepción especificado y el objeto <see cref="T:System.Exception" /> original, el número de línea y la posición de la línea del código XML que produce la excepción especificada.
        </summary>
      <param name="message">
              Descripción string de la condición de error.
            </param>
      <param name="innerException">
              Objeto <see cref="T:System.Exception" /> original que ha producido esta excepción.
            </param>
      <param name="lineNumber">
              Número de línea del código XML que ha producido esta excepción.
            </param>
      <param name="linePosition">
              Posición de la línea del código XML que ha producido esta excepción.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Construye un nuevo objeto <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con la información de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificada que contiene todas las propiedades de la excepción <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.
        </summary>
      <param name="info">
              
                <see cref="T:System.Runtime.Serialization.SerializationInfo" />
              
            </param>
      <param name="context">
              
                <see cref="T:System.Runtime.Serialization.StreamingContext" />
              
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.SetSourceObject(System.Object)">
      <summary>
        </summary>
      <param name="sourceObject">
              Objeto de origen.
            </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidationException.SourceObject">
      <summary>
          Obtiene el nodo XML que ha producido la excepción <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.
        </summary>
      <returns>
          Nodo XML que ha producido la excepción <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationFlags">
      <summary>
          Especifica las opciones de validación del esquema utilizadas por las clases <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> y <see cref="T:System.Xml.XmlReader" />.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.None">
      <summary>
          No procese restricciones de identidad, esquemas en línea ni sugerencias de ubicación de esquemas, y no cree informes de advertencia de validación de esquema.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema">
      <summary>
          Procese los esquemas en línea que encuentre durante la validación.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation">
      <summary>
          Procese las sugerencias de ubicación de esquemas (xsi:schemaLocation, xsi:noNamespaceSchemaLocation) que encuentre durante la validación.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings">
      <summary>
          Cree informes de las advertencias de validación de esquemas que encuentre durante la validación.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints">
      <summary>
          Procese las restricciones de identidad (xs:ID, xs:IDREF, xs:key, xs:keyref, xs:unique) que encuentre durante la validación.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes">
      <summary>
          Permitir atributos xml:* aunque no estén definidos en el esquema. Los atributos se validarán según su tipo de datos.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidator">
      <summary>
          Representa un motor de validación de esquema del lenguaje de definición de esquemas XML (XSD). La clase <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.
        </summary>
      <param name="nameTable">
              Los objetos <see cref="T:System.Xml.XmlNameTable" /> contienen nombres de atributos y elementos en forma de cadenas subdivididas.
            </param>
      <param name="schemas">
              Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas del lenguaje de definición de esquemas XML (XSD) utilizado para la validación.
            </param>
      <param name="namespaceResolver">
              Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los espacios de nombres que se encuentran durante la validación.
            </param>
      <param name="validationFlags">
              Valor <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /> que especifica las opciones de validación de esquemas.
            </param>
      <exception cref="T:System.ArgumentNullException">
              Uno o varios parámetros especificados son null.
            </exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">
              Se ha producido un error durante la compilación de los esquemas en el parámetro <see cref="T:System.Xml.Schema.XmlSchemaSet" />.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
      <summary>
          Agrega un esquema del lenguaje de definición de esquemas XML (XSD) al conjunto de esquemas utilizado para la validación.
        </summary>
      <param name="schema">
              Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar al conjunto de esquemas utilizado para la validación.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El parámetro <see cref="T:System.Xml.Schema.XmlSchema" /> especificado es null.
            </exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              El espacio de nombres de destino del parámetro <see cref="T:System.Xml.Schema.XmlSchema" /> coincide con el de cualquier elemento o atributo que haya encontrado el objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.
            </exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">
              El parámetro <see cref="T:System.Xml.Schema.XmlSchema" /> no es válido.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
      <summary>
          Finaliza la validación y comprueba las restricciones de identidad de todo el documento XML.
        </summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              Se ha encontrado un error de restricción de identidad en el documento XML.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
      <summary>
          Devuelve los atributos esperados para el contexto del elemento actual.
        </summary>
      <returns>
          Matriz de los objetos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> o matriz vacía si no hay ningún atributo esperado.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
      <summary>
          Devuelve las partículas esperadas en el contexto del elemento actual.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> o matriz vacía si no hay ninguna partícula esperada.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
      <summary>
          Rellena la lista <see cref="T:System.Collections.ArrayList" /> especificada con los objetos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> de todos los atributos con valores predeterminados que no se hayan validado previamente utilizando el método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> en el contexto del elemento.
        </summary>
      <param name="defaultAttributes">
              <see cref="T:System.Collections.ArrayList" /> que se va a rellenar con los objetos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> de los atributos que no se hayan encontrado durante la validación en el contexto del elemento.
            </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
      <summary>
          Inicializa el estado del objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              La llamada al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> es válida si se realiza inmediatamente después de la creación de un objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> o después de llamar sólo a <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
      <summary>
          Inicializa el estado del objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> utilizando el objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado para la validación parcial.
        </summary>
      <param name="partialValidationType">
              Objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> o <see cref="T:System.Xml.Schema.XmlSchemaType" /> utilizado para inicializar el contexto de validación del objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para realizar una validación parcial.
            </param>
      <exception cref="T:System.InvalidOperationException">
              La llamada al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> es válida si se realiza inmediatamente después de la creación de un objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> o después de llamar sólo a <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />.
            </exception>
      <exception cref="T:System.ArgumentException">
              El parámetro <see cref="T:System.Xml.Schema.XmlSchemaObject" /> no es un objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ni <see cref="T:System.Xml.Schema.XmlSchemaType" />.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El parámetro <see cref="T:System.Xml.Schema.XmlSchemaObject" /> no puede ser null.
            </exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
      <summary>
          Obtiene o establece la información del número de línea del nodo XML que se está validando.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.IXmlLineInfo" />.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary>
          Omite la validación del contenido del elemento actual y prepara al objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para validar el contenido en el contexto del elemento principal.
        </summary>
      <param name="schemaInfo">
              Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen si el contenido del elemento actual se omite correctamente. Este parámetro puede ser null.
            </param>
      <exception cref="T:System.InvalidOperationException">
              No se llamó al método <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> en la secuencia correcta. Por ejemplo, al llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.
            </exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
      <summary>
          Obtiene o establece el URI de origen del nodo XML que se está validando.
        </summary>
      <returns>
          Objeto <see cref="T:System.Uri" /> que representa el URI de origen del nodo XML que se está validando; el valor predeterminado es null.
        </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary>
          Valida el nombre del atributo, el espacio de nombres del URI y el valor en el contexto del elemento actual.
        </summary>
      <returns>
          Valor del atributo validado.
        </returns>
      <param name="localName">
              Nombre local del atributo que se va a validar.
            </param>
      <param name="namespaceUri">
              Espacio de nombres del URI del atributo que se va a validar.
            </param>
      <param name="attributeValue">
              Valor del atributo que se va a validar.
            </param>
      <param name="schemaInfo">
              Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen si la validación del atributo se realiza correctamente. Este parámetro puede ser null.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              El atributo no es válido en el contexto del elemento actual.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> en la secuencia correcta. Por ejemplo, al llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Uno o varios parámetros especificados son null.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
      <summary>
          Valida el nombre del atributo, el espacio de nombres del URI y el valor en el contexto del elemento actual.
        </summary>
      <returns>
          Valor del atributo validado.
        </returns>
      <param name="localName">
              Nombre local del atributo que se va a validar.
            </param>
      <param name="namespaceUri">
              Espacio de nombres del URI del atributo que se va a validar.
            </param>
      <param name="attributeValue">
              delegate de <see cref="T:System.Xml.Schema.XmlValueGetter" /> que se utiliza para pasar el valor del atributo como tipo de Common Language Runtime (CLR) compatible con el tipo del lenguaje de definición de esquemas XML (XSD) del atributo.
            </param>
      <param name="schemaInfo">
              Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen si la validación del atributo se realiza correctamente. Este parámetro puede ser null.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              El atributo no es válido en el contexto del elemento actual.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> en la secuencia correcta. Por ejemplo, al llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Uno o varios parámetros especificados son null.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary>
          Valida el elemento en el contexto actual.
        </summary>
      <param name="localName">
              Nombre local del elemento que se va a validar.
            </param>
      <param name="namespaceUri">
              URI del espacio de nombres del elemento que se va a validar.
            </param>
      <param name="schemaInfo">
              Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen al realizar correctamente la validación del nombre del elemento. Este parámetro puede ser null.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              El nombre del elemento no es válido en el contexto actual.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> en la secuencia correcta. Por ejemplo, se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
      <summary>
          Valida el elemento en el contexto actual con los valores de atributo xsi:Type, xsi:Nil, xsi:SchemaLocation y xsi:NoNamespaceSchemaLocation especificados.
        </summary>
      <param name="localName">
              Nombre local del elemento que se va a validar.
            </param>
      <param name="namespaceUri">
              URI del espacio de nombres del elemento que se va a validar.
            </param>
      <param name="schemaInfo">
              Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen al realizar correctamente la validación del nombre del elemento. Este parámetro puede ser null.
            </param>
      <param name="xsiType">
              Valor de atributo xsi:Type del elemento. Este parámetro puede ser null.
            </param>
      <param name="xsiNil">
              Valor de atributo xsi:Nil del elemento. Este parámetro puede ser null.
            </param>
      <param name="xsiSchemaLocation">
              Valor de atributo xsi:SchemaLocation del elemento. Este parámetro puede ser null.
            </param>
      <param name="xsiNoNamespaceSchemaLocation">
              Valor de atributo xsi:NoNamespaceSchemaLocation del elemento. Este parámetro puede ser null.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              El nombre del elemento no es válido en el contexto actual.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> en la secuencia correcta. Por ejemplo, se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary>
          Comprueba si el contenido de texto del elemento es válido según su tipo de datos para los elementos con contenido simple y si el contenido del elemento actual es completo para los elementos con contenido complejo.
        </summary>
      <returns>
          Valor de texto con tipo analizado del elemento si el contenido de éste es simple 
        </returns>
      <param name="schemaInfo">
              Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen si la validación del elemento se realiza correctamente. Este parámetro puede ser null.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              El contenido del elemento no es válido.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> en la secuencia correcta. Por ejemplo, si se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
      <summary>
          Comprueba si el contenido del texto del elemento especificado es válido según su tipo de datos.
        </summary>
      <returns>
          Contenido del texto con tipo analizado del elemento.
        </returns>
      <param name="schemaInfo">
              Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen al realizar correctamente la validación del contenido del texto del elemento. Este parámetro puede ser null.
            </param>
      <param name="typedValue">
              Contenido del texto con tipo del elemento.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              El contenido del texto del elemento no es válido.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              No se ha llamado al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> utilizando la secuencia correcta (por ejemplo, si se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />), se han realizado llamadas al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> anteriormente o el contenido del elemento es complejo.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El parámetro del contenido del texto con tipo no puede ser null.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
      <summary>
          Comprueba si todos los atributos necesarios en el contexto del elemento están presentes y prepara el objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para validar el contenido secundario del elemento.
        </summary>
      <param name="schemaInfo">
              Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen al comprobar satisfactoriamente que están presentes todos los atributos necesarios en el contexto del elemento. Este parámetro puede ser null.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              No se han encontrado uno o varios los atributos necesarios en el contexto del elemento actual.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              No se llamó al método <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> en la secuencia correcta. Por ejemplo, al llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Uno o varios parámetros especificados son null.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
      <summary>
          Valida si la cadena string de texto especificada se permite en el contexto del elemento actual y acumula el texto para la validación si el contenido del elemento actual es simple.
        </summary>
      <param name="elementValue">
              string de texto que se va a validar en el contexto del elemento actual.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              La cadena string de texto especificada no se permite en el contexto del elemento actual.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> en la secuencia correcta. Por ejemplo, se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El parámetro de la cadena string de texto no puede ser null.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
      <summary>
          Valida si el texto que devuelve el objeto <see cref="T:System.Xml.Schema.XmlValueGetter" /> especificado se permite en el contexto del elemento actual y acumula el texto para la validación si el contenido del elemento actual es simple.
        </summary>
      <param name="elementValue">
              delegate de <see cref="T:System.Xml.Schema.XmlValueGetter" /> que se utiliza para pasar el valor de texto como tipo de Common Language Runtime (CLR) compatible con el tipo del lenguaje de definición de esquemas XML (XSD) del atributo.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              La cadena string de texto especificada no se permite en el contexto del elemento actual.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> en la secuencia correcta. Por ejemplo, se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El parámetro de la cadena string de texto no puede ser null.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
      <summary>
          Valida si se permite el espacio en blanco de la cadena string especificada en el contexto del elemento actual y acumula el espacio en blanco para la validación si el contenido del elemento actual es simple.
        </summary>
      <param name="elementValue">
              string de espacio en blanco que se va a validar en el contexto del elemento actual.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              No se permite el espacio en blanco en el contexto del elemento actual.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> en la secuencia correcta. Por ejemplo, si se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.
            </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
      <summary>
          Valida si se permite el espacio en blanco que devuelve el objeto <see cref="T:System.Xml.Schema.XmlValueGetter" /> especificado en el contexto del elemento actual y acumula el espacio en blanco para la validación si el contenido del elemento actual es simple.
        </summary>
      <param name="elementValue">
              delegate de <see cref="T:System.Xml.Schema.XmlValueGetter" /> que se utiliza para pasar el valor de espacio en blanco como tipo de Common Language Runtime (CLR) compatible con el tipo del lenguaje de definición de esquemas XML (XSD) del atributo.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              No se permite el espacio en blanco en el contexto del elemento actual.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> en la secuencia correcta. Por ejemplo, si se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.
            </exception>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
      <summary>
          <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recibe advertencias y errores detectados durante la validación del esquema.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
      <summary>
          Obtiene o establece el objeto enviado como objeto de remitente de un evento de validación.
        </summary>
      <returns>
          <see cref="T:System.Object" />; el valor predeterminado es el objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.
        </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
      <summary>
          Establece el objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para resolver los elementos xs:import y xs:include, así como los atributos xsi:schemaLocation y xsi:noNamespaceSchemaLocation.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlResolver" />; el valor predeterminado es un objeto <see cref="T:System.Xml.XmlUrlResolver" />.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidity">
      <summary>
          Representa la validez de un elemento XML validado por la clase <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.NotKnown">
      <summary>
          Se desconoce la validez del elemento XML.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Valid">
      <summary>
          El elemento XML es válido.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Invalid">
      <summary>
          El elemento XML no es válido.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet">
      <summary>
          Representa el aspecto whiteSpace del Consorcio W3C.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaWhiteSpaceFacet.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaXPath">
      <summary>
          Representa el elemento selector del Consorcio W3C.
        </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaXPath.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaXPath" />.
        </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaXPath.XPath">
      <summary>
          Obtiene o establece el atributo de la expresión de XPath.
        </summary>
      <returns>
          Valor del atributo de tipo cadena de la expresión XPath.
        </returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSeverityType">
      <summary>
          Representa la gravedad del evento de validación.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Error">
      <summary>
          Indica que se ha producido un error de validación al validar el documento de instancia. Esto es válido para las definiciones de tipo de documento (DTD) y los esquemas del Lenguaje de definición de esquemas XML (XSD, Schema Definition Language). Las restricciones de validación del Consorcio W3C se consideran errores. Si no se ha creado ningún controlador de eventos de validación, los errores producen una excepción.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Warning">
      <summary>
          Indica que se ha producido un evento de validación que no es un error. Normalmente se emite una advertencia cuando no existe una DTD o un esquema XML con respecto a los cuales validar un elemento o atributo determinado. A diferencia de los errores, las advertencias no producen una excepción si no hay un controlador de eventos de validación.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlTypeCode">
      <summary>
          Representa los tipos de esquema del Lenguaje de definición de esquemas XML (XSD) del consorcio W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.None">
      <summary>
          Ninguna información de tipo.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Item">
      <summary>
          Un elemento como un nodo o un valor atómico.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Node">
      <summary>
          Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Document">
      <summary>
          Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Element">
      <summary>
          Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Attribute">
      <summary>
          Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Namespace">
      <summary>
          Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.ProcessingInstruction">
      <summary>
          Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Comment">
      <summary>
          Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Text">
      <summary>
          Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyAtomicType">
      <summary>
          Cualquier valor atómico de una unión.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UntypedAtomic">
      <summary>
          Valor atómico sin tipo.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.String">
      <summary>
          Tipo xs:string del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Boolean">
      <summary>
          Tipo xs:boolean del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Decimal">
      <summary>
          Tipo xs:decimal del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Float">
      <summary>
          Tipo xs:float del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Double">
      <summary>
          Tipo xs:double del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Duration">
      <summary>
          Tipo xs:Duration del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DateTime">
      <summary>
          Tipo xs:dateTime del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Time">
      <summary>
          Tipo xs:time del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Date">
      <summary>
          Tipo xs:date del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYearMonth">
      <summary>
          Tipo xs:gYearMonth del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYear">
      <summary>
          Tipo xs:gYear del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonthDay">
      <summary>
          Tipo xs:gMonthDay del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GDay">
      <summary>
          Tipo xs:gDay del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonth">
      <summary>
          Tipo xs:gMonth del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.HexBinary">
      <summary>
          Tipo xs:hexBinary del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Base64Binary">
      <summary>
          Tipo xs:base64Binary del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyUri">
      <summary>
          Tipo xs:anyURI del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.QName">
      <summary>
          Tipo xs:QName del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Notation">
      <summary>
          Tipo xs:NOTATION del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NormalizedString">
      <summary>
          Tipo xs:normalizedString del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Token">
      <summary>
          Tipo xs:token del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Language">
      <summary>
          Tipo xs:language del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NmToken">
      <summary>
          Tipo xs:NMTOKEN del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Name">
      <summary>
          Tipo xs:Name del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NCName">
      <summary>
          Tipo xs:NCName del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Id">
      <summary>
          Tipo xs:ID del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Idref">
      <summary>
          Tipo xs:IDREF del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Entity">
      <summary>
          Tipo xs:ENTITY del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Integer">
      <summary>
          Tipo xs:integer del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonPositiveInteger">
      <summary>
          Tipo xs:nonPositiveInteger del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NegativeInteger">
      <summary>
          Tipo xs:negativeInteger del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Long">
      <summary>
          Tipo xs:long del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Int">
      <summary>
          Tipo xs:int del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Short">
      <summary>
          Tipo xs:short del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Byte">
      <summary>
          Tipo xs:byte del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonNegativeInteger">
      <summary>
          Tipo xs:nonNegativeInteger del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedLong">
      <summary>
          Tipo xs:unsignedLong del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedInt">
      <summary>
          Tipo xs:unsignedInt del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedShort">
      <summary>
          Tipo xs:unsignedShort del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedByte">
      <summary>
          Tipo xs:unsignedByte del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.PositiveInteger">
      <summary>
          Tipo xs:positiveInteger del esquema XML de W3C.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.YearMonthDuration">
      <summary>
          Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.
        </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DayTimeDuration">
      <summary>
          Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.
        </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlValueGetter">
      <summary>
          delegate que utiliza la clase <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para pasar los valores de atributo, texto, y espacio en blanco en forma de tipo de Common Language Runtime (CLR) compatible con el tipo del atributo, el texto o el espacio en blanco del lenguaje de definición de esquemas XML (XSD).
        </summary>
      <returns>
          Un objeto que contiene el valor de atributo, texto o espacio en blanco. El objeto es un tipo CLR que se corresponde con el tipo XSD del valor de atributo, texto o espacio en blanco.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeExporter">
      <summary>
          Representa una clase que puede generar el código proxy de una representación XML de una estructura de datos.
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.CodeExporter.IncludeMetadata">
      <summary>
          Obtiene una colección de metadatos de atributo de código que se incluye cuando se exporta el código.
        </summary>
      <returns>
          Una colección de objetos <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> que representan metadatos que se incluyen cuando se exporta el código.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary>
          Especifica diversas opciones que se pueden utilizar al generar tipos de .NET Framework para su uso con un servicio Web XML.
        </summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary>
          Representa los tipos primitivos por campos y los tipos primitivos por tipos de espacio de nombres <see cref="N:System" />.
        </summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary>
          Representa los tipos primitivos por propiedades.
        </summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary>
          Crea eventos para la llamada asincrónica de métodos Web.
        </summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary>
          Crea métodos Begin y End para la llamada asincrónica de métodos Web.
        </summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary>
          Genera el código de serialización explícitamente ordenado como se especificó mediante la propiedad Order de los atributos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> y <see cref="T:System.Xml.Serialization.XmlElementAttribute" />. 
        </summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary>
          Habilita el enlace de datos.
        </summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary>
          Proporciona métodos estáticos para convertir el texto de entrada en nombres para las entidades de código.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor"></member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary>
          Genera una cadena con mayúscula y minúscula Camel de una cadena de entrada. 
        </summary>
      <returns>
          Una versión con mayúscula y minúscula Camel de la cadena de parámetro.
        </returns>
      <param name="identifier">
              El nombre de una entidad de código, como un parámetro de método, normalmente tomado de un nombre de atributo o elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary>
          Genera una cadena con mayúscula y minúscula Pascal de una cadena de entrada. 
        </summary>
      <returns>
          Una versión con mayúscula y minúscula Pascal de la cadena de parámetro.
        </returns>
      <param name="identifier">
              El nombre de una entidad de código, como un parámetro de método, normalmente tomado de un nombre de atributo o elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary>
          Genera un nombre de entidad de código válido a partir de una cadena de entrada. 
        </summary>
      <returns>
          Una cadena que se puede utilizar como un identificador de código, como el nombre de un parámetro de método.
        </returns>
      <param name="identifier">
              El nombre de una entidad de código, como un parámetro de método, normalmente tomado de un nombre de atributo o elemento XML.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary>
          Mantiene un grupo de nombres para entidades de código o asignaciones de tipo que son generadas por la infraestructura de serialización XML de .NET Framework.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.CodeIdentifiers" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> y determina si los identificadores de código distinguen entre mayúsculas y minúsculas.
        </summary>
      <param name="caseSensitive">
              
                Es true si los identificadores distinguen entre mayúsculas y minúsculas; en caso contrario, es false. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary>
          Agrega una entidad de código con nombre o asignación de tipo al ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />. 
        </summary>
      <param name="identifier">
              Un nombre que se utiliza para indizar la entidad de código.
            </param>
      <param name="value">
              La entidad de código o información de asignación de tipos.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary>
          Evita que un nombre especificado se utilice dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />. 
        </summary>
      <param name="identifier">
              Un nombre que no estará disponible dentro del ámbito de la <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> instancia.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary>
          Agrega una entidad de código o asignación de tipo con nombre al ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, garantizando que el nombre es único dentro del ámbito. 
        </summary>
      <returns>
          El valor de parámetro del identificador o una cadena modificada si hay una coincidencia de nombres.
        </returns>
      <param name="identifier">
              Un nombre candidato que se utiliza para indizar la entidad de código.
            </param>
      <param name="value">
              La entidad de código o información de asignación de tipos.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary>
          Quita todas las entidades de código o asignaciones de tipo, incluidos sus nombres, del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary>
          Determina si un nombre especificado ya se utiliza dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />. 
        </summary>
      <returns>
          
            Es true si el nombre ya se utiliza; en caso contrario, es false.
        </returns>
      <param name="identifier">
              El nombre que se comprobará para utilizarlo dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary>
          Garantiza que la entrada es del caso correcto modificando el nombre según el valor de la propiedad <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />. 
        </summary>
      <returns>
          Una cadena que es igual que el identificador de entrada o que tiene modificada la mayúscula o minúscula de la primera letra.
        </returns>
      <param name="identifier">
              El nombre que posiblemente se modificará.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary>
          Determina las coincidencias de nombre de entrada con otro nombre dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> y, si las hay, genera una cadena modificada. 
        </summary>
      <returns>
          El valor de parámetro del identificador o una cadena modificada si hay una coincidencia de nombres.
        </returns>
      <param name="identifier">
              El nombre que se modificará si aún no es único.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary>
          Quita del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> la entidad de código o la asignación de tipo identificada por el nombre de entrada. 
        </summary>
      <param name="identifier">
              El nombre de la entidad de código o información de asignación de tipo que se quitará.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary>
          Quita el nombre de entrada de los nombres reservados de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />. 
        </summary>
      <param name="identifier">
              Un nombre que estará disponible dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary>
          Devuelve una matriz de las entidades de código o asignaciones de tipo dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />. 
        </summary>
      <returns>
          Una matriz de las entidades de código o asignaciones de tipo que es almacenada por el objeto <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.
        </returns>
      <param name="type">
              El tipo de todas las entidades de código o asignaciones de tipo para la instancia.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary>
          Obtiene o establece un valor que indica si la instancia utiliza mayúsculas y minúsculas Camel. 
        </summary>
      <returns>
          
            true para indicar que la instancia utiliza mayúsculas y minúsculas Camel; false para indicar que la instancia utiliza mayúsculas y minúsculas Pascal.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary>
          Describe el contexto en el que un conjunto de esquema se enlaza a las entidades de código de .NET Framework.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.ImportContext" /> para los identificadores de código dados, con la correspondiente opción para compartir tipos.
        </summary>
      <param name="identifiers">
              Entidades del código a las que se aplica el contexto.
            </param>
      <param name="shareTypes">
              Valor <see cref="T:System.Boolean" /> que determina si los tipos personalizados se comparten entre el esquema.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary>
          Obtiene un valor que determina si se comparten los tipos personalizados.
        </summary>
      <returns>
          
            true, si los tipos personalizados se comparten entre el esquema; de lo contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary>
          Obtiene un conjunto de entidades de código a las que se aplica el contexto.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> que especifica las entidades del código a las que se aplica el contexto.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary>
          Obtiene una colección de advertencias que se generan al importar las descripciones de entidad del código.
        </summary>
      <returns>
          <see cref="T:System.Collections.Specialized.StringCollection" /> que contiene advertencias que se generaron al importar las descripciones de entidad del código.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlSerializable">
      <summary>
          Proporciona formato personalizado para la serialización y deserialización XML.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <summary>
          Este método se reserva y no debe utilizarse. Al implementar la interfaz IXmlSerializable, debe devolver null (Nothing en Visual Basic) desde este método y, en su lugar, si se requiere especificar un esquema personalizado, aplique <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> a la clase.
        </summary>
      <returns>
          Una clase <see cref="T:System.Xml.Schema.XmlSchema" /> que describe la representación XML del objeto producido por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> y utilizado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <summary>
          Genera un objeto a partir de su representación XML.
        </summary>
      <param name="reader">
              Secuencia de <see cref="T:System.Xml.XmlReader" /> desde la que se deserializa el objeto. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <summary>
          Convierte un objeto en su representación XML.
        </summary>
      <param name="writer">
              Secuencia de <see cref="T:System.Xml.XmlWriter" /> para la que se serializa el objeto. 
            </param>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary>
          Establece una propiedad <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> para ser utilizada por la infraestructura de .NET Framework.
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary>
          Obtiene o establece si se normalizan los valores de atributo y espacio en blanco.
        </summary>
      <returns>
          
            true si se normalizan los valores de atributo y espacio en blanco; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary>
          Obtiene o establece cómo se trata el carácter de espacio en blanco al analizar XML.
        </summary>
      <returns>
          Un miembro de la enumeración <see cref="T:System.Xml.WhitespaceHandling" /> que describe cómo se trata el carácter de espacio en blanco al analizar XML.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary>
          Describe un importador de esquemas.
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.SchemaImporter.Extensions">
      <summary>
          Obtiene una colección de extensiones del importador de esquemas.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection" /> que contiene una colección de extensiones del importador de esquemas.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary>
          Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar el miembro de clase como un atributo SOAP codificado.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> utilizando el valor especificado como nombre del atributo XML.
        </summary>
      <param name="attributeName">
              Nombre del atributo XML. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary>
          Obtiene o establece el nombre del atributo XML generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </summary>
      <returns>
          Nombre del atributo XML. El valor predeterminado es el identificador de miembros.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary>
          Obtiene o establece el tipo de datos XSD (Lenguaje de definición de esquemas XML) del atributo SOAP generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </summary>
      <returns>
          Tipo de datos de esquemas XML, tal como se define en el documento del Consorcio WWC (www.w3.org) titulado "XML Schema Part 2: Datatypes".
        </returns>
      <exception cref="T:System.Exception">
              El tipo de datos de esquemas XML especificado no se puede asignar al tipo de datos .NET. 
            </exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary>
          Obtiene o establece el espacio de nombres XML del atributo XML.
        </summary>
      <returns>
          Espacio de nombres XML del atributo XML.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary>
          Permite reemplazar atributos aplicados a propiedades, campos y clases cuando se utiliza un objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serializar o deserializar un objeto como SOAP codificado.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary>
          Agrega un objeto <see cref="T:System.Xml.Serialization.SoapAttributes" /> a la colección de objetos <see cref="T:System.Xml.Serialization.SoapAttributes" /> incluidos en <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. El parámetro <paramref name="type" /> especifica el objeto que va a ser reemplazado por <see cref="T:System.Xml.Serialization.SoapAttributes" />. El parámetro <paramref name="member" /> especifica el nombre de un miembro que se va a reemplazar.
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> del objeto que se va a reemplazar. 
            </param>
      <param name="member">
              Nombre del miembro que se va a reemplazar. 
            </param>
      <param name="attributes">
              <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa a los atributos de reemplazo. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary>
          Agrega un objeto <see cref="T:System.Xml.Serialization.SoapAttributes" /> a una colección de objetos <see cref="T:System.Xml.Serialization.SoapAttributes" />. El parámetro <paramref name="type" /> especifica un objeto que va a ser reemplazado por el objeto <see cref="T:System.Xml.Serialization.SoapAttributes" />.
        </summary>
      <param name="type">
              Tipo <see cref="T:System.Type" /> del objeto que se va a reemplazar. 
            </param>
      <param name="attributes">
              <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa a los atributos de reemplazo. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary>
          Obtiene el objeto asociado al tipo (de clase base) especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa la colección de atributos de reemplazo.
        </returns>
      <param name="type">
              Tipo <see cref="T:System.Type" /> de la clase base que está asociado a la colección de atributos que se desea recuperar. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary>
          Obtiene el objeto asociado al tipo (de clase base) especificado. El parámetro <paramref name="member" /> especifica el miembro de clase base que se reemplaza.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa la colección de atributos de reemplazo.
        </returns>
      <param name="type">
              Tipo <see cref="T:System.Type" /> de la clase base que está asociado a la colección de atributos que se desea reemplazar. 
            </param>
      <param name="member">
              Nombre del miembro reemplazado que especifica el objeto <see cref="T:System.Xml.Serialization.SoapAttributes" /> que se va a devolver. 
            </param>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary>
          Representa a una colección de objetos de atributos que controlan el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa y deserializa los métodos SOAP.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributes" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributes" /> utilizando el tipo personalizado especificado.
        </summary>
      <param name="provider">
              Objeto que implementa la interfaz <see cref="T:System.Reflection.ICustomAttributeProvider" />, como la clase <see cref="T:System.Type" />. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary>
          Obtiene o establece el atributo <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> que se va a reemplazar.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> que reemplaza el comportamiento del <see cref="T:System.Xml.Serialization.XmlSerializer" /> cuando se serializa el miembro.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary>
          Obtiene o establece el valor predeterminado de un elemento o atributo XML.
        </summary>
      <returns>
          Objeto que representa el valor predeterminado de un elemento o atributo XML.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary>
          Obtiene o establece un objeto <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> que se va a reemplazar.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> que se va a reemplazar.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary>
          Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una enumeración SOAP.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary>
          Obtiene o establece un valor que especifica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa o no un campo público o una propiedad pública como XML SOAP codificado.
        </summary>
      <returns>
          
            true si el objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> no debe serializar ni el campo ni la propiedad; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary>
          Obtiene o establece un objeto que indica al <see cref="T:System.Xml.Serialization.XmlSerializer" /> cómo serializar un tipo de objeto en XML SOAP codificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> que reemplaza un atributo <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> aplicado a una declaración de clase o que se aplica a una declaración de clase.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapCodeExporter">
      <summary>
          Genera tipos y declaraciones de atributos a partir de información de asignación de tipos interna para partes del mensaje con codificación SOAP y definidas en un documento WSDL. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapCodeExporter" />, suponiendo que no hay ninguna unidad de compilación de código. 
        </summary>
      <param name="codeNamespace">
              <see cref="T:System.CodeDom.CodeNamespace" /> que especifica el espacio de nombres de los tipos que se van a generar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapCodeExporter" />, especificando un parámetro de unidad de compilación de código además de un parámetro de espacio de nombres.
        </summary>
      <param name="codeNamespace">
              <see cref="T:System.CodeDom.CodeNamespace" /> que especifica el espacio de nombres de los tipos que se van a generar.
            </param>
      <param name="codeCompileUnit">
              <see cref="T:System.CodeDom.CodeCompileUnit" /> que identifica el contenedor de gráficos de programa al que se agregan automáticamente las referencias de ensamblado utilizadas. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapCodeExporter" />, especificando un espacio de nombres de código, una unidad de compilación de código, un generador de código, opciones de generación de código y asignaciones.
        </summary>
      <param name="codeNamespace">
              <see cref="T:System.CodeDom.CodeNamespace" /> que especifica el espacio de nombres de los tipos que se van a generar.
            </param>
      <param name="codeCompileUnit">
              <see cref="T:System.CodeDom.CodeCompileUnit" /> que identifica el contenedor de gráficos de programa al que se agregan automáticamente las referencias de ensamblado utilizadas. 
            </param>
      <param name="codeProvider">
              <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que se utiliza para crear el código.
            </param>
      <param name="options">
              Enumeración <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> que especifica las opciones con las que se genera el código exportado.
            </param>
      <param name="mappings">
              Colección <see cref="T:System.Collections.Hashtable" /> que contiene objetos <see cref="T:System.Xml.Serialization.XmlMapping" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapCodeExporter" />, especificando un espacio de nombres de código, una unidad de compilación de código y opciones de generación de código.
        </summary>
      <param name="codeNamespace">
              <see cref="T:System.CodeDom.CodeNamespace" /> que especifica el espacio de nombres de los tipos que se van a generar.
            </param>
      <param name="codeCompileUnit">
              <see cref="T:System.CodeDom.CodeCompileUnit" /> que identifica el contenedor de gráficos de programa al que se agregan automáticamente las referencias de ensamblado utilizadas. 
            </param>
      <param name="options">
              Enumeración <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> que especifica las opciones con las que se genera el código exportado.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapCodeExporter" />, especificando un espacio de nombres de código, una unidad de compilación de código, opciones de generación de código y asignaciones.
        </summary>
      <param name="codeNamespace">
              <see cref="T:System.CodeDom.CodeNamespace" /> que especifica el espacio de nombres de los tipos que se van a generar.
            </param>
      <param name="codeCompileUnit">
              <see cref="T:System.CodeDom.CodeCompileUnit" /> que identifica el contenedor de gráficos de programa al que se agregan automáticamente las referencias de ensamblado utilizadas. 
            </param>
      <param name="options">
              Enumeración <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> que especifica las opciones con las que se genera el código exportado.
            </param>
      <param name="mappings">
              Colección <see cref="T:System.Collections.Hashtable" /> que contiene objetos <see cref="T:System.Xml.Serialization.XmlMapping" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping)">
      <summary>
          Agrega una declaración <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> a un parámetro de método o valor devuelto correspondiente a un elemento de parte de una definición de mensaje SOAP en un documento WSDL. 
        </summary>
      <param name="metadata">
              La colección de objetos <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> para el tipo generado al que el método agrega una declaración de atributo.
            </param>
      <param name="member">
              Una asignación de tipo .NET Framework interna para una parte única de una definición de mensaje WSDL.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.Boolean)">
      <summary>
          Agrega una declaración <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> a un parámetro de método o valor devuelto correspondiente a un elemento de parte de una definición de mensaje SOAP en un documento WSDL. 
        </summary>
      <param name="metadata">
              La colección de objetos <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> para el tipo generado al que el método agrega una declaración de atributo.
            </param>
      <param name="member">
              Una asignación de tipo .NET Framework interna para una parte única de una definición de mensaje WSDL.
            </param>
      <param name="forceUseMemberName">
              
                true para agregar un argumento inicial que contenga el nombre del elemento XML para la declaración de atributos que se genera; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>
          Genera un tipo de .NET Framework, más la declaración de atributos, para cada una de las partes que pertenecen a una definición del mensaje SOAP en un documento WSDL. 
        </summary>
      <param name="xmlMembersMapping">
              Asignaciones internas de tipos de .NET Framework para las partes componentes de una definición de mensaje WSDL.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>
          Genera un tipo de .NET Framework, más la declaración de atributos, para un encabezado SOAP. 
        </summary>
      <param name="xmlTypeMapping">
              Información de asignación interna de tipos de .NET Framework para un elemento de encabezado SOAP.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary>
          Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar el valor del miembro público como un elemento XML SOAP codificado.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> y especifica el nombre del elemento XML.
        </summary>
      <param name="elementName">
              Nombre de elemento XML del miembro serializado. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary>
          Obtiene o establece el tipo de datos XSD (Lenguaje de definición de esquemas XML) del elemento XML generado.
        </summary>
      <returns>
          Uno de los tipos de datos de esquemas XML.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary>
          Obtiene o establece el nombre del elemento XML generado.
        </summary>
      <returns>
          Nombre del elemento XML generado. El valor predeterminado es el identificador de miembros.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary>
          Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro con el atributo xsi:null establecido en "1".
        </summary>
      <returns>
          
            true si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo xsi:null; en caso contrario, false.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary>
          Controla el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />, utilizando el nombre de elemento especificado.
        </summary>
      <param name="name">
              Nombre del elemento XML generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary>
          Obtiene o establece el valor generado en un documento XML cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una enumeración o el valor reconocido al deserializar el miembro de la enumeración.
        </summary>
      <returns>
          Valor generado en un documento XML cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa la enumeración o el valor reconocido al deserializar el miembro de la enumeración.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary>
          Instruye al <see cref="T:System.Xml.Serialization.XmlSerializer" /> para que no serialice el valor de campo público o propiedad pública de lectura/escritura.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" />.
        </summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary>
          Permite que <see cref="T:System.Xml.Serialization.XmlSerializer" /> reconozca un tipo al serializar o deserializar un objeto como XML SOAP codificado.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> utilizando el tipo especificado.
        </summary>
      <param name="type">
              Tipo del objeto que se va a incluir. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary>
          Obtiene o establece el tipo del objeto que debe utilizarse cuando se serializa o se deserializa un objeto.
        </summary>
      <returns>
          Tipo del objeto que se va a incluir.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary>
          Genera asignaciones a los mensajes con codificación SOAP desde los tipos de .NET Framework o la información de métodos del servicio Web. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando un espacio de nombres XML predeterminado para las asignaciones de tipo importadas. 
        </summary>
      <param name="defaultNamespace">
              Espacio de nombres XML predeterminado que se utilizará para las asignaciones de tipo importadas.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando los reemplazos de la serialización XML. 
        </summary>
      <param name="attributeOverrides">
              Objeto <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> que reemplaza cómo la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa tipos asignados mediante la codificación SOAP.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando los reemplazos de la serialización XML y un espacio de nombres XML predeterminado. 
        </summary>
      <param name="attributeOverrides">
              Objeto <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> que reemplaza cómo la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa tipos asignados mediante la codificación SOAP.
            </param>
      <param name="defaultNamespace">
              Espacio de nombres XML predeterminado que se utilizará para las asignaciones de tipo importadas.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary>
          Genera las asignaciones de tipo internas para obtener información que se recopila de un método de servicio Web. 
        </summary>
      <returns>
          Asignaciones internas de tipos de .NET Framework para las partes que componen una definición de mensaje WSDL.
        </returns>
      <param name="elementName">
              Nombre de un elemento XML producido desde el método de servicio Web.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML producido desde el método de servicio Web.
            </param>
      <param name="members">
              Matriz de entidades de código de .NET Framework que pertenecen a un método de servicio Web.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>
          Genera las asignaciones de tipo internas para obtener información que se recopila de un método de servicio Web. 
        </summary>
      <returns>
          Asignaciones internas de tipos de .NET Framework para las partes que componen una definición de mensaje WSDL.
        </returns>
      <param name="elementName">
              Nombre de un elemento XML producido desde el método de servicio Web.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML producido desde el método de servicio Web.
            </param>
      <param name="members">
              Matriz de las entidades de código de .NET Framework que pertenecen a un método de servicio Web.
            </param>
      <param name="hasWrapperElement">
              
                true para indicar qué elementos que corresponden a las partes del mensaje WSDL se deberían encerrar en un elemento contenedor adicional de un mensaje SOAP; de lo contrario, false.
            </param>
      <param name="writeAccessors">
              
                true para indicar un enlace de servicio Web de estilo RPC; false para indicar un enlace de servicio Web de estilo del documento o un encabezado SOAP.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>
          Genera las asignaciones de tipo internas para obtener información que se recopila de un método de servicio Web. 
        </summary>
      <returns>
          Asignaciones internas de tipos de .NET Framework para las partes que componen una definición de mensaje WSDL.
        </returns>
      <param name="elementName">
              Nombre de un elemento XML producido desde el método de servicio Web.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML producido desde el método de servicio Web.
            </param>
      <param name="members">
              Matriz de las entidades de código de .NET Framework que pertenecen a un método de servicio Web.
            </param>
      <param name="hasWrapperElement">
              
                true para indicar qué elementos que corresponden a las partes del mensaje WSDL se deberían encerrar en un elemento contenedor adicional de un mensaje SOAP; de lo contrario, false.
            </param>
      <param name="writeAccessors">
              
                true para indicar un enlace de servicio Web de estilo RPC; false para indicar un enlace de servicio Web de estilo del documento o un encabezado SOAP.
            </param>
      <param name="validate">
              
                true para indicar que un deserializador generado debería comprobar el nombre completo esperado del elemento contenedor; de lo contrario, false. El valor de este parámetro sólo es relevante si el valor del parámetro <paramref name="hasWrapperElement" /> es true.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>
          Genera las asignaciones de tipo internas para obtener información que se recopila de un método de servicio Web.
        </summary>
      <returns>
          Asignaciones internas de tipos de .NET Framework para las partes que componen una definición de mensaje WSDL.
        </returns>
      <param name="elementName">
              Nombre de un elemento XML producido desde el método de servicio Web.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML producido desde el método de servicio Web.
            </param>
      <param name="members">
              Matriz de las entidades de código de .NET Framework que pertenecen a un método de servicio Web.
            </param>
      <param name="hasWrapperElement">
              
                true para indicar qué elementos que corresponden a las partes del mensaje WSDL se deberían encerrar en un elemento contenedor adicional de un mensaje SOAP; de lo contrario, false.
            </param>
      <param name="writeAccessors">
              
                true para indicar un enlace de servicio Web de estilo RPC; false para indicar un enlace de servicio Web de estilo del documento o un encabezado SOAP.
            </param>
      <param name="validate">
              
                true para indicar que un deserializador generado debería comprobar el nombre completo esperado del elemento contenedor; de lo contrario, false. El valor de este parámetro sólo es relevante si el valor del parámetro <paramref name="hasWrapperElement" /> es true.
            </param>
      <param name="access">
              Uno de los valores de <see cref="T:System.Xml.Serialization.XmlMappingAccess" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>
          Genera una asignación a un elemento del esquema XML para un tipo de .NET Framework.
        </summary>
      <returns>
          Asignación .NET Framework interna de un tipo a un elemento de esquema XML. 
        </returns>
      <param name="type">
              El tipo de .NET Framework para el que se genera una asignación de tipos. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>
          Genera una asignación a un elemento del esquema XML para un tipo de .NET Framework.
        </summary>
      <returns>
          Asignación .NET Framework interna de un tipo a un elemento de esquema XML.
        </returns>
      <param name="type">
              El tipo de .NET Framework para el que se genera una asignación de tipos. 
            </param>
      <param name="defaultNamespace">
              El espacio de nombres XML predeterminado que se va a utilizar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary>
          Coloca las asignaciones para un tipo en el contexto de la instancia <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> para su uso posterior cuando se invoquen los métodos de importación. 
        </summary>
      <param name="type">
              El tipo de .NET Framework para el que se guarda la información de asignación de tipos.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>
          Coloca las asignaciones para los tipos derivados en el contexto de la instancia <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> para su uso posterior cuando se invoquen los métodos de importación. 
        </summary>
      <param name="provider">
              Un objeto de reflexión <see cref="T:System.Reflection.ICustomAttributeProvider" /> que contiene atributos personalizados que se derivan del atributo <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaExporter">
      <summary>
          Rellena los objetos <see cref="T:System.Xml.Schema.XmlSchema" /> con definiciones de tipo de datos de esquemas XML para tipos de .NET Framework que se serializan utilizando la codificación SOAP.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapSchemaExporter" />, que proporciona la colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> a los que se agregarán las declaraciones del elemento de esquema XML.
        </summary>
      <param name="schemas">
              Colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> a los que se agregan las declaraciones del elemento obtenidas de las asignaciones de tipo.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>
          Agrega al objeto <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable una definición de tipo de datos para cada una de las partes que componen una definición de mensaje con codificación SOAP.
        </summary>
      <param name="xmlMembersMapping">
              Asignaciones internas de tipos de .NET Framework para las partes que componen una definición de mensaje WSDL.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary>
          Agrega al objeto <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable una definición de tipo de datos para cada una de las partes que componen una definición de mensaje con codificación SOAP.
        </summary>
      <param name="xmlMembersMapping">
              Asignaciones internas de tipos de .NET Framework para las partes que componen una definición de mensaje WSDL.
            </param>
      <param name="exportEnclosingType">
              
                true para exportar una definición de tipo para el elemento principal de la partes de WSDL; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>
          Agrega al objeto <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable una definición de tipo de datos para un tipo de .NET Framework.
        </summary>
      <param name="xmlTypeMapping">
              Asignación interna entre un tipo de .NET Framework y un elemento de esquema XML.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaImporter">
      <summary>
          Se utiliza dentro de .NET Framework para generar asignaciones internas a los tipos de .NET Framework para las partes del mensaje codificadas con SOAP en un documento WSDL. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapSchemaImporter" />, especificando objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que representan los esquemas XML utilizados por los mensajes codificados con SOAP definidos en un documento WSDL. 
        </summary>
      <param name="schemas">
              Colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.ImportContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> que especifica los esquemas, opciones del compilador y nombres de entidades del código relacionadas.
        </summary>
      <param name="schemas">
              <see cref="T:System.Xml.Serialization.XmlSchemas" /> que contiene una colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.
            </param>
      <param name="options">
              Uno de los valores de <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> que especifica distintas opciones para generar un tipo de .NET Framework.
            </param>
      <param name="codeProvider">
              <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> utilizado para generar el código de serialización.
            </param>
      <param name="context">
              <see cref="T:System.Xml.Serialization.ImportContext" /> que describe el contexto en el que un conjunto de esquema se enlaza a las entidades de código de .NET Framework.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.Xml.Serialization.ImportContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> que especifica los esquemas, opciones del compilador y el contexto de los esquemas.
        </summary>
      <param name="schemas">
              Colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.
            </param>
      <param name="options">
              Uno de los valores de <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> que especifica distintas opciones para generar un tipo de .NET Framework.
            </param>
      <param name="context">
              <see cref="T:System.Xml.Serialization.ImportContext" /> que describe el contexto en el que un conjunto de esquema se enlaza a las entidades de código de .NET Framework. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapSchemaImporter" />, especificando objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que representan los esquemas XML utilizados por los mensajes codificados con SOAP, así como las clases generadas para los enlaces definidos en un documento WSDL. 
        </summary>
      <param name="schemas">
              Colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.
            </param>
      <param name="typeIdentifiers">
              Un objeto <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> que especifica una colección de clases que se generan para los enlaces definidos en un documento WSDL.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeGenerationOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> que especifica los esquemas, opciones del compilador y nombres de entidades del código relacionadas.
        </summary>
      <param name="schemas">
              Colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.
            </param>
      <param name="typeIdentifiers">
              <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> que mantiene un grupo de nombres para entidades de código o asignaciones de tipo que son generadas por la infraestructura de serialización XML de .NET Framework.
            </param>
      <param name="options">
              Uno de los valores de <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> que especifica distintas opciones para generar un tipo de .NET Framework.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>
          Genera la información de asignación de tipo interna para el tipo de una parte componente codificada con SOAP definido en un documento WSDL donde se especifica un tipo base. 
        </summary>
      <returns>
          El tipo de .NET Framework que asigna información para un tipo derivado que corresponde a una parte de mensaje WSDL.
        </returns>
      <param name="name">
              <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de un tipo de elemento para el que se genera un tipo de .NET Framework.
            </param>
      <param name="baseType">
              Un tipo base para el tipo de .NET Framework que se va a generar.
            </param>
      <param name="baseTypeCanBeIndirect">
              
                true para indicar que el tipo que se va a generar puede heredar indirectamente del tipo base; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember)">
      <summary>
          Genera información interna de asignación de tipo para una única parte componente codificada con SOAP definida en un documento WSDL. 
        </summary>
      <returns>
          La asignación de tipo .NET Framework para una parte del elemento única de una definición de mensaje WSDL.
        </returns>
      <param name="name">
              Nombre del mensaje.
            </param>
      <param name="ns">
              Espacio de nombres del mensaje.
            </param>
      <param name="member">
              Un objeto <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> que proporciona información sobre la parte.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary>
          Genera información interna de asignación de tipos de las partes componentes de un mensaje codificado con SOAP que está definido en un documento WSDL. 
        </summary>
      <returns>
          Asignaciones de tipos de .NET Framework para las partes componentes de una definición de mensaje WSDL.
        </returns>
      <param name="name">
              Nombre del mensaje.
            </param>
      <param name="ns">
              Espacio de nombres del mensaje.
            </param>
      <param name="members">
              Una matriz de tipo <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> que proporciona información sobre la parte de los elementos.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean)">
      <summary>
          Genera información interna de asignación de tipos de las partes componentes de un mensaje codificado con SOAP que está definido en un documento WSDL. 
        </summary>
      <returns>
          Asignaciones de tipos de .NET Framework para las partes componentes de una definición de mensaje WSDL.
        </returns>
      <param name="name">
              Nombre del mensaje.
            </param>
      <param name="ns">
              Espacio de nombres del mensaje.
            </param>
      <param name="members">
              Una matriz de tipo <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> que proporciona información sobre la parte de los elementos.
            </param>
      <param name="hasWrapperElement">
              
                true para tener los elementos definidos por las partes encerradas en un elemento contenedor adicional de un mensaje SOAP; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean,System.Type,System.Boolean)">
      <summary>
          Genera información interna de asignación de tipos de las partes componentes de un mensaje codificado con SOAP que está definido en un documento WSDL.
        </summary>
      <returns>
          Asignaciones de tipos de .NET Framework para las partes componentes de una definición de mensaje WSDL.
        </returns>
      <param name="name">
              Nombre del mensaje.
            </param>
      <param name="ns">
              Espacio de nombres del mensaje.
            </param>
      <param name="members">
              Una matriz de tipo <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> que proporciona información sobre la parte de los elementos.
            </param>
      <param name="hasWrapperElement">
              
                true para tener los elementos definidos por las partes encerradas en un elemento contenedor adicional de un mensaje SOAP; de lo contrario, false.
            </param>
      <param name="baseType">
              Un tipo base para todos los tipos de .NET Framework que se generan para corresponder a las partes del mensaje.
            </param>
      <param name="baseTypeCanBeIndirect">
              
                true para indicar que los tipos que corresponden a las partes del mensaje pueden heredar indirectamente del tipo base; de lo contrario, false.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary>
          Representa ciertos atributos de un elemento de la &lt;part&gt; XSD en un documento WSDL para generar las clases a partir del documento. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor"></member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary>
          Obtiene o establece un valor que corresponde al atributo de nombre del elemento de la parte WSDL. 
        </summary>
      <returns>
          Nombre del elemento.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary>
          Obtiene o establece un valor que corresponde con el atributo de tipo del elemento de la parte WSDL.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlQualifiedName" /> que corresponde al tipo XML.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary>
          Controla el esquema generado por <see cref="T:System.Xml.Serialization.XmlSerializer" /> cuando se serializa una instancia de clase como XML SOAP codificado.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> y especifica el nombre del tipo XML.
        </summary>
      <param name="typeName">
              Nombre del tipo XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera cuando serializa la instancia de clase (y reconoce al deserializar la instancia de clase). 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> y especifica el nombre y el espacio de nombres XML del tipo.
        </summary>
      <param name="typeName">
              Nombre del tipo XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera cuando serializa la instancia de clase (y reconoce al deserializar la instancia de clase). 
            </param>
      <param name="ns">
              Espacio de nombres XML del tipo. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary>
          Obtiene o establece un valor que indica si se debe incluir el tipo en los documentos de esquema XML codificados en SOAP.
        </summary>
      <returns>
          
            true para incluir el tipo en los documentos de esquema XML codificados en SOAP; en caso contrario, false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary>
          Obtiene o establece el espacio de nombres del tipo XML.
        </summary>
      <returns>
          Espacio de nombres del tipo XML. El valor predeterminado es una cadena vacía ("").
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary>
          Obtiene o establece el nombre del tipo XML.
        </summary>
      <returns>
          Nombre del tipo XML. El valor predeterminado es el nombre de la clase.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary>
          Proporciona datos del objeto conocido, pero sin referencia, detectado en una secuencia XML SOAP codificada durante la deserialización.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> que contiene información sobre el objeto sin referencia.
        </returns>
      <param name="o">
              Objeto sin referencia. 
            </param>
      <param name="id">
              Cadena exclusiva que se utiliza para identificar el objeto sin referencia. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary>
          Obtiene el id. del objeto.
        </summary>
      <returns>
          Id. del objeto.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary>
          Obtiene el objeto deserializado sin referencia.
        </summary>
      <returns>
          Objeto deserializado sin referencia.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> de un <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="e">
              <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> que contiene los datos de evento. 
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <summary>
          Especifica que el miembro (un campo que devuelve una matriz de objetos <see cref="T:System.Xml.XmlAttribute" />) puede contener cualquier atributo XML.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <summary>
          Construye una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />.
        </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary>
          Especifica que el miembro (un campo que devuelve una matriz de objetos <see cref="T:System.Xml.XmlElement" /> o <see cref="T:System.Xml.XmlNode" />) contiene objetos que representan los elementos XLM que no tienen un miembro correspondiente en el objeto que se está serializando o deserializando.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> y especifica el nombre del elemento XML generado en el documento XML.
        </summary>
      <param name="name">
              Nombre del elemento XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> y especifica el nombre del elemento XML generado en el documento XML y su espacio de nombres XML.
        </summary>
      <param name="name">
              Nombre del elemento XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />. 
            </param>
      <param name="ns">
              Espacio de nombres XML del elemento XML. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary>
          Obtiene o establece el nombre del elemento XML.
        </summary>
      <returns>
          Nombre del elemento XML.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El nombre de elemento de un miembro de la matriz no coincide con el nombre de elemento especificado por la propiedad <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />. 
            </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary>
          Obtiene o establece el espacio de nombres XML generado en el documento XML.
        </summary>
      <returns>
          Espacio de nombres XML.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <summary>
          Obtiene o establece el orden explícito en que se serializan o deserializan los elementos.
        </summary>
      <returns>
          Orden de generación del código.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary>
          Representa una colección de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor"></member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
          Agrega un objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a la colección.
        </summary>
      <returns>
          Índice del objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se acaba de agregar.
        </returns>
      <param name="attribute">
              <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se va a agregar. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
          Obtiene un valor que indica si el <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado existe en la colección.
        </summary>
      <returns>
          
            Es true si el objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> existe en la colección; en caso contrario, es false.
        </returns>
      <param name="attribute">
              <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que interesa al usuario. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary>
          Copia los objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> de la colección en una matriz unidimensional compatible, empezando por el índice especificado de la matriz de destino. 
        </summary>
      <param name="array">
              Matriz unidimensional de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que constituye el destino de los elementos copiados de la colección. La matriz debe tener una indización de base cero.
            </param>
      <param name="index">
              Índice de base cero de la matriz en la que empieza la copia.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
          Obtiene el índice del <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado.
        </summary>
      <returns>
          Índice del objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado.
        </returns>
      <param name="attribute">
              <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> cuyo índice se desea obtener. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
          Inserta un objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> en el índice especificado de la colección.
        </summary>
      <param name="index">
              Índice donde se insertará el objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />. 
            </param>
      <param name="attribute">
              <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se va a insertar. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary>
          Obtiene o establece el objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> en el índice especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> en el índice especificado.
        </returns>
      <param name="index">
              Índice de <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
          Quita el objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado de la colección.
        </summary>
      <param name="attribute">
              <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se va a quitar. 
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary>
          Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro de clase determinado como matriz de elementos XML.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> y especifica el nombre del elemento XML generado en la instancia del documento XML.
        </summary>
      <param name="elementName">
              Nombre del elemento XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary>
          Obtiene o establece el nombre de elemento XML asignado a la matriz serializada.
        </summary>
      <returns>
          Nombre del elemento XML de la matriz serializada. El valor predeterminado es el nombre del miembro al que se ha asignado <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary>
          Obtiene o establece un valor que indica si el nombre del elemento XML generado por el objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> está cualificado o no.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. El valor predeterminado es XmlSchemaForm.None.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary>
          Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro como una etiqueta XML vacía con el atributo xsi:nil establecido en true.
        </summary>
      <returns>
          
            true si el objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo xsi:nil; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary>
          Obtiene o establece el espacio de nombres del elemento XML.
        </summary>
      <returns>
          Espacio de nombres del elemento XML.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary>
          Obtiene o establece el orden explícito en el que los elementos son serializados o deserializados.
        </summary>
      <returns>
          Orden de la generación de código.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary>
          Especifica los tipos derivados que <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede colocar en una matriz serializada.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary>
          Inicializa una instancia nueva de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> y especifica el nombre del elemento XML generado en el documento XML.
        </summary>
      <param name="elementName">
              Nombre del elemento XML. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary>
          Inicializa una instancia nueva de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> y especifica el nombre del elemento XML generado en el documento XML, así como el <see cref="T:System.Type" /> que puede insertarse en el documento XML generado.
        </summary>
      <param name="elementName">
              Nombre del elemento XML. 
            </param>
      <param name="type">
              <see cref="T:System.Type" /> del objeto que se va a serializar. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary>
          Inicializa una instancia nueva de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> y especifica el <see cref="T:System.Type" /> que puede insertarse en la matriz serializada.
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> del objeto que se va a serializar. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary>
          Obtiene o establece el tipo de datos XML del elemento XML generado.
        </summary>
      <returns>
          Tipo de datos de definición de esquemas XML (XSD), tal como se define en el documento "XML Schema Part 2: Datatypes" del Consorcio WWC (www.w3.org).
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary>
          Obtiene o establece el nombre del elemento XML generado.
        </summary>
      <returns>
          Nombre del elemento XML generado. El valor predeterminado es el identificador de miembros.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary>
          Obtiene o establece un valor que indica si el nombre del elemento XML generado está cualificado.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. El valor predeterminado es XmlSchemaForm.None.
        </returns>
      <exception cref="T:System.Exception">
              La propiedad <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> se establece en XmlSchemaForm.Unqualified y se especifica un valor para la propiedad <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />. 
            </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary>
          Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro como una etiqueta XML vacía con el atributo xsi:nil establecido en true.
        </summary>
      <returns>
          
            Es true si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo xsi:nil; en caso contrario, es false y no se genera ninguna instancia. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary>
          Obtiene o establece el espacio de nombres del elemento XML generado.
        </summary>
      <returns>
          Espacio de nombres del elemento XML generado.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary>
          Obtiene o establece el nivel en una jerarquía de elementos XML a los que afecta <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.
        </summary>
      <returns>
          Índice de base cero de un conjunto de índices en una matriz de matrices.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary>
          Obtiene o establece el tipo permitido en una matriz.
        </summary>
      <returns>
          <see cref="T:System.Type" /> permitido en la matriz.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary>
          Representa una colección de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor"></member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
          Agrega un objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a la colección.
        </summary>
      <returns>
          Índice del elemento que se ha agregado.
        </returns>
      <param name="attribute">
              Objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se va a agregar a la colección. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
          Determina si la colección contiene el elemento <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado. 
        </summary>
      <returns>
          
            true si la colección contiene el objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado; en caso contrario, false.
        </returns>
      <param name="attribute">
              <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se va a comprobar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary>
          Copia una matriz <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a la colección, comenzando por el índice de destino especificado. 
        </summary>
      <param name="array">
              Matriz de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se copiará en la colección.
            </param>
      <param name="index">
              Índice por el que empiezan los atributos copiados.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
          Devuelve el índice de base cero de la primera aparición del <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado en la colección o 1 si el atributo no se encuentra en la colección. 
        </summary>
      <returns>
          El primer índice de <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> en la colección o -1 si el atributo no se encuentra en la colección.
        </returns>
      <param name="attribute">
              <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se va a buscar en la colección.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
          Inserta un objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> en el índice especificado de la colección. 
        </summary>
      <param name="index">
              Índice en el que se inserta el atributo.
            </param>
      <param name="attribute">
              <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se va a insertar.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary>
          Obtiene o establece el elemento en el índice especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se encuentra en el índice especificado.
        </returns>
      <param name="index">
              Índice de base cero del miembro de la colección que se va a obtener o establecer. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
          Quita <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> de la colección, en caso de que esté presente. 
        </summary>
      <param name="attribute">
              <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se va a quitar.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary>
          Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar el miembro de la clase como un atributo XML.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> y especifica el nombre del atributo XML generado.
        </summary>
      <param name="attributeName">
              Nombre del atributo XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.
        </summary>
      <param name="attributeName">
              Nombre del atributo XML que se genera. 
            </param>
      <param name="type">
              <see cref="T:System.Type" /> utilizado para almacenar el atributo. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> utilizado para almacenar el atributo. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary>
          Obtiene o establece el nombre del atributo XML.
        </summary>
      <returns>
          Nombre del atributo XML. El valor predeterminado es el nombre del miembro.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary>
          Obtiene o establece el tipo de datos XSD del atributo XML generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </summary>
      <returns>
          Tipo de datos de XSD (documento de esquemas XML), tal como se define en el documento "XML Schema: DataTypes" del Consorcio WWC (www.w3.org).
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary>
          Obtiene o establece un valor que indica si está cualificado el nombre del atributo XML generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. El valor predeterminado es XmlForm.None.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary>
          Obtiene o establece el espacio de nombres XML del atributo XML.
        </summary>
      <returns>
          Espacio de nombres XML del atributo XML.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <summary>
          Obtiene o establece el tipo complejo del atributo XML.
        </summary>
      <returns>
          Tipo del atributo XML.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary>
          Proporciona los datos del evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary>
          Obtiene un objeto que representa el atributo XML desconocido.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlAttribute" /> que representa el atributo XML desconocido.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary>
          Obtiene una lista delimitada por comas de los nombres de atributos XML que se espera que haya en una instancia de documento XML.
        </summary>
      <returns>
          Una lista delimitada por comas de nombres de atributos XML. Cada nombre tiene el formato siguiente: <paramref name="namespace" />:<paramref name="name" />.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary>
          Obtiene el número de línea del atributo XML desconocido.
        </summary>
      <returns>
          Número de línea del atributo XML desconocido.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary>
          Obtiene la posición de la línea del atributo XML desconocido.
        </summary>
      <returns>
          Número de posición del atributo XML desconocido.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary>
          Obtiene el objeto que se está deserializando.
        </summary>
      <returns>
          Objeto que se está deserializando.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary>
          Representa el método que controla <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="e">
              <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" /> que contiene los datos de evento. 
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary>
          Permite reemplazar los atributos de las propiedades, campos y clases al utilizar <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serializar o deserializar un objeto.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor"></member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary>
          Agrega un objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> a la colección de objetos <see cref="T:System.Xml.Serialization.XmlAttributes" />. El parámetro <paramref name="type" /> especifica un objeto que se va a reemplazar. El parámetro <paramref name="member" /> especifica el nombre de un miembro que se va a reemplazar.
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> del objeto que se va a reemplazar. 
            </param>
      <param name="member">
              Nombre del miembro que se va a reemplazar. 
            </param>
      <param name="attributes">
              Objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa los atributos reemplazados. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary>
          Agrega un objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> a la colección de objetos <see cref="T:System.Xml.Serialization.XmlAttributes" />. El parámetro <paramref name="type" /> especifica un objeto que va a ser reemplazado por el objeto <see cref="T:System.Xml.Serialization.XmlAttributes" />.
        </summary>
      <param name="type">
              Tipo <see cref="T:System.Type" /> del objeto que se va a reemplazar. 
            </param>
      <param name="attributes">
              Objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa los atributos reemplazados. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary>
          Obtiene el objeto asociado al tipo de clase base especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa la colección de atributos de reemplazo.
        </returns>
      <param name="type">
              Tipo <see cref="T:System.Type" /> de la clase base que está asociado a la colección de atributos que se desea recuperar. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary>
          Obtiene el objeto asociado al tipo (de clase base) especificado. El parámetro de miembro especifica el miembro de clase base que se reemplaza.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa la colección de atributos de reemplazo.
        </returns>
      <param name="type">
              Tipo <see cref="T:System.Type" /> de la clase base que está asociado a la colección de atributos que se desea. 
            </param>
      <param name="member">
              Nombre del miembro reemplazado que especifica el objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> que se va a devolver. 
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary>
          Representa una colección de objetos de atributo que controlan el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa y deserializa un objeto.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributes" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributes" /> y personaliza el modo cómo <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa y deserializa un objeto. 
        </summary>
      <param name="provider">
              Clase que puede proporcionar implementaciones alternativas de atributos que controlan la serialización XML.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary>
          Obtiene o establece el <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> que se va a reemplazar.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> que se va a reemplazar.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary>
          Obtiene la colección de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se va a reemplazar.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> que representa la colección de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary>
          Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un campo público o una propiedad pública de lectura/escritura que devuelve una matriz.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un campo público o una propiedad pública de lectura/escritura que devuelve una matriz.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary>
          Obtiene o establece una colección de objetos que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa los elementos insertados en una matriz devuelta por un campo público o una propiedad pública de lectura/escritura.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> que contiene una colección de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary>
          Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un campo público o una propiedad pública de lectura/escritura como atributo XML.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> que controla la serialización de un campo público o una propiedad pública de lectura/escritura como atributo XML.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary>
          Obtiene o establece un objeto que permite distinguir entre varias opciones.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> que se puede aplicar a un miembro de clase serializado como un elemento xsi:choice.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary>
          Obtiene o establece el valor predeterminado de un elemento o atributo XML.
        </summary>
      <returns>
          <see cref="T:System.Object" /> que representa el valor predeterminado de un elemento o atributo XML.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary>
          Obtiene una colección de objetos que especifican el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un campo público o una propiedad pública de lectura/escritura como elemento XML.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> que contiene una colección de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary>
          Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary>
          Obtiene o establece un valor que especifica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa o no un campo público o una propiedad pública de lectura/escritura.
        </summary>
      <returns>
          
            true si <see cref="T:System.Xml.Serialization.XmlSerializer" /> no debe serializar ni el campo ni la propiedad; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary>
          Obtiene o establece un valor que especifica si se mantienen todas las declaraciones de espacio de nombres al reemplazar un objeto con un miembro que devuelve un objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.
        </summary>
      <returns>
          
            Es truesi deben mantenerse las declaraciones de espacio de nombres; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary>
          Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una clase como elemento raíz XML.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que reemplaza una clase con atributos de elemento raíz XML.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary>
          Obtiene o establece un objeto que instruye al objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> para que serialice un campo público o una propiedad pública de lectura/escritura como texto XML.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> que reemplaza la serialización predeterminada de un campo público o una propiedad pública.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary>
          Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una clase a la que se ha aplicado el objeto <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> que reemplaza un <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> aplicado a una declaración de clase.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary>
          Especifica que el miembro se puede detectar mejor utilizando una enumeración.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.
        </summary>
      <param name="name">
              El nombre de miembro que devuelve la enumeración se utiliza para detectar una elección. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary>
          Obtiene o establece el nombre del campo que devuelve la enumeración que se va a utilizar para detectar tipos.
        </summary>
      <returns>
          Nombre de un campo que devuelve una enumeración.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlCodeExporter">
      <summary>
          Genera tipos y declaraciones de atributos de información de asignación de tipos interna para las declaraciones del elemento de esquema XML.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> mediante el espacio de nombres especificado. 
        </summary>
      <param name="codeNamespace">
              El espacio de nombres de los tipos que se van a generar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> utilizando el espacio de nombres y la unidad de compilación de código especificados.
        </summary>
      <param name="codeNamespace">
              El espacio de nombres de los tipos que se van a generar.
            </param>
      <param name="codeCompileUnit">
              Un contenedor gráfico CodeDOM al que se agregan automáticamente las referencias de ensamblado utilizadas.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> usando el espacio de nombres de .NET Framework especificado, la unidad de compilación de código que contiene el gráfico de los objetos, una enumeración especificando las opciones de generación de código, y una colección de objetos de asignación.
        </summary>
      <param name="codeNamespace">
              El espacio de nombres de los tipos que se van a generar.
            </param>
      <param name="codeCompileUnit">
              Un contenedor gráfico de programa <see cref="T:System.CodeDom.CodeCompileUnit" /> al que se agregan automáticamente las referencias de ensamblado utilizadas.
            </param>
      <param name="codeProvider">
              Un valor de enumeración que proporciona las opciones para generar los tipos de .NET Framework a partir de los tipos de datos personalizados del esquema XML.
            </param>
      <param name="options">
              <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> que contiene instrucciones especiales para la creación de código.
            </param>
      <param name="mappings">
              Colección <see cref="T:System.Collections.Hashtable" /> que contiene objetos <see cref="T:System.Xml.Serialization.XmlMapping" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> utilizando el espacio de nombres especificado, la unidad de compilación de código y las opciones de generación de código.
        </summary>
      <param name="codeNamespace">
              El espacio de nombres de los tipos que se van a generar.
            </param>
      <param name="codeCompileUnit">
              Un contenedor gráfico de programa <see cref="T:System.CodeDom.CodeCompileUnit" /> al que se agregan automáticamente las referencias de ensamblado utilizadas.
            </param>
      <param name="options">
              Un valor de enumeración que proporciona las opciones para generar los tipos de .NET Framework a partir de los tipos de datos personalizados del esquema XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> usando el espacio de nombres de .NET Framework especificado, la unidad de compilación de código que contiene el gráfico de los objetos, un objeto representando las opciones de generación de código, y una colección de objetos de asignación.
        </summary>
      <param name="codeNamespace">
              El espacio de nombres de los tipos que se van a generar.
            </param>
      <param name="codeCompileUnit">
              Un contenedor gráfico de programa <see cref="T:System.CodeDom.CodeCompileUnit" /> al que se agregan automáticamente las referencias de ensamblado utilizadas.
            </param>
      <param name="options">
              Un valor de enumeración que proporciona las opciones para generar los tipos de .NET Framework a partir de los tipos de datos personalizados del esquema XML.
            </param>
      <param name="mappings">
              Colección <see cref="T:System.Collections.Hashtable" /> que contiene objetos <see cref="T:System.Xml.Serialization.XmlMapping" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String)">
      <summary>
          Agrega una declaración <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> a un parámetro de método o un valor devuelto que corresponde a un elemento &lt;part&gt; de una definición de mensaje SOAP de un documento de lenguaje de descripción de servicios Web (WSDL). 
        </summary>
      <param name="metadata">
              La colección de objetos <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> para el tipo generado al que el método agrega una declaración de atributo.
            </param>
      <param name="member">
              Una asignación de tipo .NET Framework interna para una parte del elemento única de una definición de mensaje WSDL.
            </param>
      <param name="ns">
              El espacio de nombres XML de la parte del mensaje SOAP para la que se ha generado la información de asignación de tipo en el parámetro de miembro.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String,System.Boolean)">
      <summary>
          Agrega una declaración <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> a un parámetro de método o un valor devuelto que corresponde a un elemento &lt;part&gt; de una definición de mensaje SOAP de un documento de lenguaje de descripción de servicios Web (WSDL). 
        </summary>
      <param name="metadata">
              La colección de objetos <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> para el tipo generado al que el método agrega una declaración de atributo.
            </param>
      <param name="member">
              Una asignación de tipo .NET Framework interna para una parte del elemento única de una definición de mensaje WSDL.
            </param>
      <param name="ns">
              El espacio de nombres XML de la parte del mensaje SOAP para la que se ha generado la información de asignación de tipo en el parámetro de miembro.
            </param>
      <param name="forceUseMemberName">
              Indicador que ayuda a determinar si agregar un argumento inicial que contenga el nombre del elemento XML para la declaración de atributos que se está generando.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlTypeMapping,System.String)">
      <summary>
          Agrega una declaración <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> a un valor devuelto de método que corresponde a un elemento &lt;part&gt; de una definición de mensaje no SOAP en un documento de lenguaje de descripción de servicios Web (WSDL). 
        </summary>
      <param name="metadata">
              La colección de objetos <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> para el tipo generado al que el método agrega una declaración de atributo.
            </param>
      <param name="mapping">
              Información de asignación interna de tipos de .NET Framework para un elemento del esquema XML.
            </param>
      <param name="ns">
              El espacio de nombres XML de la parte del mensaje SOAP para la que se ha generado la información de asignación de tipo en el parámetro de miembro.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>
          Genera un tipo de .NET Framework, más la declaración de atributos, para cada uno de las partes que pertenecen a una definición del mensaje SOAP en un documento WSDL. 
        </summary>
      <param name="xmlMembersMapping">
              Asignaciones internas de tipos .NET Framework para las partes componentes de una definición de mensaje WSDL.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>
          Genera un tipo de .NET Framework, más la declaración de atributos, para un elemento de esquema XML. 
        </summary>
      <param name="xmlTypeMapping">
              Información de asignación interna de tipos de .NET Framework para un elemento del esquema XML.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary>
          Contiene campos que se pueden utilizar para pasar los delegados de eventos a un método <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> seguro para la ejecución de subprocesos de <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute">
      <summary>
          Obtiene o establece un objeto que representa el método que controla el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" /> que señala al controlador de eventos.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement">
      <summary>
          Obtiene o establece un objeto que representa el método que controla el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlElementEventHandler" /> que señala al controlador de eventos.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode">
      <summary>
          Obtiene o establece un objeto que representa el método que controla el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" /> que señala al controlador de eventos.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject">
      <summary>
          Obtiene o establece un objeto que representa el método que controla el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" /> que señala al controlador de eventos.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary>
          Indica que un campo público o una propiedad pública representa un elemento XML, cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa o deserializa el objeto que lo contiene.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica el nombre del elemento XML.
        </summary>
      <param name="elementName">
              Nombre de elemento XML del miembro serializado. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary>
          Inicializa una nueva instancia de <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica el nombre del elemento XML así como un tipo derivado del miembro al que se ha aplicado <see cref="T:System.Xml.Serialization.XmlElementAttribute" />. Este tipo de miembro se utiliza cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa el objeto que lo contiene.
        </summary>
      <param name="elementName">
              Nombre de elemento XML del miembro serializado. 
            </param>
      <param name="type">
              <see cref="T:System.Type" /> de un objeto derivado del tipo de miembro. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica un tipo de miembro al que <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> es aplicado. Este tipo es utilizado por <see cref="T:System.Xml.Serialization.XmlSerializer" /> al serializar o deserializar el objeto que lo contiene.
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> de un objeto derivado del tipo de miembro. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary>
          Obtiene o establece el tipo de datos de la definición de esquemas XML (XSD) del elemento XM1 generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </summary>
      <returns>
          Tipo de datos de esquemas XML, tal como se define en el documento del Consorcio WWC (www.w3.org) titulado "XML Schema Part 2: Datatypes".
        </returns>
      <exception cref="T:System.Exception">
              El tipo de datos de esquemas XML especificado no se puede asignar al tipo de datos .NET. 
            </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary>
          Obtiene o establece el nombre del elemento XML generado.
        </summary>
      <returns>
          Nombre del elemento XML generado. El valor predeterminado es el identificador de miembros.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary>
          Obtiene o establece un valor que indica si el elemento está cualificado.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. El valor predeterminado es <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary>
          Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro establecido en null como una etiqueta vacía con el atributo xsi:nil establecido en true.
        </summary>
      <returns>
          
            true si el objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo xsi:nil; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary>
          Obtiene o establece el espacio de nombres asignado al elemento XML como resultado de la serialización de la clase.
        </summary>
      <returns>
          Espacio de nombres del elemento XML.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <summary>
          Obtiene o establece el orden explícito en el que los elementos son serializados o deserializados.
        </summary>
      <returns>
          Orden de la generación de código.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary>
          Obtiene o establece el tipo de objeto utilizado para representar el elemento XML.
        </summary>
      <returns>
          <see cref="T:System.Type" /> del miembro.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary>
          Representa una colección de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, que <see cref="T:System.Xml.Serialization.XmlSerializer" /> utiliza para reemplazar la forma predeterminada en que serializa una clase.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttributes" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary>
          Agrega un objeto <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> a la colección.
        </summary>
      <returns>
          Índice de base cero del elemento que acaba de agregarse.
        </returns>
      <param name="attribute">
              <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que se va a agregar. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary>
          Obtiene un valor que indica si la colección contiene el objeto  especificado.
        </summary>
      <returns>
          
            true si el objeto existe en la colección; en caso contrario, false.
        </returns>
      <param name="attribute">
              <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> en cuestión. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary>
          Copia <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> o una parte de la misma en una matriz unidimensional.
        </summary>
      <param name="array">
              Matriz <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> en la que se va a copiar. 
            </param>
      <param name="index">
              Índice de base cero de <paramref name="array" /> donde comienza la copia. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary>
          Obtiene el índice del <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> especificado.
        </summary>
      <returns>
          Índice de base cero de <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.
        </returns>
      <param name="attribute">
              <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que interesa al usuario.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary>
          Inserta <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> en la colección.
        </summary>
      <param name="index">
              El índice de base cero donde se agrega el miembro. 
            </param>
      <param name="attribute">
              <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que se va a insertar. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary>
          Obtiene o establece un objeto <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> de la colección.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que se encuentra en el índice especificado.
        </returns>
      <param name="index">
              Índice de base cero del miembro de la colección que se va a obtener o establecer. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary>
          Quita el objeto especificado de la colección.
        </summary>
      <param name="attribute">
              <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que se va a quitar de la colección. 
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary>
          Proporciona datos para el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary>
          Obtiene el objeto que representa al elemento XML desconocido.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Xml.XmlElement" />.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary>
          Obtiene una lista delimitada por comas de los nombres de elementos XML que se espera que haya en una instancia de documento XML.
        </summary>
      <returns>
          Una lista delimitada por comas de nombres de elementos XML. Cada nombre tiene el formato siguiente: <paramref name="namespace" />:<paramref name="name" />.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary>
          Obtiene el número de línea donde se ha detectado el elemento desconocido si el lector XML es un <see cref="T:System.Xml.XmlTextReader" />.
        </summary>
      <returns>
          Número de línea donde se ha detectado el elemento desconocido si el lector XML es un <see cref="T:System.Xml.XmlTextReader" />; en caso contrario, -1.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary>
          Obtiene la ubicación en la línea donde se produce el elemento desconocido si el lector XML es un <see cref="T:System.Xml.XmlTextReader" />.
        </summary>
      <returns>
          Número en la línea donde se produce el elemento desconocido si el lector XML es un <see cref="T:System.Xml.XmlTextReader" />; en caso contrario, -1.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary>
          Obtiene el objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> está deserializando.
        </summary>
      <returns>
          Objeto que está deserializando <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> de un <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="e">
              <see cref="T:System.Xml.Serialization.XmlElementEventArgs" /> que contiene los datos de eventos. 
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary>
          Controla el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> y especifica el valor XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera o reconoce al serializar o deserializar la enumeración, respectivamente.
        </summary>
      <param name="name">
              Nombre de reemplazo del miembro de enumeración. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary>
          Obtiene o establece el valor generado en una instancia de documento XML cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una enumeración o el valor reconocido cuando deserializa el miembro de enumeración.
        </summary>
      <returns>
          Valor generado en una instancia de documento XML cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa la enumeración o valor reconocido cuando deserializa el miembro de enumeración.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary>
          Instruye al método <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> de <see cref="T:System.Xml.Serialization.XmlSerializer" /> para que no serialice el valor de campo público o propiedad pública de lectura/escritura.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />.
        </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary>
          Permite que <see cref="T:System.Xml.Serialization.XmlSerializer" /> reconozca un tipo al serializar o deserializar un objeto.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> del objeto que se va a incluir. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary>
          Obtiene o establece el tipo de objeto que se va a incluir.
        </summary>
      <returns>
          <see cref="T:System.Type" /> del objeto que se va a incluir.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary>
          Admite asignaciones entre tipos de .NET Framework y tipos de datos de esquemas XML. 
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary>
          Obtiene el nombre del elemento asignado.
        </summary>
      <returns>
          El nombre del elemento asignado.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary>
          Obtiene el espacio de nombres del elemento asignado.
        </summary>
      <returns>
          El espacio de nombres del elemento asignado.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary>
          Establece la clave utilizada para buscar la asignación.
        </summary>
      <param name="key">
              <see cref="T:System.String" /> que contiene la clave para la búsqueda.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary>
          Obtiene el nombre del elemento XSD de la asignación.
        </summary>
      <returns>
          El nombre del elemento XSD.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary>
          Especifica si una asignación se lee, se escribe o ambas cosas.
        </summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary>
          Se generan métodos de lectura y escritura.
        </summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary>
          Se generan métodos de lectura.
        </summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary>
          Se generan métodos de escritura.
        </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary>
          Asigna una entidad de código de un método del servicio Web de .NET Framework a un elemento de un mensaje escrito en Lenguaje de descripción de servicios Web (WSDL).
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary>
          Obtiene o establece un valor que indica si el tipo de .NET Framework se asigna a un elemento o atributo XML de cualquier tipo. 
        </summary>
      <returns>
          
            true, si el tipo asigna se a cualquier elemento o atributo XML; de lo contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary>
          Obtiene un valor que indica si el campo que acompaña al tipo de .NET Framework tiene un valor especificado.
        </summary>
      <returns>
          
            true, si el campo acompañante tiene un valor especificado; de lo contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary>
          Obtiene el nombre incompleto de la declaración de elemento XML que se aplica a esta asignación. 
        </summary>
      <returns>
          Nombre incompleto de la declaración de elemento XML que se aplica a esta asignación.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMemberMapping.GenerateTypeName(System.CodeDom.Compiler.CodeDomProvider)">
      <summary>
          Devuelve el nombre del tipo asociado al <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> especificado.
        </summary>
      <returns>
          Nombre del tipo.
        </returns>
      <param name="codeProvider">
              <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que contiene el nombre del tipo.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary>
          Obtiene el nombre del miembro de método de servicio Web representado por esta asignación. 
        </summary>
      <returns>
          Nombre del miembro de método de servicio Web representado por esta asignación.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary>
          Obtiene el espacio de nombres XML que se aplica a esta asignación. 
        </summary>
      <returns>
          Espacio de nombres XML que se aplica a esta asignación.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary>
          Obtiene el nombre de tipo completo del tipo de .NET Framework para esta asignación. 
        </summary>
      <returns>
          Nombre de tipo completo del tipo de .NET Framework para esta asignación.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary>
          Obtiene el nombre de tipo del tipo de .NET Framework para esta asignación. 
        </summary>
      <returns>
          Nombre de tipo del tipo de .NET Framework para esta asignación.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary>
          Obtiene el espacio de nombres del tipo de .NET Framework para esta asignación.
        </summary>
      <returns>
          Espacio de nombres del tipo de .NET Framework para esta asignación.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary>
          Obtiene el nombre del elemento XML tal y como aparece en el documento de descripción del servicio.
        </summary>
      <returns>
          Nombre del elemento XML.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary>
          Proporciona asignaciones entre los métodos del servicio Web de .NET Framework y los mensajes del lenguaje de descripción de servicios Web (WSDL) que se definen para los servicios Web de SOAP. 
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary>
          Obtiene el número de entidades de código de .NET Framework que pertenecen a un método de servicio Web al que se asigna un mensaje SOAP. 
        </summary>
      <returns>
          Número de asignaciones de la colección.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary>
          Obtiene un elemento que contiene información de asignación de tipo interno para una entidad de código de .NET Framework que pertenece a un método de servicio Web que se va a asignar a un mensaje SOAP.
        </summary>
      <returns>
          La propiedad <see cref="T:System.Xml.Serialization.XmlMemberMapping" /> solicitada.
        </returns>
      <param name="index">
              El índice de la asignación que se va a devolver.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary>
          Obtiene el nombre del tipo de .NET Framework que se va a asignar al tipo de datos de un elemento de esquema XML que representa un mensaje SOAP.
        </summary>
      <returns>
          El nombre del tipo de .NET Framework.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary>
          Obtiene el espacio de nombres del tipo de .NET Framework que se va a asignar al tipo de datos de un elemento de esquema XML que representa un mensaje SOAP.
        </summary>
      <returns>
          El espacio de nombres de .NET Framework de la asignación.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <summary>
          Especifica que la propiedad, parámetro, valor devuelto o miembro de clase de destino contiene prefijos asociados a espacios de nombres que se utilizan en un documento XML.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />.
        </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary>
          Proporciona datos para el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary>
          Obtiene el número de línea del nodo XML desconocido.
        </summary>
      <returns>
          Número de línea del nodo XML desconocido.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary>
          Obtiene la posición de la línea del nodo XML desconocido.
        </summary>
      <returns>
          Número de posición del nodo XML desconocido.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary>
          Obtiene el nombre local XML del nodo XML que se está deserializando.
        </summary>
      <returns>
          Nombre local XML del nodo que se está deserializando.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary>
          Obtiene el nombre del nodo XML que se está deserializando.
        </summary>
      <returns>
          Nombre del nodo que se está deserializando.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary>
          Obtiene el URI de espacio de nombres asociado al nodo XML que se está deserializando.
        </summary>
      <returns>
          URI de espacio de nombres asociado al nodo XML que se está deserializando.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary>
          Obtiene el tipo de nodo XML que se está deserializando.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNodeType" /> que representa el nodo XML que se está deserializando.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary>
          Obtiene el objeto que se está deserializando.
        </summary>
      <returns>
          <see cref="T:System.Object" /> que se está deserializando.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary>
          Obtiene el texto del nodo XML que se está deserializando.
        </summary>
      <returns>
          Texto del nodo XML que se está deserializando.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> de un <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </summary>
      <param name="sender">
              Origen del evento. 
            </param>
      <param name="e">
              Clase <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" /> que contiene los datos del evento. 
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary>
          Genera asignaciones a declaraciones de elementos de esquema XML, incluidas las partes de mensaje literales de definición de esquemas XML (XSD) de un documento escrito en lenguaje de descripción de servicios Web (WSDL), para los tipos de .NET Framework o la información del método de servicio Web. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> mediante el espacio de nombres XML predeterminado especificado. 
        </summary>
      <param name="defaultNamespace">
              Espacio de nombres XML predeterminado que se utilizará para las asignaciones de tipo importadas.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> utilizando las omisiones de serialización XML especificadas. 
        </summary>
      <param name="attributeOverrides">
              Un objeto que omite cómo la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa los tipos asignados.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary>
          Se inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> utilizando las omisiones de serialización XML especificadas y el espacio de nombres XML predeterminado. 
        </summary>
      <param name="attributeOverrides">
              Un objeto que omite cómo la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa los tipos asignados.
            </param>
      <param name="defaultNamespace">
              Espacio de nombres XML predeterminado que se utilizará para las asignaciones de tipo importadas.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary>
          Genera las asignaciones de tipo internas para obtener información de un método de servicio Web. 
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> con asignaciones a las partes de elemento de una definición de mensaje WSDL.
        </returns>
      <param name="elementName">
              Nombre de un elemento XML producido desde el método de servicio Web.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML producido desde el método de servicio Web.
            </param>
      <param name="members">
              Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.
            </param>
      <param name="hasWrapperElement">
              
                true si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>
          Devuelve asignaciones de tipo internas que usan información de un método de servicio Web y permite especificar un nombre de elemento XML, un espacio de nombres XML y otras opciones.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones.
        </returns>
      <param name="elementName">
              Nombre de un elemento XML producido desde el método de servicio Web.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML producido desde el método de servicio Web.
            </param>
      <param name="members">
              Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.
            </param>
      <param name="hasWrapperElement">
              
                true si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, false.
            </param>
      <param name="rpc">
              
                true si el método es una llamada a procedimiento remoto; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>
          Devuelve asignaciones de tipo internas que usan información de un método de servicio Web y permite especificar un nombre de elemento XML, un espacio de nombres XML y otras opciones.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones.
        </returns>
      <param name="elementName">
              Nombre de un elemento XML producido desde el método de servicio Web.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML producido desde el método de servicio Web.
            </param>
      <param name="members">
              Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.
            </param>
      <param name="hasWrapperElement">
              
                true si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, false.
            </param>
      <param name="rpc">
              
                true si el método es una llamada a procedimiento remoto; de lo contrario, false.
            </param>
      <param name="openModel">
              
                true para especificar que el tipo de esquema generado se marcará con el elemento  &lt;xs:anyAttribute&gt;; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>
          Genera las asignaciones de tipo internas para obtener información de un método de servicio Web.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones.
        </returns>
      <param name="elementName">
              Nombre de un elemento XML producido desde el método de servicio Web.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML producido desde el método de servicio Web.
            </param>
      <param name="members">
              Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.
            </param>
      <param name="hasWrapperElement">
              
                true si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, false.
            </param>
      <param name="rpc">
              
                true si el método es una llamada a procedimiento remoto; de lo contrario, false.
            </param>
      <param name="openModel">
              
                true para especificar que el tipo de esquema generado se marcará con el elemento  &lt;xs:anyAttribute&gt;; de lo contrario, false.
            </param>
      <param name="access">
              Uno de los valores de <see cref="T:System.Xml.Serialization.XmlMappingAccess" />. El valor predeterminado es None.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>
          Genera una asignación a un elemento del esquema XML para un tipo de .NET Framework especificado. 
        </summary>
      <returns>
          Asignación .NET Framework interna de un tipo a un elemento de esquema XML.
        </returns>
      <param name="type">
              El tipo de .NET Framework para el que se genera una asignación de tipos.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>
          Genera una asignación a un elemento de esquema XML para un tipo de .NET Framework, utilizando el tipo y el espacio de nombres especificados. 
        </summary>
      <returns>
          Asignación .NET Framework interna de un tipo a un elemento de esquema XML.
        </returns>
      <param name="type">
              El tipo de .NET Framework para el que se genera una asignación de tipos.
            </param>
      <param name="defaultNamespace">
              El espacio de nombres XML predeterminado que se va a utilizar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>
          Genera una asignación a un elemento de esquema XML para un tipo de .NET Framework, utilizando el tipo y el atributo especificados. 
        </summary>
      <returns>
          Un <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que representa una asignación de un tipo de .NET Framework a un elemento de esquema XML.
        </returns>
      <param name="type">
              El tipo de .NET Framework para el que se genera una asignación de tipos.
            </param>
      <param name="root">
              Un atributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que se aplica al tipo.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>
          Genera una asignación a un elemento de esquema XML para un tipo de .NET Framework, utilizando el tipo, el atributo y el espacio de nombres especificados. 
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que contiene la asignación .NET Framework interna de un tipo a un elemento de esquema XML.
        </returns>
      <param name="type">
              El tipo de .NET Framework para el que se genera una asignación de tipos.
            </param>
      <param name="root">
              Un atributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que se aplica al tipo.
            </param>
      <param name="defaultNamespace">
              El espacio de nombres XML predeterminado que se va a utilizar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary>
          Incluye asignaciones para un tipo para su uso posterior cuando se invoquen los métodos de importación. 
        </summary>
      <param name="type">
              El tipo de .NET Framework para el que se guarda la información de asignación de tipos.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>
          Incluye asignaciones para los tipos derivados para su uso posterior cuando se invoquen los métodos de importación. 
        </summary>
      <param name="provider">
              Una instancia de la clase <see cref="T:System.Reflection.ICustomAttributeProvider" /> que contiene los atributos personalizados derivados del atributo <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary>
          Proporciona asignaciones entre las entidades de código de los métodos del servicio Web de .NET Framework y el contenido de los mensajes del lenguaje de descripción de servicios Web (WSDL) que se definen para los servicios Web de SOAP. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionMember" />. 
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary>
          Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> representa un valor devuelto de método de servicio Web, como opuesto a un parámetro de salida. 
        </summary>
      <returns>
          
            true, si el miembro representa un valor devuelto del servicio Web; de lo contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary>
          Obtiene o establece el nombre del miembro de método de servicios Web para esta asignación. 
        </summary>
      <returns>
          Nombre del método de servicios Web.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary>
          Obtiene o establece el tipo de la entidad de código del miembro de método de servicios Web que se representa mediante esta asignación. 
        </summary>
      <returns>
          <see cref="T:System.Type" /> de la entidad de código del miembro de método de servicios Web que se representa mediante esta asignación.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary>
          Obtiene o establece un valor que indica que el valor del atributo isNullable de la definición del elemento XML correspondiente es false.
        </summary>
      <returns>
          
            True para reemplazar la propiedad <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />; de lo contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary>
          Obtiene o establece <see cref="T:System.Xml.Serialization.SoapAttributes" /> con la colección de atributos relacionados con SOAP que se han aplicado a la entidad de código de miembro. 
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.SoapAttributes" /> que contiene los objetos que representan los atributos SOAP aplicados al miembro.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary>
          Obtiene o establece <see cref="T:System.Xml.Serialization.XmlAttributes" /> con la colección de atributos relacionados con <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se han aplicado a la entidad de código de miembro. 
        </summary>
      <returns>
          <see cref="T:System.XML.Serialization.XmlAttributes" /> que representa atributos XML que se han aplicado al código de miembro.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary>
          Controla la serialización XML del destino de atributo como elemento raíz XML.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlRootAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> y especifica el nombre del elemento raíz XML.
        </summary>
      <param name="elementName">
              Nombre del elemento raíz XML. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary>
          Obtiene o establece el tipo de datos XSD del elemento raíz XML.
        </summary>
      <returns>
          Tipo de datos de XSD (documento de esquemas XML), tal como se define en el documento "XML Schema: DataTypes" del Consorcio WWC (www.w3.org).
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary>
          Obtiene o establece el nombre del elemento XML que generan y reconocen los métodos <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> y <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />, respectivamente, de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </summary>
      <returns>
          Nombre del elemento raíz XML generado y reconocido en una instancia de documento XML. El valor predeterminado es el nombre de la clase serializada.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary>
          Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro establecido en null en el atributo xsi:nil establecido,a su vez, en true.
        </summary>
      <returns>
          
            true si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo xsi:nil; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary>
          Obtiene o establece el espacio de nombres del elemento raíz XML.
        </summary>
      <returns>
          Espacio de nombres del elemento XML.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary>
          Habilita la iteración sobre una colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />. 
        </summary>
      <param name="list">
              El objeto <see cref="T:System.Xml.Serialization.XmlSchemas" /> que desea recorrer en iteración.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary>
          Obtiene el elemento actual de la colección.
        </summary>
      <returns>
          El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> actual de la colección.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary>
          Libera todos los recursos utilizados por la clase <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary>
          Desplaza el enumerador al siguiente elemento de la colección.
        </summary>
      <returns>
          
            true si el movimiento es correcto; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current"></member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset"></member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary>
          Rellena los objetos <see cref="T:System.Xml.Schema.XmlSchema" /> con declaraciones del elemento de esquema XML que se encuentran en los objetos de asignación de tipo. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaExporter" />. 
        </summary>
      <param name="schemas">
              Colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> a los que se agregan las declaraciones del elemento obtenidas de las asignaciones de tipo.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary>
          Exporta un elemento &lt;any&gt; al objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que es identificado por el espacio de nombres especificado.
        </summary>
      <returns>
          Un nombre arbitrario asignado a la declaración del elemento &lt;any&gt;.
        </returns>
      <param name="ns">
              Espacio de nombres del documento de esquema XML al que hay que agregar un elemento &lt;any&gt;.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary>
          Agrega una declaración de elemento para un objeto o tipo a un mensaje SOAP o a un objeto <see cref="T:System.Xml.Schema.XmlSchema" />.
        </summary>
      <returns>
          La cadena "any" con un entero anexado. 
        </returns>
      <param name="members">
              <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones que se van a exportar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>
          Agrega una declaración del elemento al <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable para cada una de las partes que componen una definición literal del mensaje SOAP. 
        </summary>
      <param name="xmlMembersMapping">
              Asignaciones internas de tipo de .NET Framework para las partes que componen una definición de mensaje de Lenguaje de descripción de servicios Web (WSDL).
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary>
          Agrega una declaración del elemento al <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable para cada una de las partes que componen una definición literal del mensaje SOAP y especifica si están incluidos los elementos envolventes.
        </summary>
      <param name="xmlMembersMapping">
              Asignación interna entre un tipo de .NET Framework y un elemento de esquema XML.
            </param>
      <param name="exportEnclosingType">
              
                true si los elementos de esquema que incluyen el esquema se van a incluir; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>
          Agrega una declaración de elemento al objeto <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable para una parte de elemento única de una definición literal del mensaje SOAP.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre XML completo de la declaración de elemento exportada.
        </returns>
      <param name="xmlMembersMapping">
              Asignaciones internas de tipo de .NET Framework para las partes que componen una definición de mensaje de Lenguaje de descripción de servicios Web (WSDL).
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>
          Agrega una declaración de elemento para un tipo de .NET Framework al objeto <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable. 
        </summary>
      <param name="xmlTypeMapping">
              Asignación interna entre un tipo de .NET Framework y un elemento de esquema XML.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary>
          Genera las asignaciones internas a los tipos de .NET Framework para las declaraciones del elemento de esquema XML, incluidas las partes literales del mensaje XSD en un documento WSDL. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, tomando una colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que representan los esquemas XML utilizados por los mensajes literales de SOAP definidos en un documento WSDL. 
        </summary>
      <param name="schemas">
              Colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.ImportContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />. 
        </summary>
      <param name="schemas">
              Colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.
            </param>
      <param name="options">
              Una combinación bit a bit de los valores <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> que especifica las opciones que deben utilizarse al generar los tipos de .NET Framework para un servicio Web.
            </param>
      <param name="codeProvider">
              <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> utilizado para generar el código de serialización.
            </param>
      <param name="context">
              Instancia <see cref="T:System.Xml.Serialization.ImportContext" /> que especifica el contexto de importación.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.Xml.Serialization.ImportContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> para una colección de esquemas XML, utilizando las opciones de generación de código y el contexto de importación especificados.
        </summary>
      <param name="schemas">
              Colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.
            </param>
      <param name="options">
              Enumeración <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> que especifica las opciones de generación de código.
            </param>
      <param name="context">
              Instancia <see cref="T:System.Xml.Serialization.ImportContext" /> que especifica el contexto de importación.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, tomando una colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que representan los esquemas XML utilizados por los mensajes literales de SOAP, además de las clases generadas para los enlaces definidos en un documento de lenguaje de descripción de servicios Web (WSDL). 
        </summary>
      <param name="schemas">
              Objeto <see cref="T:System.Xml.Serialization.XmlSchemas" />.
            </param>
      <param name="typeIdentifiers">
              Un objeto <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> que especifica una colección de clases que se generan para los enlaces definidos en un documento WSDL.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeGenerationOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, tomando una colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que representan los esquemas XML utilizados por los mensajes literales de SOAP, además de las clases generadas para los enlaces definidos en un documento WSDL y un valor de enumeración <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />.
        </summary>
      <param name="schemas">
              Colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.
            </param>
      <param name="typeIdentifiers">
              Un objeto <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> que especifica una colección de clases que se generan para los enlaces definidos en un documento WSDL.
            </param>
      <param name="options">
              Una combinación bit a bit de los valores <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> que especifica las opciones que deben utilizarse al generar los tipos de .NET Framework para un servicio Web.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary>
          Genera información de asignación de tipo interna para una única parte componente literal (SOAP) definida en un documento WSDL.
        </summary>
      <returns>
          Una <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> representando la asignación de tipo .NET Framework para una parte componente única de una definición de mensaje WSDL.
        </returns>
      <param name="typeName">
              <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de un tipo de elemento para el que se genera un tipo de .NET Framework.
            </param>
      <param name="elementName">
              El nombre del elemento de parte en el documento WSDL.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary>
          Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML. 
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que representa la información de asignación de tipos de .NET Framework para un elemento de esquema XML.
        </returns>
      <param name="name">
              <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de un elemento definido en un documento de esquema XML.
            </param>
      <param name="baseType">
              Un tipo base para el tipo .NET Framework que se genera para corresponder a un tipo de elemento de XSD.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>
          Genera la información de asignación de tipos interna por un elemento definido en un documento de esquema XML o como parte de un documento WSDL.
        </summary>
      <returns>
          Información de asignación de tipos de .NET Framework para un elemento del esquema XML.
        </returns>
      <param name="name">
              <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de un elemento definido en un documento de esquema XML.
            </param>
      <param name="baseType">
              Un tipo base para el tipo .NET Framework que se genera para corresponder a un tipo de elemento de XSD.
            </param>
      <param name="baseTypeCanBeIndirect">
              
                true para indicar que el tipo que corresponde a un elemento XSD puede heredar indirectamente del tipo base; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary>
          Genera información interna de asignación de tipos de las partes componentes de un mensaje SOAP de uso literal definido en un documento WSDL.
        </summary>
      <returns>
          Un <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene información de asignación de tipo.
        </returns>
      <param name="name">
              Nombre del elemento para el que se va a generar una asignación.
            </param>
      <param name="ns">
              Espacio de nombres del elemento para el que se va a generar una asignación.
            </param>
      <param name="members">
              Matriz de instancias <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> que especifica los miembros del elemento para el que se va a generar una asignación.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary>
          Genera información de asignación de tipos interna para una parte componente única de un mensaje SOAP de uso literal definido en un documento WSDL. 
        </summary>
      <returns>
          La asignación de tipos de .NET Framework para una definición del mensaje WSDL que contiene una parte componente única.
        </returns>
      <param name="name">
              <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de la parte del mensaje.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary>
          Genera información interna de asignación de tipos de las partes componentes de un mensaje SOAP de uso literal definido en un documento WSDL. 
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que representa las asignaciones de tipos .NET Framework para las partes componentes de una definición de mensaje WSDL.
        </returns>
      <param name="names">
              Una matriz de tipo <see cref="T:System.Xml.XmlQualifiedName" /> que especifica los nombres de las partes del mensaje.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary>
          Genera información interna de asignación de tipos de las partes componentes de un mensaje SOAP de uso literal definido en un documento WSDL.
        </summary>
      <returns>
          Asignaciones de tipos de .NET Framework para las partes componentes de una definición de mensaje WSDL.
        </returns>
      <param name="names">
              Una matriz de tipo <see cref="T:System.Xml.XmlQualifiedName" /> que especifica los nombres de las partes del mensaje.
            </param>
      <param name="baseType">
              Un tipo base para todos los tipos de .NET Framework que se generan para corresponder a las partes del mensaje.
            </param>
      <param name="baseTypeCanBeIndirect">
              
                true para indicar que los tipos que corresponden a las partes del mensaje pueden heredar indirectamente del tipo base; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary>
          Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML. 
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que describe una asignación de tipo.
        </returns>
      <param name="typeName">
              Objeto <see cref="T:System.Xml.XmlQualifiedName" /> que especifica un elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary>
          Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML. 
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que describe una asignación de tipo.
        </returns>
      <param name="typeName">
              Objeto <see cref="T:System.Xml.XmlQualifiedName" /> que especifica un elemento XML.
            </param>
      <param name="baseType">
              Objeto <see cref="T:System.Type" /> que especifica un tipo base.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>
          Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML. 
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que describe una asignación de tipo.
        </returns>
      <param name="typeName">
              Objeto <see cref="T:System.Xml.XmlQualifiedName" /> que especifica un elemento XML.
            </param>
      <param name="baseType">
              Objeto <see cref="T:System.Type" /> que especifica un tipo base.
            </param>
      <param name="baseTypeCanBeIndirect">
              Valor <see cref="T:System.Boolean" /> que especifica si el tipo generado puede heredar indirectamente el <paramref name="baseType" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary>
          Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML. 
        </summary>
      <returns>
          Información de asignación de tipos de .NET Framework para un elemento del esquema XML.
        </returns>
      <param name="name">
              <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de un elemento definido en un documento de esquema XML.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <summary>
          Cuando se aplica a un tipo, almacena el nombre de un método estático del tipo que devuelve un esquema XML y un <see cref="T:System.Xml.XmlQualifiedName" /> (o <see cref="T:System.Xml.Schema.XmlSchemaType" /> para los tipos anónimos) que controla la serialización del tipo.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />, tomando el nombre del método estático que proporciona el esquema XML del tipo.
        </summary>
      <param name="methodName">
              El nombre del método estático que se debe implementar.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
      <summary>
          Obtiene o establece un valor que determina si la clase de destino es un carácter comodín o que el esquema para la clase contiene sólo un elemento xs:any.
        </summary>
      <returns>
          
            true, si la clase es un comodín, o si el esquema contiene sólo el elemento xs:any; de lo contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
      <summary>
          Obtiene el nombre del método estático que proporciona el esquema XML del tipo y el nombre de su tipo de datos de esquemas XML.
        </summary>
      <returns>
          Nombre del método que invoca la infraestructura de XML para devolver un esquema XML.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary>
          Representa la colección de esquemas XML.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemas" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary>
          Agrega un objeto al final de la colección.
        </summary>
      <returns>
          Índice en el que se agrega el objeto <see cref="T:System.Xml.Schema.XmlSchema" />.
        </returns>
      <param name="schema">
              Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar a la colección de objetos. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary>
          Agrega un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa una referencia de ensamblado a la colección.
        </summary>
      <returns>
          Índice en el que se agrega el objeto <see cref="T:System.Xml.Schema.XmlSchema" />.
        </returns>
      <param name="schema">
              <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar.
            </param>
      <param name="baseUri">
              <see cref="T:System.Uri" /> del objeto de esquema.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary>
          Agrega una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> al final de la colección.
        </summary>
      <param name="schemas">
              Objeto <see cref="T:System.Xml.Serialization.XmlSchemas" /> que se va a agregar al final de la colección. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary>
          Agrega un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa una referencia de ensamblado a la colección.
        </summary>
      <param name="schema">
              Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>
          Procesa el elemento y los nombres de atributo de los esquemas XML y, opcionalmente, valida los esquemas XML. 
        </summary>
      <param name="handler">
              Delegado <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que especifica el método de devolución de llamada que controla los errores y las advertencias durante la validación de esquemas XML, si el parámetro strict se establece en true.
            </param>
      <param name="fullCompile">
              
                true para validar los esquemas XML de la colección utilizando el método <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> de la clase <see cref="T:System.Xml.Serialization.XmlSchemas" />; en caso contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary>
          Devuelve un valor que indica si la colección contiene un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que pertenece al espacio de nombres especificado.
        </summary>
      <returns>
          
            true si se encuentra el elemento; en caso contrario, false.
        </returns>
      <param name="targetNamespace">
              Espacio de nombres del elemento que se va a comprobar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary>
          Determina si la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> contiene un esquema específico.
        </summary>
      <returns>
          
            true si la colección contiene el elemento especificado; en caso contrario, false.
        </returns>
      <param name="schema">
              Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a buscar. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>
          Copia la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> completa en un objeto <see cref="T:System.Array" /> unidimensional compatible, empezando en el índice especificado de la matriz de destino.
        </summary>
      <param name="array">
              Objeto <see cref="T:System.Array" /> unidimensional que constituye el destino de los esquemas copiados desde la clase <see cref="T:System.Xml.Serialization.XmlSchemas" />. <see cref="T:System.Array" /> debe tener una indización de base cero. 
            </param>
      <param name="index">
              Entero de 32 bits que representa el índice de la matriz donde comienza la copia.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary>
          Busca en uno de los esquemas XML un objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> del nombre y tipo especificados. 
        </summary>
      <returns>
          Una instancia de <see cref="T:System.Xml.Schema.XmlSchemaObject" />, por ejemplo, una clase <see cref="T:System.Xml.Schema.XmlSchemaElement" /> o <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.
        </returns>
      <param name="name">
              <see cref="T:System.Xml.XmlQualifiedName" /> que especifica un nombre completo con un espacio de nombres utilizado para buscar un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> en la colección.
            </param>
      <param name="type">
              <see cref="T:System.Type" /> del objeto que se va a buscar. Entre los posibles tipos se incluyen <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary>
          Obtiene una colección de esquemas que pertenecen al mismo espacio de nombres.
        </summary>
      <returns>
          Una implementación de la interfaz <see cref="T:System.Collections.IList" /> que contiene los esquemas.
        </returns>
      <param name="ns">
              Espacio de nombres de los esquemas que se van a recuperar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary>
          Busca el esquema especificado y devuelve el índice de base cero de la primera aparición en la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> completa.
        </summary>
      <returns>
          Índice de base cero de la primera aparición del valor en la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> completa, si se encuentra; en caso contrario, -1.
        </returns>
      <param name="schema">
              <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a buscar. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary>
          Inserta un esquema en la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> en el índice especificado.
        </summary>
      <param name="index">
              Índice basado en cero en el que debe insertarse <paramref name="schema" />. 
            </param>
      <param name="schema">
              Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a insertar. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary>
          Obtiene un valor que indica si se han compilado los esquemas.
        </summary>
      <returns>
          
            true, si los esquemas se han compilado; en caso contrario, false.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary>
          Método estático que determina si el esquema XML especificado contiene un atributo IsDataSet personalizado establecido en true, o su equivalente. 
        </summary>
      <returns>
          
            true si existe el esquema especificado; en caso contrario, false.
        </returns>
      <param name="schema">
              Esquema XML para el que se va a comprobar si existe un atributo IsDataSet con un valor true.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary>
          Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se encuentra en el índice especificado. 
        </summary>
      <returns>
          El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado.
        </returns>
      <param name="index">
              Índice del elemento que se va a recuperar.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary>
          Obtiene un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado que representa el esquema XML asociado al espacio de nombres especificado.
        </summary>
      <returns>
          El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado.
        </returns>
      <param name="ns">
              Espacio de nombres del objeto especificado.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary>
          Realiza procesos de personalización adicionales al borrar el contenido de la instancia de <see cref="T:System.Xml.Serialization.XmlSchemas" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary>
          Realiza procesos personalizados adicionales antes de insertar un nuevo elemento en la instancia de <see cref="T:System.Xml.Serialization.XmlSchemas" />.
        </summary>
      <param name="index">
              Índice de base cero en el que se va a insertar <paramref name="value" />. 
            </param>
      <param name="value">
              Nuevo valor del elemento situado en <paramref name="index" />. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary>
          Realiza procesos de personalización adicionales al quitar un elemento de la instancia de <see cref="T:System.Xml.Serialization.XmlSchemas" />.
        </summary>
      <param name="index">
              Índice de base cero en el que se puede encontrar <paramref name="value" />. 
            </param>
      <param name="value">
              Valor del elemento que se va a quitar de <paramref name="index" />. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
          Realiza procesos personalizados adicionales antes de establecer un valor en la instancia de <see cref="T:System.Xml.Serialization.XmlSchemas" />.
        </summary>
      <param name="index">
              Índice de base cero en el que se puede encontrar <paramref name="oldValue" />. 
            </param>
      <param name="oldValue">
              Valor que se va a reemplazar por <paramref name="newValue" />. 
            </param>
      <param name="newValue">
              Nuevo valor del elemento situado en <paramref name="index" />. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary>
          Quita la primera aparición de un esquema concreto de <see cref="T:System.Xml.Serialization.XmlSchemas" />.
        </summary>
      <param name="schema">
              Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a quitar. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator"></member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary>
          Delegado utilizado por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> para la deserialización de tipos de datos XML codificados en SOAP que se asignan a colecciones o enumeraciones. 
        </summary>
      <param name="object collection">
              Colección en la que se copia la matriz de elementos de la colección.
            </param>
      <param name="object collectionItems">
              Matriz de elementos que se va a copiar en <paramref name="object collection" />.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary>
          Delegado utilizado por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> para la deserialización de datos XML con codificación SOAP. 
        </summary>
      <param name="object fixup">
              Una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> que contiene el objeto que se va a fijar y la matriz de los identificadores de cadena para los elementos que hay que rellenar.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary>
          Clase abstracta que es la clase base para <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> y <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> y que contiene los métodos comunes a ambos tipos.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary>
          Inicializa una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />. 
        </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary>
          Delegado utilizado por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> para la deserialización de tipos con respecto a datos sin raíz XML codificados en SOAP. 
        </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary>
          Controla la deserialización por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary>
          Almacena un objeto que contiene un método de devolución de llamada al que se llamará, cuanto sea necesario, para rellenar colecciones o enumeraciones de .NET Framework que se asignen a matrices codificadas con SOAP o a elementos con referencias múltiples y codificación SOAP. 
        </summary>
      <param name="fixup">
              Un delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> y los datos de entrada del método de devolución de llamada.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary>
          Almacena un objeto que contiene una instancia del método de devolución de llamada al que se llamará, según sea necesario, para rellenar los objetos de una matriz codificada con SOAP. 
        </summary>
      <param name="fixup">
              Un delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> y los datos de entrada del método de devolución de llamada.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary>
          Almacena una implementación del delegado <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> y sus datos de entrada para una invocación posterior. 
        </summary>
      <param name="name">
              El nombre del tipo de .NET Framework que se deserializa.
            </param>
      <param name="ns">
              El espacio de nombres del tipo de .NET Framework que se deserializa.
            </param>
      <param name="type">
              <see cref="T:System.Type" /> que se va a deserializar.
            </param>
      <param name="read">
              Delegado <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary>
          Almacena un objeto que se deserializa de un elemento multiRef codificado con SOAP para un acceso posterior a través del método <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" />. 
        </summary>
      <param name="id">
              El valor del atributo id de un elemento multiRef que identifica el elemento.
            </param>
      <param name="o">
              El objeto que se deserializa del elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary>
          Comprueba si el deserializador ha avanzado.
        </summary>
      <param name="whileIterations">
              count actual de un bucle while.
            </param>
      <param name="readerCount">
              <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> actual. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> no ha avanzado. 
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary>
          Quita todas las apariciones de caracteres de espacio en blanco del principio y del final de la instancia especificada.
        </summary>
      <returns>
          La cadena recortada.
        </returns>
      <param name="value">
              La cadena que tendrá su espacio en blanco recortado.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary>
          Crea un <see cref="T:System.InvalidOperationException" /> que indica que un objeto que está deserializándose debería ser abstracto. 
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="name">
              Nombre del tipo abstracto.
            </param>
      <param name="ns">
              Espacio de nombres de .NET Framework de tipo abstracto.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
          Rellena un objeto de su representación XML en la ubicación actual de <see cref="T:System.Xml.XmlReader" />, con una opción para leer el elemento interno.
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="xsdDerived">
              El nombre local del tipo de datos de esquema XML derivado.
            </param>
      <param name="nsDerived">
              El espacio de nombres del tipo de datos de esquema XML derivado.
            </param>
      <param name="xsdBase">
              El nombre local del tipo de datos de esquema XML de base.
            </param>
      <param name="nsBase">
              El espacio de nombres del tipo de datos de esquema XML de base.
            </param>
      <param name="clrDerived">
              El espacio de nombres del tipo de .NET Framework derivado.
            </param>
      <param name="clrBase">
              El nombre del tipo de .NET Framework de base.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary>
          Crea <see cref="T:System.InvalidOperationException" /> que indica que no se pueden crear instancias de un objeto que se está deserializando porque el constructor produce una excepción de seguridad.
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="typeName">
              Nombre del tipo.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary>
          Crea un <see cref="T:System.InvalidOperationException" /> que indica que no se pueden crear instancias de un objeto que se está deserializando porque no hay ningún constructor disponible.
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="typeName">
              Nombre del tipo.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary>
          Crea una excepción <see cref="T:System.InvalidCastException" /> que indica que ha habido un error de conversión de referencia explícita.
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidCastException" />.
        </returns>
      <param name="type">
              <see cref="T:System.Type" /> al que no se puede convertir un objeto. Este tipo se incorpora en el mensaje de excepción.
            </param>
      <param name="value">
              El objeto que no se puede convertir. Este objeto se incorpora en el mensaje de excepción.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary>
          Crea una excepción <see cref="T:System.InvalidCastException" /> que indica que ha habido un error de conversión de referencia explícita.
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidCastException" />.
        </returns>
      <param name="type">
              <see cref="T:System.Type" /> al que no se puede convertir un objeto. Este tipo se incorpora en el mensaje de excepción.
            </param>
      <param name="value">
              El objeto que no se puede convertir. Este objeto se incorpora en el mensaje de excepción.
            </param>
      <param name="id">
              Un identificador de cadena.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary>
          Crea un <see cref="T:System.InvalidOperationException" /> que indica que no se puede encontrar un tipo derivado que se asigna a un tipo de datos de esquemas XML.
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="name">
              El nombre local del tipo de datos de esquemas XML que se asigna al tipo derivado no disponible.
            </param>
      <param name="ns">
              El espacio de nombres del tipo de datos de esquemas XML que se asigna al tipo derivado no disponible.
            </param>
      <param name="clrType">
              El nombre completo del tipo base de .NET Framework para el que no se puede buscar un tipo derivado.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary>
          Crea un <see cref="T:System.InvalidOperationException" /> que indica que no se puede modificar un tipo de colección codificado con SOAP y no se pueden rellenar sus valores. 
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="name">
              El nombre completo del tipo de .NET Framework para el que hay una asignación.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary>
          Crea un <see cref="T:System.InvalidOperationException" /> que indica que un valor de enumeración no es válido. 
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="value">
              Valor de enumeración que no es válido.
            </param>
      <param name="enumType">
              Tipo de enumeración.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary>
          Crea un <see cref="T:System.InvalidOperationException" /> que indica que la posición actual de <see cref="T:System.Xml.XmlReader" /> representa un nodo de XML desconocido. 
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary>
          Crea un <see cref="T:System.InvalidOperationException" /> que indica que un tipo es desconocido. 
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="type">
              <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre del tipo desconocido.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary>
          Obtiene o establece un valor que determina si las cadenas XML se traducen en nombres de tipo .NET Framework válidos.
        </summary>
      <returns>
          
            true si las cadenas XML se descodifican en nombres de tipo .NET Framework válidos; de lo contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary>
          Obtiene el objeto de documento XML en el que se deserializa el documento XML. 
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlDocument" /> que representa los datos <see cref="T:System.Xml.XmlDocument" /> deserializados.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary>
          Garantiza que una matriz o una copia determinada, es lo bastante grande como para contener un índice especificado. 
        </summary>
      <returns>
          El <see cref="T:System.Array" /> existente, si ya es bastante grande; de lo contrario, una nueva, matriz más grande que contiene los elementos de la matriz original.
        </returns>
      <param name="a">
              <see cref="T:System.Array" /> que se va a revisar.
            </param>
      <param name="index">
              El índice necesario.
            </param>
      <param name="elementType">
              <see cref="T:System.Type" /> de los elementos de la matriz.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary>
          Rellena los valores de una matriz codificada con SOAP cuyo tipo de datos se asigna a un tipo de referencia de .NET Framework. 
        </summary>
      <param name="fixup">
              Un objeto que contiene la matriz cuyos valores se rellenan.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary>
          Obtiene la longitud de la matriz codificada con SOAP donde se coloca <see cref="T:System.Xml.XmlReader" /> actualmente. 
        </summary>
      <returns>
          Longitud de la matriz SOAP.
        </returns>
      <param name="name">
              El nombre local que la matriz debería tener.
            </param>
      <param name="ns">
              El espacio de nombres que la matriz debería tener.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary>
          Determina si el elemento XML donde se coloca <see cref="T:System.Xml.XmlReader" /> actualmente tiene un atributo null establecido en el valor true
        </summary>
      <returns>
          
            true si <see cref="T:System.Xml.XmlReader" /> se coloca actualmente sobre un atributo null con el valor true; de lo contrario, false.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary>
          Obtiene un objeto que se deserializa de un elemento multiRef codificado con SOAP y almacenado anteriormente por <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />.  
        </summary>
      <returns>
          Objeto que se va a deserializar de un elemento multiRef codificado con SOAP.
        </returns>
      <param name="id">
              El valor del atributo id de un elemento multiRef que identifica el elemento.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary>
          Obtiene el valor del atributo xsi:type para el elemento XML en la ubicación actual de <see cref="T:System.Xml.XmlReader" />. 
        </summary>
      <returns>
          Nombre completo XML que indica el tipo de datos de un elemento XML.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary>
          Inicializa los métodos de devolución de llamada que rellenan los objetos que se asignan a los datos XML codificados con SOAP. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary>
          Almacena nombres de elementos y atributos en un objeto <see cref="T:System.Xml.NameTable" />. 
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary>
          Obtiene o establece un valor que debería ser true para un valor devuelto de SOAP 1.1.
        </summary>
      <returns>
          
            true, si el valor es un valor devuelto. 
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary>
          Determina si un nombre de atributo XML indica un espacio de nombres XML. 
        </summary>
      <returns>
          
            true  si el nombre del atributo XML indica un espacio de nombres XML; de lo contrario, false.
        </returns>
      <param name="name">
              Nombre de un atributo XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary>
          Establece el valor del atributo XML si es del tipo arrayType del espacio de nombres del Lenguaje de descripción de servicios Web (WSDL). 
        </summary>
      <param name="attr">
              <see cref="T:System.Xml.XmlAttribute" /> que puede tener el tipo wsdl:array.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary>
          Hace que <see cref="T:System.Xml.XmlReader" /> lea el nombre completo del elemento donde se está situado actualmente. 
        </summary>
      <returns>
          El nombre completo del elemento XML actual.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary>
          Hace que <see cref="T:System.Xml.XmlReader" /> lea una etiqueta de cierre XML. 
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.XmlReader" /> que está utilizando <see cref="T:System.Xml.Serialization.XmlSerializationReader" />. 
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> que utiliza <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary>
          Obtiene el número actual del <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <returns>
          El número actual de un <see cref="T:System.Xml.XmlReader" />.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary>
          Indica a <see cref="T:System.Xml.XmlReader" /> que lea el elemento XML actual si éste tiene un atributo null con el valor true. 
        </summary>
      <returns>
          
            true si el elemento tiene un valor de atributo null="true" y se ha leído; de lo contrario, false.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary>
          Hace que <see cref="T:System.Xml.XmlReader" /> lea el nombre completo del elemento donde se está situado actualmente. 
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre completo del elemento XML actual; de lo contrario, null si hay presente un valor de atributo null="true".
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary>
          Indica a <see cref="T:System.Xml.XmlReader" /> que lea un elemento XML sencillo de sólo texto que podría ser null. 
        </summary>
      <returns>
          El valor de cadena; de lo contrario, null.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary>
          Lee el valor del atributo href (atributo ref para SOAP 1.2) que se utiliza para hacer referencia a un elemento XML codificado con SOAP. 
        </summary>
      <returns>
          
            Es true si se leyó el valor; en caso contrario, es false.
        </returns>
      <param name="fixupReference">
              Cadena de salida en la que se lee el valor de atributo href.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary>
          Deserializa un objeto de un elemento XML multiRef codificado con SOAP. 
        </summary>
      <returns>
          El valor del elemento al que se hace referencia en el documento.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary>
          Deserializa un objeto de un elemento XML multiRef codificado con SOAP. 
        </summary>
      <returns>
          El valor del elemento al que se hace referencia en el documento.
        </returns>
      <param name="name">
              Nombre local del tipo de datos del esquema XML del elemento.
            </param>
      <param name="ns">
              El espacio de nombres del tipo de datos del esquema XML del elemento.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary>
          Deserializa los objetos de los elementos multiRef codificados con SOAP en un mensaje SOAP. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary>
          Deserializa un objeto de un elemento XML en un mensaje SOAP que contiene una referencia a un elemento multiRef.
        </summary>
      <returns>
          El objeto deserializado.
        </returns>
      <param name="name">
              Nombre local del tipo de datos del esquema XML del elemento.
            </param>
      <param name="ns">
              El espacio de nombres del tipo de datos del esquema XML del elemento.
            </param>
      <param name="elementCanBeType">
              
                true si el nombre del elemento también es el nombre del tipo de datos del esquema XML; de lo contrario, false.
            </param>
      <param name="fixupReference">
              Cadena de salida en la que se lee el valor de atributo href.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary>
          Deserializa un objeto de un elemento XML en un mensaje SOAP que contiene una referencia a un elemento multiRef. 
        </summary>
      <returns>
          El objeto deserializado.
        </returns>
      <param name="name">
              Nombre local del tipo de datos del esquema XML del elemento.
            </param>
      <param name="ns">
              El espacio de nombres del tipo de datos del esquema XML del elemento.
            </param>
      <param name="fixupReference">
              Cadena de salida en la que se lee el valor de atributo href.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary>
          Deserializa un objeto de un elemento XML en un mensaje SOAP que contiene una referencia a un elemento multiRef. 
        </summary>
      <returns>
          El objeto deserializado.
        </returns>
      <param name="fixupReference">
              Cadena de salida en la que se lee el valor de atributo href.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary>
          Rellena un objeto de su representación XML en la ubicación actual de <see cref="T:System.Xml.XmlReader" />. 
        </summary>
      <returns>
          Un objeto que implementa la interfaz <see cref="T:System.Xml.Serialization.IXmlSerializable" /> con sus miembros rellenado desde la ubicación de <see cref="T:System.Xml.XmlReader" />.
        </returns>
      <param name="serializable">
              <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que corresponde a la posición actual de <see cref="T:System.Xml.XmlReader" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)"></member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary>
          Genera el resultado de una llamada al método <see cref="M:System.Xml.XmlReader.ReadString" /> anexado al valor de entrada. 
        </summary>
      <returns>
          El resultado de llamada al método <see cref="M:System.Xml.XmlReader.ReadString" /> anexado al valor de entrada.
        </returns>
      <param name="value">
              Una cadena para prefijar al resultado de una llamada al método <see cref="M:System.Xml.XmlReader.ReadString" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary>
          Devuelve el resultado de una llamada al método <see cref="M:System.Xml.XmlReader.ReadString" /> de la clase <see cref="T:System.Xml.XmlReader" />, recortado de espacios en blanco si es necesario y anexado al valor de entrada.
        </summary>
      <returns>
          El resultado de la operación de lectura anexado al valor de entrada.
        </returns>
      <param name="value">
              Una cadena a la que se anexará.
            </param>
      <param name="trim">
              
                true si se debería recortar el resultado de la operación de lectura; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary>
          Lee un elemento XML que permite los valores null (xsi:nil = 'true') y devuelve un valor <see cref="T:System.Nullable`1" /> genérico. 
        </summary>
      <returns>
          Un valor <see cref="T:System.Nullable`1" /> genérico que representa un valor XML null.
        </returns>
      <param name="type">
              <see cref="T:System.Xml.XmlQualifiedName" /> que representa el tipo de datos sencillos para la ubicación actual de <see cref="T:System.Xml.XmlReader" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary>
          Obtiene el valor del nodo XML en el que se coloca <see cref="T:System.Xml.XmlReader" /> actualmente. 
        </summary>
      <returns>
          El valor del nodo como un tipo de valor de .NET Framework, si el valor es un tipo de datos de esquemas XML sencillo.
        </returns>
      <param name="type">
              <see cref="T:System.Xml.XmlQualifiedName" /> que representa el tipo de datos sencillos para la ubicación actual de <see cref="T:System.Xml.XmlReader" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary>
          Indica a <see cref="T:System.Xml.XmlReader" /> que lea un elemento raíz del documento XML en su posición actual.
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlDocument" /> que contiene el elemento raíz que se ha leído.
        </returns>
      <param name="wrapped">
              
                true si el método debería leer el contenido sólo después de leer el elemento de inicio del elemento; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary>
          Indica a <see cref="T:System.Xml.XmlReader" /> que lea el nodo XML en su posición actual. 
        </summary>
      <returns>
          <see cref="T:System.Xml.XmlNode" /> que representa el nodo XML que se ha leído.
        </returns>
      <param name="wrapped">
              
                true para leer el contenido sólo después de leer el elemento de inicio del elemento; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary>
          Almacena un objeto que se va a deserializar de un elemento multiRef codificado con SOAP.
        </summary>
      <param name="o">
              El objeto que se va a deserializar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary>
          Obtiene un ensamblado generado dinámicamente por nombre.
        </summary>
      <returns>
          Un <see cref="T:System.Reflection.Assembly" /> generado dinámicamente.
        </returns>
      <param name="assemblyFullName">
              Nombre completo del ensamblado.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary>
          Garantiza que una matriz determinada, o una copia, no supera una longitud especificada. 
        </summary>
      <returns>
          La <see cref="T:System.Array" /> existente, si ya es suficientemente pequeña; de lo contrario, una nueva matriz más pequeña que contenga los elementos de la matriz original hasta un tamaño de <paramref name=" length" />.
        </returns>
      <param name="a">
              Matriz que se va a revisar.
            </param>
      <param name="length">
              Longitud máxima de la matriz .
            </param>
      <param name="elementType">
              <see cref="T:System.Type" /> de los elementos de la matriz.
            </param>
      <param name="isNullable">
              
                true si se puede devolver el valor null para la matriz, si está presente para la matriz de entrada; de lo contrario, una nueva matriz de menor tamaño.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary>
          Indica a <see cref="T:System.Xml.XmlReader" /> que hay que leer el valor de la cadena en su posición actual y devolverlo como una matriz de bytes Base-64.
        </summary>
      <returns>
          Una matriz de bytes Base-64; de lo contrario, null si el valor del parámetro <paramref name="isNull" /> es true.
        </returns>
      <param name="isNull">
              
                true para devolver null; false para devolver una matriz de bytes Base-64.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary>
          Genera una matriz de bytes Base-64 de una cadena de entrada. 
        </summary>
      <returns>
          Una matriz de bytes Base-64 .
        </returns>
      <param name="value">
              Una cadena para traducir en una matriz de bytes Base-64.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary>
          Indica a <see cref="T:System.Xml.XmlReader" /> que hay que leer el valor de la cadena en su posición actual y devolverlo como una matriz de bytes hexadecimal.
        </summary>
      <returns>
          Una matriz de bytes hexadecimal; de lo contrario, null si el valor del parámetro <paramref name="isNull" /> es true. 
        </returns>
      <param name="isNull">
              
                true para devolver null; false para devolver una matriz de bytes hexadecimal.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary>
          Genera una matriz de bytes hexadecimal de una cadena de entrada.
        </summary>
      <returns>
          Matriz de bytes hexadecimal.
        </returns>
      <param name="value">
              Una cadena para traducir en una matriz de bytes hexadecimal.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary>
          Genera un objeto <see cref="T:System.Char" /> de una cadena de entrada. 
        </summary>
      <returns>
          Objeto <see cref="T:System.Char" />.
        </returns>
      <param name="value">
              Una cadena para traducir en un objeto <see cref="T:System.Char" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary>
          Genera un objeto <see cref="T:System.DateTime" /> de una cadena de entrada. 
        </summary>
      <returns>
          Objeto <see cref="T:System.DateTime" />.
        </returns>
      <param name="value">
              Una cadena para traducir en un objeto de clase <see cref="T:System.DateTime" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary>
          Genera un objeto <see cref="T:System.DateTime" /> de una cadena de entrada. 
        </summary>
      <returns>
          Objeto <see cref="T:System.DateTime" />.
        </returns>
      <param name="value">
              Una cadena para traducir en un objeto <see cref="T:System.DateTime" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary>
          Genera un valor de enumeración numérico de una cadena que está compuesto de identificadores delimitados que representan las constantes de la lista de enumeradores. 
        </summary>
      <returns>
          Un valor largo que está compuesto del valor de enumeración como una serie de operaciones OR bit a bit.
        </returns>
      <param name="value">
              Cadena que está compuesta de identificadores delimitados, donde cada identificador representa una constante de la lista de enumeradores establecida.
            </param>
      <param name="h">
              <see cref="T:System.Collections.Hashtable" /> que está compuesto de los identificadores como claves y las constantes como números enteros.
            </param>
      <param name="typeName">
              Nombre del tipo de enumeración.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary>
          Genera <see cref="T:System.DateTime" /> de una cadena que representa la hora. 
        </summary>
      <returns>
          Objeto <see cref="T:System.DateTime" />.
        </returns>
      <param name="value">
              Una cadena para traducir en un objeto <see cref="T:System.DateTime" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary>
          Descodifica un nombre XML.
        </summary>
      <returns>
          Cadena descodificada.
        </returns>
      <param name="value">
              Nombre XML que se va a descodificar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary>
          Descodifica un nombre XML.
        </summary>
      <returns>
          Cadena descodificada.
        </returns>
      <param name="value">
              Nombre XML que se va a descodificar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary>
          Descodifica un nombre XML.
        </summary>
      <returns>
          Cadena descodificada.
        </returns>
      <param name="value">
              Nombre XML que se va a descodificar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary>
          Descodifica un nombre XML.
        </summary>
      <returns>
          Cadena descodificada.
        </returns>
      <param name="value">
              Nombre XML que se va a descodificar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary>
          Obtiene un <see cref="T:System.Xml.XmlQualifiedName" /> de un nombre que puede contener un prefijo. 
        </summary>
      <returns>
          Un <see cref="T:System.Xml.XmlQualifiedName" /> que representa un nombre XML calificado por espacio de nombres.
        </returns>
      <param name="value">
              Un nombre que puede contener un prefijo.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary>
          Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />. 
        </summary>
      <param name="o">
              Objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> intenta deserializar, accesible posteriormente mediante la propiedad <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.
            </param>
      <param name="attr">
              <see cref="T:System.Xml.XmlAttribute" /> que representa el atributo.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary>
          Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />. 
        </summary>
      <param name="o">
              Objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> intenta deserializar, accesible posteriormente mediante la propiedad <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.
            </param>
      <param name="attr">
              <see cref="T:System.Xml.XmlAttribute" /> que representa el atributo.
            </param>
      <param name="qnames">
              Una lista delimitada por comas de nombres XML completos.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary>
          Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <param name="o">
              <see cref="T:System.Object" /> que se va a deserializar.
            </param>
      <param name="elem">
              <see cref="T:System.Xml.XmlElement" /> para el que se provoca un evento.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary>
          Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <param name="o">
              Objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> intenta deserializar, accesible posteriormente mediante la propiedad <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.
            </param>
      <param name="elem">
              <see cref="T:System.Xml.XmlElement" /> para el que se provoca un evento.
            </param>
      <param name="qnames">
              Una lista delimitada por comas de nombres XML completos.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary>
          Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />. 
        </summary>
      <param name="o">
              Objeto que se va a deserializar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary>
          Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <param name="o">
              Objeto que se está deserializando.
            </param>
      <param name="qnames">
              Una lista delimitada por comas de nombres XML completos.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary>
          Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <param name="id">
              Una cadena única que se utiliza para identificar el objeto sin referencia, más tarde accesible a través de la propiedad <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" />.
            </param>
      <param name="o">
              Objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> intenta deserializar, accesible posteriormente mediante la propiedad <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" />.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary>
          Contiene una instancia de delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />, más las entradas del método; también proporciona los parámetros del método. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> con parámetros para un método de devolución de llamada. 
        </summary>
      <param name="collection">
              Una colección en la que el método de devolución de llamada copia la matriz de elementos de la colección.
            </param>
      <param name="callback">
              Método que crea instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.
            </param>
      <param name="collectionItems">
              Una matriz en la que el método de devolución de llamada copia una colección.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary>
          Obtiene el método de devolución de llamada que crea instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />. 
        </summary>
      <returns>
          El delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> que señala al método de devolución de llamada.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary>
          Obtiene <paramref name="object collection" /> para el método de devolución de llamada. 
        </summary>
      <returns>
          La colección que se utiliza para la corrección.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary>
          Obtiene la matriz en la que el método de devolución de llamada copia una colección. 
        </summary>
      <returns>
          La matriz en la que el método de devolución de llamada copia una colección.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary>
          Contiene una instancia del delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />, además de las entradas del método; también actúa como parámetro del método. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary>
          Recibe el tamaño de una matriz de cadenas que debe generarse. 
        </summary>
      <param name="o">
              Objeto que contiene otros objetos cuyos valores se rellenan mediante la implementación de la devolución de llamada.
            </param>
      <param name="callback">
              Método que crea instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.
            </param>
      <param name="count">
              Tamaño de la matriz de cadenas que se obtiene por medio de la propiedad <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary>
          Recibe una matriz de cadenas. 
        </summary>
      <param name="o">
              Objeto que contiene otros objetos cuyos valores se rellenan mediante la implementación de la devolución de llamada.
            </param>
      <param name="callback">
              Método que crea instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.
            </param>
      <param name="ids">
              Matriz de cadenas que se obtiene por medio de la propiedad <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary>
          Obtiene el método de devolución de llamada que crea una instancia del delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />. 
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />. 
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary>
          Obtiene o establece una matriz de claves para los objetos que pertenecen a la propiedad <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> cuyos valores se rellenan mediante la implementación de la devolución de llamada. 
        </summary>
      <returns>
          La matriz de claves.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary>
          Obtiene o establece el objeto que contiene otros objetos cuyos valores se rellenan mediante la implementación de la devolución de llamada.
        </summary>
      <returns>
          El origen que contiene objetos con valores para rellenar.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary>
          Delegado utilizado por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> para la serialización de tipos de datos XML sin raíz codificados en SOAP. 
        </summary>
      <param name="object o">
              Objeto que se va a serializar.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary>
          Clase abstracta utilizada para controlar la serialización realizada por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary>
          Almacena una implementación del delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> y el tipo al que se aplica, para su invocación posterior. 
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> de objetos que se serializan.
            </param>
      <param name="typeName">
              Nombre del tipo de objetos que se serializan.
            </param>
      <param name="typeNs">
              Espacio de nombres del tipo de objetos que se serializan.
            </param>
      <param name="callback">
              Instancia del delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary>
          Crea un <see cref="T:System.InvalidOperationException" /> que indica un nombre inesperado para un elemento que se adhiere a una declaración de elemento choice de esquema XML.
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="value">
              Nombre que no es válido.
            </param>
      <param name="identifier">
              Declaración de elemento choice a la que pertenece el nombre.
            </param>
      <param name="name">
              Nombre local esperado de un elemento.
            </param>
      <param name="ns">
              Espacio de nombres esperado de un elemento.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary>
          Crea una <see cref="T:System.InvalidOperationException" /> que indica que <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> se aplicó de forma no válida a un miembro; sólo los miembros de tipo <see cref="T:System.Xml.XmlNode" />, o procedentes de <see cref="T:System.Xml.XmlNode" />, son válidos.
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="o">
              Objeto que representa el miembro no válido.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary>
          Crea una <see cref="T:System.InvalidOperationException" /> que indica que <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> se aplicó de forma no válida a un miembro; sólo los miembros de tipo <see cref="T:System.Xml.XmlNode" />, o procedentes de <see cref="T:System.Xml.XmlNode" />, son válidos.
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="type">
              <see cref="T:System.Type" /> que no es válido.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary>
          Crea un <see cref="T:System.InvalidOperationException" /> que indica un error al escribir una matriz donde se aplica una declaración de elemento choice de esquema XML.
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="type">
              Tipo que se va a serializar.
            </param>
      <param name="identifier">
              Nombre para la declaración de elemento choice.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary>
          Crea un <see cref="T:System.InvalidOperationException" /> para un valor de enumeración no válido.
        </summary>
      <returns>
          Objeto <see cref="T:System.ComponentModel.InvalidEnumArgumentException" />.
        </returns>
      <param name="value">
              Objeto que representa la enumeración no válida.
            </param>
      <param name="typeName">
              Nombre del tipo XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary>
          Crea un <see cref="T:System.InvalidOperationException" /> que indica que un valor para un elemento XML no coincide con un tipo de enumeración.
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="value">
              Valor que no es válido.
            </param>
      <param name="elementName">
              Nombre del elemento XML con un valor no válido.
            </param>
      <param name="enumValue">
              El valor válido.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary>
          Crea un <see cref="T:System.InvalidOperationException" /> que indica que no se puede procesar un elemento XML que debería adherirse a la declaración de elemento any de esquema XML.
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="name">
              Elemento XML que no se puede procesar.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary>
          Crea una excepción <see cref="T:System.InvalidOperationException" /> que indica que un tipo que se está serializando no se está utilizando de una forma válida o se ha encontrado de forma inesperada. 
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="o">
              Objeto cuyo tipo no se puede serializar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary>
          Crea una excepción <see cref="T:System.InvalidOperationException" /> que indica que un tipo que se está serializando no se está utilizando de una forma válida o se ha encontrado de forma inesperada. 
        </summary>
      <returns>
          Excepción <see cref="T:System.InvalidOperationException" />.
        </returns>
      <param name="type">
              Tipo que no se puede serializar.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary>
          Obtiene o establece un valor que indica si el método <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> se utiliza para escribir XML válido.
        </summary>
      <returns>
          
            true si el método <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> devuelve un nombre codificado; de lo contrario, false.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary>
          Procesa una matriz de 64 bytes.
        </summary>
      <returns>
          La misma matriz de bytes que se pasó como un argumento.
        </returns>
      <param name="value">
              Una matriz de base 64 <see cref="T:System.Byte" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary>
          Genera una cadena de una matriz de bytes hexadecimal de entrada.
        </summary>
      <returns>
          Valor de la matriz de bytes convertido en una cadena.
        </returns>
      <param name="value">
              Matriz de bytes hexadecimal para traducir en una cadena.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary>
          Genera una cadena de una entrada <see cref="T:System.Char" />.
        </summary>
      <returns>
          El valor <see cref="T:System.Char" /> convertido en una cadena.
        </returns>
      <param name="value">
              Un <see cref="T:System.Char" /> para convertir en una cadena.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary>
          Genera una cadena de un objeto <see cref="T:System.DateTime" />.
        </summary>
      <returns>
          Una representación de cadena de <see cref="T:System.DateTime" /> que muestra la fecha pero no la hora.
        </returns>
      <param name="value">
              Un <see cref="T:System.DateTime" /> para convertir en una cadena.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary>
          Genera una cadena de una entrada <see cref="T:System.DateTime" />.
        </summary>
      <returns>
          Una representación de cadena de <see cref="T:System.DateTime" /> que muestra la fecha y la hora.
        </returns>
      <param name="value">
              Un <see cref="T:System.DateTime" /> para convertir en una cadena.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary>
          Genera una cadena compuesta de identificadores delimitados que representan los miembros de enumeración que se han establecido.
        </summary>
      <returns>
          Cadena compuesta de identificadores delimitados, donde cada uno representa un miembro de la lista de enumeradores establecida.
        </returns>
      <param name="value">
              Valor de enumeración como una serie de operaciones OR bit a bit.
            </param>
      <param name="values">
              Valores de nombres de la enumeración.
            </param>
      <param name="ids">
              Valores constantes de la enumeración.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary>
          Toma un valor de enumeración numérico y los nombres y constantes de la lista de enumeradores para la enumeración y devuelve una cadena formada por identificadores delimitados que representan los miembros de la enumeración que se han establecido.
        </summary>
      <returns>
          Cadena que compuesta por identificadores delimitados, donde cada elemento es uno de los valores establecidos por la operación bit a bit.
        </returns>
      <param name="value">
              Valor de enumeración como una serie de operaciones OR bit a bit.
            </param>
      <param name="values">
              Valores de la enumeración.
            </param>
      <param name="ids">
              Constantes de la enumeración.
            </param>
      <param name="typeName">
              Nombre del tipo. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary>
          Genera una cadena de un objeto <see cref="T:System.DateTime" />.
        </summary>
      <returns>
          Representación de cadena del objeto <see cref="T:System.DateTime" /> que muestra la hora pero no la fecha.
        </returns>
      <param name="value">
              <see cref="T:System.DateTime" /> que se convierte en una cadena.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary>
          Codifica un nombre XML válido reemplazando caracteres que no son válidos con secuencias de escape.
        </summary>
      <returns>
          Cadena codificada.
        </returns>
      <param name="name">
              Cadena que se va a utilizar como un nombre XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary>
          Codifica un nombre local XML válido reemplazando caracteres que no son válidos con secuencias de escape.
        </summary>
      <returns>
          Cadena codificada.
        </returns>
      <param name="ncName">
              Cadena que se va a utilizar como nombre XML local (incompleto).
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary>
          Codifica un nombre XML.
        </summary>
      <returns>
          Cadena codificada.
        </returns>
      <param name="nmToken">
              Nombre XML que se va a codificar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary>
          Codifica una secuencia delimitada por espacios con nombres XML en un nombre XML único.
        </summary>
      <returns>
          Cadena codificada.
        </returns>
      <param name="nmTokens">
              Secuencia delimitada por espacios con nombres XML que se va a codificar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary>
          Devuelve un nombre completo XML, con caracteres no válidos reemplazados por secuencias de escape. 
        </summary>
      <returns>
          Un nombre completo XML, con caracteres no válidos reemplazados por secuencias de escape.
        </returns>
      <param name="xmlQualifiedName">
              <see cref="T:System.Xml.XmlQualifiedName" /> que representa los datos XML que se van a escribir.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary>
          Genera una cadena que se puede escribir como un nombre completo XML, con caracteres no válidos reemplazados por secuencias de escape. 
        </summary>
      <returns>
          Un nombre completo XML, con los caracteres no válidos reemplazados por secuencias de escape.
          
          
        </returns>
      <param name="xmlQualifiedName">
              Clase <see cref="T:System.Xml.XmlQualifiedName" /> que representa los datos XML que se van a escribir.
            </param>
      <param name="ignoreEmpty">
              
                true para omitir los espacios vacíos de la cadena; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary>
          Inicializa instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> para serializar los datos XML con codificación SOAP. 
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary>
          Obtiene o establece una lista de objetos de nombre completo XML que contienen los espacios de nombres y los prefijos utilizados para generar nombres completos en documentos XML. 
        </summary>
      <returns>
          <see cref="T:System.Collections.ArrayList" /> que contiene los espacios de nombres y los pares de prefijos.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary>
          Obtiene un ensamblado generado dinámicamente por nombre.
        </summary>
      <returns>
          Un ensamblado generado dinámicamente.
        </returns>
      <param name="assemblyFullName">
              Nombre completo del ensamblado.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary>
          Sólo inicializa las referencias a objetos al serializar un mensaje SOAP con codificación SOAP.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary>
          Indica a un objeto <see cref="T:System.Xml.XmlWriter" /> que escriba un atributo XML que no tenga ningún espacio de nombres especificado para su nombre.
        </summary>
      <param name="localName">
              El nombre local del atributo XML.
            </param>
      <param name="value">
              El valor del atributo XML como una matriz de bytes.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary>
          Indica a <see cref="T:System.Xml.XmlWriter" /> que escriba un atributo XML que no tenga ningún espacio de nombres especificado para su nombre. 
        </summary>
      <param name="localName">
              El nombre local del atributo XML.
            </param>
      <param name="value">
              Valor del atributo XML especificado como una cadena.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary>
          Indica a un objeto <see cref="T:System.Xml.XmlWriter" /> que escriba un atributo XML.
        </summary>
      <param name="localName">
              El nombre local del atributo XML.
            </param>
      <param name="ns">
              Espacio de nombres del atributo XML.
            </param>
      <param name="value">
              El valor del atributo XML como una matriz de bytes.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary>
          Escribe un atributo XML. 
        </summary>
      <param name="localName">
              El nombre local del atributo XML.
            </param>
      <param name="ns">
              Espacio de nombres del atributo XML.
            </param>
      <param name="value">
              Valor del atributo XML especificado como una cadena.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary>
          Escribe un atributo XML donde se proporciona el prefijo de espacio de nombres manualmente. 
        </summary>
      <param name="prefix">
              El prefijo de espacio de nombres que se escribirá.
            </param>
      <param name="localName">
              El nombre local del atributo XML.
            </param>
      <param name="ns">
              Espacio de nombres representado por el prefijo.
            </param>
      <param name="value">
              Valor del atributo XML especificado como una cadena.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
          Escribe un objeto de nodo XML dentro del cuerpo de un elemento XML con nombre.
        </summary>
      <param name="node">
              Nodo XML que se va a escribir, posiblemente un elemento XML secundario.
            </param>
      <param name="name">
              Nombre local del elemento XML principal que se escribirá.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se escribirá.
            </param>
      <param name="isNullable">
              
                true para escribir un atributo xsi:nil='true' si el objeto que se va a serializar es null; en caso contrario, false.
            </param>
      <param name="any">
              
                true para indicar que el nodo, si es un elemento XML, se adhiere a una declaración de elemento any de esquema XML; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
          Indica a un objeto <see cref="T:System.Xml.XmlWriter" /> que escriba un objeto <see cref="T:System.Xml.XmlNode" /> dentro del cuerpo de un elemento XML con nombre.
        </summary>
      <param name="node">
              Nodo XML que se va a escribir, posiblemente un elemento XML secundario.
            </param>
      <param name="name">
              Nombre local del elemento XML principal que se escribirá.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se escribirá.
            </param>
      <param name="isNullable">
              
                true para escribir un atributo xsi:nil='true' si el objeto que se va a serializar es null; en caso contrario, false.
            </param>
      <param name="any">
              
                true para indicar que el nodo, si es un elemento XML, se adhiere a una declaración de elemento any de esquema XML; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
          Escribe un elemento XML con un nombre completo especificado en su cuerpo.
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML.
            </param>
      <param name="value">
              El nombre que se va a escribir en el texto de elemento, utilizando su prefijo si está clasificado por espacio de nombres.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>
          Escribe un elemento XML con un nombre completo especificado en su cuerpo.
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML.
            </param>
      <param name="value">
              El nombre que se va a escribir en el texto de elemento, utilizando su prefijo si está clasificado por espacio de nombres.
            </param>
      <param name="xsiType">
              Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo xsi:type.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary>
          Escribe un elemento XML con un nombre completo especificado en su cuerpo.
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="value">
              El nombre que se va a escribir en el texto de elemento, utilizando su prefijo si está clasificado por espacio de nombres.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>
          Escribe un elemento XML con un nombre completo especificado en su cuerpo.
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="value">
              El nombre que se va a escribir en el texto de elemento, utilizando su prefijo si está clasificado por espacio de nombres.
            </param>
      <param name="xsiType">
              Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo xsi:type.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary>
          Escribe un elemento XML con un valor especificado en su cuerpo. 
        </summary>
      <param name="localName">
              El nombre local del elemento XML que se va a escribir sin la calificación de espacio de nombres.
            </param>
      <param name="value">
              El valor de texto del elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>
          Escribe un elemento XML con un valor especificado en su cuerpo. 
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML.
            </param>
      <param name="value">
              El valor de texto del elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
          Escribe un elemento XML con un valor especificado en su cuerpo.
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML.
            </param>
      <param name="value">
              El valor de texto del elemento XML.
            </param>
      <param name="xsiType">
              Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo xsi:type.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
          Escribe un elemento XML con un valor especificado en su cuerpo.
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="value">
              El valor de texto del elemento XML.
            </param>
      <param name="xsiType">
              Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo xsi:type.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary>
          Escribe un elemento XML con un valor especificado en su cuerpo.
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="value">
              El valor de texto del elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>
          Escribe un elemento XML con un valor especificado en su cuerpo.
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="value">
              El valor de texto del elemento XML.
            </param>
      <param name="xsiType">
              Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo xsi:type.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary>
          Escribe un elemento XML con un valor especificado en su cuerpo.
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="value">
              El valor de texto del elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary>
          Escribe un elemento XML con un valor especificado en su cuerpo.
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML.
            </param>
      <param name="value">
              El valor de texto del elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>
          Escribe un elemento XML con un valor especificado en su cuerpo.
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML.
            </param>
      <param name="value">
              El valor de texto del elemento XML.
            </param>
      <param name="xsiType">
              Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo xsi:type.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary>
          Escribe un elemento XML con un valor especificado en su cuerpo.
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML.
            </param>
      <param name="value">
              El valor de texto del elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
          Escribe un elemento XML con un valor especificado en su cuerpo.
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="ns">
              Espacio de nombres del elemento XML.
            </param>
      <param name="value">
              El valor de texto del elemento XML.
            </param>
      <param name="xsiType">
              Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo xsi:type.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
          Escribe un elemento XML con un valor especificado en su cuerpo.
        </summary>
      <param name="localName">
              Nombre local del elemento XML.
            </param>
      <param name="value">
              El valor de texto del elemento XML.
            </param>
      <param name="xsiType">
              Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo xsi:type.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary>
          Escribe un elemento XML cuyo cuerpo está vacío. 
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary>
          Escribe un elemento XML cuyo cuerpo está vacío.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary>
          Escribe una etiqueta de elemento &lt;closing&gt;.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary>
          Escribe una etiqueta de elemento closing.
        </summary>
      <param name="o">
              Objeto que se va a serializar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary>
          Escribe un atributo id que aparece en un elemento multiRef codificado con SOAP. 
        </summary>
      <param name="o">
              Objeto que se va a serializar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>
          Escribe los atributos de declaración de espacio de nombres.
        </summary>
      <param name="xmlns">
              Los espacios de nombres XML que se van a declarar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>
          Escribe un elemento XML cuyo cuerpo contiene un nombre completo XML válido. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo xsi:nil='true' si el valor de la cadena es null.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="value">
              Nombre completo XML que se va a escribir en el cuerpo del elemento XML.
            </param>
      <param name="xsiType">
              Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo xsi:type.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
          Escribe un elemento XML cuyo cuerpo contiene un nombre completo XML válido. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo xsi:nil='true' si el valor de la cadena es null.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="value">
              Nombre completo XML que se va a escribir en el cuerpo del elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
          Escribe un elemento XML que contiene una cadena como cuerpo. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo xsi:nil='true' si el valor de la cadena es null.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="value">
              La cadena que se va a escribir en el cuerpo del elemento XML.
            </param>
      <param name="xsiType">
              Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo xsi:type.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>
          Escribe una matriz de bytes como el cuerpo de un elemento XML. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo xsi:nil='true' si el valor de la cadena es null.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="value">
              La matriz de bytes que se va a escribir en el cuerpo del elemento XML.
            </param>
      <param name="xsiType">
              Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo xsi:type.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
          Escribe un elemento XML que contiene una cadena como cuerpo. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo xsi:nil='true' si el valor de la cadena es null.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="value">
              La cadena que se va a escribir en el cuerpo del elemento XML.
            </param>
      <param name="xsiType">
              Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo xsi:type.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary>
          Escribe un elemento XML que contiene una cadena como cuerpo. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo xsi:nil='true' si el valor de la cadena es null.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="value">
              La cadena que se va a escribir en el cuerpo del elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary>
          Escribe una matriz de bytes como el cuerpo de un elemento XML. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo xsi:nil='true' si el valor de la cadena es null.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="value">
              La matriz de bytes que se va a escribir en el cuerpo del elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary>
          Escribe un elemento XML que contiene una cadena como cuerpo. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo xsi:nil='true' si el valor de la cadena es null.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="value">
              La cadena que se va a escribir en el cuerpo del elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary>
          Escribe un elemento XML con un atributo xsi:nil='true'.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary>
          Escribe un elemento XML con un atributo xsi:nil='true'.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary>
          Escribe un elemento XML con un atributo xsi:nil='true'.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary>
          Escribe un elemento XML con un atributo xsi:nil='true'. 
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary>
          Escribe un elemento XML de mensaje SOAP que puede contener una referencia a un elemento XML &lt;multiRef&gt; para un objeto determinado. 
        </summary>
      <param name="n">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="o">
              Objeto que se va a serializar en el elemento XML actual o en un elemento multiRef al que hace referencia el elemento actual.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary>
          Escribe un elemento XML de mensaje SOAP que puede contener una referencia a un elemento XML &lt;multiRef&gt; para un objeto determinado. 
        </summary>
      <param name="n">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="o">
              Objeto que se va a serializar en el elemento XML actual o en un elemento multiRef al que hace referencia el elemento actual.
            </param>
      <param name="ambientType">
              Tipo almacenado en la asignación del tipo de objeto (como opuesto al tipo del objeto situado directamente a través de la operación typeof).
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary>
          Escribe un elemento XML de mensaje SOAP que puede contener una referencia a un elemento XML &lt;multiRef&gt; para un objeto determinado.
        </summary>
      <param name="n">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="o">
              Objeto que se va a serializar en el elemento XML actual o en un elemento multiRef al que hace referencia el elemento actual.
            </param>
      <param name="ambientType">
              Tipo almacenado en la asignación del tipo de objeto (como opuesto al tipo del objeto situado directamente a través de la operación typeof).
            </param>
      <param name="suppressReference">
              
                true para serializar directamente el objeto en el elemento XML en lugar de que el elemento haga referencia a otro elemento que contiene los datos; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary>
          Escribe un elemento XML de mensaje SOAP que puede contener una referencia a un elemento XML multiRef para un objeto determinado.
        </summary>
      <param name="n">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="o">
              Objeto que se va a serializar en el elemento XML actual o en un elemento multiRef al que hace referencia el elemento actual.
            </param>
      <param name="ambientType">
              Tipo almacenado en la asignación del tipo de objeto (como opuesto al tipo del objeto situado directamente a través de la operación typeof).
            </param>
      <param name="suppressReference">
              
                true para serializar directamente el objeto en el elemento XML en lugar de que el elemento haga referencia a otro elemento que contiene los datos; de lo contrario, false.
            </param>
      <param name="isNullable">
              
                true para escribir un atributo xsi:nil='true' si el objeto que se va a serializar es null; en caso contrario, false.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary>
          Obtiene el <see cref="T:System.Xml.XmlWriter" /> que utiliza <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />. 
        </summary>
      <returns>
          El valor de <see cref="T:System.Xml.XmlWriter" /> que utiliza la instancia de clase.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary>
          Serializa los objetos en elementos XML multiRef con codificación SOAP en un mensaje SOAP. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary>
          Escribe un elemento XML de mensaje SOAP que contiene una referencia a un elemento XML multiRef  para un objeto determinado. 
        </summary>
      <param name="n">
              Nombre local del elemento de referencia que se va a escribir.
            </param>
      <param name="ns">
              Espacio de nombres del elemento de referencia que se va a escribir.
            </param>
      <param name="o">
              Objeto que se va a serializar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>
          Escribe un elemento XML de mensaje SOAP que contiene una referencia a un elemento XML multiRef para un objeto determinado.
        </summary>
      <param name="n">
              Nombre local del elemento de referencia que se va a escribir.
            </param>
      <param name="ns">
              Espacio de nombres del elemento de referencia que se va a escribir.
            </param>
      <param name="o">
              Objeto que se va a serializar.
            </param>
      <param name="isNullable">
              
                true para escribir un atributo xsi:nil='true' si el objeto que se va a serializar es null; en caso contrario,  false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary>
          Escribe un elemento de resultado RPC de SOAP 1.2 con un nombre completo especificado su cuerpo.
        </summary>
      <param name="name">
              Nombre local del cuerpo del resultado.
            </param>
      <param name="ns">
              Espacio de nombres del cuerpo del resultado.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary>
          Escribe un objeto que utiliza el formato XML personalizado como un elemento XML. 
        </summary>
      <param name="serializable">
              Objeto que implementa la interfaz <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que utiliza un formato XML personalizado.
            </param>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="isNullable">
              
                true para escribir un atributo xsi:nil='true' si el objeto de clase <see cref="T:System.Xml.Serialization.IXmlSerializable" /> es null; de lo contrario,  false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
          Indica a <see cref="T:System.Xml.XmlNode" /> que escriba un objeto que utilice el formato XML personalizado como un elemento XML. 
        </summary>
      <param name="serializable">
              Objeto que implementa la interfaz <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que utiliza un formato XML personalizado.
            </param>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="isNullable">
              
                true para escribir un atributo xsi:nil='true' si el objeto <see cref="T:System.Xml.Serialization.IXmlSerializable" /> es null; de lo contrario,  false.
            </param>
      <param name="wrapped">
              
                true para omitir la escritura de la etiqueta del elemento de apertura; de lo contrario, false para escribir la etiqueta del elemento de apertura.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary>
          Escribe la declaración XML si el escritor se coloca al principio de un documento XML. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary>
          Escribe una etiqueta de elemento de apertura, que incluye atributos. 
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary>
          Escribe una etiqueta de elemento de apertura, que incluye atributos. 
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary>
          Escribe una etiqueta de elemento de apertura, que incluye atributos.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="writePrefixed">
              
                true para escribir el nombre de elemento con un prefijo si no hay ninguno disponible para el espacio de nombres especificado; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary>
          Escribe una etiqueta de elemento de apertura, que incluye atributos.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="o">
              El objeto serializándose como un elemento XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>
          Escribe una etiqueta de elemento de apertura, que incluye atributos.
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="o">
              El objeto serializándose como un elemento XML.
            </param>
      <param name="writePrefixed">
              
                true para escribir el nombre de elemento con un prefijo si no hay ninguno disponible para el espacio de nombres especificado; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>
          Escribe una etiqueta de elemento de apertura, que incluye atributos. 
        </summary>
      <param name="name">
              El nombre local del elemento XML que se va a escribir.
            </param>
      <param name="ns">
              El espacio de nombres del elemento XML que se va a escribir.
            </param>
      <param name="o">
              El objeto que se está serializando como un elemento XML.
            </param>
      <param name="writePrefixed">
              
                Es true para escribir el nombre de elemento con un prefijo si no hay ninguno disponible para el espacio de nombres especificado; de lo contrario, es false.
            </param>
      <param name="xmlns">
              Una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que contiene los pares de prefijo y espacio de nombres que se utilizarán en el código XML generado.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary>
          Escribe un elemento XML cuyo cuerpo de texto es un valor de un tipo de datos del esquema XML sencillo. 
        </summary>
      <param name="name">
              Nombre local del elemento que se va a escribir.
            </param>
      <param name="ns">
              Espacio de nombres del elemento que se va a escribir.
            </param>
      <param name="o">
              Objeto que se va a serializar en el cuerpo del elemento.
            </param>
      <param name="xsiType">
              
                true si el elemento XML especifica explícitamente el tipo de valor de texto mediante el atributo xsi:type; de lo contrario, false.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary>
          Escribe una matriz de 64 bytes.
        </summary>
      <param name="value">
              Matriz de bytes que se va a escribir.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary>
          Escribe una cadena especificada.
        </summary>
      <param name="value">
              Cadena que se va a escribir.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary>
          Escribe el <see cref="T:System.Xml.XmlNode" /> especificado como un atributo XML.
        </summary>
      <param name="node">
              Objeto <see cref="T:System.Xml.XmlAttribute" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary>
          Escribe el objeto <see cref="T:System.Xml.XmlNode" /> especificado como un atributo XML.
        </summary>
      <param name="node">
              <see cref="T:System.Xml.XmlNode" /> de tipo <see cref="T:System.Xml.XmlAttribute" />.
            </param>
      <param name="container">
              Objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> (o null) utilizado para generar un nombre completo para un atributo arrayType del espacio de nombres de Lenguaje de descripción de servicios Web o WSDL ("http://schemas.xmlsoap.org/wsdl/").
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary>
          Escribe un atributo xsi:type para un elemento XML que se serializa en un documento. 
        </summary>
      <param name="name">
              Nombre local de un tipo de datos de esquemas XML.
            </param>
      <param name="ns">
              Espacio de nombres de un tipo de datos de esquemas XML.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary>
          Serializa y deserializa objetos en y desde documentos XML. <see cref="T:System.Xml.Serialization.XmlSerializer" /> permite controlar el modo en que se codifican los objetos en XML.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar documentos XML en objetos del tipo especificado.
        </summary>
      <param name="type">
              El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar documentos XML en objetos del tipo especificado. Especifica el espacio de nombres predeterminado para todos los elementos XML.
        </summary>
      <param name="type">
              El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar. 
            </param>
      <param name="defaultNamespace">
              Espacio de nombres predeterminado que se utilizará para todos los elementos XML. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar documentos XML en objetos del tipo especificado. Si una propiedad o un campo devuelve una matriz, el parámetro <paramref name="extraTypes" /> especifica aquellos objetos que pueden insertarse en la matriz.
        </summary>
      <param name="type">
              El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar. 
            </param>
      <param name="extraTypes">
              Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar documentos XML en objetos del tipo especificado. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga puede reemplazar con otras clases.
        </summary>
      <param name="type">
              Tipo del objeto que se va a serializar. 
            </param>
      <param name="overrides">
              Objeto <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo <see cref="T:System.Object" /> en instancias de documentos XML y deserializar instancias de documentos XML en objetos del tipo <see cref="T:System.Object" />. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga reemplaza con otras clases. Esta sobrecarga especifica asimismo el espacio de nombres predeterminado para todos los elementos XML, así como la clase que se ha de utilizar como elemento raíz XML.
        </summary>
      <param name="type">
              El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar. 
            </param>
      <param name="overrides">
              <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que extiende o reemplaza el comportamiento de la clase especificada en el parámetro <paramref name="type" />. 
            </param>
      <param name="extraTypes">
              Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar. 
            </param>
      <param name="root">
              <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define las propiedades del elemento raíz XML. 
            </param>
      <param name="defaultNamespace">
              Espacio de nombres predeterminado de todos los elementos XML en el documento XML. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en instancias de documentos XML y deserializar instancias de documentos XML en objetos del tipo especificado. Esta sobrecarga permite proporcionar otros tipos que se pueden encontrar durante una operación de serialización o deserialización, así como un espacio de nombres predeterminado para todos los elementos XML, la clase que se debe utilizar como elemento raíz de XML, su ubicación y las credenciales requerida para el acceso.
        </summary>
      <param name="type">
              El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.
            </param>
      <param name="overrides">
              <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que extiende o reemplaza el comportamiento de la clase especificada en el parámetro <paramref name="type" />.
            </param>
      <param name="extraTypes">
              Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.
            </param>
      <param name="root">
              <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define las propiedades del elemento raíz XML.
            </param>
      <param name="defaultNamespace">
              Espacio de nombres predeterminado de todos los elementos XML en el documento XML.
            </param>
      <param name="location">
              La ubicación de los tipos.
            </param>
      <param name="evidence">
              Instancia de la clase <see cref="T:System.Security.Policy.Evidence" /> que contiene las credenciales necesarias para tener acceso a los tipos.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar un documento XML en un objeto del tipo especificado. Especifica también la clase que se utilizará como elemento raíz XML.
        </summary>
      <param name="type">
              El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar. 
            </param>
      <param name="root">
              <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa el elemento raíz XML. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary>
          Inicializa una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> utilizando un objeto que asigna un tipo a otro.
        </summary>
      <param name="xmlTypeMapping">
              <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que asigna un tipo a otro. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary>
          Obtiene un valor que indica si este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede deserializar un documento XML especificado.
        </summary>
      <returns>
          
            Es true si este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede deserializar el objeto seleccionado por <see cref="T:System.Xml.XmlReader" />; en caso contrario, es false.
        </returns>
      <param name="xmlReader">
              <see cref="T:System.Xml.XmlReader" /> que señala el documento que se ha de deserializar. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary>
          Devuelve un objeto utilizado para leer el documento XML que se va a serializar.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> que se utiliza para leer el documento XML.
        </returns>
      <exception cref="T:System.NotImplementedException">
              Se intenta por todos los medios tener acceso al método cuando el método no se reemplaza en una clase descendente. 
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary>
          Cuando se reemplaza en una clase derivada, devuelve un sistema de escritura para serializar el objeto.
        </summary>
      <returns>
          Instancia que implementa la clase <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.
        </returns>
      <exception cref="T:System.NotImplementedException">
              Se intenta por todos los medios tener acceso al método cuando el método no se reemplaza en una clase descendente. 
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary>
          Deserializa un documento XML que contiene el <see cref="T:System.IO.Stream" /> especificado.
        </summary>
      <returns>
          <see cref="T:System.Object" /> que se está deserializando.
        </returns>
      <param name="stream">
              <see cref="T:System.IO.Stream" /> que contiene el documento XML que se va a deserializar. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary>
          Deserializa un documento XML que contiene el <see cref="T:System.IO.TextReader" /> especificado.
        </summary>
      <returns>
          <see cref="T:System.Object" /> que se está deserializando.
        </returns>
      <param name="textReader">
              <see cref="T:System.IO.TextReader" /> que contiene el documento XML que se va a deserializar. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se ha producido un error durante la deserialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />. 
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary>
          Deserializa un documento XML que contiene el <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> especificado.
        </summary>
      <returns>
          El objeto deserializado.
        </returns>
      <param name="reader">
              <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> que contiene el documento XML que se va a deserializar. 
            </param>
      <exception cref="T:System.NotImplementedException">
              Se intenta por todos los medios tener acceso al método cuando el método no se reemplaza en una clase descendente. 
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>
          Deserializa un documento XML que contiene el <see cref="T:System.xml.XmlReader" /> especificado.
        </summary>
      <returns>
          <see cref="T:System.Object" /> que se está deserializando.
        </returns>
      <param name="xmlReader">
              <see cref="T:System.xml.XmlReader" /> que contiene el documento XML que se va a deserializar. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se ha producido un error durante la deserialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />. 
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary>
          Deserializa un documento XML que contiene el <see cref="T:System.xml.XmlReader" /> especificado y el estilo de codificación.
        </summary>
      <returns>
          El objeto deserializado.
        </returns>
      <param name="xmlReader">
              <see cref="T:System.xml.XmlReader" /> que contiene el documento XML que se va a deserializar. 
            </param>
      <param name="encodingStyle">
              Estilo de codificación del XML serializado. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se ha producido un error durante la deserialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />. 
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>
          Deserializa el objeto utilizando los datos que se encuentran en el <see cref="T:System.Xml.XmlReader" /> especificado.
        </summary>
      <returns>
          Objeto que se está deserializando.
        </returns>
      <param name="xmlReader">
              Instancia de la clase <see cref="T:System.Xml.XmlReader" /> utilizada para leer el documento.
            </param>
      <param name="encodingStyle">
              Codificación utilizada.
            </param>
      <param name="events">
              Instancia de la clase <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>
          Deserializa un documento XML que se encuentra en el <see cref="T:System.Xml.XmlReader" /> especificado y permite reemplazar los eventos que se producen durante la deserialización.
        </summary>
      <returns>
          <see cref="T:System.Object" /> que se está deserializando.
        </returns>
      <param name="xmlReader">
              <see cref="T:System.Xml.XmlReader" /> que contiene el documento que se va a deserializar.
            </param>
      <param name="events">
              Instancia de la clase <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary>
          Devuelve una matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" /> creada a partir de una matriz de objetos <see cref="T:System.Xml.Serialization.XmlTypeMapping" />.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </returns>
      <param name="mappings">
              Matriz de objetos <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que asigna un tipo a otro. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)">
      <summary>
          Devuelve una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> creada a partir de las asignaciones de un tipo de XML a otro.
        </summary>
      <returns>
          Instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </returns>
      <param name="mappings">
              Matriz de objetos <see cref="T:System.Xml.Serialization.XmlMapping" /> que utilizada para asignar un tipo a otro.
            </param>
      <param name="evidence">
              Instancia de la clase <see cref="T:System.Security.Policy.Evidence" /> que contiene los datos de host y de ensamblado presentados al sistema de directivas de Common Language Runtime.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary>
          Devuelve una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> a partir de las asignaciones especificadas.
        </summary>
      <returns>
          Instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </returns>
      <param name="mappings">
              Matriz de objetos <see cref="T:System.Xml.Serialization.XmlMapping" />.
            </param>
      <param name="type">
              <see cref="T:System.Type" /> del objeto deserializado.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary>
          Devuelve una matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" /> creada a partir de una matriz de tipos.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </returns>
      <param name="types">
              Matriz de objetos <see cref="T:System.Type" />. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])">
      <summary>
          Devuelve un ensamblado que contiene los serializadores personalizados utilizados para serializar o deserializar los tipos especificados, utilizando las asignaciones especificadas.
        </summary>
      <returns>
          Objeto <see cref="T:System.Reflection.Assembly" /> que contiene los serializadores para los tipos y asignaciones proporcionados.
        </returns>
      <param name="types">
              Colección de tipos.
            </param>
      <param name="mappings">
              Colección de objetos <see cref="T:System.Xml.Serialization.XmlMapping" /> que utilizada para convertir un tipo en otro.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)">
      <summary>
          Devuelve un ensamblado que contiene los serializadores personalizados utilizados para serializar o deserializar los tipos especificados, utilizando las asignaciones especificadas y las configuraciones y opciones del compilador. 
        </summary>
      <returns>
          <see cref="T:System.Reflection.Assembly" /> que contiene versiones especiales de <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </returns>
      <param name="types">
              Matriz de tipo <see cref="T:System.Type" /> que contiene los objetos utilizados para serializar y deserializar los datos.
            </param>
      <param name="mappings">
              Matriz de tipo <see cref="T:System.Xml.Serialization.XmlMapping" /> que asigna los datos XML a los datos de tipo.
            </param>
      <param name="parameters">
              Instancia de la clase <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> que representa los parámetros utilizados para invocar a un compilador.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary>
          Devuelve el nombre del ensamblado que contiene una o más versiones de <see cref="T:System.Xml.Serialization.XmlSerializer" /> creado especialmente para serializar o deserializar el tipo especificado.
        </summary>
      <returns>
          Nombre del ensamblado que contiene <see cref="T:System.Xml.Serialization.XmlSerializer" /> para el tipo.
        </returns>
      <param name="type">
              <see cref="T:System.Type" /> que se está deserializando.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary>
          Devuelve el nombre del ensamblado que contiene el serializador para el tipo especificado en el espacio de nombres especificado.
        </summary>
      <returns>
          Nombre del ensamblado que contiene serializadores creados especialmente.
        </returns>
      <param name="type">
              <see cref="T:System.Type" /> que interesa al usuario.
            </param>
      <param name="defaultNamespace">
              Espacio de nombres del tipo.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>
          Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.IO.Stream" /> especificado.
        </summary>
      <param name="stream">
              <see cref="T:System.IO.Stream" /> que se utiliza para escribir el documento XML. 
            </param>
      <param name="o">
              <see cref="T:System.Object" /> que se va a serializar. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />. 
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>
          Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.IO.Stream" /> especificado, que hace referencia a los espacios de nombres especificados.
        </summary>
      <param name="stream">
              <see cref="T:System.IO.Stream" /> que se utiliza para escribir el documento XML. 
            </param>
      <param name="o">
              <see cref="T:System.Object" /> que se va a serializar. 
            </param>
      <param name="namespaces">
              <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> al que hace referencia el objeto. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />. 
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary>
          Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.IO.TextWriter" /> especificado.
        </summary>
      <param name="textWriter">
              <see cref="T:System.IO.TextWriter" /> que se utiliza para escribir el documento XML. 
            </param>
      <param name="o">
              <see cref="T:System.Object" /> que se va a serializar. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>
          Serializa el objeto <see cref="T:System.Object" /> especificado, escribe el documento XML en un archivo utilizando el <see cref="T:System.IO.TextWriter" /> especificado y hace referencia a los espacios de nombres especificados.
        </summary>
      <param name="textWriter">
              <see cref="T:System.IO.TextWriter" /> que se utiliza para escribir el documento XML. 
            </param>
      <param name="o">
              <see cref="T:System.Object" /> que se va a serializar. 
            </param>
      <param name="namespaces">
              <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que contiene los espacios de nombres para el documento XML generado. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />. 
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary>
          Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> especificado.
        </summary>
      <param name="o">
              <see cref="T:System.Object" /> que se va a serializar. 
            </param>
      <param name="writer">
              <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> que se utiliza para escribir el documento XML. 
            </param>
      <exception cref="T:System.NotImplementedException">
              Se intenta por todos los medios tener acceso al método cuando el método no se reemplaza en una clase descendente. 
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>
          Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <param name="xmlWriter">
              <see cref="T:System.xml.XmlWriter" /> que se utiliza para escribir el documento XML. 
            </param>
      <param name="o">
              <see cref="T:System.Object" /> que se va a serializar. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />. 
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>
          Serializa el objeto <see cref="T:System.Object" /> especificado, escribe el documento XML en un archivo utilizando el <see cref="T:System.Xml.XmlWriter" /> especificado y hace referencia a los espacios de nombres especificados.
        </summary>
      <param name="xmlWriter">
              <see cref="T:System.xml.XmlWriter" /> que se utiliza para escribir el documento XML. 
            </param>
      <param name="o">
              <see cref="T:System.Object" /> que se va a serializar. 
            </param>
      <param name="namespaces">
              <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> al que hace referencia el objeto. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />. 
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary>
          Serializa el objeto especificado, escribe el documento XML en un archivo utilizando el <see cref="T:System.Xml.XmlWriter" /> especificado y hace referencia a los espacios de nombres especificados y al estilo de codificación.
        </summary>
      <param name="xmlWriter">
              <see cref="T:System.xml.XmlWriter" /> que se utiliza para escribir el documento XML. 
            </param>
      <param name="o">
              Objeto que se va a serializar. 
            </param>
      <param name="namespaces">
              <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> al que hace referencia el objeto. 
            </param>
      <param name="encodingStyle">
              Estilo de codificación del XML serializado. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />. 
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary>
          Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo mediante el <see cref="T:System.Xml.XmlWriter" /> especificado, así como los espacios de nombres y la codificación especificados. 
        </summary>
      <param name="xmlWriter">
              <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento XML.
            </param>
      <param name="o">
              Objeto que se va a serializar.
            </param>
      <param name="namespaces">
              Instancia de XmlSerializaerNamespaces que contiene los espacios de nombres y prefijos que se van a utilizar.
            </param>
      <param name="encodingStyle">
              Codificación utilizada en el documento.
            </param>
      <param name="id">
              Para mensajes con codificación SOAP, base utilizada para generar los atributos de identificador. 
            </param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary>
          Se produce cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> detecta un atributo XML de tipo desconocido durante la deserialización.
        </summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary>
          Se produce cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> detecta un elemento XML de tipo desconocido durante la deserialización.
        </summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary>
          Se produce cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> detecta un nodo XML de tipo desconocido durante la deserialización.
        </summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary>
          Se produce durante la deserialización de una secuencia XML con codificación SOAP, cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> encuentra un tipo reconocido que no se utiliza o al que no se hace referencia.
        </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary>
          Aplicado a un proxy cliente de servicios Web, le permite especificar un ensamblado que contiene los serializadores hechos a medida. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> con el nombre de ensamblado especificado.
        </summary>
      <param name="assemblyName">
              Nombre sencillo del ensamblado sin cifrar. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> con el nombre y la ubicación de ensamblado especificadas.
        </summary>
      <param name="assemblyName">
              Nombre sencillo del ensamblado sin cifrar. 
            </param>
      <param name="codeBase">
              Cadena que representa la dirección URL del ensamblado.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary>
          Obtiene o establece el nombre del ensamblado que contiene los serializadores para un conjunto de tipos concreto.
        </summary>
      <returns>
          Nombre sencillo del ensamblado sin cifrar. 
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary>
          Obtiene o establece la ubicación del ensamblado que contiene los serializadores.
        </summary>
      <returns>
          Una ubicación, como una ruta de acceso o un Identificador de recursos uniforme (URI), que señala al ensamblado.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary>
          Crea versiones con establecimiento de tipos de <see cref="T:System.Xml.Serialization.XmlSerializer" /> para una serialización más eficaz.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary>
          Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> que se utiliza para serializar el tipo especificado.
        </summary>
      <returns>
          Una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se crea específicamente para serializar el tipo especificado.
        </returns>
      <param name="type">
              <see cref="T:System.Type" /> que se va a serializar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary>
          Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> que se utiliza para serializar el tipo y el espacio de nombres especificados.
        </summary>
      <returns>
          Una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se crea específicamente para serializar el tipo especificado.
        </returns>
      <param name="type">
              <see cref="T:System.Type" /> que se va a serializar.
            </param>
      <param name="defaultNamespace">
              Espacio de nombres predeterminado que se utilizará para todos los elementos XML. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary>
          Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> que se utiliza para serializar el tipo especificado. Si una propiedad o un campo devuelve una matriz, el parámetro <paramref name="extraTypes" /> especifica aquellos objetos que pueden insertarse en la matriz.
        </summary>
      <returns>
          Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </returns>
      <param name="type">
              <see cref="T:System.Type" /> que se va a serializar.
            </param>
      <param name="extraTypes">
              Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>
          Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y viceversa. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga puede reemplazar con otras clases.
        </summary>
      <returns>
          Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </returns>
      <param name="type">
              <see cref="T:System.Type" /> que se va a serializar.
            </param>
      <param name="overrides">
              <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que contiene campos que omiten el comportamiento de serialización predeterminado.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>
          Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en instancias de documentos XML y viceversa. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga puede reemplazar con otras clases. Esta sobrecarga especifica asimismo el espacio de nombres predeterminado para todos los elementos XML, así como la clase que se ha de utilizar como elemento raíz XML.
        </summary>
      <returns>
          Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </returns>
      <param name="type">
              <see cref="T:System.Type" /> que se va a serializar.
            </param>
      <param name="overrides">
              <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que contiene campos que omiten el comportamiento de serialización predeterminado.
            </param>
      <param name="extraTypes">
              Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.
            </param>
      <param name="root">
              <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa el elemento raíz XML.
            </param>
      <param name="defaultNamespace">
              Espacio de nombres predeterminado de todos los elementos XML en el documento XML. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
      <summary>
          Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en instancias de documentos XML y viceversa. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga puede reemplazar con otras clases. Esta sobrecarga especifica asimismo el espacio de nombres predeterminado para todos los elementos XML, así como la clase que se ha de utilizar como elemento raíz XML.
        </summary>
      <returns>
          Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </returns>
      <param name="type">
              El <see cref="T:System.Type" /> del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.
            </param>
      <param name="overrides">
              <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que extiende o reemplaza el comportamiento de la clase especificada en el parámetro de tipo.
            </param>
      <param name="extraTypes">
              Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.
            </param>
      <param name="root">
              <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define las propiedades del elemento raíz XML.
            </param>
      <param name="defaultNamespace">
              Espacio de nombres predeterminado de todos los elementos XML en el documento XML.
            </param>
      <param name="location">
              Ruta de acceso que especifica la ubicación de los tipos.
            </param>
      <param name="evidence">
              Instancia de la clase <see cref="T:System.Security.Policy.Evidence" /> que contiene las credenciales necesarias para tener acceso a los tipos.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>
          Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y viceversa. Especifica el objeto que representa el elemento raíz de XML.
        </summary>
      <returns>
          Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </returns>
      <param name="type">
              <see cref="T:System.Type" /> que se va a serializar.
            </param>
      <param name="root">
              <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa el elemento raíz XML.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary>
          Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> utilizando un objeto que asigna un tipo a otro.
        </summary>
      <returns>
          Una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se crea específicamente para serializar el tipo asignado.
        </returns>
      <param name="xmlTypeMapping">
              <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que asigna un tipo a otro.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary>
          Define el lector, el escritor y los métodos para los serializadores con establecimiento de tipos generados previamente.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary>
          Obtiene un valor que determina si se puede serializar un tipo.
        </summary>
      <returns>
          
            Es true si se puede serializar el tipo; en caso contrario, es false.
        </returns>
      <param name="type">
              <see cref="T:System.Type" /> que se va a serializar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary>
          Devuelve un serializador para el tipo especificado.
        </summary>
      <returns>
          Una instancia de un un tipo derivado de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />. 
        </returns>
      <param name="type">
              <see cref="T:System.Type" /> que se va a serializar.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary>
          Obtiene el objeto del lector de XML que utiliza el serializador.
        </summary>
      <returns>
          Un <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> que se utiliza para leer una secuencia de datos o documento XML.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary>
          Obtiene la colección de métodos que se utilizan para leer una secuencia de datos.
        </summary>
      <returns>
          <see cref="T:System.Collections.Hashtable" /> que contiene los métodos.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary>
          Obtiene la colección de serializadores con establecimiento de tipos que se encuentran en el ensamblado.
        </summary>
      <returns>
          <see cref="T:System.Collections.Hashtable" /> que contiene los serializadores con establecimiento de tipos.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary>
          Obtiene la colección de métodos que se utilizan para escribir en una secuencia de datos.
        </summary>
      <returns>
          <see cref="T:System.Collections.Hashtable" /> que contiene los métodos.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary>
          Obtiene el objeto del escritor de XML para el serializador.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> que se utiliza para escribir en una secuencia de datos o documento XML.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary>
          Contiene los espacios de nombres XML y prefijos que <see cref="T:System.Xml.Serialization.XmlSerializer" /> utiliza para generar nombres cualificados en una instancia de documento XML.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, utilizando la instancia especificada de XmlSerializerNamespaces que contiene la colección de pares prefijo y espacio de nombres.
        </summary>
      <param name="namespaces">
              Una instancia de <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que contiene los pares de espacio de nombres y prefijo. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.
        </summary>
      <param name="namespaces">
              Matriz de objetos <see cref="T:System.Xml.XmlQualifiedName" />. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary>
          Agrega un par de prefijo y espacio de nombres a un objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.
        </summary>
      <param name="prefix">
              Prefijo asociado a un espacio de nombres XML. 
            </param>
      <param name="ns">
              Espacio de nombres XML. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary>
          Obtiene el número de pares de prefijo y espacio de nombres de la colección.
        </summary>
      <returns>
          Número de pares de prefijo y espacio de nombres de la colección.
        </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary>
          Obtiene la matriz de pares de prefijo y espacio de nombres en un objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.
        </summary>
      <returns>
          Matriz de objetos <see cref="T:System.Xml.XmlQualifiedName" /> que se utilizan como nombres cualificados en un documento XML.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary>
          Significa que el código lo generó la infraestructura de serialización y se puede reutilizar para aumentar el rendimiento, cuando este atributo se aplica a un ensamblado.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> para el tipo especificado.
        </summary>
      <param name="type">
              El tipo que se serializa.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary>
          Obtiene o establece el espacio de nombres de Common Language Runtime (CLR) del ensamblado.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el espacio de nombres de Common Language Runtime (CLR) del ensamblado.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary>
          Obtiene o establece la identidad del ensamblado principal.
        </summary>
      <returns>
          Versión del ensamblado principal.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary>
          Obtiene o establece el tipo en el que funciona el serializador.
        </summary>
      <returns>
          <see cref="T:System.Type" /> que se va a serializar.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary>
          Obtiene o establece el número de versión del ensamblado.
        </summary>
      <returns>
          Versión del ensamblado.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary>
          Indica a <see cref="T:System.Xml.Serialization.XmlSerializer" /> que el miembro debe tratarse como texto XML cuando se serializa o se deserializa la clase contenedora.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.
        </summary>
      <param name="type">
              <see cref="T:System.Type" /> del miembro que se va a serializar. 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary>
          Obtiene o establece el tipo de datos XSD (Lenguaje de definición de esquemas XML) del texto generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </summary>
      <returns>
          Tipo de datos de esquemas XML (XSD), tal como se define en el documento "XML Schema Part 2: Datatypes" del Consorcio WWC (www.w3.org).
        </returns>
      <exception cref="T:System.Exception">
              El tipo de datos de esquemas XML especificado no se puede asignar al tipo de datos .NET. 
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El tipo de datos de esquemas XML especificado no es válido para la propiedad y no se puede convertir al tipo de miembro. 
            </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary>
          Obtiene o establece el tipo del miembro.
        </summary>
      <returns>
          <see cref="T:System.Type" /> del miembro.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary>
          Controla el esquema XML generado cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa el destino del atributo.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> y especifica el nombre del tipo XML.
        </summary>
      <param name="typeName">
              Nombre del tipo XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera cuando serializa la instancia de clase (y reconoce al deserializar la instancia de clase). 
            </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary>
          Obtiene o establece un valor que determina si el tipo de esquema resultante es un tipo anónimo del XSD.
        </summary>
      <returns>
          
            Es true si el tipo de esquema resultante es un tipo anónimo del XSD; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary>
          Obtiene o establece un valor que indica si se debe incluir el tipo en los documentos de esquema XML.
        </summary>
      <returns>
          
            true para incluir el tipo en los documentos de esquema XML; en caso contrario, false.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary>
          Obtiene o establece el espacio de nombres del tipo XML.
        </summary>
      <returns>
          Espacio de nombres del tipo XML.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary>
          Obtiene o establece el nombre del tipo XML.
        </summary>
      <returns>
          Nombre del tipo XML.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary>
          Contiene una asignación de un tipo a otro.
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary>
          Nombre de tipo completo que incluye el espacio de nombres (o espacios de nombres) y el tipo.
        </summary>
      <returns>
          Nombre de tipo completo.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary>
          Obtiene el nombre de tipo del objeto asignado.
        </summary>
      <returns>
          Nombre de tipo del objeto asignado.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary>
          Obtiene el nombre del elemento XML del objeto asignado.
        </summary>
      <returns>
          Nombre del elemento XML del objeto asignado. El valor predeterminado es el nombre de la clase del objeto.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary>
          Obtiene el espacio de nombres XML del objeto asignado.
        </summary>
      <returns>
          Espacio de nombres XML del objeto asignado. El valor predeterminado es una cadena vacía ("").
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.Advanced.SchemaImporterExtension">
      <summary>
          Le permite personalizar el código generado a partir de un documento del Lenguaje de descripción de servicios Web (WSDL) cuando se utilizan herramientas de consulta automatizadas.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement(System.Xml.Schema.XmlSchemaAny,System.Boolean,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>
          Controla la importación de los elementos &lt;xsd:any&gt; en el esquema.
        </summary>
      <returns>
          Nombre del tipo CLR que asigna el elemento. 
        </returns>
      <param name="any">
              <see cref="T:System.Xml.Schema.XmlSchemaAny" /> que representa el elemento xsd:any encontrado en el documento de esquema XML (XSD).
            </param>
      <param name="mixed">
              Estructura <see cref="T:System.Boolean" /> que indica si el atributo complex del documento XSD se ha establecido en "mixed." Es true, si el atributo se ha establecido en "mixed"; de lo contrario, es false. 
            </param>
      <param name="schemas">
              Colección <see cref="T:System.Xml.Serialization.XmlSchemas" /> que contiene la colección de esquemas encontrados en el documento XSD.
            </param>
      <param name="importer">
              Clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> que es el importador que se está utilizando.
            </param>
      <param name="compileUnit">
              Clase <see cref="T:System.CodeDom.CodeCompileUnit" /> a la que se pueden agregar estructuras CodeDOM para generar código alternativo para el documento XSD. 
            </param>
      <param name="mainNamespace">
              Clase <see cref="T:System.CodeDom.CodeNamespace" /> que representa el espacio de nombres actual para el elemento.
            </param>
      <param name="options">
              Enumeración <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> para las opciones de configuración del compilador de código.
            </param>
      <param name="codeProvider">
              Clase <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que es el proveedor CodeDOM utilizado para generar el nuevo código. 
            </param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue(System.String,System.String)">
      <summary>
          Permite especificar el valor predeterminado para el tipo XSD que se está importando.
        </summary>
      <returns>
          Clase <see cref="T:System.CodeDom.CodeExpression" /> que establece el nuevo valor predeterminado.
        </returns>
      <param name="value">
              Valor encontrado en el documento XSD original.
            </param>
      <param name="type">
              Nombre del tipo XSD.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>
          Permite manipular el código que se ha generado examinando el esquema importado y especificando el tipo CLR que asigna.
        </summary>
      <returns>
          Nombre del tipo CLR que asigna.
        </returns>
      <param name="name">
              Nombre del elemento.
            </param>
      <param name="ns">
              Espacio de nombres del elemento.
            </param>
      <param name="context">
              Clase <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que representa información de esquema, como el número de líneas del elemento XML.
            </param>
      <param name="schemas">
              Colección <see cref="T:System.Xml.Serialization.XmlSchemas" /> que contiene la colección de esquemas del documento.
            </param>
      <param name="importer">
              Clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> que es el importador que se está utilizando.
            </param>
      <param name="compileUnit">
              Clase <see cref="T:System.CodeDom.CodeCompileUnit" /> a la que se pueden agregar estructuras CodeDOM para generar código alternativo para el documento XSD.
            </param>
      <param name="mainNamespace">
              Clase <see cref="T:System.CodeDom.CodeNamespace" /> que representa el espacio de nombres actual para el elemento.
            </param>
      <param name="options">
              Enumeración <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> para las opciones de configuración del compilador de código.
            </param>
      <param name="codeProvider">
              Clase <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que se utiliza para generar el nuevo código.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>
          Permite manipular el código que se ha generado examinando el esquema importado y especificando el tipo CLR que asigna.
        </summary>
      <returns>
          Nombre del tipo CLR que asigna.
        </returns>
      <param name="type">
              Clase <see cref="T:System.Xml.Schema.XmlSchemaType" /> que representa el tipo XSD.
            </param>
      <param name="context">
              Clase <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que representa información de esquema, como el número de líneas del elemento XML.
            </param>
      <param name="schemas">
              Colección <see cref="T:System.Xml.Serialization.XmlSchemas" /> que contiene la colección de esquemas del documento.
            </param>
      <param name="importer">
              Clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> que es el importador que se está utilizando.
            </param>
      <param name="compileUnit">
              Clase <see cref="T:System.CodeDom.CodeCompileUnit" /> a la que se pueden agregar estructuras CodeDOM para generar código alternativo para el documento XSD.
            </param>
      <param name="mainNamespace">
              Clase <see cref="T:System.CodeDom.CodeNamespace" /> que representa el espacio de nombres actual para el elemento.
            </param>
      <param name="options">
              Enumeración <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> para las opciones de configuración del compilador de código.
            </param>
      <param name="codeProvider">
              Clase <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que se utiliza para generar el nuevo código.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection">
      <summary>
          Representa una colección de objetos <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Add(System.String,System.Type)">
      <summary>
          Agrega la extensión del importador especificado a la colección. El parámetro nombre permite proporcionar un nombre personalizado para la extensión.
        </summary>
      <returns>
          Índice del elemento que se acaba de agregar.
        </returns>
      <param name="name">
              Un nombre personalizado para la extensión.
            </param>
      <param name="type">
              <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" /> que se va a agregar.
            </param>
      <exception cref="T:System.ArgumentException">
              El valor de tipo no hereda de <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" />.
            </exception>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Add(System.Xml.Serialization.Advanced.SchemaImporterExtension)">
      <summary>
          Agrega la extensión del importador especificado a la colección.
        </summary>
      <returns>
          Índice de la extensión que se ha agregado.
        </returns>
      <param name="extension">
              <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" /> que se va a agregar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Clear">
      <summary>
          Borra la colección de extensiones de importador.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Contains(System.Xml.Serialization.Advanced.SchemaImporterExtension)">
      <summary>
          Obtiene un valor que indica si la extensión de importador especificada existe en la colección.
        </summary>
      <returns>
          
            true si se encuentra la extensión; en caso contrario, false.
        </returns>
      <param name="extension">
              Objeto <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" /> que se va a buscar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.CopyTo(System.Xml.Serialization.Advanced.SchemaImporterExtension[],System.Int32)">
      <summary>
          Copia todos los elementos de la <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" /> actual a la matriz especificada de objetos <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> en el índice especificado. 
        </summary>
      <param name="array">
              <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> en la que se va a copiar la colección actual.
            </param>
      <param name="index">
              Índice de base cero en el que se agrega la colección.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.IndexOf(System.Xml.Serialization.Advanced.SchemaImporterExtension)">
      <summary>
          Busca el elemento especificado y devuelve el índice de base cero de la primera aparición encontrada en la colección.
        </summary>
      <returns>
          Índice del elemento encontrado.
        </returns>
      <param name="extension">
              Objeto <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> que se va a buscar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Insert(System.Int32,System.Xml.Serialization.Advanced.SchemaImporterExtension)">
      <summary>
          Inserta el objeto <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> especificado en la colección en el índice especificado.
        </summary>
      <param name="index">
              Índice de base cero en el que se debe insertar la extensión.
            </param>
      <param name="extension">
              <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> que se va a insertar.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Item(System.Int32)">
      <summary>
          Obtiene el objeto <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" /> en el índice especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" /> en el índice especificado.
        </returns>
      <param name="index">
              Índice del elemento que se va a buscar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Remove(System.String)">
      <summary>
          Quita la <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> especificada por nombre de la colección.
        </summary>
      <param name="name">
              Nombre del objeto <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> que se va a quitar. El nombre se establece utilizando el método <see cref="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Add(System.String,System.Type)" />.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Remove(System.Xml.Serialization.Advanced.SchemaImporterExtension)">
      <summary>
          Quita el <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> especificado de la colección.
        </summary>
      <param name="extension">
              <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> que se va a quitar. 
            </param>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.DateTimeSerializationSection">
      <summary>
          Controla las opciones de configuración para la serialización XML de instancias de <see cref="T:System.DateTime" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.DateTimeSerializationSection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.Configuration.DateTimeSerializationSection" />.
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.DateTimeSerializationSection.Mode">
      <summary>
          Obtiene o establece un valor que determina el formato de serialización.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.Serialization.Configuration.DateTimeSerializationSection.DateTimeSerializationMode" />.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.DateTimeSerializationSection.DateTimeSerializationMode">
      <summary>
          Determina el formato de serialización XML de los objetos <see cref="T:System.DateTime" />.
        </summary>
    </member>
    <member name="F:System.Xml.Serialization.Configuration.DateTimeSerializationSection.DateTimeSerializationMode.Default">
      <summary>
          Igual que Roundtrip.
        </summary>
    </member>
    <member name="F:System.Xml.Serialization.Configuration.DateTimeSerializationSection.DateTimeSerializationMode.Roundtrip">
      <summary>
          El serializador examina instancias <see cref="T:System.DateTime" /> individuales para determinar el formato de serialización: UTC, local o no especificado.
        </summary>
    </member>
    <member name="F:System.Xml.Serialization.Configuration.DateTimeSerializationSection.DateTimeSerializationMode.Local">
      <summary>
          El serializador da formato a todos los objetos <see cref="T:System.DateTime" /> como hora local. Esto es para asegurar la compatibilidad con las versiones 1.0 y 1.1.
        </summary>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.RootedPathValidator">
      <summary>
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.RootedPathValidator.#ctor"></member>
    <member name="M:System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)"></member>
    <member name="M:System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)"></member>
    <member name="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement">
      <summary>
          Controla la configuración de la clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> y especifica el nombre y el tipo de extensión.
        </summary>
      <param name="name">
              Nombre de la nueva extensión. El nombre debe ser único.
            </param>
      <param name="type">
              El tipo de la nueva extensión, especificado como una cadena.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement.#ctor(System.String,System.Type)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> utilizando el tipo y el nombre que se hayan especificado.
        </summary>
      <param name="name">
              Nombre de la nueva extensión. El nombre debe ser único.
            </param>
      <param name="type">
              <see cref="T:System.Type" /> de la nueva extensión.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement.Name">
      <summary>
          Obtiene o establece el nombre de la extensión.
        </summary>
      <returns>
          Nombre de la extensión.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement.Type">
      <summary>
          Obtiene o establece el tipo de la extensión.
        </summary>
      <returns>
          Un tipo de la extensión.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection">
      <summary>
          Controla los elementos XML utilizados para configurar la operación de <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection" />.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.Add(System.Xml.Serialization.Configuration.SchemaImporterExtensionElement)">
      <summary>
          Agrega un elemento al final de la colección.
        </summary>
      <param name="element">
              <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> que se va a agregar a la colección.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.Clear">
      <summary>
          Quita todos los elementos de la colección.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.IndexOf(System.Xml.Serialization.Configuration.SchemaImporterExtensionElement)">
      <summary>
          Devuelve el índice de base cero del primer elemento de la colección con el valor especificado.
        </summary>
      <returns>
          Índice del elemento encontrado.
        </returns>
      <param name="element">
              <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> que se desea buscar.
            </param>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.Item(System.Int32)">
      <summary>
          Obtiene o establece el objeto que representa el elemento XML en el índice especificado.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> en el índice especificado.
        </returns>
      <param name="index">
              Índice de base cero del elemento XML que se va a obtener o establecer.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              
                <paramref name="index" /> es menor que cero.
              O bien 
              
                <paramref name="index" /> es mayor o igual que Count.
            </exception>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.Item(System.String)">
      <summary>
          Obtiene o establece el elemento con el nombre especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> con el nombre especificado.
        </returns>
      <param name="name">
              Nombre del elemento que se va a obtener o establecer.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.Remove(System.String)">
      <summary>
          Quita de la colección el elemento con el nombre especificado.
        </summary>
      <param name="name">
              Nombre del elemento que se va a quitar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.Remove(System.Xml.Serialization.Configuration.SchemaImporterExtensionElement)">
      <summary>
          Quita la primera aparición de un elemento concreto de la colección.
        </summary>
      <param name="element">
              <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> que se va a quitar.
            </param>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.RemoveAt(System.Int32)">
      <summary>
          Quita de la colección un elemento situado en el índice especificado.
        </summary>
      <param name="index">
              Índice del objeto que se va a quitar.
            </param>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection">
      <summary>
          Controla la configuración de la clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />. Esta clase no se puede heredar.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection" />.
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection.SchemaImporterExtensions">
      <summary>
          Obtiene el objeto que representa la colección de extensiones.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection" /> que contiene los objetos que representan los elementos de configuración.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.SerializationSectionGroup">
      <summary>
          Controla los elementos XML utilizados para configurar la serialización XML.
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SerializationSectionGroup.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.Configuration.SerializationSectionGroup" />.
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SerializationSectionGroup.DateTimeSerialization">
      <summary>
          Obtiene el objeto que representa el elemento de configuración de serialización <see cref="T:System.DateTime" />.
        </summary>
      <returns>
          El objeto <see cref="T:System.Xml.Serialization.Configuration.DateTimeSerializationSection" /> que representa el elemento de configuración.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SerializationSectionGroup.SchemaImporterExtensions">
      <summary>
          Obtiene el objeto que representa la sección que contiene los elementos de configuración para <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection" /> representa el elemento schemaImporterExtenstion del archivo de configuración.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SerializationSectionGroup.XmlSerializer">
      <summary>
          Obtiene el objeto que representa el grupo de configuración para el <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </summary>
      <returns>
          <see cref="T:System.Xml.Serialization.Configuration.XmlSerializerSection" /> que representa el <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </returns>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.XmlSerializerSection">
      <summary>
          Controla los elementos XML utilizados para configurar la serialización XML. 
        </summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.XmlSerializerSection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.Configuration.XmlSerializerSection" />. 
        </summary>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.XmlSerializerSection.CheckDeserializeAdvances">
      <summary>
          Obtiene o establece un valor que determina si se hace una comprobación adicional de progreso de <see cref="T:System.Xml.Serialization.XmlSerializer" />.
        </summary>
      <returns>
          
            true si se hace la comprobación; de lo contrario, false. El valor predeterminado es true.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.XmlSerializerSection.TempFilesLocation"></member>
    <member name="T:System.Xml.XPath.IXPathNavigable">
      <summary>
          Proporciona un descriptor de acceso a la clase <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </summary>
    </member>
    <member name="M:System.Xml.XPath.IXPathNavigable.CreateNavigator">
      <summary>
          Devuelve un nuevo objeto <see cref="T:System.Xml.XPath.XPathNavigator" />. 
        </summary>
      <returns>
          Un objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
    </member>
    <member name="T:System.Xml.XPath.XmlCaseOrder">
      <summary>
          Especifica el criterio de ordenación para las mayúsculas y minúsculas.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.None">
      <summary>
          Pase por alto la distinción entre mayúsculas y minúsculas.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.UpperFirst">
      <summary>
          Las mayúsculas se ordenan antes que las minúsculas.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.LowerFirst">
      <summary>
          Las minúsculas se ordenan antes que las mayúsculas.
        </summary>
    </member>
    <member name="T:System.Xml.XPath.XmlDataType">
      <summary>
          Especifica el tipo de datos que se utiliza para determinar el criterio de ordenación.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Text">
      <summary>
          Los valores se ordenan alfabéticamente.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Number">
      <summary>
          Los valores se ordenan numéricamente.
        </summary>
    </member>
    <member name="T:System.Xml.XPath.XmlSortOrder">
      <summary>
          Especifica el criterio de ordenación.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Ascending">
      <summary>
          Los nodos se ordenan de manera ascendente. Por ejemplo, si se ordenan los números 1, 2, 3 y 4 de manera ascendente, aparecerán como 1, 2, 3, 4.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Descending">
      <summary>
          Los nodos se ordenan de manera descendente. Por ejemplo, si se ordenan los números 1, 2, 3 y 4 de manera descendente, aparecerán como 4, 3, 2, 1.
        </summary>
    </member>
    <member name="T:System.Xml.XPath.XPathDocument">
      <summary>
          Proporciona una representación rápida, de sólo lectura y en la memoria de un documento XML, utilizando el modelo de datos de XPath.
        </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.IO.Stream)">
      <summary>
          Inicializa una instancia nueva de la clase <see cref="T:System.Xml.XPath.XPathDocument" /> a partir de los datos XML del objeto <see cref="T:System.IO.Stream" /> especificado.
        </summary>
      <param name="stream">
              El objeto <see cref="T:System.IO.Stream" /> que contiene los datos XML.
            </param>
      <exception cref="T:System.Xml.XmlException">
              Se ha detectado un error en los datos XML. El objeto <see cref="T:System.Xml.XPath.XPathDocument" /> permanece vacío. 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El objeto <see cref="T:System.IO.Stream" /> que se pasa como parámetro es null.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.IO.TextReader)">
      <summary>
          Inicializa una instancia nueva de la clase <see cref="T:System.Xml.XPath.XPathDocument" /> a partir de los datos XML que contiene el objeto <see cref="T:System.IO.TextReader" /> especificado.
        </summary>
      <param name="textReader">
              El objeto <see cref="T:System.IO.TextReader" /> que contiene los datos XML.
            </param>
      <exception cref="T:System.Xml.XmlException">
              Se ha detectado un error en los datos XML. El objeto <see cref="T:System.Xml.XPath.XPathDocument" /> permanece vacío. 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El objeto <see cref="T:System.IO.TextReader" /> que se pasa como parámetro es null.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.String)">
      <summary>
          Inicializa una instancia nueva de la clase <see cref="T:System.Xml.XPath.XPathDocument" /> a partir de los datos XML del archivo especificado.
        </summary>
      <param name="uri">
              La ruta de acceso del archivo que contiene los datos XML.
            </param>
      <exception cref="T:System.Xml.XmlException">
              Se ha detectado un error en los datos XML. El objeto <see cref="T:System.Xml.XPath.XPathDocument" /> permanece vacío. 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El parámetro de ruta de acceso al archivo es null.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.String,System.Xml.XmlSpace)">
      <summary>
          Inicializa una instancia nueva de la clase <see cref="T:System.Xml.XPath.XPathDocument" /> a partir de los datos XML del archivo especificado con el control de espacio en blanco especificado.
        </summary>
      <param name="uri">
              La ruta de acceso del archivo que contiene los datos XML.
            </param>
      <param name="space">
              Objeto <see cref="T:System.Xml.XmlSpace" />.
            </param>
      <exception cref="T:System.Xml.XmlException">
              Se ha detectado un error en los datos XML. El objeto <see cref="T:System.Xml.XPath.XPathDocument" /> permanece vacío. 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El parámetro de ruta de acceso del archivo o el parámetro de objeto <see cref="T:System.Xml.XmlSpace" /> es null.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.Xml.XmlReader)">
      <summary>
          Inicializa una instancia nueva de la clase <see cref="T:System.Xml.XPath.XPathDocument" /> a partir de los datos XML que contiene el objeto <see cref="T:System.Xml.XmlReader" /> especificado.
        </summary>
      <param name="reader">
              El objeto <see cref="T:System.Xml.XmlReader" /> que contiene los datos XML. 
            </param>
      <exception cref="T:System.Xml.XmlException">
              Se ha detectado un error en los datos XML. El objeto <see cref="T:System.Xml.XPath.XPathDocument" /> permanece vacío. 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El objeto <see cref="T:System.Xml.XmlReader" /> que se pasa como parámetro es null.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.Xml.XmlReader,System.Xml.XmlSpace)">
      <summary>
          Inicializa una instancia nueva de la clase <see cref="T:System.Xml.XPath.XPathDocument" /> a partir de los datos XML contenidos en el objeto <see cref="T:System.Xml.XmlReader" /> especificado con el control del espacio en blanco especificado.
        </summary>
      <param name="reader">
              El objeto <see cref="T:System.Xml.XmlReader" /> que contiene los datos XML.
            </param>
      <param name="space">
              Objeto <see cref="T:System.Xml.XmlSpace" />.
            </param>
      <exception cref="T:System.Xml.XmlException">
              Se ha detectado un error en los datos XML. El objeto <see cref="T:System.Xml.XPath.XPathDocument" /> permanece vacío. 
            </exception>
      <exception cref="T:System.ArgumentNullException">
              Los parámetros de objeto <see cref="T:System.Xml.XmlReader" /> o <see cref="T:System.Xml.XmlSpace" /> son null.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.CreateNavigator">
      <summary>
          Inicializa un objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> de sólo lectura para desplazarse por los nodos de este <see cref="T:System.Xml.XPath.XPathDocument" />.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> de sólo lectura.
        </returns>
    </member>
    <member name="T:System.Xml.XPath.XPathException">
      <summary>
          Proporciona la excepción que se produce cuando se produce un error durante el procesamiento de una expresión XPath. 
        </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathException.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XPath.XPathException" />.
        </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Utiliza la información en los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" /> para inicializar una nueva instancia de la clase <see cref="T:System.Xml.XPath.XPathException" />.
        </summary>
      <param name="info">
              Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene todas las propiedades de una <see cref="T:System.Xml.XPath.XPathException" />. 
            </param>
      <param name="context">
              Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />. 
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathException.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XPath.XPathException" /> con el mensaje de la excepción especificado.
        </summary>
      <param name="message">
              Descripción de la condición de error.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathException.#ctor(System.String,System.Exception)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XPath.XPathException" /> mediante el mensaje de excepción especificado y el objeto <see cref="T:System.Exception" />.
        </summary>
      <param name="message">
              Descripción de la condición de error. 
            </param>
      <param name="innerException">
              <see cref="T:System.Exception" /> que produjo <see cref="T:System.Xml.XPath.XPathException" />, en caso de que exista. Este valor puede ser null. 
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Incluye en secuencia todas las propiedades <see cref="T:System.Xml.XPath.XPathException" /> en la clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> para el contexto <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificado.
        </summary>
      <param name="info">
              Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.
            </param>
      <param name="context">
              Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.
            </param>
    </member>
    <member name="P:System.Xml.XPath.XPathException.Message">
      <summary>
          Obtiene la descripción de la condición de error para esta excepción.
        </summary>
      <returns>
          Descripción string de la condición de error para esta excepción.
        </returns>
    </member>
    <member name="T:System.Xml.XPath.XPathExpression">
      <summary>
          Proporciona una clase con tipo que representa una expresión XPath compilada.
        </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)">
      <summary>
          Cuando se reemplaza en una clase derivada, ordena los nodos seleccionados por la expresión XPath según el objeto <see cref="T:System.Collections.IComparer" /> especificado.
        </summary>
      <param name="expr">
              Objeto que representa el criterio de ordenación. Éste puede ser el valor string del nodo o un objeto <see cref="T:System.Xml.XPath.XPathExpression" /> con una expresión XPath compilada.
            </param>
      <param name="comparer">
              Un objeto <see cref="T:System.Collections.IComparer" /> que proporciona las comparaciones de tipo de datos específicas para comprobar si dos objetos son equivalentes. 
            </param>
      <exception cref="T:System.Xml.XPath.XPathException">
              <see cref="T:System.Xml.XPath.XPathExpression" /> o el criterio de ordenación incluye un prefijo y no se ha proporcionado un <see cref="T:System.Xml.XmlNamespaceManager" />, o bien no se detecta el prefijo en el <see cref="T:System.Xml.XmlNamespaceManager" /> proporcionado.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)">
      <summary>
          Cuando se reemplaza en una clase derivada, ordena los nodos seleccionados por la expresión XPath según los parámetros proporcionados.
        </summary>
      <param name="expr">
              Objeto que representa el criterio de ordenación. Éste puede ser el valor string del nodo o un objeto <see cref="T:System.Xml.XPath.XPathExpression" /> con una expresión XPath compilada. 
            </param>
      <param name="order">
              Un valor <see cref="T:System.Xml.XPath.XmlSortOrder" /> que indica el criterio de ordenación. 
            </param>
      <param name="caseOrder">
              Un valor <see cref="T:System.Xml.XPath.XmlCaseOrder" /> que indica cómo se ordenan las mayúsculas y minúsculas.
            </param>
      <param name="lang">
              Idioma que se va a utilizar para la comparación. Utiliza la clase <see cref="T:System.Globalization.CultureInfo" /> que se puede pasar al método <see cref="Overload:System.String.Compare" /> para los tipos de lenguaje, por ejemplo, "us-en" para el inglés americano. Si se especifica una cadena vacía, se utiliza el entorno del sistema para determinar <see cref="T:System.Globalization.CultureInfo" />. 
            </param>
      <param name="dataType">
              Un valor <see cref="T:System.Xml.XPath.XmlDataType" /> que indica el criterio de ordenación para el tipo de datos. 
            </param>
      <exception cref="T:System.Xml.XPath.XPathException">
              <see cref="T:System.Xml.XPath.XPathExpression" /> o el criterio de ordenación incluye un prefijo y no se ha proporcionado un <see cref="T:System.Xml.XmlNamespaceManager" />, o bien no se detecta el prefijo en el <see cref="T:System.Xml.XmlNamespaceManager" /> proporcionado. 
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Clone">
      <summary>
          Cuando se reemplaza en una clase derivada, devuelve un clon de este objeto <see cref="T:System.Xml.XPath.XPathExpression" />.
        </summary>
      <returns>
          Nuevo objeto <see cref="T:System.Xml.XPath.XPathExpression" />.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String)">
      <summary>
          Compila la expresión XPath especificada y devuelve un objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que representa la expresión XPath.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Xml.XPath.XPathExpression" />.
        </returns>
      <param name="xpath">
              Una expresión XPath.
            </param>
      <exception cref="T:System.ArgumentException">
              El parámetro de la expresión XPath no es una expresión XPath válida.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath no es válida.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>
          Compila la expresión XPath especificada, con el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para la resolución de espacio de nombres y devuelve un objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que representa la expresión XPath.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Xml.XPath.XPathExpression" />.
        </returns>
      <param name="xpath">
              Una expresión XPath.
            </param>
      <param name="nsResolver">
              Un objeto que implementa la interfaz <see cref="T:System.Xml.IXmlNamespaceResolver" /> para la resolución de espacio de nombres.
            </param>
      <exception cref="T:System.ArgumentException">
              El parámetro de la expresión XPath no es una expresión XPath válida.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath no es válida.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.Expression">
      <summary>
          Cuando se reemplaza en una clase derivada, se obtiene una representación string de <see cref="T:System.Xml.XPath.XPathExpression" />.
        </summary>
      <returns>
          Representación string del objeto <see cref="T:System.Xml.XPath.XPathExpression" />.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.ReturnType">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el tipo de resultado de la expresión XPath.
        </summary>
      <returns>
          Valor de <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de resultado de la expresión XPath.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)">
      <summary>
          Cuando se reemplaza en una clase derivada, especifica el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se va a utilizar para la resolución de espacios de nombres.
        </summary>
      <param name="nsResolver">
              Un objeto que implementa la interfaz <see cref="T:System.Xml.IXmlNamespaceResolver" /> a utilizar para la resolución de espacio de nombres.
            </param>
      <exception cref="T:System.Xml.XPath.XPathException">
              El parámetro del objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> no se deriva de <see cref="T:System.Xml.IXmlNamespaceResolver" />. 
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)">
      <summary>
          Cuando se reemplaza en una clase derivada, especifica el objeto <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para la resolución de espacios de nombres.
        </summary>
      <param name="nsManager">
              Objeto <see cref="T:System.Xml.XmlNamespaceManager" /> que se utiliza para la resolución del espacio de nombres. 
            </param>
      <exception cref="T:System.Xml.XPath.XPathException">
              El parámetro de objeto <see cref="T:System.Xml.XmlNamespaceManager" /> no se deriva de la clase <see cref="T:System.Xml.XmlNamespaceManager" />. 
            </exception>
    </member>
    <member name="T:System.Xml.XPath.XPathItem">
      <summary>
          Representa un elemento en el Modelo de datos de XQuery 1.0 y XPath 2.0.
        </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XPath.XPathItem" />.
        </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.IsNode">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene un valor que indica si el elemento representa un nodo XPath o un valor atómico.
        </summary>
      <returns>
          
            true si el elemento representa un nodo XPath; false si el elemento representa un valor atómico.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.TypedValue">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el elemento actual como un objeto sometido a conversión boxing del tipo .NET Framework versión 2.0 más adecuado según su tipo de esquema.
        </summary>
      <returns>
          El elemento actual como un objeto sometido a conversión boxing del tipo .NET Framework más adecuado.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.Value">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor string del elemento.
        </summary>
      <returns>
          Valor string del elemento.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type)">
      <summary>
          Devuelve el valor del elemento como el tipo especificado.
        </summary>
      <returns>
          Valor del elemento como tipo solicitado.
        </returns>
      <param name="returnType">
              Tipo como el que se tiene que devolver el valor del elemento.
            </param>
      <exception cref="T:System.FormatException">
              El valor del elemento no está en el formato correcto para el tipo de destino.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión intentada no es válida.
            </exception>
      <exception cref="T:System.OverflowException">
              La conversión intentada ha producido un desbordamiento.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>
          Cuando se reemplaza en una clase derivada, devuelve el valor del elemento como el tipo especificado mediante el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver los prefijos de los espacios de nombres.
        </summary>
      <returns>
          Valor del elemento como tipo solicitado.
        </returns>
      <param name="returnType">
              Tipo como el que se tiene que devolver el valor del elemento.
            </param>
      <param name="nsResolver">
              Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de los espacios de nombres.
            </param>
      <exception cref="T:System.FormatException">
              El valor del elemento no está en el formato correcto para el tipo de destino.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión intentada no es válida.
            </exception>
      <exception cref="T:System.OverflowException">
              La conversión intentada ha producido un desbordamiento.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsBoolean">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como <see cref="T:System.Boolean" />.
        </summary>
      <returns>
          Valor del elemento como <see cref="T:System.Boolean" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.Boolean" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.Boolean" /> intentada no es válida.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDateTime">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como <see cref="T:System.DateTime" />.
        </summary>
      <returns>
          Valor del elemento como <see cref="T:System.DateTime" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.DateTime" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.DateTime" /> intentada no es válida.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDouble">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como <see cref="T:System.Double" />.
        </summary>
      <returns>
          Valor del elemento como <see cref="T:System.Double" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.Double" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.Double" /> intentada no es válida.
            </exception>
      <exception cref="T:System.OverflowException">
              La conversión intentada ha producido un desbordamiento.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsInt">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como <see cref="T:System.Int32" />.
        </summary>
      <returns>
          Valor del elemento como <see cref="T:System.Int32" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.Int32" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.Int32" /> intentada no es válida.
            </exception>
      <exception cref="T:System.OverflowException">
              La conversión intentada ha producido un desbordamiento.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsLong">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como <see cref="T:System.Int64" />.
        </summary>
      <returns>
          Valor del elemento como <see cref="T:System.Int64" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.Int64" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.Int64" /> intentada no es válida.
            </exception>
      <exception cref="T:System.OverflowException">
              La conversión intentada ha producido un desbordamiento.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueType">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el valor .NET Framework versión 2.0 del elemento.
        </summary>
      <returns>
          Tipo .NET Framework del elemento. El valor predeterminado es <see cref="T:System.String" />.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.XmlType">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene <see cref="T:System.Xml.Schema.XmlSchemaType" /> del elemento.
        </summary>
      <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaType" /> del elemento.
        </returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNamespaceScope">
      <summary>
          Define el ámbito del espacio de nombres.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.All">
      <summary>
          Devuelve todos los espacios de nombres definidos en el ámbito del nodo actual. Esto incluye el espacio de nombres xmlns:xml que siempre se declara de manera implícita. No está definido el orden de los espacios de nombres que se devuelven.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.ExcludeXml">
      <summary>
          Devuelve todos los espacios de nombres definidos en el ámbito del nodo actual, excluyendo el espacio de nombres xmlns:xml. Siempre se declara implícitamente el espacio de nombres xmlns:xml. No está definido el orden de los espacios de nombres que se devuelven.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.Local">
      <summary>
          Devuelve todos los espacios de nombres definidos localmente en el nodo actual. 
        </summary>
    </member>
    <member name="T:System.Xml.XPath.XPathNavigator">
      <summary>
          Proporciona un modelo de cursor para navegar y editar datos XML.
        </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild">
      <summary>
          Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear uno más nuevos nodos secundarios al final de la lista de nodos secundarios del nodo actual.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear un nuevo nodo secundario al final de la lista de nodos secundarios del nodo actual.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual donde se encuentra <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz ni un nodo de elemento.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)">
      <summary>
          Crea un nuevo nodo secundario al final de la lista de nodos secundarios del nodo actual utilizando la cadena de datos XML especificada.
        </summary>
      <param name="newChild">
              La cadena de datos XML del nuevo nodo secundario.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El parámetro de cadena de datos XML es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual donde se encuentra <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz ni un nodo de elemento.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El parámetro de cadena de datos XML no tiene un formato correcto.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)">
      <summary>
          Crea un nuevo nodo secundario al final de la lista de nodos secundarios del nodo actual mediante el contenido XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado.
        </summary>
      <param name="newChild">
              Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo secundario.
            </param>
      <exception cref="T:System.ArgumentException">
              El objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de error o cerrado.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual donde se encuentra <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz ni un nodo de elemento.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no tiene un formato correcto.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)">
      <summary>
          Crea un nuevo nodo secundario al final de la lista de nodos secundarios del nodo actual mediante los nodos del <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.
        </summary>
      <param name="newChild">
              Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo para agregarlo como nuevo nodo secundario.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual donde se encuentra <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz ni un nodo de elemento.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)">
      <summary>
          Crea un nuevo nodo de elemento secundario al final de la lista de nodos secundarios del nodo actual mediante el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificados con el valor seleccionado.
        </summary>
      <param name="prefix">
              Prefijo del espacio de nombres del nuevo nodo de elemento secundario (si lo hay).
            </param>
      <param name="localName">
              Nombre local del nuevo nodo de elemento secundario (si lo hay).
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del nuevo nodo de elemento secundario (si lo hay). <see cref="F:System.String.Empty" /> y null son equivalentes.
            </param>
      <param name="value">
              Valor del nuevo nodo de elemento secundario. Si se pasan <see cref="F:System.String.Empty" /> o null, se crea un elemento vacío.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual donde se encuentra <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz ni un nodo de elemento.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.BaseURI">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el URI base del nodo actual.
        </summary>
      <returns>
          La ubicación desde la que se cargó el nodo o <see cref="F:System.String.Empty" /> si no hay ningún valor.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.CanEdit">
      <summary>
          Obtiene un valor que indica si <see cref="T:System.Xml.XPath.XPathNavigator" /> puede editar los datos XML subyacentes.
        </summary>
      <returns>
          
            Es true si <see cref="T:System.Xml.XPath.XPathNavigator" /> puede editar los datos XML subyacentes; en caso contrario, es false.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary>
          Comprueba que los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> se ajustan al esquema del lenguaje de definición de esquemas XML (XSD) proporcionado.
        </summary>
      <returns>
          
            Es true si no se produce ningún error de validación de esquema; de lo contrario, es false.
        </returns>
      <param name="schemas">
              <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas utilizados para validar los datos XML contenidos en <see cref="T:System.Xml.XPath.XPathNavigator" />.
            </param>
      <param name="validationEventHandler">
              <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recibe información sobre los errores y advertencias de validación del esquema.
            </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
              Se ha producido un error de validación de esquema y no se ha especificado ningún <see cref="T:System.Xml.Schema.ValidationEventHandler" /> para controlar los errores de validación.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> se coloca en un nodo que no es un elemento, ni un atributo ni el nodo raíz, o bien no hay información de tipo para realizar la validación.
            </exception>
      <exception cref="T:System.ArgumentException">
              Se llamó al método <see cref="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" /> con un parámetro <see cref="T:System.Xml.Schema.XmlSchemaSet" /> cuando <see cref="T:System.Xml.XPath.XPathNavigator" /> no estaba colocado en el nodo raíz de los datos XML.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Clone">
      <summary>
          Cuando se reemplaza en una clase derivada, se crea un nuevo <see cref="T:System.Xml.XPath.XPathNavigator" /> que se coloca en el mismo nodo que este <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </summary>
      <returns>
          Nuevo objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que se sitúa en el mismo nodo que <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)">
      <summary>
          Compara la posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> actual con la del <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.
        </summary>
      <returns>
          Valor de <see cref="T:System.Xml.XmlNodeOrder" /> que representa la posición comparativa de los dos objetos <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
      <param name="nav">
              Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> con el que se va a comparar.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Compile(System.String)">
      <summary>
          Compila una cadena que representa una expresión XPath y devuelve un objeto <see cref="T:System.Xml.XPath.XPathExpression" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que representa la expresión XPath.
        </returns>
      <param name="xpath">
              Cadena que representa a una expresión XPath.
            </param>
      <exception cref="T:System.ArgumentException">
              El parámetro <paramref name="xpath" /> contiene una expresión XPath que no es válida.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath no es válida.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)">
      <summary>
          Crea un nodo de atributo en el nodo del elemento actual utilizando el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificado con el valor especificado.
        </summary>
      <param name="prefix">
              Prefijo del espacio de nombres del nuevo nodo de atributo (si lo hay).
            </param>
      <param name="localName">
              Nombre local del nuevo nodo de atributo que no puede ser <see cref="F:System.String.Empty" /> ni null.
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del nuevo nodo de atributo (si lo hay).
            </param>
      <param name="value">
              Valor del nuevo nodo de atributo. Si se pasan <see cref="F:System.String.Empty" /> o null, se crea un nodo de atributo vacío.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no está situado en ningún nodo de elemento.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttributes">
      <summary>
          Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear nuevos atributos en el elemento actual.
        </summary>
      <returns>
          Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear nuevos atributos en el elemento actual.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no está situado en ningún nodo de elemento.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateNavigator">
      <summary>
          Devuelve una copia de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </summary>
      <returns>
          Una copia <see cref="T:System.Xml.XPath.XPathNavigator" /> de este <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)">
      <summary>
          Elimina un intervalo de nodos relacionados desde el nodo actual hasta al nodo especificado.
        </summary>
      <param name="lastSiblingToDelete">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el último nodo relacionado del intervalo que se va a eliminar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado es null.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El último nodo especificado que se va a eliminar no es un nodo relacionado válido del nodo actual.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteSelf">
      <summary>
          Elimina el nodo actual y sus nodos secundarios.
        </summary>
      <exception cref="T:System.InvalidOperationException">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> está colocado en un nodo que no se puede eliminar, como el nodo raíz o un nodo de espacio de nombres.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)">
      <summary>
          Evalúa la expresión XPath especificada y devuelve el resultado de tipo.
        </summary>
      <returns>
          Resultado de la expresión (valor booleano, número, cadena o conjunto de nodos). Se asigna a los objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> o <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.
        </returns>
      <param name="xpath">
              Cadena que representa a una expresión XPath que se puede evaluar.
            </param>
      <exception cref="T:System.ArgumentException">
              El tipo de valor devuelto de la expresión XPath es un conjunto de nodos.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath no es válida.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>
          Evalúa la expresión XPath especificada y devuelve el resultado de tipo mediante el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver prefijos de espacio de nombres en la expresión XPath.
        </summary>
      <returns>
          Resultado de la expresión (valor booleano, número, cadena o conjunto de nodos). Se asigna a los objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> o <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.
        </returns>
      <param name="xpath">
              Cadena que representa a una expresión XPath que se puede evaluar.
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de espacio de nombres en la expresión XPath.
            </param>
      <exception cref="T:System.ArgumentException">
              El tipo de valor devuelto de la expresión XPath es un conjunto de nodos.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath no es válida.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
      <summary>
          Evalúa la expresión <see cref="T:System.Xml.XPath.XPathExpression" /> y devuelve el resultado de tipo.
        </summary>
      <returns>
          Resultado de la expresión (valor booleano, número, cadena o conjunto de nodos). Se asigna a los objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> o <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.
        </returns>
      <param name="expr">
              <see cref="T:System.Xml.XPath.XPathExpression" /> que se puede evaluar.
            </param>
      <exception cref="T:System.ArgumentException">
              El tipo de valor devuelto de la expresión XPath es un conjunto de nodos.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath no es válida.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
      <summary>
          Utiliza el contexto proporcionado para evaluar la expresión <see cref="T:System.Xml.XPath.XPathExpression" /> y devuelve el resultado con tipo.
        </summary>
      <returns>
          Resultado de la expresión (valor booleano, número, cadena o conjunto de nodos). Se asigna a los objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> o <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.
        </returns>
      <param name="expr">
              <see cref="T:System.Xml.XPath.XPathExpression" /> que se puede evaluar.
            </param>
      <param name="context">
              <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que señala al conjunto de nodos seleccionado en el que se va a llevar a cabo la evaluación.
            </param>
      <exception cref="T:System.ArgumentException">
              El tipo de valor devuelto de la expresión XPath es un conjunto de nodos.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath no es válida.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)">
      <summary>
          Obtiene el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el valor del atributo especificado; <see cref="F:System.String.Empty" /> si no se encuentra ningún atributo coincidente o si <see cref="T:System.Xml.XPath.XPathNavigator" /> no está colocado en un nodo de elemento.
        </returns>
      <param name="localName">
              Nombre local del atributo.
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)">
      <summary>
          Devuelve el valor del nodo Namespace correspondiente al nombre local especificado.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el valor del nodo de espacio de nombres; <see cref="F:System.String.Empty" /> si no se encuentra ningún nodo de espacio de nombres y si <see cref="T:System.Xml.XPath.XPathNavigator" /> no está situado en un nodo de elemento.
        </returns>
      <param name="name">
              Nombre local del nodo Namespace.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>
          Devuelve los espacios de nombres en el ámbito del nodo actual.
        </summary>
      <returns>
          Colección <see cref="T:System.Collections.Generic.IDictionary`2" /> de nombres de espacio de nombres con clave de prefijo.
        </returns>
      <param name="scope">
              Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica los espacios de nombres que se van a devolver.
            </param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasAttributes">
      <summary>
          Obtiene un valor que indica si el nodo actual tiene atributos.
        </summary>
      <returns>
          Devuelve true si el nodo actual tiene atributos y false si el nodo actual no tiene atributos o si <see cref="T:System.Xml.XPath.XPathNavigator" /> no está situado en un nodo de elementos.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasChildren">
      <summary>
          Obtiene un valor que indica si el nodo actual tiene nodos secundarios.
        </summary>
      <returns>
          Devuelve true si el nodo actual tiene nodos secundarios; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.InnerXml">
      <summary>
          Obtiene o establece el marcado que representa los nodos secundarios del nodo actual.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el marcado de los nodos secundarios del nodo actual.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              No se puede establecer la propiedad <see cref="P:System.Xml.XPath.XPathNavigator.InnerXml" />.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter">
      <summary>
          Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear un nuevo nodo relacionado detrás el nodo seleccionado actualmente.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear un nuevo nodo relacionado detrás el nodo seleccionado actualmente.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado detrás del nodo actual.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)">
      <summary>
          Crea un nuevo nodo relacionado detrás del nodo seleccionado actualmente utilizando la cadena XML especificada.
        </summary>
      <param name="newSibling">
              La cadena de datos XML del nuevo nodo relacionado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El parámetro de cadena XML es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado detrás del nodo actual.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El parámetro de cadena XML no tiene un formato correcto.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)">
      <summary>
          Crea un nuevo nodo relacionado detrás del nodo actualmente seleccionado utilizando el contenido XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado.
        </summary>
      <param name="newSibling">
              Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo relacionado.
            </param>
      <exception cref="T:System.ArgumentException">
              El objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de error o cerrado.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado detrás del nodo actual.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no tiene un formato correcto.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)">
      <summary>
          Crea un nuevo nodo relacionado detrás del nodo actualmente seleccionado mediante los nodos del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.
        </summary>
      <param name="newSibling">
              Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo que se va a agregar como nuevo nodo secundario.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado detrás del nodo actual.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore">
      <summary>
          Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear un nuevo nodo relacionado delante el nodo seleccionado actualmente.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear un nuevo nodo relacionado delante del nodo seleccionado actualmente.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado delante del nodo actual.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)">
      <summary>
          Crea un nuevo nodo relacionado delante del nodo seleccionado actualmente utilizando la cadena XML especificada.
        </summary>
      <param name="newSibling">
              La cadena de datos XML del nuevo nodo relacionado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El parámetro de cadena XML es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado delante del nodo actual.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El parámetro de cadena XML no tiene un formato correcto.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)">
      <summary>
          Crea un nuevo nodo relacionado delante del nodo actualmente seleccionado utilizando el contenido XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado.
        </summary>
      <param name="newSibling">
              Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo relacionado.
            </param>
      <exception cref="T:System.ArgumentException">
              El objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de error o cerrado.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado delante del nodo actual.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no tiene un formato correcto.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)">
      <summary>
          Crea un nuevo nodo relacionado delante del nodo actualmente seleccionado mediante los nodos del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.
        </summary>
      <param name="newSibling">
              Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo que se va a agregar como nuevo nodo secundario.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado delante del nodo actual.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)">
      <summary>
          Crea un nuevo elemento relacionado detrás del nodo actual mediante el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificado con el valor seleccionado.
        </summary>
      <param name="prefix">
              Prefijo del espacio de nombres del nuevo elemento secundario (si lo hay).
            </param>
      <param name="localName">
              Nombre local del nuevo elemento secundario (si lo hay).
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del nuevo elemento secundario (si lo hay). <see cref="F:System.String.Empty" /> y null son equivalentes.
            </param>
      <param name="value">
              Valor del nuevo elemento secundario. Si se pasan <see cref="F:System.String.Empty" /> o null, se crea un elemento vacío.
            </param>
      <exception cref="T:System.InvalidOperationException">
              La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado detrás del nodo actual.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)">
      <summary>
          Crea un nuevo elemento relacionado delante del nodo actual mediante el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificado con el valor seleccionado.
        </summary>
      <param name="prefix">
              Prefijo del espacio de nombres del nuevo elemento secundario (si lo hay).
            </param>
      <param name="localName">
              Nombre local del nuevo elemento secundario (si lo hay).
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del nuevo elemento secundario (si lo hay). <see cref="F:System.String.Empty" /> y null son equivalentes.
            </param>
      <param name="value">
              Valor del nuevo elemento secundario. Si se pasan <see cref="F:System.String.Empty" /> o null, se crea un elemento vacío.
            </param>
      <exception cref="T:System.InvalidOperationException">
              La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado delante del nodo actual.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)">
      <summary>
          Determina si el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado es un descendiente del objeto actual <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </summary>
      <returns>
          Devuelve true si el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado es descendiente del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> actual; en caso contrario, es false.
        </returns>
      <param name="nav">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> que se compara con este <see cref="T:System.Xml.XPath.XPathNavigator" />.
            </param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsEmptyElement">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene un valor que indica si el nodo actual es un elemento vacío sin etiqueta de cierre de elemento.
        </summary>
      <returns>
          Devuelve true si el nodo actual es un elemento vacío; de lo contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsNode">
      <summary>
          Obtiene un valor que indica si el nodo actual representa un nodo XPath.
        </summary>
      <returns>
          Siempre devuelve true.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
      <summary>
          Cuando se reemplaza en una clase derivada, determina si el <see cref="T:System.Xml.XPath.XPathNavigator" /> actual está en la misma posición que el <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.
        </summary>
      <returns>
          Devuelve true si los dos objetos <see cref="T:System.Xml.XPath.XPathNavigator" /> tienen la misma posición; en caso contrario, es false.
        </returns>
      <param name="other">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> que se compara con este <see cref="T:System.Xml.XPath.XPathNavigator" />.
            </param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.LocalName">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene la propiedad <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> del nodo actual sin prefijo de espacio de nombres.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el nombre local del nodo actual o <see cref="F:System.String.Empty" /> si el nodo actual no tiene nombre (por ejemplo, texto o nodos de comentario).
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)">
      <summary>
          Obtiene el identificador URI de espacio de nombres del prefijo especificado.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el URI de espacio de nombres asignado al prefijo de espacio de nombres especificado; es null si no se asigna ningún URI de espacio de nombres al prefijo especificado. La cadena <see cref="T:System.String" /> devuelta está subdividida.
        </returns>
      <param name="prefix">
              Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase <see cref="F:System.String.Empty" />.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)">
      <summary>
          Obtiene el prefijo declarado del URI de espacio de nombres especificado.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el prefijo de espacio de nombres asignado al URI de espacio de nombres especificado; en caso contrario, es <see cref="F:System.String.Empty" /> si no se asigna ningún prefijo al URI de espacio de nombres especificado. La cadena <see cref="T:System.String" /> devuelta está subdividida.
        </returns>
      <param name="namespaceURI">
              URI de espacio de nombres que se va a resolver para el prefijo.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.String)">
      <summary>
          Determina si el nodo actual coincide con la expresión XPath especificada.
        </summary>
      <returns>
          Devuelve true si el nodo actual coincide con la expresión XPath especificada; de lo contrario, es false.
        </returns>
      <param name="xpath">
              Expresión XPath.
            </param>
      <exception cref="T:System.ArgumentException">
              No se puede evaluar la expresión XPath.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath no es válida.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)">
      <summary>
          Determina si el nodo actual coincide con la expresión <see cref="T:System.Xml.XPath.XPathExpression" /> especificada.
        </summary>
      <returns>
          Es true si el nodo actual coincide con <see cref="T:System.Xml.XPath.XPathExpression" />; en caso contrario, es false.
        </returns>
      <param name="expr">
              Objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contiene la expresión XPath compilada.
            </param>
      <exception cref="T:System.ArgumentException">
              No se puede evaluar la expresión XPath.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath no es válida.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
      <summary>
          Cuando se reemplaza en una clase derivada, mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> a la misma posición que el <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.
        </summary>
      <returns>
          Devuelve true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente a la misma posición que el <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado; de lo contrario, es false. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
      <param name="other">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> que se sitúa en el nodo al que se desea desplazarse. 
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)">
      <summary>
          Mueve el <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el atributo cuyo nombre local y URI de espacio de nombres coincidan.
        </summary>
      <returns>
          Devuelve true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al atributo; de lo contrario, es false. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
      <param name="localName">
              Nombre local del atributo.
            </param>
      <param name="namespaceURI">
              El URI de espacio de nombres del atributo; es null si el espacio de nombres está vacío.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)">
      <summary>
          Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el nodo secundario con el nombre local y el URI de espacio de nombres especificados.
        </summary>
      <returns>
          Devuelve true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al nodo secundario; de lo contrario, es false. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
      <param name="localName">
              El nombre local del nodo secundario al que se va a desplazar.
            </param>
      <param name="namespaceURI">
              El URI de espacio de nombres del nodo secundario al que se va a desplazar.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)">
      <summary>
          Mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> al nodo secundario del objeto <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado.
        </summary>
      <returns>
          Devuelve true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al nodo secundario; de lo contrario, es false. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
      <param name="type">
              <see cref="T:System.Xml.XPath.XPathNodeType" /> del nodo secundario al que se va a desplazar.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirst">
      <summary>
          Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el primer nodo relacionado del nodo actual.
        </summary>
      <returns>
          Devuelve true si <see cref="T:System.Xml.XPath.XPathNavigator" /> desplaza correctamente al primer nodo relacionado del nodo actual; es false si no hay ningún primer nodo relacionado o si el <see cref="T:System.Xml.XPath.XPathNavigator" /> está actualmente situado en un nodo de atributo. Si <see cref="T:System.Xml.XPath.XPathNavigator" /> se coloca en el primer <see cref="T:System.Xml.XPath.XPathNavigator" /> relacionado, devolverá true y no moverá su posición.
          Si <see cref="T:System.Xml.XPath.XPathNavigator.MoveToFirst" /> devuelve false porque no es el primer nodo relacionado o si <see cref="T:System.Xml.XPath.XPathNavigator" /> está ubicado en un atributo, la posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> no se modifica.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute">
      <summary>
          Cuando se reemplaza en una clase derivada, el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza hasta el primer atributo del nodo actual.
        </summary>
      <returns>
          Devuelve true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al primer atributo del nodo actual; de lo contrario, es false. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild">
      <summary>
          Cuando se reemplaza en una clase derivada, el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza hasta el primer nodo secundario del nodo actual.
        </summary>
      <returns>
          Devuelve true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al primer nodo secundario del nodo actual; de lo contrario, es false. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace">
      <summary>
          Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el primer nodo de espacio de nombres del nodo actual.
        </summary>
      <returns>
          Devuelve true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al primer nodo de espacio de nombres; de lo contrario, es false. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>
          Cuando se reemplaza en una clase derivada, mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> al primer nodo de espacio de nombres que coincida con el <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> especificado.
        </summary>
      <returns>
          Devuelve true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al primer nodo de espacio de nombres; de lo contrario, es false. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
      <param name="namespaceScope">
              Valor de <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> que describe el ámbito de espacio de nombres. 
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)">
      <summary>
          Mueve el <see cref="T:System.Xml.XPath.XPathNavigator" /> al elemento con el nombre local y el URI de espacio de nombres especificados en el orden del documento.
        </summary>
      <returns>
          
            Es true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se mueve correctamente; en caso contrario, es false.
        </returns>
      <param name="localName">
              Nombre local del elemento.
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del elemento.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)">
      <summary>
          Mueve el <see cref="T:System.Xml.XPath.XPathNavigator" /> al elemento con el nombre local y el URI de espacio de nombres especificados, al límite especificado, en el orden del documento.
        </summary>
      <returns>
          
            Es true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se mueve correctamente; en caso contrario, es false.
        </returns>
      <param name="localName">
              Nombre local del elemento.
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres del elemento.
            </param>
      <param name="end">
              Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el límite del elemento que el <see cref="T:System.Xml.XPath.XPathNavigator" /> actual no sobrepasa durante la búsqueda del elemento siguiente.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)">
      <summary>
          Mueve el <see cref="T:System.Xml.XPath.XPathNavigator" /> al elemento siguiente del <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado en el orden del documento.
        </summary>
      <returns>
          
            Es true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se mueve correctamente; en caso contrario, es false.
        </returns>
      <param name="type">
              Propiedad <see cref="T:System.Xml.XPath.XPathNodeType" /> del elemento. El <see cref="T:System.Xml.XPath.XPathNodeType" /> no puede ser <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> ni <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)">
      <summary>
          Mueve el <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente elemento del <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado, al límite especificado, en el orden del documento.
        </summary>
      <returns>
          
            Es true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se mueve correctamente; en caso contrario, es false.
        </returns>
      <param name="type">
              Propiedad <see cref="T:System.Xml.XPath.XPathNodeType" /> del elemento. El <see cref="T:System.Xml.XPath.XPathNodeType" /> no puede ser <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> ni <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.
            </param>
      <param name="end">
              Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el límite del elemento que el <see cref="T:System.Xml.XPath.XPathNavigator" /> actual no sobrepasa durante la búsqueda del elemento siguiente.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, se desplaza al nodo con un atributo de tipo ID cuyo valor coincide con el <see cref="T:System.String" /> especificado.
        </summary>
      <returns>
          
            Es true si el desplazamiento de <see cref="T:System.Xml.XPath.XPathNavigator" /> se realiza correctamente; en caso contrario, es false. Si es false, no cambia la posición del explorador.
        </returns>
      <param name="id">
              <see cref="T:System.String" /> que representa el valor del ID del nodo al que se desea desplazar.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)">
      <summary>
          Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el nodo de espacio de nombres con el prefijo correspondiente especificado.
        </summary>
      <returns>
          
            Es true si el desplazamiento de <see cref="T:System.Xml.XPath.XPathNavigator" /> al espacio de nombres especificado se realiza correctamente; es false si no se encuentra ningún nodo de espacio de nombres o si <see cref="T:System.Xml.XPath.XPathNavigator" /> no se coloca en ningún nodo de elemento. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
      <param name="name">
              Prefijo de espacio de nombres del nodo de espacio de nombres.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext">
      <summary>
          Cuando se reemplaza en una clase derivada, desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el primer nodo relacionado del nodo actual.
        </summary>
      <returns>
          
            Es true si el desplazamiento de <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente nodo relacionado se realiza correctamente; en caso contrario, es false si no hay más elementos relacionados o si <see cref="T:System.Xml.XPath.XPathNavigator" /> está actualmente situado en un nodo de atributo. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)">
      <summary>
          Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el siguiente nodo relacionado con el nombre local y el URI de espacio de nombres especificados.
        </summary>
      <returns>
          Devuelve true si el desplazamiento de <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente nodo relacionado se realiza correctamente; es false si no hay más elementos relacionados o si <see cref="T:System.Xml.XPath.XPathNavigator" /> está actualmente situado en un nodo de atributo. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
      <param name="localName">
              El nombre local del siguiente nodo relacionado al que se va a desplazar.
            </param>
      <param name="namespaceURI">
              El URI de espacio de nombres del siguiente nodo relacionado al que se va a desplazar.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)">
      <summary>
          Mueve el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente nodo relacionado del nodo actual que coincida con el <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado.
        </summary>
      <returns>
          
            Es true si el desplazamiento de <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente nodo relacionado se realiza correctamente; en caso contrario, es false si no hay más elementos relacionados o si <see cref="T:System.Xml.XPath.XPathNavigator" /> está actualmente situado en un nodo de atributo. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
      <param name="type">
              <see cref="T:System.Xml.XPath.XPathNodeType" /> del nodo relacionado al que se va a desplazar.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute">
      <summary>
          Cuando se reemplaza en una clase derivada, <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza hasta el siguiente atributo.
        </summary>
      <returns>
          Devuelve true si el <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente hasta el siguiente atributo; es false si no hay más atributos. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace">
      <summary>
          Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el siguiente nodo Namespace.
        </summary>
      <returns>
          Devuelve true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al siguiente nodo de espacio de nombres; de lo contrario, es false. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>
          Cuando se reemplaza en una clase derivada, mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente nodo de espacio de nombres que coincida con el <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> especificado.
        </summary>
      <returns>
          Devuelve true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al siguiente nodo de espacio de nombres; de lo contrario, es false. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
      <param name="namespaceScope">
              Valor de <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> que describe el ámbito de espacio de nombres. 
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToParent">
      <summary>
          Cuando se reemplaza en una clase derivada, el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza hasta el nodo primario del nodo actual.
        </summary>
      <returns>
          Devuelve true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al nodo primario del nodo actual; de lo contrario, es false. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToPrevious">
      <summary>
          Cuando se reemplaza en una clase derivada, desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el nodo relacionado anterior del nodo actual.
        </summary>
      <returns>
          Devuelve true si el desplazamiento de <see cref="T:System.Xml.XPath.XPathNavigator" /> al nodo relacionado anterior se realiza correctamente; en caso contrario, es false si no hay ningún nodo relacionado anterior o si <see cref="T:System.Xml.XPath.XPathNavigator" /> está actualmente situado en un nodo de atributo. Si es false, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToRoot">
      <summary>
          Desplaza <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el nodo raíz al que pertenece el nodo actual.
        </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Name">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el nombre completo del nodo actual.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> completo del nodo actual o <see cref="F:System.String.Empty" /> si el nodo actual no tiene nombre (por ejemplo, texto o nodos de comentario).
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NamespaceURI">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el URI de espacio de nombres del nodo actual.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el URI de espacio de nombres del nodo actual o <see cref="F:System.String.Empty" /> si el nodo actual no tiene ningún URI de espacio de nombres.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NameTable">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el <see cref="T:System.Xml.XmlNameTable" /> de <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlNameTable" /> que permite obtener la versión subdividida de una cadena <see cref="T:System.String" /> en el documento XML.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NavigatorComparer">
      <summary>
          Obtiene un <see cref="T:System.Collections.IEqualityComparer" /> que se utiliza para la comparación de igualdad de objetos <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </summary>
      <returns>
          <see cref="T:System.Collections.IEqualityComparer" /> que se utiliza para la comparación de igualdad de objetos <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NodeType">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el <see cref="T:System.Xml.XPath.XPathNodeType" /> del nodo actual.
        </summary>
      <returns>
          Uno de los valores de <see cref="T:System.Xml.XPath.XPathNodeType" /> que representan el nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.OuterXml">
      <summary>
          Obtiene o establece el marcado que representa las etiquetas de apertura y cierre del nodo actual y sus nodos secundarios.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el marcado que representa las etiquetas de apertura y cierre del nodo actual y de sus nodos secundarios.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Prefix">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene el prefijo de espacio de nombres asociado al nodo actual.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el prefijo de espacio de nombres asociado al nodo actual.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild">
      <summary>
          Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear un nuevo nodo secundario al principio de la lista de nodos secundarios del nodo actual.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear un nuevo nodo secundario al final de la lista de nodos secundarios del nodo actual.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual en el que se coloca el <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)">
      <summary>
          Crea un nuevo nodo secundario al principio de la lista de nodos secundarios del nodo actual utilizando la cadena XML especificada.
        </summary>
      <param name="newChild">
              La cadena de datos XML del nuevo nodo secundario.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El parámetro de cadena XML es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual en el que se coloca el <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El parámetro de cadena XML no tiene un formato correcto.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)">
      <summary>
          Crea un nuevo nodo secundario al principio de la lista de nodos secundarios del nodo actual mediante el contenido XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado.
        </summary>
      <param name="newChild">
              Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo secundario.
            </param>
      <exception cref="T:System.ArgumentException">
              El objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de error o cerrado.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual en el que se coloca el <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no tiene un formato correcto.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)">
      <summary>
          Crea un nuevo nodo secundario al principio de la lista de nodos secundarios del nodo actual mediante los nodos del <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.
        </summary>
      <param name="newChild">
              Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo para agregarlo como nuevo nodo secundario.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual en el que se coloca el <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)">
      <summary>
          Crea un nuevo nodo de elemento secundario al principio de la lista de nodos secundarios del nodo actual mediante el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificados con el valor seleccionado.
        </summary>
      <param name="prefix">
              Prefijo del espacio de nombres del nuevo elemento secundario (si lo hay).
            </param>
      <param name="localName">
              Nombre local del nuevo elemento secundario (si lo hay).
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del nuevo elemento secundario (si lo hay). <see cref="F:System.String.Empty" /> y null son equivalentes.
            </param>
      <param name="value">
              Valor del nuevo elemento secundario. Si se pasan <see cref="F:System.String.Empty" /> o null, se crea un elemento vacío.
            </param>
      <exception cref="T:System.InvalidOperationException">
              El nodo actual en el que se coloca el <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReadSubtree">
      <summary>
          Devuelve un objeto <see cref="T:System.Xml.XmlReader" /> que contiene el nodo actual y sus nodos secundarios.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> que contiene el nodo actual y sus nodos secundarios.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no se coloca en ningún nodo de elemento ni en el nodo raíz.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
      <summary>
          Reemplaza un intervalo de nodos relacionados desde el nodo actual hasta al nodo especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" /> que se utiliza para especificar el intervalo de reemplazo.
        </returns>
      <param name="lastSiblingToReplace">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el último nodo relacionado del intervalo que se va a reemplazar.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado es null.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              El último nodo especificado que se va a reemplazar no es un nodo relacionado válido del nodo actual.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)">
      <summary>
          Reemplaza el nodo actual por el contenido de la cadena especificada.
        </summary>
      <returns>
          
            Es true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se coloca en el nuevo nodo; en caso contrario, es false.
        </returns>
      <param name="newNode">
              La cadena de datos XML del nuevo nodo.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El parámetro de cadena XML es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> no se coloca en ningún elemento, ni en el texto, ni en una instrucción de procesamiento ni en un nodo de comentario.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El parámetro de cadena XML no tiene un formato correcto.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)">
      <summary>
          Reemplaza el nodo actual por el contenido del objeto <see cref="T:System.Xml.XmlReader" /> especificado.
        </summary>
      <returns>
          
            Es true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se coloca en el nuevo nodo; en caso contrario, es false.
        </returns>
      <param name="newNode">
              Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo.
            </param>
      <exception cref="T:System.ArgumentException">
              El objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de error o cerrado.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> no se coloca en ningún elemento, ni en el texto, ni en una instrucción de procesamiento ni en un nodo de comentario.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no tiene un formato correcto.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)">
      <summary>
          Reemplaza el nodo actual por el contenido del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.
        </summary>
      <returns>
          
            Es true si <see cref="T:System.Xml.XPath.XPathNavigator" /> se coloca en el nuevo nodo; en caso contrario, es false.
        </returns>
      <param name="newNode">
              Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el nuevo nodo.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> no se coloca en ningún elemento, ni en el texto, ni en una instrucción de procesamiento ni en un nodo de comentario.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              El contenido XML del parámetro de objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> no tiene un formato correcto.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.SchemaInfo">
      <summary>
          Obtiene la información de esquema asignada al nodo actual como resultado de la validación del esquema.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene la información de esquema del nodo actual.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String)">
      <summary>
          Selecciona un conjunto de nodos utilizando la expresión XPath especificada.
        </summary>
      <returns>
          <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que señala el conjunto de nodos seleccionado.
        </returns>
      <param name="xpath">
              <see cref="T:System.String" /> que representa una expresión XPath.
            </param>
      <exception cref="T:System.ArgumentException">
              La expresión XPath contiene un error o el tipo de valor devuelto no es un conjunto de nodos.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath no es válida.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>
          Selecciona un conjunto de nodos mediante la expresión XPath especificada con el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver los prefijos de espacio de nombres.
        </summary>
      <returns>
          <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que señala el conjunto de nodos seleccionado.
        </returns>
      <param name="xpath">
              <see cref="T:System.String" /> que representa una expresión XPath.
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de los espacios de nombres.
            </param>
      <exception cref="T:System.ArgumentException">
              La expresión XPath contiene un error o el tipo de valor devuelto no es un conjunto de nodos.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath no es válida.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)">
      <summary>
          Selecciona un conjunto de nodos utilizando la expresión <see cref="T:System.Xml.XPath.XPathExpression" /> especificada.
        </summary>
      <returns>
          <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que señala el conjunto de nodos seleccionado.
        </returns>
      <param name="expr">
              Objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contiene la consulta XPath compilada.
            </param>
      <exception cref="T:System.ArgumentException">
              La expresión XPath contiene un error o el tipo de valor devuelto no es un conjunto de nodos.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La expresión XPath no es válida.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
      <summary>
          Selecciona todos los nodos primarios del nodo actual que tengan el nombre local y el URI de espacio de nombres especificados.
        </summary>
      <returns>
          <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados. Los nodos que se devuelven están en orden de documento inverso.
        </returns>
      <param name="name">
              Nombre local de los nodos primarios.
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres de los nodos primarios.
            </param>
      <param name="matchSelf">
              Es true para incluir el nodo de contexto en la selección; en caso contrario, es false. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                null no se puede pasar como parámetro.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>
          Selecciona todos los nodos primarios del nodo actual que tengan un <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondiente.
        </summary>
      <returns>
          <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados. Los nodos que se devuelven están en orden de documento inverso.
        </returns>
      <param name="type">
              <see cref="T:System.Xml.XPath.XPathNodeType" /> de los nodos primarios.
            </param>
      <param name="matchSelf">
              Es true para incluir el nodo de contexto en la selección; en caso contrario, es false.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)">
      <summary>
          Selecciona todos los nodos secundarios del nodo actual que tengan el nombre local y el URI de espacio de nombres especificados.
        </summary>
      <returns>
          <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados.
        </returns>
      <param name="name">
              Nombre local de los nodos secundarios. 
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres de los nodos secundarios. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                null no se puede pasar como parámetro.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
      <summary>
          Selecciona todos los nodos secundarios del nodo actual que tengan el <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondiente.
        </summary>
      <returns>
          <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados.
        </returns>
      <param name="type">
              <see cref="T:System.Xml.XPath.XPathNodeType" /> de los nodos secundarios.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
      <summary>
          Selecciona todos los nodos descendientes del nodo actual que tengan el nombre local y el URI de espacio de nombres especificados.
        </summary>
      <returns>
          <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados.
        </returns>
      <param name="name">
              Nombre local de los nodos descendientes. 
            </param>
      <param name="namespaceURI">
              Identificador URI de espacio de nombres de los nodos descendientes. 
            </param>
      <param name="matchSelf">
              
                Es true para incluir el nodo de contexto en la selección; en caso contrario, es false.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                null no se puede pasar como parámetro.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>
          Selecciona todos los nodos descendientes del nodo actual que tengan un <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondiente.
        </summary>
      <returns>
          <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados.
        </returns>
      <param name="type">
              <see cref="T:System.Xml.XPath.XPathNodeType" /> de los nodos descendientes.
            </param>
      <param name="matchSelf">
              
                Es true para incluir el nodo de contexto en la selección; en caso contrario, es false.
            </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)">
      <summary>
          Selecciona un solo nodo en el <see cref="T:System.Xml.XPath.XPathNavigator" /> mediante la consulta XPath especificada.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene el primer nodo que coincide con la consulta XPath especificada; en caso contrario, es null si la consulta no genera resultados.
        </returns>
      <param name="xpath">
              <see cref="T:System.String" /> que representa una expresión XPath.
            </param>
      <exception cref="T:System.ArgumentException">
              Se ha detectado un error en la consulta XPath o el tipo de valor devuelto de la expresión XPath no es un nodo.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La consulta XPath no es válida.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>
          Selecciona un solo nodo del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando la consulta XPath especificada con el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver los prefijos de espacio de nombres.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene el primer nodo que coincide con la consulta XPath especificada; en caso contrario, es null si la consulta no genera resultados.
        </returns>
      <param name="xpath">
              <see cref="T:System.String" /> que representa una expresión XPath.
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de espacio de nombres en la consulta XPath.
            </param>
      <exception cref="T:System.ArgumentException">
              Se ha detectado un error en la consulta XPath o el tipo de valor devuelto de la expresión XPath no es un nodo.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La consulta XPath no es válida.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)">
      <summary>
          Selecciona un solo nodo en el <see cref="T:System.Xml.XPath.XPathNavigator" /> mediante el objeto <see cref="T:System.Xml.XPath.XPathExpression" /> especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene el primer nodo que coincide con la consulta XPath especificada; en caso contrario, es null si la consulta no genera resultados.
        </returns>
      <param name="expression">
              Objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contiene la consulta XPath compilada.
            </param>
      <exception cref="T:System.ArgumentException">
              Se ha detectado un error en la consulta XPath o el tipo de valor devuelto de la expresión XPath no es un nodo.
            </exception>
      <exception cref="T:System.Xml.XPath.XPathException">
              La consulta XPath no es válida.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)">
      <summary>
          Establece el valor con tipo del nodo actual.
        </summary>
      <param name="typedValue">
              Nuevo valor con tipo del nodo.
            </param>
      <exception cref="T:System.ArgumentException">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite el tipo del objeto especificado.
            </exception>
      <exception cref="T:System.ArgumentNullException">
              El valor especificado no puede ser null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> no está situado en ningún nodo de elemento o atributo.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)">
      <summary>
          Establece el valor del nodo actual.
        </summary>
      <param name="value">
              Nuevo valor del nodo.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El parámetro de valor es null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> se sitúa en el nodo raíz, un nodo de espacio de nombres, o el valor especificado no es válido.
            </exception>
      <exception cref="T:System.NotSupportedException">
              El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.
            </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.XPath.XPathNavigator.Clone" />.
        </summary>
      <returns>
          <see cref="T:System.Object" />.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ToString">
      <summary>
          Obtiene el valor de texto del nodo actual.
        </summary>
      <returns>
          string que contiene el valor de texto del nodo actual.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.TypedValue">
      <summary>
          Obtiene el nodo actual en forma de objeto del tipo de .NET Framework más adecuado al que se ha aplicado la compresión boxing.
        </summary>
      <returns>
          El nodo actual en forma de objeto del tipo de .NET Framework más adecuado al que se ha aplicado la compresión boxing.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.UnderlyingObject">
      <summary>
          Lo utilizan las implementaciones de <see cref="T:System.Xml.XPath.XPathNavigator" /> que proporcionan una vista XML "virtual" sobre un almacén para proporcionar acceso a los objetos subyacentes.
        </summary>
      <returns>
          El valor predeterminado es null.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>
          Obtiene el valor del nodo actual como el <see cref="T:System.Type" /> especificado mediante el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver los prefijos de espacio de nombres.
        </summary>
      <returns>
          Valor del nodo actual como el <see cref="T:System.Type" /> solicitado.
        </returns>
      <param name="returnType">
              <see cref="T:System.Type" /> como el que se devuelve el valor del nodo actual.
            </param>
      <param name="nsResolver">
              Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de los espacios de nombres.
            </param>
      <exception cref="T:System.FormatException">
              El valor del nodo actual no tiene el formato correcto para el tipo de destino.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión intentada no es válida.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean">
      <summary>
          Obtiene el valor del nodo actual como <see cref="T:System.Boolean" />.
        </summary>
      <returns>
          Valor del nodo actual como <see cref="T:System.Boolean" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.Boolean" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.Boolean" /> intentada no es válida.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime">
      <summary>
          Obtiene el valor del nodo actual como <see cref="T:System.DateTime" />.
        </summary>
      <returns>
          Valor del nodo actual como <see cref="T:System.DateTime" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.DateTime" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.DateTime" /> intentada no es válida.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDouble">
      <summary>
          Obtiene el valor del nodo actual como <see cref="T:System.Double" />.
        </summary>
      <returns>
          Valor del nodo actual como <see cref="T:System.Double" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.Double" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.Double" /> intentada no es válida.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsInt">
      <summary>
          Obtiene el valor del nodo actual como <see cref="T:System.Int32" />.
        </summary>
      <returns>
          Valor del nodo actual como <see cref="T:System.Int32" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.Int32" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.Int32" /> intentada no es válida.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsLong">
      <summary>
          Obtiene el valor del nodo actual como <see cref="T:System.Int64" />.
        </summary>
      <returns>
          Valor del nodo actual como <see cref="T:System.Int64" />.
        </returns>
      <exception cref="T:System.FormatException">
              El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.Int64" />.
            </exception>
      <exception cref="T:System.InvalidCastException">
              La conversión a <see cref="T:System.Int64" /> intentada no es válida.
            </exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueType">
      <summary>
          Obtiene el <see cref="T:System.Type" /> de .NET Framework del nodo actual.
        </summary>
      <returns>
          Obtiene el <see cref="T:System.Type" /> de .NET Framework del nodo actual. El valor predeterminado es <see cref="T:System.String" />.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)">
      <summary>
          Envía la secuencia del nodo actual y sus nodos secundarios al objeto <see cref="T:System.Xml.XmlWriter" /> especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlWriter" /> que contiene el nodo actual y sus nodos secundarios.
        </returns>
      <param name="writer">
              Objeto <see cref="T:System.Xml.XmlWriter" /> al que se envía la secuencia.
            </param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlLang">
      <summary>
          Obtiene el ámbito xml:lang del nodo actual.
        </summary>
      <returns>
          <see cref="T:System.String" /> que contiene el valor del ámbito xml:lang o <see cref="F:System.String.Empty" />, si el nodo actual no tiene ningún valor de ámbito xml:lang que devolver.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlType">
      <summary>
          Obtiene la información de <see cref="T:System.Xml.Schema.XmlSchemaType" /> del nodo actual.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Schema.XmlSchemaType" />; el valor predeterminado es null.
        </returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeIterator">
      <summary>
          Proporciona un iterador para un conjunto seleccionado de nodos.
        </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XPath.XPathNodeIterator" />.
        </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.Clone">
      <summary>
          Cuando se reemplaza en una clase derivada, devuelve un clon de este objeto <see cref="T:System.Xml.XPath.XPathNodeIterator" />.
        </summary>
      <returns>
          Un nuevo clon de objeto <see cref="T:System.Xml.XPath.XPathNodeIterator" /> de este objeto <see cref="T:System.Xml.XPath.XPathNodeIterator" />.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Count">
      <summary>
          Obtiene el índice del último nodo del conjunto de nodos seleccionado.
        </summary>
      <returns>
          El índice int del último nodo del conjunto seleccionado de nodos o 0 si no hay ningún nodo seleccionado.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Current">
      <summary>
          Cuando se reemplaza en una clase derivada, devuelve el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> correspondiente a este objeto <see cref="T:System.Xml.XPath.XPathNodeIterator" />, que se sitúa en el nodo de contexto actual.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo de contexto del que se seleccionó el conjunto de nodos. Se debe llamar al método <see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /> para mover <see cref="T:System.Xml.XPath.XPathNodeIterator" /> al primer nodo del conjunto seleccionado.
        </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
      <summary>
          Cuando se reemplaza en una clase derivada, se obtiene el índice de la posición actual en el conjunto de nodos seleccionado.
        </summary>
      <returns>
          El índice int de la posición actual.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
      <summary>
          Devuelve un objeto <see cref="T:System.Collections.IEnumerator" /> para recorrer en iteración el conjunto de nodos seleccionado.
        </summary>
      <returns>
          Un objeto <see cref="T:System.Collections.IEnumerator" /> para recorrer en iteración el conjunto de nodos seleccionado.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
      <summary>
          Cuando se reemplaza en una clase derivada, desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> devuelto por la propiedad <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /> hasta el siguiente nodo del conjunto seleccionado.
        </summary>
      <returns>
          
            Es true si el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza hasta el siguiente nodo; false si no hay más nodos seleccionados.
        </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.XPath.XPathNodeIterator.Clone" />.
        </summary>
      <returns>
          <see cref="T:System.Object" />.
        </returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeType">
      <summary>
          Define los tipos de nodo XPath que se pueden devolver desde la clase <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Root">
      <summary>
          Nodo raíz del documento XML o árbol de nodos.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Element">
      <summary>
          Un elemento, como &lt;element&gt;.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Attribute">
      <summary>
          Un atributo, como id='123'.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Namespace">
      <summary>
          Un espacio de nombres, como xmlns="namespace".
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Text">
      <summary>
          Contenido de texto de un nodo. Equivalente al texto del Modelo de objetos de documento (DOM) y tipos de nodo de CDATA. Contiene por lo menos un carácter.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace">
      <summary>
          Un nodo con los caracteres del espacio en blanco y xml:space establecidos en preserve.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Whitespace">
      <summary>
          Nodo sólo con caracteres de espacio en blanco y sin espacio en blanco significativo. Los caracteres de espacio en blanco son #x20, #x9, #xD o #xA.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction">
      <summary>
          Una instrucción de procesamiento, como &lt;?pi test?&gt;. Esto no incluye las declaraciones XML, que no se encuentran visibles para la clase <see cref="T:System.Xml.XPath.XPathNavigator" />. 
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Comment">
      <summary>
          Un comentario, como &lt;!-- my comment --&gt;.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.All">
      <summary>
          Cualquiera de los tipos de nodo <see cref="T:System.Xml.XPath.XPathNodeType" />.
        </summary>
    </member>
    <member name="T:System.Xml.XPath.XPathResultType">
      <summary>
          Especifica el tipo de valor devuelto de la expresión XPath.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Number">
      <summary>
          Valor numérico.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.String">
      <summary>
          Valor <see cref="T:System.String" />.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Boolean">
      <summary>
          Valor <see cref="T:System.Boolean" />true o false.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.NodeSet">
      <summary>
          Colección de nodos.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Navigator">
      <summary>
          Fragmento de árbol.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Any">
      <summary>
          Cualquiera de los tipos de nodo XPath.
        </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Error">
      <summary>
          La expresión no evalúa el tipo XPath correcto.
        </summary>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextFunction">
      <summary>
          Proporciona una interfaz para una determinada función definida en la hoja de estilos de transformaciones XSL (Extensible Stylesheet Language for Transformations) durante la ejecución en tiempo de ejecución.
        </summary>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ArgTypes">
      <summary>
          Obtiene los tipos de XPath suministrados para la lista de argumentos de la función. Esta información se puede utilizar para descubrir la firma de la función que permite diferenciar las distintas funciones sobrecargadas.
        </summary>
      <returns>
          Matriz de <see cref="T:System.Xml.XPath.XPathResultType" /> que representa los tipos de la lista de argumentos de la función.
        </returns>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
      <summary>
          Proporciona el método de invocación de la función con los argumentos especificados en el contexto indicado.
        </summary>
      <returns>
          <see cref="T:System.Object" /> que representa el valor devuelto de la función.
        </returns>
      <param name="xsltContext">
              Contexto XSLT de la llamada de función. 
            </param>
      <param name="args">
              Argumentos de la llamada de función. Cada argumento es un elemento de la matriz. 
            </param>
      <param name="docContext">
              Nodo de contexto de la llamada de función. 
            </param>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Maxargs">
      <summary>
          Obtiene el número máximo de argumentos de la función. Esto permite al usuario diferenciar las distintas funciones sobrecargadas.
        </summary>
      <returns>
          Número máximo de argumentos de la función.
        </returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Minargs">
      <summary>
          Obtiene el número mínimo de argumentos de la función. Esto permite al usuario diferenciar las distintas funciones sobrecargadas.
        </summary>
      <returns>
          Número mínimo de argumentos de la función.
        </returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ReturnType">
      <summary>
          Obtiene el <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de XPath devuelto por la función.
        </summary>
      <returns>
          <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de XPath devuelto por la función. 
        </returns>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextVariable">
      <summary>
          Proporciona una interfaz a una variable determinada definida en la hoja de estilos durante la ejecución en tiempo de ejecución.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)">
      <summary>
          Evalúa la variable en tiempo de ejecución y devuelve un objeto que representa el valor de la variable.
        </summary>
      <returns>
          <see cref="T:System.Object" /> que representa el valor de la variable. Entre los tipos que pueden devolverse se incluyen: número, cadena, valor booleano, fragmento de documento o conjunto de nodos.
        </returns>
      <param name="xsltContext">
              <see cref="T:System.Xml.Xsl.XsltContext" /> que representa el contexto de ejecución de la variable. 
            </param>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsLocal">
      <summary>
          Obtiene un valor que indica si la variable es local.
        </summary>
      <returns>
          
            Es true si la variable es una variable local del contexto actual; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsParam">
      <summary>
          Obtiene un valor que indica si la variable es un parámetro XSLT (Extensible Stylesheet Language Transformation). Puede tratarse de un parámetro para una hoja de estilos o para una plantilla.
        </summary>
      <returns>
          
            Es true si la variable es un parámetro XSLT; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.VariableType">
      <summary>
          Obtiene el <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de XPath de la variable.
        </summary>
      <returns>
          <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de XPath de la variable.
        </returns>
    </member>
    <member name="T:System.Xml.Xsl.XslCompiledTransform">
      <summary>
          Transforma datos XML utilizando una hoja de estilos XSLT.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XslCompiledTransform" />. 
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> con la configuración de depuración especificada. 
        </summary>
      <param name="enableDebug">
              
                Es true para generar información de depuración; de lo contrario, es false. Si se establece en true, la hoja de estilos se puede depurar con el depurador de Microsoft Visual Studio.
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)">
      <summary>
          Compila una hoja de estilos XSLT a un tipo especificado.
        </summary>
      <returns>
          Objeto <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> que contiene los errores y advertencias del compilador que indican los resultados de la compilación.
        </returns>
      <param name="stylesheet">
              El <see cref="T:System.Xml.XmlReader" /> colocado al principio de la hoja de estilos que se va a compilar.
            </param>
      <param name="settings">
              Las características <see cref="T:System.Xml.Xsl.XsltSettings" /> que se van a aplicar a la hoja de estilos. Si es null, se aplicará <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.
            </param>
      <param name="stylesheetResolver">
              <see cref="T:System.Xml.XmlResolver" /> resuelve los módulos de hoja de estilos a los que se hace referencia en los elementos xsl:import y xsl:include. Si es null, no se resolverán los recursos externos.
            </param>
      <param name="debug">
              Si se establece en true se habilita la depuración de la hoja de estilos con un depurador.
            </param>
      <param name="typeBuilder">
              <see cref="T:System.Reflection.Emit.TypeBuilder" /> utilizado para la compilación de la hoja de estilos. El TypeBuilder proporcionado se usa para generar el tipo resultante.
            </param>
      <param name="scriptAssemblyPath">
              La ruta de acceso base de los ensamblados generados para los elementos msxsl:script. Si se genera sólo un ensamblado de script, este parámetro especifica la ruta de acceso de ese ensamblado. En el caso de varios ensamblados de script, se anexará un sufijo distintivo al nombre de archivo para asegurar la exclusividad de los nombres de ensamblado.
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])">
      <summary>
          Carga un método de una hoja de estilos compilada con la utilidad XSLTC.exe.
        </summary>
      <param name="executeMethod">
              Objeto <see cref="T:System.Reflection.MethodInfo" /> que representa al método <paramref name="execute" /> generado por compilador de la hoja de estilos compilada.
            </param>
      <param name="queryData">
              Matriz de tipo byte de estructuras de datos serializados en el campo <paramref name="staticData" /> de la hoja de estilos compilada como se ha generado con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />.
            </param>
      <param name="earlyBoundTypes">
              Matriz de tipos almacenada en el campo <paramref name="ebTypes" /> generado por compilador de la hoja de estilos compilada.
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)">
      <summary>
          Carga y compila la hoja de estilos situada en el URI especificado.
        </summary>
      <param name="stylesheetUri">
              URI de la hoja de estilos.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="stylesheetUri" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              La hoja de estilos contiene un error.
            </exception>
      <exception cref="T:System.IO.FileNotFoundException">
              No se puede encontrar la hoja de estilos.
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
              El valor <paramref name="stylesheetUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.
            </exception>
      <exception cref="T:System.Net.WebException">
              El valor <paramref name="stylesheetUri" /> no se puede resolver.
              O bien,
              Se ha producido un error al procesar la solicitud.
            </exception>
      <exception cref="T:System.UriFormatException">
              
                <paramref name="stylesheetUri" /> no es un URI válido.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              Hubo un error de análisis al cargar la hoja de estilos.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>
          Carga y compila la hoja de estilos XSLT que especifica el URI. La clase <see cref="T:System.Xml.XmlResolver" /> resuelve todos los elementos import e include XSLT, y la configuración XSLT determina los permisos de la hoja de estilos.
        </summary>
      <param name="stylesheetUri">
              URI de la hoja de estilos.
            </param>
      <param name="settings">
              <see cref="T:System.Xml.Xsl.XsltSettings" /> que se va a aplicar a la hoja de estilos. Si el valor es null, se aplica la configuración <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.
            </param>
      <param name="stylesheetResolver">
              Clase <see cref="T:System.Xml.XmlResolver" /> utilizada para resolver el URI de la hoja de estilos y cualquier hoja de estilos a la que se haga referencia en los elementos import e include XSLT. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="stylesheetUri" /> o <paramref name="stylesheetResolver" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              La hoja de estilos contiene un error.
            </exception>
      <exception cref="T:System.IO.FileNotFoundException">
              No se puede encontrar la hoja de estilos.
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
              El valor <paramref name="stylesheetUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.
            </exception>
      <exception cref="T:System.Net.WebException">
              El valor <paramref name="stylesheetUri" /> no se puede resolver.
              O bien,
              Se ha producido un error al procesar la solicitud.
            </exception>
      <exception cref="T:System.UriFormatException">
              
                <paramref name="stylesheetUri" /> no es un URI válido.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              Hubo un error de análisis al cargar la hoja de estilos.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)">
      <summary>
          Carga la hoja de estilos compilada que se creó utilizando el XSLT Compiler (xsltc.exe).
        </summary>
      <param name="compiledStylesheet">
              Nombre de la clase que contiene la hoja de estilos compilada. 
              Normalmente se trata del nombre de la hoja de estilos. A menos que se especifique lo contrario, la herramienta xsltc.exe utiliza el nombre de la hoja de estilos para los nombres de ensamblado y clase.
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)">
      <summary>
          Compila la hoja de estilos incluida en <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <param name="stylesheet">
              <see cref="T:System.Xml.XmlReader" /> que contiene la hoja de estilos.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="stylesheet" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              La hoja de estilos contiene un error.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>
          Compila la hoja de estilos XSLT incluida en <see cref="T:System.Xml.XmlReader" />. La clase <see cref="T:System.Xml.XmlResolver" /> resuelve todos los elementos import e include XSLT, y la configuración XSLT determina los permisos de la hoja de estilos.
        </summary>
      <param name="stylesheet">
              <see cref="T:System.Xml.XmlReader" /> que contiene la hoja de estilos.
            </param>
      <param name="settings">
              <see cref="T:System.Xml.Xsl.XsltSettings" /> que se va a aplicar a la hoja de estilos. Si el valor es null, se aplica la configuración <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.
            </param>
      <param name="stylesheetResolver">
              Clase <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver las hojas de estilos a las que se hace referencia en los elementos import e include XSLT. Si es null, los recursos externos no se resuelven.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="stylesheet" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              La hoja de estilos contiene un error.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>
          Compila la hoja de estilos incluida en el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" />.
        </summary>
      <param name="stylesheet">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente una clase <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene la hoja de estilos.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="stylesheet" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              La hoja de estilos contiene un error.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>
          Compila la hoja de estilos XSLT incluida en <see cref="T:System.Xml.XPath.IXPathNavigable" />. La clase <see cref="T:System.Xml.XmlResolver" /> resuelve todos los elementos import e include XSLT, y la configuración XSLT determina los permisos de la hoja de estilos.
        </summary>
      <param name="stylesheet">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente una clase <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene la hoja de estilos.
            </param>
      <param name="settings">
              <see cref="T:System.Xml.Xsl.XsltSettings" /> que se va a aplicar a la hoja de estilos. Si el valor es null, se aplica la configuración <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.
            </param>
      <param name="stylesheetResolver">
              Clase <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver las hojas de estilos a las que se hace referencia en los elementos import e include XSLT. Si es null, los recursos externos no se resuelven.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="stylesheet" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              La hoja de estilos contiene un error.
            </exception>
    </member>
    <member name="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings">
      <summary>
          Obtiene un objeto <see cref="T:System.Xml.XmlWriterSettings" /> que contiene la información de salida derivada del elemento xsl:output de la hoja de estilos.
        </summary>
      <returns>
          Obtiene un objeto <see cref="T:System.Xml.XmlWriterSettings" /> de sólo lectura que contiene la información de salida derivada del elemento xsl:output de la hoja de estilos. Este valor puede ser null.
        </returns>
    </member>
    <member name="P:System.Xml.Xsl.XslCompiledTransform.TemporaryFiles">
      <summary>
          Obtiene la clase <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> que contiene los archivos temporales generados en disco después de una llamada correcta al método <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />. 
        </summary>
      <returns>
          Clase <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> que contiene los archivos temporales generados en disco. Este valor es null si la llamada al método <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> no se ha realizado correctamente o si no se ha habilitado la depuración.
        </returns>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)">
      <summary>
          Ejecuta la transformación utilizando el documento de entrada especificado por el URI y envía el resultado a un archivo.
        </summary>
      <param name="inputUri">
              URI del documento de entrada.
            </param>
      <param name="resultsFile">
              URI del archivo de resultado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="inputUri" /> o <paramref name="resultsFile" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              Se ha producido un error al ejecutar la transformación XSLT.
            </exception>
      <exception cref="T:System.IO.FileNotFoundException">
              No se puede encontrar el documento de entrada.
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
              El valor <paramref name="inputUri" /> o <paramref name="resultsFile" /> incluye un nombre de archivo o un directorio que no se puede encontrar.
            </exception>
      <exception cref="T:System.Net.WebException">
              El valor <paramref name="inputUri" /> o <paramref name="resultsFile" /> no se puede resolver.
              O bien,
              Se ha producido un error al procesar la solicitud.
            </exception>
      <exception cref="T:System.UriFormatException">
              
                <paramref name="inputUri" /> o <paramref name="resultsFile" /> no es un URI válido.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              Hubo un error de análisis al cargar el documento de entrada.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)">
      <summary>
          Ejecuta la transformación usando el documento de entrada que especifica el URI y guarda el resultado en una clase <see cref="T:System.Xml.XmlWriter" />.
        </summary>
      <param name="inputUri">
              URI del documento de entrada.
            </param>
      <param name="results">
              Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.
              Si la hoja de estilos contiene un elemento xsl:output, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> utilizando la clase <see cref="T:System.Xml.XmlWriterSettings" /> devuelta por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="inputUri" /> o <paramref name="results" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              Se ha producido un error al ejecutar la transformación XSLT.
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
              El valor <paramref name="inputUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.
            </exception>
      <exception cref="T:System.Net.WebException">
              El valor <paramref name="inputUri" /> no se puede resolver.
              O bien,
              Se ha producido un error al procesar la solicitud.
            </exception>
      <exception cref="T:System.UriFormatException">
              
                <paramref name="inputUri" /> no es un URI válido.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              Hubo un error de análisis al cargar el documento de entrada.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>
          Ejecuta la transformación utilizando el documento de entrada que especifica el URI y guarda el resultado en una secuencia. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.
        </summary>
      <param name="inputUri">
              URI del documento de entrada.
            </param>
      <param name="arguments">
              <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser null.
            </param>
      <param name="results">
              Secuencia a la que se desea enviar el resultado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="inputUri" /> o <paramref name="results" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              Se ha producido un error al ejecutar la transformación XSLT.
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
              El valor <paramref name="inputUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.
            </exception>
      <exception cref="T:System.Net.WebException">
              El valor <paramref name="inputUri" /> no se puede resolver.
              O bien,
              Se ha producido un error al procesar la solicitud.
            </exception>
      <exception cref="T:System.UriFormatException">
              
                <paramref name="inputUri" /> no es un URI válido.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              Hubo un error de análisis al cargar el documento de entrada.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>
          Ejecuta la transformación usando el documento de entrada que especifica el URI y guarda el resultado en una clase <see cref="T:System.IO.TextWriter" />.
        </summary>
      <param name="inputUri">
              URI del documento de entrada.
            </param>
      <param name="arguments">
              <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser null.
            </param>
      <param name="results">
              Clase <see cref="T:System.IO.TextWriter" /> a la que se desea enviar el resultado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="inputUri" /> o <paramref name="results" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              Se ha producido un error al ejecutar la transformación XSLT.
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
              El valor <paramref name="inputUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.
            </exception>
      <exception cref="T:System.Net.WebException">
              El valor <paramref name="inputUri" /> no se puede resolver.
              O bien,
              Se ha producido un error al procesar la solicitud.
            </exception>
      <exception cref="T:System.UriFormatException">
              
                <paramref name="inputUri" /> no es un URI válido.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              Hubo un error de análisis al cargar el documento de entrada.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>
          Ejecuta la transformación usando el documento de entrada que especifica el URI y guarda el resultado en una clase <see cref="T:System.Xml.XmlWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.
        </summary>
      <param name="inputUri">
              URI del documento de entrada.
            </param>
      <param name="arguments">
              <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser null.
            </param>
      <param name="results">
              Clase <see cref="T:System.Xml.XmlWriter" /> a la que se desea enviar el resultado.
              Si la hoja de estilos contiene un elemento xsl:output, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> utilizando la clase <see cref="T:System.Xml.XmlWriterSettings" /> devuelta por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="inputUri" /> o <paramref name="results" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              Se ha producido un error al ejecutar la transformación XSLT.
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
              El valor <paramref name="inputtUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.
            </exception>
      <exception cref="T:System.Net.WebException">
              El valor <paramref name="inputUri" /> no se puede resolver.
              O bien,
              Se ha producido un error al procesar la solicitud.
            </exception>
      <exception cref="T:System.UriFormatException">
              
                <paramref name="inputUri" /> no es un URI válido.
            </exception>
      <exception cref="T:System.Xml.XmlException">
              Hubo un error de análisis al cargar el documento de entrada.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary>
          Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />.
        </summary>
      <param name="input">
              <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.
            </param>
      <param name="results">
              Clase <see cref="T:System.Xml.XmlWriter" /> a la que se desea enviar el resultado.
              Si la hoja de estilos contiene un elemento xsl:output, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> utilizando la clase <see cref="T:System.Xml.XmlWriterSettings" /> devuelta por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> o <paramref name="results" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              Se ha producido un error al ejecutar la transformación XSLT.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>
          Ejecuta la transformación usando el documento de entrada especificado mediante el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en una secuencia. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.
        </summary>
      <param name="input">
              <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.
            </param>
      <param name="arguments">
              <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser null.
            </param>
      <param name="results">
              Secuencia a la que se desea enviar el resultado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> o <paramref name="results" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              Se ha producido un error al ejecutar la transformación XSLT.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>
          Ejecuta la transformación usando el documento de entrada especificado mediante el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en <see cref="T:System.IO.TextWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.
        </summary>
      <param name="input">
              <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.
            </param>
      <param name="arguments">
              <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser null.
            </param>
      <param name="results">
              Clase <see cref="T:System.IO.TextWriter" /> a la que se desea enviar el resultado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> o <paramref name="results" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              Se ha producido un error al ejecutar la transformación XSLT.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>
          Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.
        </summary>
      <param name="input">
              <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.
            </param>
      <param name="arguments">
              <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser null.
            </param>
      <param name="results">
              Clase <see cref="T:System.Xml.XmlWriter" /> a la que se desea enviar el resultado.
              Si la hoja de estilos contiene un elemento xsl:output, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> utilizando la clase <see cref="T:System.Xml.XmlWriterSettings" /> devuelta por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> o <paramref name="results" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              Se ha producido un error al ejecutar la transformación XSLT.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>
          Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución y XmlResolver resuelve la función document() XSLT.
        </summary>
      <param name="input">
              <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.
            </param>
      <param name="arguments">
              <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser null.
            </param>
      <param name="results">
              Clase <see cref="T:System.Xml.XmlWriter" /> a la que se desea enviar el resultado.
              Si la hoja de estilos contiene un elemento xsl:output, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> utilizando la clase <see cref="T:System.Xml.XmlWriterSettings" /> devuelta por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.
            </param>
      <param name="documentResolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver la función document() de XSLT. Si es null, la función document() no se resuelve.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> o <paramref name="results" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              Se ha producido un error al ejecutar la transformación XSLT.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary>
          Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />.
        </summary>
      <param name="input">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.
            </param>
      <param name="results">
              Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.
              Si la hoja de estilos contiene un elemento xsl:output, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> utilizando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> o <paramref name="results" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              Se ha producido un error al ejecutar la transformación XSLT.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>
          Ejecuta la transformación usando el documento de entrada especificado mediante el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> y guarda el resultado en una secuencia. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.
        </summary>
      <param name="input">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.
            </param>
      <param name="arguments">
              <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser null.
            </param>
      <param name="results">
              Secuencia a la que se desea enviar el resultado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> o <paramref name="results" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              Se ha producido un error al ejecutar la transformación XSLT.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>
          Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> y guarda el resultado en un objeto <see cref="T:System.IO.TextWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.
        </summary>
      <param name="input">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.
            </param>
      <param name="arguments">
              <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser null.
            </param>
      <param name="results">
              Clase <see cref="T:System.IO.TextWriter" /> a la que se desea enviar el resultado.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> o <paramref name="results" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              Se ha producido un error al ejecutar la transformación XSLT.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>
          Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.
        </summary>
      <param name="input">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.
            </param>
      <param name="arguments">
              <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser null.
            </param>
      <param name="results">
              Clase <see cref="T:System.Xml.XmlWriter" /> a la que se desea enviar el resultado.
              Si la hoja de estilos contiene un elemento xsl:output, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> utilizando la clase <see cref="T:System.Xml.XmlWriterSettings" /> devuelta por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.
            </param>
      <exception cref="T:System.ArgumentNullException">
              El valor de <paramref name="input" /> o <paramref name="results" /> es null.
            </exception>
      <exception cref="T:System.Xml.Xsl.XsltException">
              Se ha producido un error al ejecutar la transformación XSLT.
            </exception>
    </member>
    <member name="T:System.Xml.Xsl.XsltArgumentList">
      <summary>
          Contiene un número variable de argumentos, los cuales son parámetros XSLT o bien objetos de extensión.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.#ctor">
      <summary>
          Implementa una nueva instancia de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)">
      <summary>
          Agrega un nuevo objeto a la lista <see cref="T:System.Xml.Xsl.XsltArgumentList" /> y lo asocia al URI del espacio de nombres.
        </summary>
      <param name="namespaceUri">
              URI de espacio de nombres que se va a asociar al objeto. Para utilizar el espacio de nombres predeterminado, hay que especificar una cadena vacía. 
            </param>
      <param name="extension">
              Objeto que se va a agregar a la lista. 
            </param>
      <exception cref="T:System.ArgumentException">
              El <paramref name="namespaceUri" /> es null o bien http://www.w3.org/1999/XSL/Transform. 
              El <paramref name="namespaceUri" /> ya tiene un objeto de extensión asociado. 
            </exception>
      <exception cref="T:System.Security.SecurityException">
              El llamador no dispone de permisos suficientes como para llamar a este método. 
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)">
      <summary>
          Agrega un parámetro a <see cref="T:System.Xml.Xsl.XsltArgumentList" /> y lo asocia al nombre completo del espacio de nombres.
        </summary>
      <param name="name">
              Nombre que se va a asociar al parámetro. 
            </param>
      <param name="namespaceUri">
              URI de espacio de nombres que se va a asociar al parámetro. Para utilizar el espacio de nombres predeterminado, hay que especificar una cadena vacía. 
            </param>
      <param name="parameter">
              Valor del parámetro u objeto que se va a agregar a la lista. 
            </param>
      <exception cref="T:System.ArgumentException">
              El <paramref name="namespaceUri" /> es null o bien http://www.w3.org/1999/XSL/Transform.
              El <paramref name="name" /> no es un nombre válido según la especificación W3C XML.
              El <paramref name="namespaceUri" /> tiene ya un parámetro asociado. 
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.Clear">
      <summary>
          Quita todos los parámetros y objetos de extensión de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)">
      <summary>
          Obtiene el objeto asociado al espacio de nombres dado.
        </summary>
      <returns>
          Objeto URI del espacio de nombres o null si no se encontró ninguno.
        </returns>
      <param name="namespaceUri">
              URI del espacio de nombres del objeto. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)">
      <summary>
          Obtiene el parámetro asociado al nombre completo del espacio de nombres.
        </summary>
      <returns>
          Objeto del parámetro o null si no se encontró ninguno.
        </returns>
      <param name="name">
              Nombre del parámetro. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> no comprueba si el nombre que se ha pasado es un nombre local válido; no obstante, el nombre no puede ser null. 
            </param>
      <param name="namespaceUri">
              URI de espacio de nombres asociado al parámetro. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)">
      <summary>
          Quita el objeto con el URI del espacio de nombres de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.
        </summary>
      <returns>
          Objeto con el URI del espacio de nombres o null si no se encontró ninguno.
        </returns>
      <param name="namespaceUri">
              URI del espacio de nombres asociado al objeto que se va a eliminar. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)">
      <summary>
          Quita el parámetro de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.
        </summary>
      <returns>
          Objeto del parámetro o null si no se encontró ninguno.
        </returns>
      <param name="name">
              Nombre del parámetro que se va a quitar. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> no comprueba si el nombre que se ha pasado es un nombre local válido; no obstante, el nombre no puede ser null. 
            </param>
      <param name="namespaceUri">
              URI del espacio de nombres del parámetro que se va a quitar. 
            </param>
    </member>
    <member name="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered">
      <summary>
          Aparece cuando hay un mensaje especificado por el elemento xsl:message en la hoja de estilos. 
        </summary>
    </member>
    <member name="T:System.Xml.Xsl.XsltCompileException">
      <summary>
          Excepción producida por el método Load cuando se encuentra un error en la hoja de estilos XSLT.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltCompileException" />.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Exception,System.String,System.Int32,System.Int32)">
      <summary>
          Inicializa una nueva instancia de la clase XsltCompileException.
        </summary>
      <param name="inner">
              Objeto <see cref="T:System.Exception" /> que produjo la excepción XsltCompileException. 
            </param>
      <param name="sourceUri">
              Ruta de acceso de la hoja de estilos. 
            </param>
      <param name="lineNumber">
              Número de línea que indica dónde se produjo el error en la hoja de estilos. 
            </param>
      <param name="linePosition">
              Posición de línea que indica dónde se produjo el error en la hoja de estilos. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase XsltCompileException utilizando la información de los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.
        </summary>
      <param name="info">
              Objeto SerializationInfo que contiene todas las propiedades de una XsltCompileException. 
            </param>
      <param name="context">
              Objeto StreamingContext que contiene la información de contexto. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltCompileException" /> con el mensaje de error especificado.
        </summary>
      <param name="message">
              Mensaje que describe el error.
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String,System.Exception)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltCompileException" /> con un mensaje de error especificado y una referencia a la excepción interna que provoca esta excepción.
        </summary>
      <param name="message">
              Mensaje que describe el error.
            </param>
      <param name="innerException">
              La excepción que es la causa de la excepción actual o null si no se especifica ninguna excepción interna. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Transmite todas las propiedades XsltCompileException a la clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> para el <see cref="T:System.Runtime.Serialization.StreamingContext" /> dado.
        </summary>
      <param name="info">
              Objeto SerializationInfo. 
            </param>
      <param name="context">
              Objeto StreamingContext. 
            </param>
    </member>
    <member name="T:System.Xml.Xsl.XsltContext">
      <summary>
          Encapsula el contexto de ejecución actual del procesador XSLT permitiendo que XPath pueda resolver funciones, parámetros y espacios de nombres en expresiones XPath.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltContext" />.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltContext" /> con la clase <see cref="T:System.Xml.NameTable" /> especificada.
        </summary>
      <param name="table">
              <see cref="T:System.Xml.NameTable" /> que se va a utilizar. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, compara las direcciones URI base de dos documentos en función del orden en que el procesador XSLT cargó los documentos (es decir, la clase <see cref="T:System.Xml.Xsl.XslTransform" />).
        </summary>
      <returns>
          Valor entero que describe el orden relativo de dos identificadores URI base. Es -1 si  <paramref name="baseUri" /> aparece antes que <paramref name="nextbaseUri" />, es 0 si los dos identificadores URl base son idénticos, y es 1 si <paramref name="baseUri" /> aparece después de <paramref name="nextbaseUri" />.
        </returns>
      <param name="baseUri">
              Dirección URI base del primer documento que se va a comparar. 
            </param>
      <param name="nextbaseUri">
              Dirección URI base del segundo documento que se va a comparar. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary>
          Cuando se reemplaza en una clase derivada, evalúa si se van a conservar los nodos de espacio en blanco o si se van a quitar en el contexto especificado.
        </summary>
      <returns>
          Devuelve true si el espacio en blanco se va a conservar o false si el espacio en blanco se va a quitar.
        </returns>
      <param name="node">
              Nodo de espacio en blanco que se va a conservar o quitar en el contexto actual. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <summary>
          Cuando se reemplaza en una clase derivada, resuelve una referencia de función y devuelve interfaz <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> que representa la función. <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> se utiliza en tiempo de ejecución para obtener el valor devuelto de la función.
        </summary>
      <returns>
          <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> que representa la función.
        </returns>
      <param name="prefix">
              Prefijo de la función tal y como aparece en la expresión XPath. 
            </param>
      <param name="name">
              Nombre de la función. 
            </param>
      <param name="ArgTypes">
              Matriz de tipos de argumento de la función que se va a resolver. Este método permite seleccionar varios métodos con el mismo nombre, por ejemplo, métodos sobrecargados. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)">
      <summary>
          Cuando se reemplaza en una clase derivada, resuelve una referencia de variable y devuelve una interfaz <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> que representa la variable.
        </summary>
      <returns>
          <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> que representa la variable en tiempo de ejecución.
        </returns>
      <param name="prefix">
              Prefijo de la variable tal y como aparece en la expresión XPath. 
            </param>
      <param name="name">
              Nombre de la variable. 
            </param>
    </member>
    <member name="P:System.Xml.Xsl.XsltContext.Whitespace">
      <summary>
          Cuando se reemplaza en una clase derivada, obtiene un valor que indica si se van a incluir los nodos de espacio en blanco en los resultados.
        </summary>
      <returns>
          
            Es true para comprobar si se van a incluir en los resultados los nodos de espacio en blanco de la documentación de origen; es false para no evaluar los nodos de espacio en blanco. El valor predeterminado es true.
        </returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltException">
      <summary>
          Excepción que se produce cuando se produce un error al procesar una transformación XSLT.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltException" />.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase XsltException utilizando la información de los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.
        </summary>
      <param name="info">
              Objeto SerializationInfo que contiene todas las propiedades de una XsltException. 
            </param>
      <param name="context">
              Objeto StreamingContext. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltException" /> con el mensaje de error especificado. 
        </summary>
      <param name="message">
              Mensaje que describe el error.
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String,System.Exception)">
      <summary>
          Inicializa una nueva instancia de la clase XsltException.
        </summary>
      <param name="message">
              Descripción de la condición de error. 
            </param>
      <param name="innerException">
              <see cref="T:System.Exception" /> que ha producido la excepción XsltException, si la hay. Este valor puede ser null. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Transmite todas las propiedades XsltException a la clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> para el <see cref="T:System.Runtime.Serialization.StreamingContext" /> dado.
        </summary>
      <param name="info">
              Objeto SerializationInfo. 
            </param>
      <param name="context">
              Objeto StreamingContext. 
            </param>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LineNumber">
      <summary>
          Obtiene el número de línea que indica dónde se produjo el error en la hoja de estilos.
        </summary>
      <returns>
          Número de línea que indica dónde se produjo el error en la hoja de estilos.
        </returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LinePosition">
      <summary>
          Obtiene la posición de línea que indica dónde se produjo el error en la hoja de estilos.
        </summary>
      <returns>
          Posición de línea que indica dónde se produjo el error en la hoja de estilos.
        </returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.Message">
      <summary>
          Obtiene el mensaje de error con formato que describe la excepción actual.
        </summary>
      <returns>
          Mensaje de error con formato que describe la excepción actual.
        </returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.SourceUri">
      <summary>
          Obtiene la ruta de acceso de la hoja de estilos.
        </summary>
      <returns>
          Ruta de acceso de la hoja de estilos.
        </returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs">
      <summary>
          Proporciona los datos del evento <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />.
        </summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message">
      <summary>
          Obtiene el contenido del elemento xsl:message.
        </summary>
      <returns>
          Contenido del elemento xsl:message.
        </returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />.
        </summary>
      <param name="sender">
              Origen del evento.
            </param>
      <param name="e">
              <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" /> que contiene los datos del evento.
            </param>
    </member>
    <member name="T:System.Xml.Xsl.XslTransform">
      <summary>
          Transforma datos XML utilizando una hoja de estilo XLST (Extensible Stylesheet Language for Transformations, Lenguaje de hoja de estilos extensible para transformaciones).
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XslTransform" />.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String)">
      <summary>
          Carga la hoja de estilos XSLT especificada por una dirección URL.
        </summary>
      <param name="url">
              La dirección URL que especifica la hoja de estilos XSLT a cargar. 
            </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">
              El recurso cargado no es una hoja de estilos válida. 
            </exception>
      <exception cref="T:System.Security.SecurityException">
              La hoja de estilos contiene una secuencia de comandos incrustada y el llamador no dispone de un permiso UnmanagedCode. 
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)">
      <summary>
          Carga la hoja de estilos XSLT especificada por una dirección URL.
        </summary>
      <param name="url">
              La dirección URL que especifica la hoja de estilos XSLT a cargar. 
            </param>
      <param name="resolver">
              <see cref="T:System.Xml.XmlResolver" /> que se va a utilizar para cargar la hoja de estilos y las hojas de estilos a las que se haga referencia en los elementos xsl:import y xsl:include.
              Si es null, se utiliza un <see cref="T:System.Xml.XmlUrlResolver" /> predeterminado sin credenciales del usuario para abrir la hoja de estilos. El objeto <see cref="T:System.Xml.XmlUrlResolver" /> predeterminado no se utiliza para resolver los recursos externos de la hoja de estilos, por lo que los elementos xsl:import y xsl:include quedan sin resolver.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />. 
            </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">
              El recurso cargado no es una hoja de estilos válida. 
            </exception>
      <exception cref="T:System.Security.SecurityException">
              La hoja de estilos contiene una secuencia de comandos incrustada y el llamador no dispone de un permiso UnmanagedCode. 
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)">
      <summary>
          Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <param name="stylesheet">
              Objeto <see cref="T:System.Xml.XmlReader" /> que contiene la hoja de estilos XSLT. 
            </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">
              El nodo actual no cumple los requisitos de una hoja de estilos válida. 
            </exception>
      <exception cref="T:System.Security.SecurityException">
              La hoja de estilos contiene secuencias de comandos incrustadas y el llamador no dispone de un permiso UnmanagedCode. 
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>
          Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <param name="stylesheet">
              Objeto <see cref="T:System.Xml.XmlReader" /> que contiene la hoja de estilos XSLT. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para cargar cualquier hoja de estilos a la que se hace referencia en los elementos xsl:import y xsl:include. Si es null, los recursos externos no se resuelven.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />. 
            </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">
              El nodo actual no cumple los requisitos de una hoja de estilos válida. 
            </exception>
      <exception cref="T:System.Security.SecurityException">
              La hoja de estilos contiene secuencias de comandos incrustadas y el llamador no dispone de un permiso UnmanagedCode. 
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)">
      <summary>
          Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XmlReader" />. Este método permite limitar los permisos de la hoja de estilos por medio de la especificación de la evidencia.
        </summary>
      <param name="stylesheet">
              Objeto <see cref="T:System.Xml.XmlReader" /> que contiene la hoja de estilos que se va a cargar. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para cargar cualquier hoja de estilos a la que se hace referencia en los elementos xsl:import y xsl:include. Si es null, los recursos externos no se resuelven.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />. 
            </param>
      <param name="evidence">
              <see cref="T:System.Security.Policy.Evidence" /> que se establece en el ensamblado generado para el bloque de secuencias de comandos en la hoja de estilos XLST.
              Si es null, no se procesan los bloques de secuencias de comandos, no se admite la función document() de XSLT y no se permiten los objetos de extensión privilegiada.
              El llamador debe disponer de un permiso ControlEvidence para suministrar la evidencia al ensamblado de secuencias de comandos. Los llamadores de confianza parcial pueden establecer este parámetro en null. 
            </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">
              El nodo actual no cumple los requisitos de una hoja de estilos válida. 
            </exception>
      <exception cref="T:System.Security.SecurityException">
              La hoja de estilos a la que se hace referencia requiere una funcionalidad no permitida por la evidencia proporcionada.
              El llamador intenta proporcionar la evidencia, pero no dispone de un permiso ControlEvidence. 
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>
          Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" />.
        </summary>
      <param name="stylesheet">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente un objeto <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene la hoja de estilos XSLT. 
            </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">
              El recurso cargado no es una hoja de estilos válida. 
            </exception>
      <exception cref="T:System.Security.SecurityException">
              La hoja de estilos contiene secuencias de comandos incrustadas y el llamador no dispone de un permiso UnmanagedCode. 
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)">
      <summary>
          Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" />.
        </summary>
      <param name="stylesheet">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente un objeto <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene la hoja de estilos XSLT. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para cargar cualquier hoja de estilos a la que se hace referencia en los elementos xsl:import y xsl:include. Si es null, los recursos externos no se resuelven.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />. 
            </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">
              El recurso cargado no es una hoja de estilos válida. 
            </exception>
      <exception cref="T:System.Security.SecurityException">
              La hoja de estilos contiene secuencias de comandos incrustadas y el llamador no dispone de un permiso UnmanagedCode. 
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)">
      <summary>
          Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" />. Este método permite limitar los permisos de la hoja de estilos por medio de la especificación de la evidencia.
        </summary>
      <param name="stylesheet">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente un objeto <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene la hoja de estilos XSLT. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para cargar cualquier hoja de estilos a la que se hace referencia en los elementos xsl:import y xsl:include. Si es null, los recursos externos no se resuelven.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />. 
            </param>
      <param name="evidence">
              <see cref="T:System.Security.Policy.Evidence" /> que se establece en el ensamblado generado para el bloque de secuencias de comandos en la hoja de estilos XLST.
              Si es null, no se procesan los bloques de secuencias de comandos, no se admite la función document() de XSLT y no se permiten los objetos de extensión privilegiada.
              El llamador debe disponer de un permiso ControlEvidence para suministrar la evidencia al ensamblado de secuencias de comandos. Los llamadores de confianza parcial pueden establecer este parámetro en null. 
            </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">
              El recurso cargado no es una hoja de estilos válida. 
            </exception>
      <exception cref="T:System.Security.SecurityException">
              La hoja de estilos a la que se hace referencia requiere una funcionalidad no permitida por la evidencia proporcionada.
              El llamador intenta proporcionar la evidencia, pero no dispone de un permiso ControlEvidence. 
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)">
      <summary>
          Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </summary>
      <param name="stylesheet">
              Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene la hoja de estilos XSLT. 
            </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">
              El nodo actual no cumple los requisitos de una hoja de estilos válida. 
            </exception>
      <exception cref="T:System.Security.SecurityException">
              La hoja de estilos contiene secuencias de comandos incrustadas y el llamador no dispone de un permiso UnmanagedCode. 
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)">
      <summary>
          Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.
        </summary>
      <param name="stylesheet">
              Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene la hoja de estilos XSLT. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para cargar cualquier hoja de estilos a la que se hace referencia en los elementos xsl:import y xsl:include. Si es null, los recursos externos no se resuelven.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />. 
            </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">
              El nodo actual no cumple los requisitos de una hoja de estilos válida. 
            </exception>
      <exception cref="T:System.Security.SecurityException">
              La hoja de estilos contiene secuencias de comandos incrustadas y el llamador no dispone de un permiso UnmanagedCode. 
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)">
      <summary>
          Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XPath.XPathNavigator" />. Este método permite limitar los permisos de la hoja de estilos por medio de la especificación de la evidencia.
        </summary>
      <param name="stylesheet">
              Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene la hoja de estilos que se va a cargar. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para cargar cualquier hoja de estilos a la que se hace referencia en los elementos xsl:import y xsl:include. Si es null, los recursos externos no se resuelven.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />. 
            </param>
      <param name="evidence">
              <see cref="T:System.Security.Policy.Evidence" /> que se establece en el ensamblado generado para el bloque de secuencias de comandos en la hoja de estilos XLST.
              Si es null, no se procesan los bloques de secuencias de comandos, no se admite la función document() de XSLT y no se permiten los objetos de extensión privilegiada.
              El llamador debe disponer de un permiso ControlEvidence para suministrar la evidencia al ensamblado de secuencias de comandos. Los llamadores de confianza parcial pueden establecer este parámetro en null. 
            </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">
              El nodo actual no cumple los requisitos de una hoja de estilos válida. 
            </exception>
      <exception cref="T:System.Security.SecurityException">
              La hoja de estilos a la que se hace referencia requiere una funcionalidad no permitida por la evidencia proporcionada.
              El llamador intenta proporcionar la evidencia, pero no dispone de un permiso ControlEvidence. 
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)">
      <summary>
          Transforma los datos XML del archivo de entrada y envía el resultado a un archivo de salida.
        </summary>
      <param name="inputfile">
              Dirección URL del documento origen que se va a transformar. 
            </param>
      <param name="outputfile">
              Dirección URL del archivo de resultado. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)">
      <summary>
          Transforma los datos XML del archivo de entrada y envía el resultado a un archivo de salida.
        </summary>
      <param name="inputfile">
              Dirección URL del documento origen que se va a transformar. 
            </param>
      <param name="outputfile">
              Dirección URL del archivo de resultado. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver la función document() de XSLT. Si es null, la función document() no se resuelve.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> que contiene los resultados de la transformación.
        </returns>
      <param name="input">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.Stream" />.
        </summary>
      <param name="input">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <param name="output">
              Secuencia a la que se desea enviar el resultado. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjo un error al procesar la transformación XSLT.
              Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se produce <see cref="T:System.Xml.Xsl.XsltException" /> si utiliza Microsoft .NET Framework versión 1.1 o anterior.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.Stream" />.
        </summary>
      <param name="input">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <param name="output">
              Secuencia a la que se desea enviar el resultado. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver la función document() de XSLT. Si es null, la función document() no se resuelve.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjo un error al procesar la transformación XSLT. 
              Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se produce <see cref="T:System.Xml.Xsl.XsltException" /> si utiliza Microsoft .NET Framework versión 1.1 o anterior.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.TextWriter" />.
        </summary>
      <param name="input">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <param name="output">
              Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjo un error al procesar la transformación XSLT. 
              Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se produce <see cref="T:System.Xml.Xsl.XsltException" /> si utiliza Microsoft .NET Framework versión 1.1 o anterior.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.TextWriter" />.
        </summary>
      <param name="input">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <param name="output">
              Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver la función document() de XSLT. Si es null, la función document() no se resuelve.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjo un error al procesar la transformación XSLT. 
              Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se produce <see cref="T:System.Xml.Xsl.XsltException" /> si utiliza Microsoft .NET Framework versión 1.1 o anterior.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> que contiene los resultados de la transformación.
        </returns>
      <param name="input">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver la función document() de XSLT. Si es null, la función document() no se resuelve.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />. 
            </param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlWriter" />.
        </summary>
      <param name="input">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <param name="output">
              Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjo un error al procesar la transformación XSLT. 
              Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se produce <see cref="T:System.Xml.Xsl.XsltException" /> si utiliza Microsoft .NET Framework versión 1.1 o anterior.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlWriter" />.
        </summary>
      <param name="input">
              Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <param name="output">
              Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver la función document() de XSLT. Si es null, la función document() no se resuelve.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjo un error al procesar la transformación XSLT. 
              Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se produce <see cref="T:System.Xml.Xsl.XsltException" /> si utiliza Microsoft .NET Framework versión 1.1 o anterior.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> que contiene los resultados de la transformación.
        </returns>
      <param name="input">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjo un error al procesar la transformación XSLT. 
              Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se produce <see cref="T:System.Xml.Xsl.XsltException" /> si utiliza Microsoft .NET Framework versión 1.1 o anterior.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.Stream" />.
        </summary>
      <param name="input">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <param name="output">
              Secuencia a la que se desea enviar el resultado. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjo un error al procesar la transformación XSLT. 
              Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se produce <see cref="T:System.Xml.Xsl.XsltException" /> si utiliza Microsoft .NET Framework versión 1.1 o anterior.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.Stream" />.
        </summary>
      <param name="input">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <param name="output">
              Secuencia a la que se desea enviar el resultado. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver la función document() de XSLT. Si es null, la función document() no se resuelve.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjo un error al procesar la transformación XSLT. 
              Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se produce <see cref="T:System.Xml.Xsl.XsltException" /> si utiliza Microsoft .NET Framework versión 1.1 o anterior.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.TextWriter" />.
        </summary>
      <param name="input">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <param name="output">
              Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjo un error al procesar la transformación XSLT. 
              Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se produce <see cref="T:System.Xml.Xsl.XsltException" /> si utiliza Microsoft .NET Framework versión 1.1 o anterior.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.TextWriter" />.
        </summary>
      <param name="input">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <param name="output">
              Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver la función document() de XSLT. Si es null, la función document() no se resuelve.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjo un error al procesar la transformación XSLT. 
              Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se produce <see cref="T:System.Xml.Xsl.XsltException" /> si utiliza Microsoft .NET Framework versión 1.1 o anterior.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlReader" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlReader" /> que contiene los resultados de la transformación.
        </returns>
      <param name="input">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver la función document() de XSLT. Si es null, la función document() no se resuelve.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjo un error al procesar la transformación XSLT. 
              Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se produce <see cref="T:System.Xml.Xsl.XsltException" /> si utiliza Microsoft .NET Framework versión 1.1 o anterior.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando los argumentos especificados y envía el resultado a un <see cref="T:System.Xml.XmlWriter" />.
        </summary>
      <param name="input">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <param name="output">
              Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjo un error al procesar la transformación XSLT. 
              Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se produce <see cref="T:System.Xml.Xsl.XsltException" /> si utiliza Microsoft .NET Framework versión 1.1 o anterior.
            </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>
          Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando los argumentos especificados y envía el resultado a un <see cref="T:System.Xml.XmlWriter" />.
        </summary>
      <param name="input">
              <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar. 
            </param>
      <param name="args">
              Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos con espacio de nombres utilizados como entrada para la transformación. 
            </param>
      <param name="output">
              Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado. 
            </param>
      <param name="resolver">
              Objeto <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver la función document() de XSLT. Si es null, la función document() no se resuelve.
              <see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />. 
            </param>
      <exception cref="T:System.InvalidOperationException">
              Se produjo un error al procesar la transformación XSLT. 
              Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se produce <see cref="T:System.Xml.Xsl.XsltException" /> si utiliza Microsoft .NET Framework versión 1.1 o anterior.
            </exception>
    </member>
    <member name="P:System.Xml.Xsl.XslTransform.XmlResolver">
      <summary>
          Establece <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver recursos externos cuando se llama al método <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.XmlResolver" /> que se va a utilizar durante la transformación. Si se establece en null, la función document() de XSLT no se resuelve.
        </returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltSettings">
      <summary>
          Especifica las características XSLT que se admitirán durante la ejecución de la hoja de estilos XSLT.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltSettings" /> con la configuración predeterminada.
        </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltSettings" /> con la configuración especificada.
        </summary>
      <param name="enableDocumentFunction">
              
                Es true para habilitar la compatibilidad con la función document() XSLT; de lo contrario, es false.
            </param>
      <param name="enableScript">
              
                Es true para habilitar la compatibilidad con los bloques de secuencias de comandos incrustados; de lo contrario, es false.
            </param>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.Default">
      <summary>
          Obtiene un objeto <see cref="T:System.Xml.Xsl.XsltSettings" /> con la configuración predeterminada. La compatibilidad con la función document() de XSLT y los bloques de secuencias de comandos incrustados está deshabilitada.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Xsl.XsltSettings" /> con las propiedades <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> y <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> establecidas en false.
        </returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction">
      <summary>
          Obtiene o establece un valor que indica si se va a habilitar la compatibilidad con la función document() XSLT.
        </summary>
      <returns>
          
            Es true para admitir la función document() XSLT; de lo contrario, esfalse. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableScript">
      <summary>
          Obtiene o establece un valor que indica si se va a habilitar la compatibilidad con los bloques de secuencias de comandos incrustados.
        </summary>
      <returns>
          
            Es true para admitir los bloques de secuencias de comandos en las hojas de estilos XSLT; de lo contrario, es false. El valor predeterminado es false.
        </returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.TrustedXslt">
      <summary>
          Obtiene un objeto <see cref="T:System.Xml.Xsl.XsltSettings" /> que habilita la compatibilidad con la función document() XSLT y los bloques de secuencias de comandos incrustados.
        </summary>
      <returns>
          Objeto <see cref="T:System.Xml.Xsl.XsltSettings" /> con las propiedades <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> y <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> establecidas en true.
        </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Item(System.Int32)">
      <summary>
          Obtiene el valor del atributo con el índice especificado.
        </summary>
      <returns>
          Valor del atributo especificado.
        </returns>
      <param name="i">
              Índice del atributo. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />. 
            </exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Item(System.String)">
      <summary>
          Obtiene el valor del atributo con el nombre especificado.
        </summary>
      <returns>
          Valor del atributo especificado. Si no se encuentra el atributo, se devuelve null.
        </returns>
      <param name="name">
              Nombre completo del atributo. 
            </param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Item(System.String,System.String)">
      <summary>
          Obtiene el valor del atributo con el nombre local y el URI de espacio de nombres que se hayan especificado.
        </summary>
      <returns>
          Valor del atributo especificado. Si no se encuentra el atributo, se devuelve null.
        </returns>
      <param name="name">
              Nombre local del atributo. 
            </param>
      <param name="namespaceURI">
              URI de espacio de nombres del atributo. 
            </param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.QuoteChar">
      <summary>
          Obtiene el carácter de comillas entre las que se encierra el valor de un nodo de atributo.
        </summary>
      <returns>
          
            XmlNodeReader siempre utiliza comillas dobles (").
        </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Item(System.Int32)"></member>
    <member name="P:System.Xml.XmlTextReader.Item(System.String)"></member>
    <member name="P:System.Xml.XmlTextReader.Item(System.String,System.String)"></member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlLineInfo#HasLineInfo">
      <summary>
          Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" />.
        </summary>
      <returns>
          
            Es true si se pueden proporcionar <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> y <see cref="P:System.Xml.IXmlLineInfo.LinePosition" />; en caso contrario, es false.
        </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Item(System.Int32)"></member>
    <member name="P:System.Xml.XmlValidatingReader.Item(System.String)"></member>
    <member name="P:System.Xml.XmlValidatingReader.Item(System.String,System.String)"></member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlLineInfo#HasLineInfo"></member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager)"></member>
    <member name="P:System.Xml.Serialization.SoapCodeExporter.IncludeMetadata">
      <summary>
          Obtiene una colección de declaraciones <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />, especificando los tipos derivados. 
        </summary>
      <returns>
          <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> que contiene los atributos.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlCodeExporter.IncludeMetadata"></member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.ElementName">
      <summary>
          Obtiene el nombre incompleto del elemento de esquema XML que representa un mensaje SOAP para el que se proporciona la información de asignación de tipo de .NET Framework.
        </summary>
      <returns>
          Obtiene el nombre del elemento de esquema XML.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Namespace">
      <summary>
          Obtiene el espacio de nombres XML del elemento de esquema XML que representa un mensaje SOAP para el que se proporciona la información de asignación de tipo de .NET Framework.
        </summary>
      <returns>
          Espacio de nombres XML del elemento de esquema.
        </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.ElementName"></member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.Namespace"></member>
    <member name="P:System.Xml.XPath.XPathNavigator.Value"></member>
    <member name="P:System.Xml.Xsl.XsltCompileException.Message"></member>
    <member name="M:System.Xml.XmlNodeReader.ReadInnerXml"></member>
    <member name="M:System.Xml.XmlNodeReader.ReadOuterXml"></member>
    <member name="M:System.Xml.XmlTextReader.ReadInnerXml"></member>
    <member name="M:System.Xml.XmlTextReader.ReadOuterXml"></member>
    <member name="M:System.Xml.XmlValidatingReader.ReadInnerXml"></member>
    <member name="M:System.Xml.XmlValidatingReader.ReadOuterXml"></member>
    <member name="M:System.Xml.XmlConvert.FromBinHexString(System.String)">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="s">
              
              
            </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBinHexString(System.Byte[])">
      <summary>
        </summary>
      <returns>
        </returns>
      <param name="inArray">
              
              
            </param>
    </member>
    <member name="P:System.Xml.XmlResolver.NameTable"></member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullableSpecified"></member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullableSpecified"></member>
  </members>
</doc>