<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Management</name>
  </assembly>
  <members>
    <member name="T:System.Management.AuthenticationLevel">
      <summary>
          Describe el nivel de autenticación que se utiliza para conectar WMI. Se utiliza para la conexión COM a WMI.          
        </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Default">
      <summary>
          Nivel de autenticación COM predeterminado. WMI utiliza la configuración Autenticación de Windows predeterminada.
        </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.None">
      <summary>
          Ninguna autenticación COM.
        </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Connect">
      <summary>
          Autenticación COM de nivel de conexiones.
        </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Call">
      <summary>
          Autenticación COM de nivel de llamada.
        </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Packet">
      <summary>
          Autenticación COM de nivel de paquetes.
        </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.PacketIntegrity">
      <summary>
          Autenticación COM de nivel de integridad de paquetes.
        </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.PacketPrivacy">
      <summary>
          Autenticación COM de nivel de privacidad de paquetes.
        </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Unchanged">
      <summary>
          El nivel de autenticación debe quedarse como estaba.
        </summary>
    </member>
    <member name="T:System.Management.CimType">
      <summary>
          Describe los posibles tipos CIM para las propiedades, los calificadores o los parámetros de los métodos.          
        </summary>
    </member>
    <member name="F:System.Management.CimType.None">
      <summary>
          Un valor null.
        </summary>
    </member>
    <member name="F:System.Management.CimType.SInt8">
      <summary>
          Entero de 8 bits con signo. Este valor se asigna al tipo <see cref="T:System.SByte" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.UInt8">
      <summary>
          Entero de 8 bits sin signo. Este valor se asigna al tipo <see cref="T:System.Byte" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.SInt16">
      <summary>
          Entero de 16 bits con signo. Este valor se asigna al tipo <see cref="T:System.Int16" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.UInt16">
      <summary>
          Entero de 16 bits sin signo. Este valor se asigna al tipo <see cref="T:System.UInt16" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.SInt32">
      <summary>
          Entero de 32 bits con signo. Este valor se asigna al tipo <see cref="T:System.Int32" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.UInt32">
      <summary>
          Entero de 32 bits sin signo. Este valor se asigna al tipo <see cref="T:System.UInt32" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.SInt64">
      <summary>
          Entero de 64 bits con signo. Este valor se asigna al tipo <see cref="T:System.Int64" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.UInt64">
      <summary>
          Entero de 64 bits sin signo. Este valor se asigna al tipo <see cref="T:System.UInt64" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.Real32">
      <summary>
          Número de 32 bits de punto flotante. Este valor se asigna al tipo <see cref="T:System.Single" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.Real64">
      <summary>
          Número de 64 bits de punto flotante. Este valor se asigna al tipo <see cref="T:System.Double" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.Boolean">
      <summary>
          Valor booleano. Este valor se asigna al tipo <see cref="T:System.Boolean" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.String">
      <summary>
          Cadena. Este valor se asigna al tipo <see cref="T:System.String" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.DateTime">
      <summary>
          Valor de fecha u hora, representado mediante una cadena con formato de fecha/hora DMTF: yyyymmddHHMMSS.mmmmmmsUUU, donde yyyymmdd es la fecha expresada en año/mes/día; HHMMSS es la hora expresada en horas/minutos/segundos; mmmmmm es el número de microsegundos expresado con 6 dígitos; y sUUU es un signo (+ o -) y una desviación con respecto a UTC de 3 dígitos. Este valor se asigna al tipo <see cref="T:System.DateTime" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.Reference">
      <summary>
          Referencia a otro objeto. Se representa mediante una cadena que contiene la ruta de acceso al objeto al que se hace referencia. Este valor se asigna al tipo <see cref="T:System.Int16" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.Char16">
      <summary>
          Carácter de 16 bits. Este valor se asigna al tipo <see cref="T:System.Char" />.
        </summary>
    </member>
    <member name="F:System.Management.CimType.Object">
      <summary>
          Objeto incrustado. Observe que los objetos incrustados difieren de las referencias en que el objeto incrustado no tiene una ruta de acceso y su duración es idéntica a la duración del objeto que contiene. Este valor se asigna al tipo <see cref="T:System.Object" />.
        </summary>
    </member>
    <member name="T:System.Management.CodeLanguage">
      <summary>
          Define los lenguajes que admite el generador de código.          
        </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.CSharp">
      <summary>
          Valor para generar código C#.             
        </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.JScript">
      <summary>
          Valor para generar código JScript.
        </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.VB">
      <summary>
          Valor para generar código Visual Basic.
        </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.VJSharp">
      <summary>
          Valor para generar código de Visual J#.
        </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.Mcpp">
      <summary>
          Valor para generar código de C++ administrado.             
        </summary>
    </member>
    <member name="T:System.Management.ComparisonSettings">
      <summary>
          Describe los modos de comparación de objetos que se pueden utilizar con <see cref="M:System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)" />. Fíjese que estos valores se pueden combinar.          
        </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IncludeAll">
      <summary>
          Modo que compara todos los elemento de los objetos comparados. Valor: 0. 
        </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreQualifiers">
      <summary>
          Modo que compara los objetos, omitiendo los calificadores. Valor: 1.
        </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreObjectSource">
      <summary>
          Modo que omite el origen de los objetos, concretamente el servidor y espacio de nombres de donde vienen, en comparación con otros objetos. Valor: 2.
        </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreDefaultValues">
      <summary>
          Modo que omite los valores predeterminados de las propiedades. Este valor sólo es significativo cuando se comparan clases. Valor: 4.
        </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreClass">
      <summary>
          Modo que supone que los objetos que se comparan son instancias de la misma clase. Como consecuencia, este valor provoca sólo la comparación de la información relacionada con la instancia. Utilice este indicador para optimizar el desarrollo. Si los objetos no son de la misma clase, los resultados no se definen. Valor: 8.
        </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreCase">
      <summary>
          Modo que compara los valores de cadenas sin distinguir entre mayúsculas y minúsculas. Esto se aplica a cadenas y a valores del calificador. Los nombres de propiedades y calificadores siempre se comparan sin distinguir entre mayúsculas y minúsculas, se especifique o no este indicador. Valor: 16.
        </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreFlavor">
      <summary>
          Modo que omite los modos del calificador. Este indicador sigue tomando valores del calificador en una cuenta, pero omite las distinciones de modos tales como las reglas de propagación y las restricciones de reemplazamiento. Valor: 32.
        </summary>
    </member>
    <member name="T:System.Management.CompletedEventArgs">
      <summary>
          Contiene los datos del evento <see cref="E:System.Management.ManagementOperationObserver.Completed" />.          
        </summary>
    </member>
    <member name="P:System.Management.CompletedEventArgs.Status">
      <summary>
          Obtiene el estado de finalización de la operación.          
        </summary>
      <returns>
          Devuelve un valor de enumeración <see cref="T:System.Management.ManagementStatus" />.
        </returns>
    </member>
    <member name="P:System.Management.CompletedEventArgs.StatusObject">
      <summary>
          Obtiene más información sobre el estado de un objeto WMI. Éste puede ser null.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.ManagementBaseObject" /> que contiene información sobre el estado de una operación.
        </returns>
    </member>
    <member name="T:System.Management.CompletedEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.Management.ManagementOperationObserver.Completed" />.     
        </summary>
      <param name="sender">
              Instancia del objeto para el que debe invocarse este método.
            </param>
      <param name="e">
              <see cref="T:System.Management.CompletedEventArgs" /> que especifica la razón por la que se llama al evento.
            </param>
    </member>
    <member name="T:System.Management.ConnectionOptions">
      <summary>
          Especifica toda la configuración necesaria para realizar una conexión WMI.          
        </summary>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ConnectionOptions" /> para la operación de conexión utilizando los valores predeterminados. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.Security.SecureString,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>
        </summary>
      <param name="locale">
              Configuración regional que se utiliza para la conexión.
            </param>
      <param name="username">
              Nombre de usuario que se utiliza para la conexión. Si es null, se utilizan las credenciales del usuario actual que inició la sesión.
            </param>
      <param name="password">
              Contraseña del nombre de usuario. Si el nombre de usuario también es null, las credenciales utilizadas serán las del usuario actual que inició la sesión.
            </param>
      <param name="authority">
              La autoridad que se utiliza para autenticar el usuario especificado.
            </param>
      <param name="impersonation">
              Nivel de suplantación COM que se utiliza para la conexión.
            </param>
      <param name="authentication">
              Nivel de autenticación COM que se utiliza para la conexión.  
            </param>
      <param name="enablePrivileges">
              true para habilitar privilegios de usuario especiales; de lo contrario, false. Este parámetro sólo se puede utilizar cuando se desarrolla una operación que requiere privilegios de usuario Windows NT especiales.
            </param>
      <param name="context">
              Objeto de pares de nombre-valor específico para cada proveedor que se pasa al proveedor.
            </param>
      <param name="timeout">
              Reservado para un uso futuro.
            </param>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.String,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ConnectionOptions" /> que se va a utilizar para una conexión WMI, mediante los valores especificados.          
        </summary>
      <param name="locale">
              Configuración regional que se utiliza para la conexión.
            </param>
      <param name="username">
              Nombre de usuario que se utiliza para la conexión. Si es null, se utilizan las credenciales del usuario actual que inició la sesión.
            </param>
      <param name="password">
              Contraseña del nombre de usuario. Si el nombre de usuario también es null, las credenciales utilizadas serán las del usuario actual que inició la sesión.
            </param>
      <param name="authority">
              La autoridad que se utiliza para autenticar el usuario especificado. 
            </param>
      <param name="impersonation">
              Nivel de suplantación COM que se utiliza para la conexión. 
            </param>
      <param name="authentication">
              Nivel de autenticación COM que se utiliza para la conexión.  
            </param>
      <param name="enablePrivileges">
              
                true para permitir, privilegios de usuario especiales; de lo contrario, false. Este parámetro sólo se puede utilizar cuando se desarrolla una operación que requiere privilegios de usuario Windows NT especiales.
            </param>
      <param name="context">
              Objeto de pares de nombre-valor específico para cada proveedor que se pasa al proveedor. 
            </param>
      <param name="timeout">
              Reservado para un uso futuro. 
            </param>
    </member>
    <member name="P:System.Management.ConnectionOptions.Authentication">
      <summary>
          Obtiene o establece el nivel de autenticación COM que se va a utilizar para las operaciones de esta conexión.          
        </summary>
      <returns>
          Devuelve un valor de enumeración <see cref="T:System.Management.AuthenticationLevel" /> que indica el nivel de autenticación COM utilizado para una conexión al equipo local o remoto. 
        </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Authority">
      <summary>
          Obtiene o establece la autoridad que se utiliza para autenticar el usuario especificado.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que define la autoridad utilizada para autenticar el usuario especificado.
        </returns>
    </member>
    <member name="M:System.Management.ConnectionOptions.Clone">
      <summary>
          Devuelve una copia del objeto.          
        </summary>
      <returns>
          Objeto clonado.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ConnectionOptions.EnablePrivileges">
      <summary>
          Obtiene o establece un valor que indica si los privilegios de usuario necesitan habilitarse para la operación de conexión. Esta propiedad sólo debe usarse cuando la operación realizada requiere la habilitación de un determinado privilegio de usuario (por ejemplo, un reinicio de equipo).          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si es preciso habilitar los privilegios de usuario para la operación de conexión.
        </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Impersonation">
      <summary>
          Obtiene o establece el nivel de suplantación COM que se va a utilizar para las operaciones de esta conexión.          
        </summary>
      <returns>
          Devuelve un valor de enumeración <see cref="T:System.Management.ImpersonationLevel" /> que indica el nivel de suplantación utilizado para conectar a WMI.
        </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Locale">
      <summary>
          Obtiene o establece la configuración regional que se utiliza para la operación de conexión.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que se utiliza para la configuración regional en una conexión a WMI.
        </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Password">
      <summary>
          Establece la contraseña del usuario especificado.
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que se utiliza para la contraseña en una conexión a WMI.
        </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.SecurePassword">
      <summary>
          Establece la contraseña del usuario especificado.
        </summary>
      <returns>
          Devuelve un valor SecureString que se utiliza para la contraseña en una conexión a WMI.
        </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Username">
      <summary>
          Obtiene o establece el nombre de usuario que se utiliza para la operación de conexión.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que se utiliza como nombre de usuario en una conexión a WMI.
        </returns>
    </member>
    <member name="T:System.Management.DeleteOptions">
      <summary>
          Especifica opciones para eliminar un objeto de administración.          
        </summary>
    </member>
    <member name="M:System.Management.DeleteOptions.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.DeleteOptions" /> para la operación de eliminación, utilizando los valores predeterminados. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.DeleteOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.DeleteOptions" /> para una operación de eliminación mediante los valores especificados.          
        </summary>
      <param name="context">
              Objeto de pares nombre-valor específico para cada proveedor que se pasa al proveedor. 
            </param>
      <param name="timeout">
              Tiempo para que se realice la operación antes de que se agote el tiempo. El valor predeterminado es <see cref="F:System.TimeSpan.MaxValue" />. Al establecer este parámetro se invocará la operación de forma semisincronizada.
            </param>
    </member>
    <member name="M:System.Management.DeleteOptions.Clone">
      <summary>
          Devuelve una copia del objeto.          
        </summary>
      <returns>
          Objeto clonado.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.EnumerationOptions">
      <summary>
          Proporciona una clase base para los objetos de opciones relacionadas con enumeraciones y consultas.          
        </summary>
    </member>
    <member name="M:System.Management.EnumerationOptions.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.EnumerationOptions" /> con valores predeterminados (vea las descripciones de propiedad individual para las que son los valores predeterminados). Éste es el constructor predeterminado.           
        </summary>
    </member>
    <member name="M:System.Management.EnumerationOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.EnumerationOptions" /> para utilizarse para consultas o enumeraciones, permitiendo al usuario especificar valores para las diferentes opciones.          
        </summary>
      <param name="context">
              El objeto de contexto de las opciones contiene información específica del proveedor que se puede pasar al proveedor.
            </param>
      <param name="timeout">
              Valor del tiempo de espera para enumerar los resultados.
            </param>
      <param name="blockSize">
              Número de elementos para recuperar de una vez de WMI.
            </param>
      <param name="rewindable">
              
                Es true para mostrar que el conjunto de resultados es susceptible de retroceso (permite varias exploraciones transversales); en caso contrario, es false.
            </param>
      <param name="returnImmediatley">
              
                Es true para mostrar que la operación debe devolver de inmediato (de manera semisincronizada) o bloquearse hasta que todos los resultados estén disponibles; en caso contrario, es false.
            </param>
      <param name="useAmendedQualifiers">
              
                Es true para mostrar que los objetos devueltos deben contener calificadores corregidos (regionales); en caso contrario, es false.
            </param>
      <param name="ensureLocatable">
              
                Es true para garantizar que todos los objetos devueltos tienen rutas de acceso válidas; en caso contrario, esfalse.
            </param>
      <param name="prototypeOnly">
              
                true para devolver un prototipo del conjunto de resultados en lugar de los resultados actuales; en caso contrario, false.
            </param>
      <param name="directRead">
              
                Es true para recuperar objetos sólo de la clase especificada o también de las clases derivadas; en caso contrario, es false.
            </param>
      <param name="enumerateDeep">
              
                Es true para utilizar la enumeración recursiva en las subclases; en caso contrario, es false.
            </param>
    </member>
    <member name="P:System.Management.EnumerationOptions.BlockSize">
      <summary>
          Obtiene o establece el tamaño de bloque para operaciones de bloqueo. Cuando se enumera mediante una colección, WMI devuelve resultados en grupos de un tamaño especificado.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Int32" /> utilizado para el tamaño de bloque en las operaciones de bloque.
        </returns>
    </member>
    <member name="M:System.Management.EnumerationOptions.Clone">
      <summary>
          Devuelve una copia del objeto.          
        </summary>
      <returns>
          Objeto clonado.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.EnumerationOptions.DirectRead">
      <summary>
          Obtiene o establece un valor que indica si se solicita el acceso directo al proveedor WMI para la clase especificada, sin tener en cuenta la superclase o las clases derivadas.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si se solicita el acceso directo al proveedor WMI para la clase especificada.
        </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.EnsureLocatable">
      <summary>
          Obtiene o establece un valor que indica si los objetos devueltos deben contener información localizable. Esto garantiza que el valor de las propiedades del sistema, como __PATH, __RELPATH y __SERVER no es NULL. Este indicador sólo se puede utilizar en consultas y se omiten en enumeraciones.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si los objetos devueltos deben contener información localizable.
        </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.EnumerateDeep">
      <summary>
          Obtiene o establece un valor que indica si la enumeración recursiva se solicita en todas las clases derivadas de la superclase especificada. Si false, sólo se devuelven miembros de clase derivada inmediata.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si la enumeración recursiva se solicita en todas las clases derivadas de la superclase especificada.
        </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.PrototypeOnly">
      <summary>
          Obtiene o establece un valor que indica si la consulta debe devolver un prototipo de un conjunto de resultados en vez de los resultados actuales. Este indicador se utiliza para los prototipos.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si la consulta debe devolver un prototipo del conjunto de resultados en vez de los resultados reales.
        </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.ReturnImmediately">
      <summary>
          Obtiene o establece un valor que indica si la operación invocada se debe desarrollar de manera sincronizada o semisincronizada. Si esta propiedad esta definida como true, se invoca la enumeración y se devuelve la llamada inmediatamente. La recuperación actual de los resultados tiene lugar cuando se recorre la colección resultante.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si la operación invocada debe desarrollarse de manera sincronizada o semisincronizada.
        </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.Rewindable">
      <summary>
          Obtiene o establece un valor que indica si se supone que la colección se puede rebobinar. Si true, los objetos de la colección se mantendrán disponibles para varias enumeraciones. Si false, la colección sólo se puede enumerar una vez.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si se supone que la colección es susceptible de retroceso.
        </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.UseAmendedQualifiers">
      <summary>
          Obtiene o establece un valor que indica si los objetos devueltos de WMI deben contener información corregida. Generalmente, la información corregida es información localizable adjunta al objeto WMI, como las descripciones de propiedades y objetos.  
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si los objetos devueltos de WMI deben contener información corregida.
        </returns>
    </member>
    <member name="T:System.Management.EventArrivedEventArgs">
      <summary>
          Contiene los datos del evento <see cref="E:System.Management.ManagementEventWatcher.EventArrived" />.          
        </summary>
    </member>
    <member name="P:System.Management.EventArrivedEventArgs.NewEvent">
      <summary>
          Obtiene el evento WMI que se entrega.      
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.ManagementBaseObject" /> que contiene el evento WMI entregado.
        </returns>
    </member>
    <member name="T:System.Management.EventArrivedEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.Management.ManagementEventWatcher.EventArrived" />.          
        </summary>
      <param name="sender">
              Instancia del objeto para el que debe invocarse este método.
            </param>
      <param name="e">
              <see cref="T:System.Management.EventArrivedEventArgs" /> que especifica la razón por la que se llama al evento.
            </param>
    </member>
    <member name="T:System.Management.EventQuery">
      <summary>
          Representa una consulta de evento WMI.          
        </summary>
    </member>
    <member name="M:System.Management.EventQuery.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.EventQuery" />. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.EventQuery.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.EventQuery" /> para la consulta especificada.          
        </summary>
      <param name="query">
              Representación textual de la consulta de evento.
            </param>
    </member>
    <member name="M:System.Management.EventQuery.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.EventQuery" /> para el lenguaje y la consulta especificados.           
        </summary>
      <param name="language">
              Lenguaje en el que se especifica la cadena de consulta. 
            </param>
      <param name="query">
              Representación de cadena de la consulta.
            </param>
    </member>
    <member name="M:System.Management.EventQuery.Clone">
      <summary>
          Devuelve una copia del objeto.          
        </summary>
      <returns>
          Objeto clonado.             
        </returns>
    </member>
    <member name="T:System.Management.EventWatcherOptions">
      <summary>
          Especifica opciones para administrar la inspección de eventos.          
        </summary>
    </member>
    <member name="M:System.Management.EventWatcherOptions.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.EventWatcherOptions" /> para la inspección de eventos, mediante los valores predeterminados. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.EventWatcherOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.EventWatcherOptions" /> con los valores dados.          
        </summary>
      <param name="context">
              El objeto de contexto de las opciones contiene información específica del proveedor que se puede pasar al proveedor. 
            </param>
      <param name="timeout">
              Tiempo de espera para los siguientes eventos.
            </param>
      <param name="blockSize">
              Número de eventos que se espera en cada bloque.  
            </param>
    </member>
    <member name="P:System.Management.EventWatcherOptions.BlockSize">
      <summary>
          Obtiene o establece el tamaño de bloque para operaciones de bloqueo. Cuando se esperan eventos, este valor especifica los eventos que hay que esperar antes de devolverlos.      
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Int32" /> que indica el tamaño de bloque para un bloque de operaciones.
        </returns>
    </member>
    <member name="M:System.Management.EventWatcherOptions.Clone">
      <summary>
          Devuelve una copia del objeto.          
        </summary>
      <returns>
          Objeto clonado.             
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ImpersonationLevel">
      <summary>
          Describe el nivel de suplantación que se utiliza para conectar WMI.          
        </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Default">
      <summary>
          Suplantación predeterminada.
        </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Anonymous">
      <summary>
          Nivel de suplantación de COM anónimo que esconde la identidad del que llama. Las llamadas a WMI pueden dar error con este nivel de suplantación.
        </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Identify">
      <summary>
          Nivel de suplantación COM en el nivel de identificación que permite que los objetos utilicen los credenciales del que llama. Las llamadas a WMI pueden dar error con este nivel de suplantación.
        </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Impersonate">
      <summary>
          Nivel de suplantación COM en el nivel de suplantación que permite que los objetos utilicen los credenciales del que llama. Nivel de suplantación recomendado para las llamadas WMI.
        </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Delegate">
      <summary>
          Nivel de suplantación COM en el nivel de delegado que permite que los objetos dejen a otros objetos utilizar los credenciales del que llama. Este nivel, que funcionará con llamadas WMI pero que puede constituir un riesgo de seguridad innecesario, es compatible con Windows 2000.
        </summary>
    </member>
    <member name="T:System.Management.InvokeMethodOptions">
      <summary>
          Especifica opciones para invocar un método de administración.          
        </summary>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.InvokeMethodOptions" /> para la operación <see cref="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])" />, mediante los valores predeterminados. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.InvokeMethodOptions" /> para una operación de invocación mediante los valores especificados.          
        </summary>
      <param name="context">
              Objeto de pares nombre-valor específico para cada proveedor que se pasa al proveedor.
            </param>
      <param name="timeout">
              Tiempo para que se realice la operación antes de que se agote el tiempo. El valor predeterminado es <see cref="F:System.TimeSpan.MaxValue" />. Al establecer este parámetro se invocará la operación de forma semisincronizada.
            </param>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.Clone">
      <summary>
          Devuelve una copia del objeto.          
        </summary>
      <returns>
          Objeto clonado.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementBaseObject">
      <summary>
          Contiene los elementos básicos de un objeto de administración. Sirve como una clase base para la administración más específica de clases de objetos.          
        </summary>
    </member>
    <member name="M:System.Management.ManagementBaseObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementBaseObject" /> que es serializable.          
        </summary>
      <param name="info">
              <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.
            </param>
      <param name="context">
              Destino (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />) de esta serialización.
            </param>
    </member>
    <member name="P:System.Management.ManagementBaseObject.ClassPath">
      <summary>
          Obtiene la ruta de acceso a la clase del objeto de administración.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.ManagementPath" /> que contiene la ruta de acceso a la clase del objeto de administración.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Clone">
      <summary>
          Devuelve una copia del objeto.          
        </summary>
      <returns>
          Nuevo objeto clonado.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)">
      <summary>
          Compara este objeto con otro, basándose en las opciones especificadas.          
        </summary>
      <returns>
          
            Es true si los objetos comparados son iguales de acuerdo con las opciones especificadas; en caso contrario, es false.
        </returns>
      <param name="otherObject">
              Objeto que se va a comparar con este objeto. 
            </param>
      <param name="settings">
              Opciones de la comparación de objetos. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Dispose"></member>
    <member name="M:System.Management.ManagementBaseObject.Equals(System.Object)">
      <summary>
          Compara dos objetos de administración.          
        </summary>
      <returns>
          
            Es true si es una instancia de <see cref="T:System.Management.ManagementBaseObject" /> y representa el mismo objeto que esta instancia; en caso contrario, es false.             
        </returns>
      <param name="obj">
              Objeto que se va a comparar con esta instancia.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetHashCode">
      <summary>
          Sirve como función hash para un tipo concreto, apropiado para su utilización en algoritmos de hash y estructuras de datos como las tablas hash.          
        </summary>
      <returns>
          Código hash para el objeto actual.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Llena un <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para deserializar el campo representado por esta instancia.          
        </summary>
      <param name="info">
              <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.
            </param>
      <param name="context">
              Destino (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />) de esta serialización.
            </param>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetPropertyQualifierValue(System.String,System.String)">
      <summary>
          Devuelve el valor del calificador de propiedad especificado.          
        </summary>
      <returns>
          Valor del calificador especificado.
        </returns>
      <param name="propertyName">
              Nombre de la propiedad a la que pertenece el calificador. 
            </param>
      <param name="qualifierName">
              Nombre del calificador de propiedad de interés. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetPropertyValue(System.String)">
      <summary>
          Obtiene un descriptor de acceso equivalente a un valor de la propiedad.          
        </summary>
      <returns>
          Valor de la propiedad especificada.
        </returns>
      <param name="propertyName">
              Nombre de la propiedad de interés. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetQualifierValue(System.String)">
      <summary>
          Obtiene el valor del calificador especificado.          
        </summary>
      <returns>
          Valor del calificador especificado.
        </returns>
      <param name="qualifierName">
              Nombre del calificador de interés. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)">
      <summary>
          Devuelve una representación textual del objeto en el formato especificado.          
        </summary>
      <returns>
          Representación textual del objeto en el formato especificado.
        </returns>
      <param name="format">
              Formato textual solicitado. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Item(System.String)">
      <summary>
          Obtiene el acceso a los valores de propiedad mediante la notación []. Esta propiedad es el indizador de la clase <see cref="T:System.Management.ManagementBaseObject" />. Se pueden utilizar las propiedades indizadas predeterminadas definidas por un tipo, pero no se pueden definir explícitamente propiedades personalizadas. Sin embargo, si se especifica el atributo expando en una clase, se proporciona automáticamente una propiedad indizada predeterminada cuyo tipo es Object y cuyo tipo de índice es String.
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Object" /> que contiene el objeto de administración para una propiedad de clase específica.
        </returns>
      <param name="propertyName">
              Nombre de la propiedad de interés. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.op_Explicit(System.Management.ManagementBaseObject)~System.IntPtr">
      <summary>
          Proporciona el objeto WMI interno representado por <see cref="T:System.Management.ManagementObject" />.  
        </summary>
      <returns>
          <see cref="T:System.IntPtr" /> que representa el objeto WMI interno.  
        </returns>
      <param name="managementObject">
              <see cref="T:System.Management.ManagementBaseObject" /> que hace referencia al objeto WMI.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Properties">
      <summary>
          Obtiene una colección de objetos <see cref="T:System.Management.PropertyData" /> que describen las propiedades del objeto de administración.          
        </summary>
      <returns>
          Devuelve una colección <see cref="T:System.Management.PropertyDataCollection" /> que contiene las propiedades del objeto de administración.
        </returns>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Qualifiers">
      <summary>
          Obtiene la colección de objetos <see cref="T:System.Management.QualifierData" /> definidos en el objeto de administración. Cada elemento de la colección contiene información como el nombre, el valor y el modo del calificador.       
        </summary>
      <returns>
          Devuelve una colección <see cref="T:System.Management.QualifierDataCollection" /> que contiene los calificadores del objeto de administración.
        </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetPropertyQualifierValue(System.String,System.String,System.Object)">
      <summary>
          Establece el valor del calificador de propiedad especificado.          
        </summary>
      <param name="propertyName">
              Nombre de la propiedad a la que pertenece el calificador.
            </param>
      <param name="qualifierName">
              Nombre del calificador de propiedad de interés.
            </param>
      <param name="qualifierValue">
              Nuevo valor del calificador.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetPropertyValue(System.String,System.Object)">
      <summary>
          Establece el valor de la propiedad con nombre.          
        </summary>
      <param name="propertyName">
              Nombre de la propiedad que se va a modificar.
            </param>
      <param name="propertyValue">
              Nuevo valor de esta propiedad.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetQualifierValue(System.String,System.Object)">
      <summary>
          Establece el valor del calificador con nombre.          
        </summary>
      <param name="qualifierName">
              Nombre del calificador que se establece. Este parámetro no puede ser null.
            </param>
      <param name="qualifierValue">
              Valor que se va a establecer.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Implementa la interfaz de <see cref="T:System.Runtime.Serialization.ISerializable" /> y devuelve los datos necesarios para serializar <see cref="T:System.Management.ManagementBaseObject" />.
        </summary>
      <param name="info">
              <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene información necesaria para serializar <see cref="T:System.Management.ManagementBaseObject" />.
            </param>
      <param name="context">
              <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada a <see cref="T:System.Management.ManagementBaseObject" />.
            </param>
      <exception cref="T:System.ArgumentNullException">
              
                El valor de <paramref name="info" /> es null.
            </exception>
    </member>
    <member name="P:System.Management.ManagementBaseObject.SystemProperties">
      <summary>
          Obtiene la colección de propiedades del sistema WMI correspondientes al objeto de administración (por ejemplo, nombre de clase, servidor y espacio de nombres). Los nombres de la propiedad del sistema WMI empiezan por "__".        
        </summary>
      <returns>
          Devuelve una colección <see cref="T:System.Management.PropertyDataCollection" /> que contiene las propiedades del sistema correspondientes a un objeto de administración.
        </returns>
    </member>
    <member name="T:System.Management.ManagementClass">
      <summary>
          Representa una clase de administración del Modelo de información común (CIM). Una clase de administración es una clase WMI como Win32_LogicalDisk, que puede representar una unidad de disco, y Win32_Process, que representa un proceso como Notepad.exe. Los miembros de esta clase permiten obtener acceso a los datos WMI mediante una ruta de acceso de clase WMI específica. Para obtener más información, vea "Win32 Classes" en la documentación de Windows Management Instrumentation, en MSDN Library, http://msdn.microsoft.com/library/spa.
        </summary>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" />. Éste es el constructor predeterminado.
        </summary>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" />. La clase representa una clase de administración del Modelo de información común (CIM) de WMI como Win32_LogicalDisk, que puede representar una unidad de disco, y Win32_Process, que representa un proceso como Notepad.exe. Para obtener más información, vea "Win32 Classes" en la documentación de Windows Management Instrumentation, en MSDN Library, en http://msdn.microsoft.com/library/spa.
        </summary>
      <param name="path">
              <see cref="T:System.Management.ManagementPath" /> que especifica la clase WMI con la que se va a establecer el enlace. El parámetro  debe especificar una ruta de acceso a clases WMI. La clase representa una clase de administración CIM de WMI. Las clases CIM representan información de administración, que incluye hardware, software, procesos, etc. Para obtener información acerca de las clases CIM disponibles en Windows, vea "Win32 Classes" en la documentación de Windows Management Instrumentation, en MSDN Library, http://msdn.microsoft.com/library/spa. 
            </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" /> inicializada en la ruta de acceso a la clase WMI dada utilizando las opciones especificadas. La clase representa una clase de administración del Modelo de información común (CIM) de WMI como Win32_LogicalDisk, que puede representar una unidad de disco, y Win32_Process, que representa un proceso como Notepad.exe. Para obtener más información, vea "Win32 Classes" en la documentación de Windows Management Instrumentation, en MSDN Library, en http://msdn.microsoft.com/library/spa.
        </summary>
      <param name="path">
              Instancia de <see cref="T:System.Management.ManagementPath" /> que representa la ruta de acceso a la clase WMI. La clase representa una clase de administración CIM de WMI. Las clases CIM representan información de administración, que incluye hardware, software, procesos, etc. Para obtener información acerca de las clases CIM disponibles en Windows, vea "Win32 Classes" en la documentación de Windows Management Instrumentation, en MSDN Library, http://msdn.microsoft.com/library/spa.
            </param>
      <param name="options">
              <see cref="T:System.Management.ObjectGetOptions" /> que representa las opciones que se deben utilizar al recuperar esta clase. 
            </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" /> para la clase WMI especificada en el ámbito especificado y con las opciones especificadas. La clase representa una clase de administración del Modelo de información común (CIM) de WMI como Win32_LogicalDisk, que puede representar una unidad de disco, y Win32_Process, que representa un proceso como Notepad.exe. Para obtener más información, vea "Win32 Classes" en la documentación de Windows Management Instrumentation, en MSDN Library, en http://msdn.microsoft.com/library/spa.
        </summary>
      <param name="scope">
              <see cref="T:System.Management.ManagementScope" /> que especifica el ámbito (servidor y espacio de nombres) donde reside la clase WMI. 
            </param>
      <param name="path">
              <see cref="T:System.Management.ManagementPath" /> que representa la ruta de acceso a la clase WMI en el ámbito especificado. La clase representa una clase de administración CIM de WMI. Las clases CIM representan información de administración, que incluye hardware, software, procesos, etc. Para obtener información acerca de las clases CIM disponibles en Windows, vea "Win32 Classes" en la documentación de Windows Management Instrumentation, en MSDN Library, http://msdn.microsoft.com/library/spa.  
            </param>
      <param name="options">
              <see cref="T:System.Management.ObjectGetOptions" /> que especifica las opciones que se deben utilizar al recuperar la clase WMI. 
            </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" /> a partir de las instancias especificadas de las clases <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.
        </summary>
      <param name="info">
              Instancia de la clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información necesaria para serializar la nueva clase <see cref="T:System.Management.ManagementClass" />.
            </param>
      <param name="context">
              Instancia de la clase <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen de la secuencia serializada asociada a la nueva clase <see cref="T:System.Management.ManagementClass" />.
            </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" /> inicializada en la ruta de acceso dada. La clase representa una clase de administración del Modelo de información común (CIM) de WMI como Win32_LogicalDisk, que puede representar una unidad de disco, y Win32_Process, que representa un proceso como Notepad.exe. Para obtener más información, vea "Win32 Classes" en la documentación de Windows Management Instrumentation, en MSDN Library, en http://msdn.microsoft.com/library/spa.
        </summary>
      <param name="path">
              Ruta de acceso a la clase WMI. La clase representa una clase de administración CIM de WMI. Las clases CIM representan información de administración, que incluye hardware, software, procesos, etc. Para obtener información acerca de las clases CIM disponibles en Windows, vea "Win32 Classes" en la documentación de Windows Management Instrumentation, en MSDN Library, http://msdn.microsoft.com/library/spa.
            </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" /> inicializada en la ruta de acceso a la clase WMI dada utilizando las opciones especificadas. La clase representa una clase de administración del Modelo de información común (CIM) de WMI como Win32_LogicalDisk, que puede representar una unidad de disco, y Win32_Process, que representa un proceso como Notepad.exe. Para obtener más información, vea "Win32 Classes" en la documentación de Windows Management Instrumentation, en MSDN Library, en http://msdn.microsoft.com/library/spa.
        </summary>
      <param name="path">
              Ruta de acceso a la clase WMI. La clase representa una clase de administración CIM de WMI. Las clases CIM representan información de administración, que incluye hardware, software, procesos, etc. Para obtener información acerca de las clases CIM disponibles en Windows, vea "Win32 Classes" en la documentación de Windows Management Instrumentation, en MSDN Library, http://msdn.microsoft.com/library/spa. 
            </param>
      <param name="options">
              <see cref="T:System.Management.ObjectGetOptions" /> que representa las opciones que se deben utilizar al recuperar la clase WMI. 
            </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" /> para la clase WMI especificada en el ámbito especificado y con las opciones especificadas. La clase representa una clase de administración del Modelo de información común (CIM) de WMI como Win32_LogicalDisk, que puede representar una unidad de disco, y Win32_Process, que representa un proceso como Notepad.exe. Para obtener más información, vea "Win32 Classes" en la documentación de Windows Management Instrumentation, en MSDN Library, en http://msdn.microsoft.com/library/spa.
        </summary>
      <param name="scope">
              Ámbito en que reside la clase WMI. 
            </param>
      <param name="path">
              Ruta de acceso a la clase WMI en el ámbito especificado. La clase representa una clase de administración CIM de WMI. Las clases CIM representan información de administración, que incluye hardware, software, procesos, etc. Para obtener información acerca de las clases CIM disponibles en Windows, vea "Win32 Classes" en la documentación de Windows Management Instrumentation, en MSDN Library, http://msdn.microsoft.com/library/spa. 
            </param>
      <param name="options">
              <see cref="T:System.Management.ObjectGetOptions" /> que especifica las opciones que se deben utilizar al recuperar la clase WMI. 
            </param>
    </member>
    <member name="M:System.Management.ManagementClass.Clone">
      <summary>
          Devuelve una copia del objeto.
        </summary>
      <returns>
          Objeto clonado.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.CreateInstance">
      <summary>
          Inicializa una nueva instancia de la clase WMI.
        </summary>
      <returns>
          <see cref="T:System.Management.ManagementObject" /> que representa una nueva instancia de la clase WMI.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Derivation">
      <summary>
          Obtiene una matriz que contiene todas las clases WMI de la jerarquía de herencia desde esta clase hasta el inicio de la jerarquía.
        </summary>
      <returns>
          Colección de cadenas que contiene los nombres de todas las clases WMI de la jerarquía de herencia correspondiente a esta clase.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.Derive(System.String)">
      <summary>
          Deriva una nueva clase a partir de esta clase.
        </summary>
      <returns>
          Nuevo <see cref="T:System.Management.ManagementClass" /> que representa una nueva clase WMI derivada de la clase original.
        </returns>
      <param name="newClassName">
              Nombre de la nueva clase que se va a derivar. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances">
      <summary>
          Devuelve la colección de todas las instancias de la clase.
        </summary>
      <returns>
          Colección de los objetos <see cref="T:System.Management.ManagementObject" /> que representan las instancias de la clase.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)">
      <summary>
          Devuelve la colección de todas las instancias de la clase con las opciones especificadas.
        </summary>
      <returns>
          Colección de los objetos <see cref="T:System.Management.ManagementObject" /> que representan las instancias de la clase, de acuerdo con las opciones especificadas.
        </returns>
      <param name="options">
              Opciones de operaciones adicionales. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)">
      <summary>
          Devuelve la colección de todas las instancias de la clase, asincrónicamente.
        </summary>
      <param name="watcher">
              Objeto que controlará el progreso de la operación asincrónica. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)">
      <summary>
          Devuelve la colección de todas las instancias de la clase asincrónicamente, utilizando las opciones especificadas.
        </summary>
      <param name="watcher">
              Objeto que controlará el progreso de la operación asincrónica. 
            </param>
      <param name="options">
              Opciones adicionales especificadas para obtener la instancia. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Llena un <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para deserializar el campo representado por esta instancia.          
        </summary>
      <param name="info">
              Objeto que debe llenarse con información de serialización.
            </param>
      <param name="context">
              Ubicación donde se almacenarán los datos serializados y desde la cual se recuperarán los mismos.
            </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses">
      <summary>
          Recupera las clases relacionadas con la clase WMI.
        </summary>
      <returns>
          Colección de los objetos <see cref="T:System.Management.ManagementClass" /> o <see cref="T:System.Management.ManagementObject" /> que representa las clases WMI o las instancias relacionadas con la clase WMI.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)">
      <summary>
          Recupera las clases relacionadas con la clase WMI, asincrónicamente.
        </summary>
      <param name="watcher">
              Objeto que controlará el progreso de la operación asincrónica. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)">
      <summary>
          Recupera las clases relacionadas con la clase WMI, asincrónicamente, dado el nombre de la clase relacionada.
        </summary>
      <param name="watcher">
              Objeto que controlará el progreso de la operación asincrónica. 
            </param>
      <param name="relatedClass">
              Nombre de la clase relacionada. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
          Recupera las clases relacionadas con la clase WMI, asincrónicamente, utilizando las opciones especificadas.
        </summary>
      <param name="watcher">
              Controlador del progreso y de los resultados de la operación asincrónica. 
            </param>
      <param name="relatedClass">
              Clase de la que se derivarán las clases resultantes. 
            </param>
      <param name="relationshipClass">
              Tipo de relación que deben tener las clases resultantes con la clase de origen. 
            </param>
      <param name="relationshipQualifier">
              Este calificador debe estar presente en la relación. 
            </param>
      <param name="relatedQualifier">
              Este calificador debe estar presente en las clases resultantes. 
            </param>
      <param name="relatedRole">
              Las clases resultantes deben tener esta función en la relación. 
            </param>
      <param name="thisRole">
              La clase de origen debe tener esta función en la relación. 
            </param>
      <param name="options">
              Opciones para recuperar las clases resultantes. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.String)">
      <summary>
          Recupera las clases relacionadas con la clase WMI.
        </summary>
      <returns>
          Colección de clases relacionadas con esta clase.
        </returns>
      <param name="relatedClass">
              Clase de la que se derivarán las clases resultantes. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
          Recupera las clases relacionadas con la clase WMI, basándose en las opciones especificadas.
        </summary>
      <returns>
          Colección de clases relacionadas con esta clase.
        </returns>
      <param name="relatedClass">
              Clase de la que se derivarán las clases resultantes. 
            </param>
      <param name="relationshipClass">
              Tipo de relación que deben tener las clases resultantes con la clase de origen. 
            </param>
      <param name="relationshipQualifier">
              Este calificador debe estar presente en la relación. 
            </param>
      <param name="relatedQualifier">
              Este calificador debe estar presente en las clases resultantes. 
            </param>
      <param name="relatedRole">
              Las clases resultantes deben tener esta función en la relación. 
            </param>
      <param name="thisRole">
              La clase de origen debe tener esta función en la relación. 
            </param>
      <param name="options">
              Opciones para recuperar las clases resultantes. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses">
      <summary>
          Recupera clases de relación que relacionan la clase con otras clases.
        </summary>
      <returns>
          Colección de clases de asociación que relacionan la clase con cualquier otra clase.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)">
      <summary>
          Recupera clases de relación que relacionan la clase con otras clases, asincrónicamente.
        </summary>
      <param name="watcher">
              Objeto que controlará el progreso de la operación asincrónica. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)">
      <summary>
          Recupera clases de relación que relacionan la clase con la clase WMI especificada, asincrónicamente.
        </summary>
      <param name="watcher">
              Objeto que controlará el progreso de la operación asincrónica. 
            </param>
      <param name="relationshipClass">
              Clase WMI a la que deben apuntar todas las relaciones devueltas. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
          Recupera clases de relación que relacionan la clase de acuerdo con las opciones especificadas, asincrónicamente.
        </summary>
      <returns>
          Colección de clases de asociación que relacionan esta clase con otras, de acuerdo con las opciones especificadas. Para obtener más información acerca de las clases de relación, vea "ASSOCIATORS OF Statement" en la documentación de Windows Management Instrumentation, en MSDN Library, http://msdn.microsoft.com/library/spa.
        </returns>
      <param name="watcher">
              Controlador del progreso y de los resultados de la operación asincrónica. 
            </param>
      <param name="relationshipClass">
              Clase de la que deben derivan todas las clases de relación resultantes. 
            </param>
      <param name="relationshipQualifier">
              Calificador que las clases de relación resultantes deben poseer. 
            </param>
      <param name="thisRole">
              Función que debe tener la clase de origen en las clases de relación resultantes. 
            </param>
      <param name="options">
              Opciones para recuperar los resultados. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.String)">
      <summary>
          Recupera clases de relación que relacionan la clase con otras clases, siendo la clase de extremo la clase especificada.
        </summary>
      <returns>
          Colección de clases de asociación que relacionan la clase con la clase especificada. Para obtener más información acerca de las clases de relación, vea "ASSOCIATORS OF Statement" en la documentación de Windows Management Instrumentation, en MSDN Library, http://msdn.microsoft.com/library/spa.
        </returns>
      <param name="relationshipClass">
              Clase de extremo para todas las clases de relación devueltas. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
          Recupera clases de relación que relacionan esta clase con otras clases, de acuerdo con las opciones especificadas.
        </summary>
      <returns>
          Colección de clases de asociación que relacionan esta clase con otras, de acuerdo con las opciones especificadas. Para obtener más información acerca de las clases de relación, vea "ASSOCIATORS OF Statement" en la documentación de Windows Management Instrumentation, en MSDN Library, http://msdn.microsoft.com/library/spa.
        </returns>
      <param name="relationshipClass">
              Todas las clases de relación resultantes deben derivarse de esta clase. 
            </param>
      <param name="relationshipQualifier">
              Las clases de relación resultantes deben tener este calificador. 
            </param>
      <param name="thisRole">
              La clase de origen debe tener esta función en las clases de relación resultantes. 
            </param>
      <param name="options">
              Especifica opciones para recuperar los resultados. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)">
      <summary>
          Genera una clase con establecimiento inflexible de tipos para una clase WMI dada.
        </summary>
      <returns>
          <see cref="T:System.CodeDom.CodeTypeDeclaration" /> que representa la declaración de la clase con establecimiento inflexible de tipos.
        </returns>
      <param name="includeSystemClassInClassDef">
              
                Es true para incluir la clase para administrar las propiedades del sistema; en caso contrario, es false. 
            </param>
      <param name="systemPropertyClass">
              
                Es true para que la clase generada administre las propiedades del sistema; en caso contrario, es false. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)">
      <summary>
          Genera una clase con establecimiento inflexible de tipos para una clase WMI dada. Esta función genera código para Visual Basic, C#, JScript, J# o C++, dependiendo de los parámetros de entrada.
        </summary>
      <returns>
          
            Es true si el método se ha ejecutado correctamente; en caso contrario, es false.
        </returns>
      <param name="lang">
              Lenguaje del código que se va a generar. Este lenguaje de código procede de la enumeración <see cref="T:System.Management.CodeLanguage" />.
            </param>
      <param name="filePath">
              Ruta de acceso del archivo donde se va a escribir el código. 
            </param>
      <param name="classNamespace">
              Espacio de nombres de .NET en el que se debe generar la clase. Si está vacío, el espacio de nombres se generará a partir del espacio de nombres WMI. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses">
      <summary>
          Devuelve la colección de todas las subclases de la clase.
        </summary>
      <returns>
          Colección de los objetos <see cref="T:System.Management.ManagementObject" /> que representan las subclases de la clase WMI.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)">
      <summary>
          Recupera las subclases de la clase utilizando las opciones especificadas.
        </summary>
      <returns>
          Colección de los objetos <see cref="T:System.Management.ManagementObject" /> que representan las subclases de la clase WMI, de acuerdo con las opciones especificadas.
        </returns>
      <param name="options">
              Opciones adicionales especificadas para recuperar las subclases de la clase. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)">
      <summary>
          Devuelve la colección de todas las clases derivadas de esta clase, de forma asincrónica.
        </summary>
      <param name="watcher">
              Objeto que controlará el progreso de la operación asincrónica. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)">
      <summary>
          Recupera todas las clases derivadas de esta clase, de forma asincrónica, utilizando las opciones especificadas.
        </summary>
      <param name="watcher">
              Objeto que controlará el progreso de la operación asincrónica. 
            </param>
      <param name="options">
              Opciones adicionales especificadas que se van a utilizar en la recuperación de las clases derivadas. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Methods">
      <summary>
          Obtiene o establece una colección de objetos <see cref="T:System.Management.MethodData" /> que representan los métodos definidos en la clase WMI.
        </summary>
      <returns>
          <see cref="T:System.Management.MethodDataCollection" /> que representa los métodos definidos en la clase WMI.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Path">
      <summary>
          Obtiene o establece la ruta de acceso de la clase WMI a la que está enlazada el objeto <see cref="T:System.Management.ManagementClass" />.
        </summary>
      <returns>
          Ruta de acceso de la clase del objeto.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementDateTimeConverter">
      <summary>
          Proporciona métodos para convertir los intervalos de tiempo y de hora y fecha DMTF en un formato <see cref="T:System.DateTime" /> y <see cref="T:System.TimeSpan" /> compatible con CLR, y viceversa.                           
        </summary>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDateTime(System.String)">
      <summary>
          Convierte una fecha y hora DMTF dadas en <see cref="T:System.DateTime" />. El valor de <see cref="T:System.DateTime" /> devuelto estará en la actual zona horaria del sistema.          
        </summary>
      <returns>
          <see cref="T:System.DateTime" /> que representa la fecha y hora DMTF dadas.
        </returns>
      <param name="dmtfDate">
              Cadena que representa la fecha y hora en formato DMTF.
            </param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDmtfDateTime(System.DateTime)">
      <summary>
          Convierte el valor de <see cref="T:System.DateTime" /> dado en el formato de fecha y hora DMTF.          
        </summary>
      <returns>
          Una cadena que representa la fecha y hora DMTF del objeto <see cref="T:System.DateTime" /> dado.
        </returns>
      <param name="date">
              <see cref="T:System.DateTime" /> que representa la fecha y hora que se va a convertir en fecha y hora DMTF.
            </param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDmtfTimeInterval(System.TimeSpan)">
      <summary>
          Convierte un objeto <see cref="T:System.TimeSpan" /> dado en intervalo de tiempo DMTF.          
        </summary>
      <returns>
          Una cadena que representa el intervalo de tiempo DMTF del objeto <see cref="T:System.TimeSpan" /> dado.
        </returns>
      <param name="timespan">
              <see cref="T:System.TimeSpan" /> que representa la fecha y hora que se van a convertir en intervalo de tiempo DMTF.             
            </param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToTimeSpan(System.String)">
      <summary>
          Convierte un intervalo de tiempo DMTF dado en un objeto <see cref="T:System.TimeSpan" />.          
        </summary>
      <returns>
          <see cref="T:System.TimeSpan" /> que representa el intervalo de tiempo DMTF dado.
        </returns>
      <param name="dmtfTimespan">
              Representación de cadena del intervalo de tiempo DMTF.
            </param>
    </member>
    <member name="T:System.Management.ManagementEventArgs">
      <summary>
          Representa la clase base virtual que contendrá los datos de evento de los eventos WMI.          
        </summary>
    </member>
    <member name="P:System.Management.ManagementEventArgs.Context">
      <summary>
          Obtiene el contexto de operación devuelto desde la operación que desencadenó el evento.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Object" /> para un contexto de operación.
        </returns>
    </member>
    <member name="T:System.Management.ManagementEventWatcher">
      <summary>
          Se suscribe a notificaciones de eventos temporales basándose en una consulta de eventos especificada.          
        </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" />. Para una posterior inicialización, establezca las propiedades del objeto. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> cuando se proporciona una consulta de eventos WMI.          
        </summary>
      <param name="query">
              <see cref="T:System.Management.EventQuery" /> que representa una consulta de eventos WMI, la cual determina los eventos que escuchará el monitor.
            </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> que escucha los eventos de acuerdo con la consulta de eventos WMI dada.          
        </summary>
      <param name="scope">
              <see cref="T:System.Management.ManagementScope" /> que representa el ámbito (espacio de nombres) donde el monitor escuchará los eventos.
            </param>
      <param name="query">
              <see cref="T:System.Management.EventQuery" /> que representa una consulta de eventos WMI, la cual determina los eventos que escuchará el monitor.  
            </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> que escucha los eventos de acuerdo con la consulta de eventos WMI dada y las opciones especificadas. Para esta variante, la consulta y el ámbito son objetos especificados. El objeto de opciones puede especificar opciones como un tiempo de espera e información del contexto.          
        </summary>
      <param name="scope">
              <see cref="T:System.Management.ManagementScope" /> que representa el ámbito (espacio de nombres) donde el monitor escuchará los eventos.
            </param>
      <param name="query">
              <see cref="T:System.Management.EventQuery" /> que representa una consulta de eventos WMI, la cual determina los eventos que escuchará el monitor. 
            </param>
      <param name="options">
              <see cref="T:System.Management.EventWatcherOptions" /> que representa las opciones adicionales utilizadas para inspeccionar los eventos. 
            </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> cuando se proporciona una consulta de eventos WMI en forma de cadena.          
        </summary>
      <param name="query">
               Consulta de eventos WMI, que define los eventos que escuchará el monitor.
            </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> que escucha los eventos de acuerdo con la consulta de eventos WMI dada. Para esta variante, la consulta y el ámbito se especifican como cadenas.          
        </summary>
      <param name="scope">
              Ámbito de administración (espacio de nombres) donde el monitor escuchará los eventos.
            </param>
      <param name="query">
              Consulta que define los eventos que escuchará el monitor. 
            </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> que escucha los eventos de acuerdo con la consulta de eventos WMI dada y las opciones especificadas. Para esta variante, la consulta y el ámbito se especifican como cadenas. El objeto de opciones puede especificar opciones como un tiempo de espera e información del contexto.          
        </summary>
      <param name="scope">
              Ámbito de administración (espacio de nombres) donde el monitor escuchará los eventos.
            </param>
      <param name="query">
              Consulta que define los eventos que escuchará el monitor.  
            </param>
      <param name="options">
              <see cref="T:System.Management.EventWatcherOptions" /> que representa las opciones adicionales utilizadas para inspeccionar los eventos. 
            </param>
    </member>
    <member name="E:System.Management.ManagementEventWatcher.EventArrived">
      <summary>
          Se produce cuando llega un nuevo evento.
        </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Finalize">
      <summary>
          Garantiza que se borran las llamadas pendientes. Es el destructor del objeto. En C#, los finalizadores se expresan mediante la sintaxis del destructor. 
        </summary>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Options">
      <summary>
          Obtiene o establece las opciones que se utilizan para inspeccionar los eventos. 
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.EventWatcherOptions" /> que contiene las opciones de evento utilizadas para inspeccionar los eventos.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Query">
      <summary>
          Obtiene o establece los criterios que se aplicarán a los eventos.      
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.EventQuery" /> que contiene la consulta que se va a aplicar a los eventos.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Scope">
      <summary>
          Obtiene o establece el ámbito (espacio de nombres) en que se inspeccionarán los eventos.      
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.ManagementScope" /> que contiene el ámbito donde se van a inspeccionar eventos.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Start">
      <summary>
          Se suscribe a eventos con la consulta dada y los entrega, asincrónicamente, a través del evento <see cref="E:System.Management.ManagementEventWatcher.EventArrived" />.          
        </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Stop">
      <summary>
          Cancela la suscripción, ya sea sincrónica o asincrónica.          
        </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Management.ManagementEventWatcher.Stopped">
      <summary>
          Se produce cuando se cancela una suscripción.
        </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
      <summary>
          Espera al siguiente evento que coincida con la consulta especificada que va a llegar, y lo devuelve.          
        </summary>
      <returns>
          <see cref="T:System.Management.ManagementBaseObject" /> que representa el evento recién llegado.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementException">
      <summary>
          Representa excepciones de administración.          
        </summary>
    </member>
    <member name="M:System.Management.ManagementException.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementException" />.          
        </summary>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementException" /> que es serializable.          
        </summary>
      <param name="info">
              <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.
            </param>
      <param name="context">
              Destino de <see cref="T:System.Runtime.Serialization.StreamingContext" /> de esta serialización.
            </param>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementException" /> con el mensaje de error especificado.          
        </summary>
      <param name="message">
              Mensaje que describe el error. 
            </param>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.String,System.Exception)">
      <summary>
          Inicializa una nueva instancia vacía de la clase <see cref="T:System.Management.ManagementException" />. Si el parámetro <paramref name="innerException" /> no es null, la excepción actual se producirá en un bloque catch que controla la excepción interna.
        </summary>
      <param name="message">
              Mensaje que describe el error. 
            </param>
      <param name="innerException">
              Excepción que es la causa de la excepción actual.
            </param>
    </member>
    <member name="P:System.Management.ManagementException.ErrorCode">
      <summary>
          Obtiene el código de error del que informa WMI, que produjo esta excepción.          
        </summary>
      <returns>
          Devuelve un valor de enumeración <see cref="T:System.Management.ManagementStatus" /> que contiene el código de error.
        </returns>
    </member>
    <member name="P:System.Management.ManagementException.ErrorInformation">
      <summary>
          Obtiene el objeto de error extendido proporcionado por WMI.          
        </summary>
      <returns>
          Devuelve un objeto <see cref="T:System.Management.ManagementBaseObject" /> que contiene información sobre errores extendidos.
        </returns>
    </member>
    <member name="M:System.Management.ManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Rellena <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar <see cref="T:System.Management.ManagementException" />.          
        </summary>
      <param name="info">
              <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.
            </param>
      <param name="context">
              Destino de <see cref="T:System.Runtime.Serialization.StreamingContext" /> de esta serialización.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementNamedValueCollection">
      <summary>
          Representa una colección de valores con nombre adecuada para utilizarse como información de contexto en las operaciones WMI. En los nombres no se distingue entre mayúsculas y minúsculas.          
        </summary>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementNamedValueCollection" />, que está vacía. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementNamedValueCollection" /> que es serializable y utiliza las clases <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificadas.          
        </summary>
      <param name="info">
              <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.
            </param>
      <param name="context">
              Destino (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />) de esta serialización.
            </param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Add(System.String,System.Object)">
      <summary>
          Agrega un valor con un solo nombre a la colección.          
        </summary>
      <param name="name">
              Nombre del nuevo valor.
            </param>
      <param name="value">
              Valor que se va a asociar al nombre.
            </param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Clone">
      <summary>
          Crea un duplicado de la colección. Los valores individuales se duplican. Si un valor no admite la clonación, se produce <see cref="T:System.NotSupportedException" />.           
        </summary>
      <returns>
          Nueva copia de la colección.             
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementNamedValueCollection.Item(System.String)">
      <summary>
          Obtiene el valor asociado al nombre especificado de esta colección. En C#, esta propiedad es el indizador para la clase <see cref="T:System.Management.ManagementNamedValueCollection" />.  
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Object" /> que está asociado al nombre especificado de esta colección.
        </returns>
      <param name="name">
              Nombre del valor que se va a devolver. 
            </param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Remove(System.String)">
      <summary>
          Quita un valor con un solo nombre de la colección. Si la colección no contiene un elemento con el nombre especificado, la colección se mantiene invariable y no se produce ninguna excepción.          
        </summary>
      <param name="name">
              Nombre del valor que se va a quitar. 
            </param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.RemoveAll">
      <summary>
          Quita todas las entradas de la colección.          
        </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementObject">
      <summary>
          Representa una instancia WMI. 
        </summary>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObject" />. Éste es el constructor predeterminado.
        </summary>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementPath)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObject" /> para la ruta de acceso al objeto WMI especificada. La ruta de acceso se proporciona como <see cref="T:System.Management.ManagementPath" />.
        </summary>
      <param name="path">
              <see cref="T:System.Management.ManagementPath" /> que contiene una ruta de acceso a un objeto WMI. 
            </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObject" /> enlazada a la ruta de acceso WMI especificada, incluidas las opciones adicionales especificadas.
        </summary>
      <param name="path">
              <see cref="T:System.Management.ManagementPath" /> que contiene la ruta de acceso WMI. 
            </param>
      <param name="options">
              <see cref="T:System.Management.ObjectGetOptions" /> que contiene opciones adicionales para el enlace con el objeto WMI. Este parámetro podría ser nulo si se tuviesen que utilizar las opciones predeterminadas. 
            </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObject" /> enlazada a la ruta de acceso WMI especificada que incluye las opciones especificadas.
        </summary>
      <param name="scope">
              <see cref="T:System.Management.ManagementScope" /> que representa el ámbito en el que reside el objeto WMI. En esta versión, los ámbitos sólo pueden ser espacios de nombres WMI. 
            </param>
      <param name="path">
              <see cref="T:System.Management.ManagementPath" /> que representa la ruta de acceso WMI al objeto administrable. 
            </param>
      <param name="options">
              <see cref="T:System.Management.ObjectGetOptions" /> que especifica opciones adicionales para obtener el objeto. 
            </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObject" /> que es serializable.
        </summary>
      <param name="info">
              <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos. 
            </param>
      <param name="context">
              Destino (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />) de esta serialización. 
            </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObject" /> para la ruta de acceso al objeto WMI especificada. La ruta de acceso se proporciona como cadena.
        </summary>
      <param name="path">
              Ruta de acceso WMI. 
            </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String,System.Management.ObjectGetOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObject" /> enlazada a la ruta de acceso WMI especificada, incluidas las opciones adicionales especificadas. En esta variante, la ruta de acceso se puede especificar como cadena.
        </summary>
      <param name="path">
              Ruta de acceso WMI para el objeto. 
            </param>
      <param name="options">
              <see cref="T:System.Management.ObjectGetOptions" /> que representa las opciones para obtener el objeto WMI especificado. 
            </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String,System.String,System.Management.ObjectGetOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObject" /> enlazada a la ruta de acceso WMI especificada, y se incluyen las opciones especificadas. El ámbito y la ruta de acceso se especifican como cadenas.
        </summary>
      <param name="scopeString">
              Ámbito para el objeto WMI. 
            </param>
      <param name="pathString">
              Ruta de acceso al objeto WMI. 
            </param>
      <param name="options">
              <see cref="T:System.Management.ObjectGetOptions" /> que representa opciones adicionales para obtener el objeto WMI. 
            </param>
    </member>
    <member name="P:System.Management.ManagementObject.ClassPath">
      <summary>
          Obtiene o establece la ruta de acceso a la clase del objeto.
        </summary>
      <returns>
          <see cref="T:System.Management.ManagementPath" /> que representa la ruta de acceso a la clase del objeto.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Clone">
      <summary>
          Crea una copia del objeto.
        </summary>
      <returns>
          Objeto copiado.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath)">
      <summary>
          Copia el objeto en un lugar diferente, asincrónicamente.
        </summary>
      <param name="watcher">
              Objeto que recibirá los resultados de la operación. 
            </param>
      <param name="path">
              <see cref="T:System.Management.ManagementPath" /> que especifica la ruta de acceso en la que se debe copiar el objeto. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath,System.Management.PutOptions)">
      <summary>
          Copia el objeto en un lugar diferente, asincrónicamente.
        </summary>
      <param name="watcher">
              Objeto que recibirá los resultados de la operación. 
            </param>
      <param name="path">
              Ruta de acceso en la que se debe copiar el objeto. 
            </param>
      <param name="options">
              Opciones del modo de colocación del objeto. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String)">
      <summary>
          Copia el objeto en un lugar diferente, asincrónicamente.
        </summary>
      <param name="watcher">
              Objeto que recibirá los resultados de la operación. 
            </param>
      <param name="path">
              Ruta de acceso en la que se debe copiar el objeto. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String,System.Management.PutOptions)">
      <summary>
          Copia el objeto en un lugar diferente, asincrónicamente.
        </summary>
      <param name="watcher">
              Objeto que recibirá los resultados de la operación. 
            </param>
      <param name="path">
              Ruta de acceso en la que se debe copiar el objeto. 
            </param>
      <param name="options">
              Opciones del modo de colocación del objeto. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementPath)">
      <summary>
          Copia el objeto en un lugar diferente.
        </summary>
      <returns>
          Nueva ruta de acceso del objeto copiado.
        </returns>
      <param name="path">
              <see cref="T:System.Management.ManagementPath" /> en que se debe copiar el objeto. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementPath,System.Management.PutOptions)">
      <summary>
          Copia el objeto en un lugar diferente.
        </summary>
      <returns>
          Nueva ruta de acceso del objeto copiado.
        </returns>
      <param name="path">
              <see cref="T:System.Management.ManagementPath" /> en que se debe copiar el objeto. 
            </param>
      <param name="options">
              Opciones del modo de colocación del objeto. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.String)">
      <summary>
          Copia el objeto en un lugar diferente.
        </summary>
      <returns>
          Nueva ruta de acceso del objeto copiado.
        </returns>
      <param name="path">
              Ruta de acceso en la que se debe copiar el objeto. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.String,System.Management.PutOptions)">
      <summary>
          Copia el objeto en un lugar diferente.
        </summary>
      <returns>
          Nueva ruta de acceso del objeto copiado.
        </returns>
      <param name="path">
              Ruta de acceso en la que se debe copiar el objeto. 
            </param>
      <param name="options">
              Opciones del modo de colocación del objeto. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete">
      <summary>
          Elimina el objeto.
        </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.DeleteOptions)">
      <summary>
          Elimina el objeto.
        </summary>
      <param name="options">
              Opciones del modo en que se eliminará el objeto. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver)">
      <summary>
          Elimina el objeto.
        </summary>
      <param name="watcher">
              Objeto que recibirá los resultados de la operación. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver,System.Management.DeleteOptions)">
      <summary>
          Elimina el objeto.
        </summary>
      <param name="watcher">
              Objeto que recibirá los resultados de la operación. 
            </param>
      <param name="options">
              Opciones del modo en que se eliminará el objeto. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Dispose">
      <summary>
        </summary>
    </member>
    <member name="M:System.Management.ManagementObject.Get">
      <summary>
          Enlaza información de clase WMI al objeto de administración.
        </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Get(System.Management.ManagementOperationObserver)">
      <summary>
          Se enlaza al objeto de administración asincrónicamente.
        </summary>
      <param name="watcher">
              Objeto que recibirá los resultados de la operación como eventos. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetMethodParameters(System.String)">
      <summary>
          Devuelve un <see cref="T:System.Management.ManagementBaseObject" /> que representa la lista de parámetros de entrada de un método.
        </summary>
      <returns>
          <see cref="T:System.Management.ManagementBaseObject" /> que contiene los parámetros de entrada del método.
        </returns>
      <param name="methodName">
              Nombre del método. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
          Llena un <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para deserializar el campo representado por esta instancia.          
        </summary>
      <param name="info">
              Objeto que debe llenarse con información de serialización.
            </param>
      <param name="context">
              Ubicación donde se almacenarán los datos serializados y desde la cual se recuperarán los mismos.
            </param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated">
      <summary>
          Obtiene una colección de objetos relacionados con el objeto (asociadores).
        </summary>
      <returns>
          <see cref="T:System.Management.ManagementObjectCollection" /> que contiene los objetos relacionados.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver)">
      <summary>
          Obtiene una colección de objetos relacionados con el objeto (asociadores) asincrónicamente. Esta llamada regresa inmediatamente y, cuando los resultados están disponibles, se llama a un delegado.
        </summary>
      <param name="watcher">
              Objeto que se utilizará para devolver resultados. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String)">
      <summary>
          Obtiene una colección de objetos relacionados con el objeto (asociadores).
        </summary>
      <param name="watcher">
              Objeto que se utilizará para devolver resultados. 
            </param>
      <param name="relatedClass">
              Clase de objetos relacionados. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>
          Obtiene una colección de objetos relacionados con el objeto (asociadores).
        </summary>
      <param name="watcher">
              Objeto que se utilizará para devolver resultados. 
            </param>
      <param name="relatedClass">
              Clase de los objetos relacionados. 
            </param>
      <param name="relationshipClass">
              Clase de relación de interés. 
            </param>
      <param name="relationshipQualifier">
              Calificador que debe estar presente en la clase de relación. 
            </param>
      <param name="relatedQualifier">
              Calificador que debe estar presente en la clase relacionada. 
            </param>
      <param name="relatedRole">
              Función que realiza la clase relacionada en la relación. 
            </param>
      <param name="thisRole">
              Función que realiza esta clase en la relación. 
            </param>
      <param name="classDefinitionsOnly">
              Devuelve sólo las definiciones de clase de las instancias que coinciden con la consulta. 
            </param>
      <param name="options">
              Opciones extendidas del modo en que se ejecuta la consulta. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.String)">
      <summary>
          Obtiene una colección de objetos relacionados con el objeto (asociadores).
        </summary>
      <returns>
          <see cref="T:System.Management.ManagementObjectCollection" /> que contiene los objetos relacionados.
        </returns>
      <param name="relatedClass">
              Clase de objetos relacionados. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>
          Obtiene una colección de objetos relacionados con el objeto (asociadores).
        </summary>
      <returns>
          <see cref="T:System.Management.ManagementObjectCollection" /> que contiene los objetos relacionados.
        </returns>
      <param name="relatedClass">
              Clase de los objetos relacionados. 
            </param>
      <param name="relationshipClass">
              Clase de relación de interés. 
            </param>
      <param name="relationshipQualifier">
              Calificador que debe estar presente en la clase de relación. 
            </param>
      <param name="relatedQualifier">
              Calificador que debe estar presente en la clase relacionada. 
            </param>
      <param name="relatedRole">
              Función que realiza la clase relacionada en la relación. 
            </param>
      <param name="thisRole">
              Función que realiza esta clase en la relación. 
            </param>
      <param name="classDefinitionsOnly">
              Cuando este método regresa, contiene sólo las definiciones de clase de las instancias que coinciden con la consulta. 
            </param>
      <param name="options">
              Opciones extendidas del modo en que se ejecuta la consulta. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships">
      <summary>
          Obtiene una colección de asociaciones para el objeto.
        </summary>
      <returns>
          Colección <see cref="T:System.Management.ManagementObjectCollection" /> que contiene los objetos de asociación.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver)">
      <summary>
          Obtiene una colección de asociaciones para el objeto.
        </summary>
      <param name="watcher">
              Objeto que se utilizará para devolver resultados. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String)">
      <summary>
          Obtiene una colección de asociaciones para el objeto.
        </summary>
      <param name="watcher">
              Objeto que se utilizará para devolver resultados. 
            </param>
      <param name="relationshipClass">
              Asociación que se va a incluir. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>
          Obtiene una colección de asociaciones para el objeto.
        </summary>
      <param name="watcher">
              Objeto que se utilizará para devolver resultados. 
            </param>
      <param name="relationshipClass">
              Tipo de relación de interés. 
            </param>
      <param name="relationshipQualifier">
              Calificador que debe estar presente en la relación. 
            </param>
      <param name="thisRole">
              Función de este objeto en la relación. 
            </param>
      <param name="classDefinitionsOnly">
              Cuando este método regresa, contiene sólo las definiciones de clase del conjunto de resultados. 
            </param>
      <param name="options">
              Opciones extendidas para la ejecución de la consulta. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.String)">
      <summary>
          Obtiene una colección de asociaciones para el objeto.
        </summary>
      <returns>
          Colección <see cref="T:System.Management.ManagementObjectCollection" /> que contiene los objetos de asociación.
        </returns>
      <param name="relationshipClass">
              Asociación que se va a incluir. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>
          Obtiene una colección de asociaciones para el objeto.
        </summary>
      <returns>
          Colección <see cref="T:System.Management.ManagementObjectCollection" /> que contiene los objetos de asociación.
        </returns>
      <param name="relationshipClass">
              Tipo de relación de interés. 
            </param>
      <param name="relationshipQualifier">
              Calificador que debe estar presente en la relación. 
            </param>
      <param name="thisRole">
              Función de este objeto en la relación. 
            </param>
      <param name="classDefinitionsOnly">
              Cuando este método regresa, contiene sólo las definiciones de clase del conjunto de resultados. 
            </param>
      <param name="options">
              Opciones extendidas para la ejecución de la consulta. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)">
      <summary>
          Invoca un método en el objeto, asincrónicamente.
        </summary>
      <param name="watcher">
              <see cref="T:System.Management.ManagementOperationObserver" /> que se utiliza para controlar el progreso y los resultados de la ejecución asincrónica. 
            </param>
      <param name="methodName">
              Nombre del método que se va a ejecutar. 
            </param>
      <param name="inParameters">
              <see cref="T:System.Management.ManagementBaseObject" /> que contiene los parámetros de entrada del método. 
            </param>
      <param name="options">
              <see cref="T:System.Management.InvokeMethodOptions" /> que contiene las opciones adicionales que se utilizan para ejecutar el método. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Object[])">
      <summary>
          Invoca un método en el objeto, asincrónicamente.
        </summary>
      <param name="watcher">
              Objeto que va a recibir los resultados de la operación. 
            </param>
      <param name="methodName">
              Nombre del método que se va a ejecutar. 
            </param>
      <param name="args">
              Matriz que contiene valores de parámetros. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)">
      <summary>
          Invoca un método en el objeto WMI. Los parámetros de entrada y salida se representan como objetos <see cref="T:System.Management.ManagementBaseObject" />.
        </summary>
      <returns>
          <see cref="T:System.Management.ManagementBaseObject" /> que contiene los parámetros de salida y el valor devuelto del método ejecutado.
        </returns>
      <param name="methodName">
              Nombre del método que se va a ejecutar. 
            </param>
      <param name="inParameters">
              <see cref="T:System.Management.ManagementBaseObject" /> que mantiene los parámetros de entrada del método. 
            </param>
      <param name="options">
              <see cref="T:System.Management.InvokeMethodOptions" /> que contiene opciones adicionales para la ejecución del método. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])">
      <summary>
          Invoca un método en el objeto.
        </summary>
      <returns>
          El valor de objeto que devuelve el método
        </returns>
      <param name="methodName">
              Nombre del método que se va a ejecutar. 
            </param>
      <param name="args">
              Matriz que contiene valores de parámetros. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Options">
      <summary>
          Obtiene o establece información adicional que se utilizará al recuperar el objeto.
        </summary>
      <returns>
          <see cref="T:System.Management.ObjectGetOptions" /> que se utiliza al recuperar el objeto.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Path">
      <summary>
          Obtiene o establece la ruta de acceso WMI del objeto.
        </summary>
      <returns>
          <see cref="T:System.Management.ManagementPath" /> que representa la ruta de acceso del objeto.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put">
      <summary>
          Confirma los cambios realizados en el objeto.
        </summary>
      <returns>
          <see cref="T:System.Management.ManagementPath" /> que contiene la ruta de acceso al objeto confirmado.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver)">
      <summary>
          Confirma los cambios realizados en el objeto, asincrónicamente.
        </summary>
      <param name="watcher">
              <see cref="T:System.Management.ManagementOperationObserver" /> que se utiliza para controlar el progreso y los resultados de la operación asincrónica. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver,System.Management.PutOptions)">
      <summary>
          Confirma los cambios realizados en el objeto asincrónicamente y utilizando las opciones especificadas.
        </summary>
      <param name="watcher">
              <see cref="T:System.Management.ManagementOperationObserver" /> que se utiliza para controlar el progreso y los resultados de la operación asincrónica. 
            </param>
      <param name="options">
              <see cref="T:System.Management.PutOptions" /> que se utiliza para especificar las opciones adicionales de la operación de confirmación. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.PutOptions)">
      <summary>
          Confirma los cambios realizados en el objeto.
        </summary>
      <returns>
          <see cref="T:System.Management.ManagementPath" /> que contiene la ruta de acceso al objeto confirmado.
        </returns>
      <param name="options">
              Opciones del modo en que se confirmarán los cambios. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Scope">
      <summary>
          Obtiene o establece el ámbito en que reside este objeto.
        </summary>
      <returns>
          <see cref="T:System.Management.ManagementScope" />.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.ToString">
      <summary>
          Devuelve la ruta de acceso completa del objeto. Se trata de un reemplazo de la implementación predeterminada del objeto.
        </summary>
      <returns>
          Ruta de acceso completa del objeto.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementObjectCollection">
      <summary>
          Representa diversas colecciones de objetos de administración recuperados mediante WMI. Los objetos de esta colección pertenecen a tipos derivados de <see cref="T:System.Management.ManagementBaseObject" />, incluidos <see cref="T:System.Management.ManagementObject" /> y <see cref="T:System.Management.ManagementClass" />. La colección puede ser el resultado de una consulta WMI ejecutada mediante un objeto <see cref="T:System.Management.ManagementObjectSearcher" /> o una enumeración de objetos de administración de un tipo especificado que se recuperan mediante <see cref="T:System.Management.ManagementClass" /> que representa a dicho tipo. Además, puede ser una colección de objetos de administración relacionados de una manera especificada con un objeto de administración concreto; en ese caso, la colección se recuperaría por medio de un método como <see cref="M:System.Management.ManagementObject.GetRelated" />. La colección se puede recorrer utilizando <see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /> y los objetos que contiene se pueden inspeccionar y manipular para realizar diversas tareas administrativas.                 
        </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)">
      <summary>
          Copia la colección en una matriz.          
        </summary>
      <param name="array">
              Matriz en la que se va a copiar. 
            </param>
      <param name="index">
              Índice por el que se va a comenzar. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)">
      <summary>
          Copia los elementos de la colección en una matriz <see cref="T:System.Management.ManagementBaseObject" />.          
        </summary>
      <param name="objectCollection">
              Matriz de destino.
            </param>
      <param name="index">
              Índice por el que se va a comenzar. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.Count">
      <summary>
          Obtiene un valor que indica el número de objetos de la colección.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Int32" /> que indica el número de objetos de la colección.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.Dispose">
      <summary>
          Libera los recursos asociados a este objeto. Tras llamar a este método, cuando se intenta utilizar este objeto, se produce una excepción <see cref="T:System.ObjectDisposedException" />.                       
        </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.Finalize">
      <summary>
          Se deshace de los recursos que mantiene el objeto. Es el destructor del objeto. Los finalizadores se expresan mediante la sintaxis del destructor. 
        </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.GetEnumerator">
      <summary>
          Devuelve el enumerador de la colección.          
        </summary>
      <returns>
          <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.IsSynchronized">
      <summary>
          Obtiene un valor que indica si el objeto está sincronizado.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si el objeto está sincronizado.
        </returns>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.SyncRoot">
      <summary>
          Obtiene el objeto que se utilizará para la sincronización.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Object" /> que representa el objeto que se va a utilizar para la sincronización.
        </returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator">
      <summary>
          Representa el enumerador de la colección. 
        </summary>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Current">
      <summary>
          Obtiene el <see cref="T:System.Management.ManagementBaseObject" /> actual al que apunta este enumerador.
        </summary>
      <returns>
          Objeto actual de la enumeración.
        </returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Dispose">
      <summary>
          Libera los recursos asociados a este objeto. Tras llamar a este método, cuando se intenta utilizar este objeto, se produce una excepción <see cref="T:System.ObjectDisposedException" />.
        </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Finalize">
      <summary>
          Se deshace de los recursos que mantiene el objeto. Es el destructor del objeto. Los finalizadores se expresan mediante la sintaxis del destructor.
        </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.MoveNext">
      <summary>
          Indica si se ha movido el enumerador hasta el siguiente objeto de la enumeración.
        </summary>
      <returns>
          
            true si el enumerador avanzó con éxito hasta el siguiente elemento; false si el enumerador alcanzó el final de la colección.
        </returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset">
      <summary>
          Restablece el enumerador al principio de la colección.
        </summary>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>
          Obtiene el objeto actual de la colección.
        </summary>
      <returns>
          Devuelve el elemento actual de la colección.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              La colección se modificó después de crear el enumerador.
            </exception>
    </member>
    <member name="T:System.Management.ManagementObjectSearcher">
      <summary>
          Recupera una colección de objetos de administración basándose en una consulta especificada. Esta clase es uno de los puntos de entrada más utilizados para recuperar información de administración. Se puede utilizar, por ejemplo, para enumerar todas las unidades de disco, adaptadores de red, procesos y muchos otros objetos de administración del sistema, o para saber qué conexiones de red están activas, qué servicios están detenidos, etc.  Cuando se crean instancias de esta clase, una de las instancias toma como entrada una consulta WMI representada en un objeto <see cref="T:System.Management.ObjectQuery" /> o sus derivados y, opcionalmente, un objeto <see cref="T:System.Management.ManagementScope" /> que representa el espacio de nombres WMI en el que se va a ejecutar la consulta. También puede tomar otras opciones avanzadas de un objeto <see cref="T:System.Management.EnumerationOptions" />. Cuando se invoca el método <see cref="M:System.Management.ManagementObjectSearcher.Get" /> de este objeto, <see cref="T:System.Management.ManagementObjectSearcher" /> ejecuta la consulta dada en el ámbito especificado y devuelve una colección de objetos de administración que coinciden con la consulta en un objeto <see cref="T:System.Management.ManagementObjectCollection" />. 
        </summary>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObjectSearcher" />. Después de establecer algunas propiedades de este objeto, este último se puede utilizar para invocar una consulta de información de administración. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ManagementScope,System.Management.ObjectQuery)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObjectSearcher" /> que se utiliza para invocar la consulta especificada en el ámbito especificado.          
        </summary>
      <param name="scope">
              <see cref="T:System.Management.ManagementScope" /> que representa el ámbito en que se invocará la consulta.
            </param>
      <param name="query">
              <see cref="T:System.Management.ObjectQuery" /> que representa la consulta que se va a invocar. 
            </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ManagementScope,System.Management.ObjectQuery,System.Management.EnumerationOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObjectSearcher" /> que se utiliza para invocar la consulta especificada en el ámbito especificado, con las opciones especificadas.          
        </summary>
      <param name="scope">
              <see cref="T:System.Management.ManagementScope" /> que especifica el ámbito de la consulta.
            </param>
      <param name="query">
              <see cref="T:System.Management.ObjectQuery" /> que especifica la consulta que se va a invocar. 
            </param>
      <param name="options">
              <see cref="T:System.Management.EnumerationOptions" /> que especifica las opciones adicionales que se van a utilizar para la consulta. 
            </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ObjectQuery)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObjectSearcher" /> que se utiliza para invocar la consulta especificada de información de administración.          
        </summary>
      <param name="query">
              <see cref="T:System.Management.ObjectQuery" /> que representa la consulta que invocará el buscador.
            </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObjectSearcher" /> que se utiliza para invocar la consulta especificada de información de administración.          
        </summary>
      <param name="queryString">
              Consulta WMI que invocará el objeto.
            </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObjectSearcher" /> que se utiliza para invocar la consulta especificada en el ámbito especificado.          
        </summary>
      <param name="scope">
              Ámbito en el que se realizará la consulta.
            </param>
      <param name="queryString">
              Consulta que se va a invocar.  
            </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementObjectSearcher" /> que se utiliza para invocar la consulta especificada en el ámbito especificado y con las opciones especificadas.          
        </summary>
      <param name="scope">
              Ámbito en el que se debe invocar la consulta.
            </param>
      <param name="queryString">
              Consulta que se va a invocar. 
            </param>
      <param name="options">
              <see cref="T:System.Management.EnumerationOptions" /> que especifica opciones adicionales para la consulta.  
            </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.Get">
      <summary>
          Invoca la consulta WMI especificada y devuelve la colección resultante.          
        </summary>
      <returns>
          Colección <see cref="T:System.Management.ManagementObjectCollection" /> que contiene los objetos que coinciden con la consulta especificada.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.Get(System.Management.ManagementOperationObserver)">
      <summary>
          Invoca la consulta WMI asincrónicamente y establece un enlace con un monitor para proporcionar los resultados.          
        </summary>
      <param name="watcher">
              Monitor que provoca los eventos desencadenados por la operación. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Options">
      <summary>
          Obtiene o establece opciones sobre el modo de buscar objetos.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.EnumerationOptions" /> que contiene las opciones para buscar los objetos WMI.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Query">
      <summary>
          Obtiene o establece la consulta que se invocará en el buscador (es decir, los criterios que se aplicarán a la búsqueda de objetos administrados).          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.ObjectQuery" /> que contiene la consulta que se va a invocar en el buscador.
        </returns>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Scope">
      <summary>
          Obtiene o establece el ámbito en el que se buscarán objetos (el ámbito representa un espacio de nombres WMI).          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.ManagementScope" /> que contiene el ámbito (espacio de nombres) donde se van a buscar los objetos WMI.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementOperationObserver">
      <summary>
          Administra operaciones asincrónicas y controla la información y los eventos de administración recibidos de manera asincrónica.          
        </summary>
    </member>
    <member name="M:System.Management.ManagementOperationObserver.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementOperationObserver" />. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.ManagementOperationObserver.Cancel">
      <summary>
          Cancela todas las operaciones pendientes.          
        </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.Completed">
      <summary>
          Se produce cuando se ha completado una operación.
        </summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.ObjectPut">
      <summary>
          Se produce cuando un objeto se ha confirmado correctamente.
        </summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.ObjectReady">
      <summary>
          Se produce cuando hay un nuevo objeto disponible.
        </summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.Progress">
      <summary>
          Se produce para indicar el progreso de una operación en curso.
        </summary>
    </member>
    <member name="T:System.Management.ManagementOptions">
      <summary>
          Proporciona una clase base abstracta para todos los objetos de opciones.
        </summary>
    </member>
    <member name="M:System.Management.ManagementOptions.Clone">
      <summary>
          Devuelve una copia del objeto.          
        </summary>
      <returns>
          Objeto clonado.
        </returns>
    </member>
    <member name="P:System.Management.ManagementOptions.Context">
      <summary>
          Obtiene o establece un objeto de contexto WMI. Se trata de una lista de pares de nombre y valor que se pasa a un proveedor WMI que admita información de contexto para las operaciones personalizadas.          
        </summary>
      <returns>
          Devuelve una colección <see cref="T:System.Management.ManagementNamedValueCollection" /> que contiene información de contexto WMI. 
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="F:System.Management.ManagementOptions.InfiniteTimeout">
      <summary>
          Indica que no debe haber un tiempo de espera.
        </summary>
    </member>
    <member name="P:System.Management.ManagementOptions.Timeout">
      <summary>
          Obtiene o establece el tiempo de espera que se aplicará a la operación. Observe que, en el caso de las operaciones que devuelvan colecciones, este tiempo de espera se aplica a la enumeración a través de la colección resultante y no a la operación en sí (para esta última se utiliza la propiedad <see cref="P:System.Management.EnumerationOptions.ReturnImmediately" />). Esta propiedad se utiliza para indicar que la operación se debe realizar semisincrónicamente.                       
        </summary>
      <returns>
          Devuelve <see cref="T:System.TimeSpan" /> que define el tiempo de espera que se va a aplicar a la operación.
        </returns>
    </member>
    <member name="T:System.Management.ManagementPath">
      <summary>
          Proporciona un contenedor para analizar y construir rutas de acceso a objetos WMI.          
        </summary>
    </member>
    <member name="M:System.Management.ManagementPath.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementPath" />, que está vacía. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.ManagementPath.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementPath" /> para la ruta de acceso especificada.          
        </summary>
      <param name="path">
               Ruta de acceso al objeto. 
            </param>
    </member>
    <member name="P:System.Management.ManagementPath.ClassName">
      <summary>
          Obtiene o establece la parte de la ruta de acceso que corresponde a la clase.                       
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene la parte de la ruta de acceso que corresponde a la clase.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.Clone">
      <summary>
          Devuelve una copia de <see cref="T:System.Management.ManagementPath" />.          
        </summary>
      <returns>
          Objeto clonado.             
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.DefaultPath">
      <summary>
          Obtiene o establece la ruta de acceso al ámbito predeterminado cuando no se ha especificado ningún ámbito. El ámbito predeterminado es \\.\root\cimv2, que se puede cambiar si se establece correctamente el valor de esta propiedad.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.ManagementPath" /> que contiene la ruta de acceso al ámbito (espacio de nombres) predeterminado que se utiliza cuando no se especifica ningún ámbito.
        </returns>
    </member>
    <member name="P:System.Management.ManagementPath.IsClass">
      <summary>
          Obtiene o establece un valor que indica si ésta es una ruta de acceso a una clase.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si ésta es una ruta de acceso a una clase.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.IsInstance">
      <summary>
          Obtiene o establece un valor que indica si ésta es una ruta de acceso a una instancia.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si ésta es una ruta de acceso a una instancia.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.IsSingleton">
      <summary>
          Obtiene o establece un valor que indica si ésta es una ruta de acceso a una instancia de singleton.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si ésta es una ruta de acceso a una instancia de singleton.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.NamespacePath">
      <summary>
          Obtiene o establece la parte de la ruta de acceso que corresponde al espacio de nombres. Observe que no se incluye el nombre del servidor, que se puede recuperar por separado.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene la parte de la ruta de acceso correspondiente al  espacio de nombres.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.Path">
      <summary>
          Obtiene o establece la representación de cadena de la ruta de acceso completa en el objeto.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene la ruta de acceso completa.
        </returns>
    </member>
    <member name="P:System.Management.ManagementPath.RelativePath">
      <summary>
          Obtiene o establece la ruta de acceso relativa: sólo el nombre de la clase y las claves.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene la ruta de acceso relativa.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.Server">
      <summary>
          Obtiene o establece la parte de la ruta de acceso que corresponde al servidor.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el nombre del servidor.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.SetAsClass">
      <summary>
          Establece la ruta de acceso como nueva ruta de acceso a la clase. Significa que la ruta de acceso debe tener un nombre de clase, pero no valores clave.          
        </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.SetAsSingleton">
      <summary>
          Establece la ruta de acceso como una nueva ruta de acceso al objeto singleton. Significa que se trata de una ruta de acceso a una instancia, sin valores clave.          
        </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.System#ICloneable#Clone">
      <summary>
          Crea un nuevo objeto copiado de la instancia actual.  
        </summary>
      <returns>
          Nuevo objeto que es una copia de esta instancia.
        </returns>
    </member>
    <member name="M:System.Management.ManagementPath.ToString">
      <summary>
          Devuelve la ruta de acceso completa al objeto como representación de cadena.          
        </summary>
      <returns>
          Cadena que contiene la ruta de acceso a objetos completa representada en este objeto. Este valor equivale al valor de la propiedad <see cref="P:System.Management.ManagementPath.Path" />.             
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementQuery">
      <summary>
          Proporciona una clase base abstracta para todos los objetos de consulta de administración.           
        </summary>
    </member>
    <member name="M:System.Management.ManagementQuery.Clone">
      <summary>
          Devuelve una copia del objeto.          
        </summary>
      <returns>
          Objeto clonado.             
        </returns>
    </member>
    <member name="M:System.Management.ManagementQuery.ParseQuery(System.String)">
      <summary>
          Analiza la cadena de consulta y establece los valores de propiedad en consecuencia. Si la consulta es válida, se analizarán la propiedad de nombre de la clase y la propiedad de condición de la consulta.                       
        </summary>
      <param name="query">
              Cadena de consulta que se va a analizar.
            </param>
    </member>
    <member name="P:System.Management.ManagementQuery.QueryLanguage">
      <summary>
          Obtiene o establece el lenguaje de consulta que se utiliza en la cadena de consulta, definiendo el formato de dicha cadena.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el formato de la cadena de consulta.
        </returns>
    </member>
    <member name="P:System.Management.ManagementQuery.QueryString">
      <summary>
          Obtiene o establece la consulta en formato de texto.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene la consulta.
        </returns>
    </member>
    <member name="T:System.Management.ManagementScope">
      <summary>
          Representa un ámbito (espacio de nombres) para las operaciones de administración.           
        </summary>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementScope" /> con valores predeterminados. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.Management.ManagementPath)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementScope" /> que representa la ruta de acceso al ámbito especificada.          
        </summary>
      <param name="path">
              <see cref="T:System.Management.ManagementPath" /> que contiene la ruta de acceso a un servidor y a un espacio de nombres para <see cref="T:System.Management.ManagementScope" />.
            </param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.Management.ManagementPath,System.Management.ConnectionOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementScope" /> que representa la ruta de acceso al ámbito especificada, con las opciones especificadas.          
        </summary>
      <param name="path">
              <see cref="T:System.Management.ManagementPath" /> que contiene la ruta de acceso al servidor y al espacio de nombres para <see cref="T:System.Management.ManagementScope" />.
            </param>
      <param name="options">
              <see cref="T:System.Management.ConnectionOptions" /> que contiene las opciones de la conexión. 
            </param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementScope" /> que representa la ruta de acceso al ámbito especificada.          
        </summary>
      <param name="path">
              Ruta de acceso al servidor y espacio de nombres de <see cref="T:System.Management.ManagementScope" />.
            </param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.String,System.Management.ConnectionOptions)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementScope" /> que representa la ruta de acceso al ámbito especificada, con las opciones especificadas.          
        </summary>
      <param name="path">
              Servidor y espacio de nombres de <see cref="T:System.Management.ManagementScope" />.
            </param>
      <param name="options">
              <see cref="T:System.Management.ConnectionOptions" /> que contiene las opciones de la conexión. 
            </param>
    </member>
    <member name="M:System.Management.ManagementScope.Clone">
      <summary>
          Devuelve una copia del objeto.          
        </summary>
      <returns>
          Nueva copia de <see cref="T:System.Management.ManagementScope" />.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementScope.Connect">
      <summary>
          Conecta este objeto <see cref="T:System.Management.ManagementScope" /> al ámbito WMI real.          
        </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementScope.IsConnected">
      <summary>
          Obtiene un valor que indica si <see cref="T:System.Management.ManagementScope" /> está actualmente enlazado a un servidor y un espacio de nombres WMI.          
        </summary>
      <returns>
          Devuelve un valor de <see cref="T:System.Boolean" /> que indica si el ámbito está actualmente enlazado a un servidor y un espacio de nombres WMI.
        </returns>
    </member>
    <member name="P:System.Management.ManagementScope.Options">
      <summary>
          Obtiene o establece las opciones para realizar la conexión WMI.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.ConnectionOptions" /> que contiene las opciones para realizar una conexión WMI.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementScope.Path">
      <summary>
          Obtiene o establece la ruta de acceso para <see cref="T:System.Management.ManagementScope" />.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.ManagementPath" /> que contiene la ruta de acceso al ámbito (espacio de nombres).
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementScope.System#ICloneable#Clone">
      <summary>
          Crea un nuevo objeto copiado de la instancia actual.  
        </summary>
      <returns>
          Nuevo objeto que es una copia de esta instancia.
        </returns>
    </member>
    <member name="T:System.Management.ManagementStatus">
      <summary>
          Describe la enumeración de todos los códigos de error WMI actualmente definidos. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NoError">
      <summary>
          La operación se realizó correctamente. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.False">
      <summary>
          Se devuelve este valor cuando no hay más objetos disponibles, el número de objetos devueltos es inferior al número solicitado o al final de una enumeración. También se devuelve cuando se llama al método con un valor 0 para el parámetro .
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ResetToDefault">
      <summary>
          Se eliminó una propiedad reemplazada. Se devuelve este valor para indicar que el valor original, no reemplazado, se ha restaurado como resultado de la eliminación.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Different">
      <summary>
          Los elementos comparados (por ejemplo, objetos y clases) no son idénticos.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Timedout">
      <summary>
          Se ha agotado el tiempo de espera de una llamada. No se trata de una condición de error, por lo que es posible que se hayan devuelto algunos resultados.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NoMoreData">
      <summary>
          No hay más datos disponibles en la enumeración; el usuario debería terminarla. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OperationCanceled">
      <summary>
          La operación se canceló.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Pending">
      <summary>
          Una solicitud está en curso pero los resultados no están disponibles todavía.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.DuplicateObjects">
      <summary>
          Se detectó más de una copia del mismo objeto en el conjunto de resultados de una enumeración. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PartialResults">
      <summary>
          El usuario no recibió todos los objetos solicitados debido a que los recursos no estaban accesibles (por motivos distintos a infracciones de seguridad).
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Failed">
      <summary>
          Se produjo un error en la llamada.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotFound">
      <summary>
          No se encontró el objeto. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AccessDenied">
      <summary>
          El usuario actual no tiene permiso para realizar la acción. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderFailure">
      <summary>
          Se produjo un error en el proveedor después de la inicialización. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TypeMismatch">
      <summary>
          Se produjo un desajuste de tipos. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OutOfMemory">
      <summary>
          No había memoria suficiente para la operación. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidContext">
      <summary>
          El objeto de contexto no es válido.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidParameter">
      <summary>
          Uno de los parámetros de la llamada no es correcto. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotAvailable">
      <summary>
          El recurso, que suele ser un servidor remoto, no está actualmente disponible. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CriticalError">
      <summary>
          Se produjo un error interno, grave e inesperado. Comunique este error al Servicio de soporte técnico de Microsoft.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidStream">
      <summary>
          Se dañó uno o más paquetes de red durante una sesión remota.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotSupported">
      <summary>
          No se admite esta función u operación. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidSuperclass">
      <summary>
          La superclase especificada no es válida. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidNamespace">
      <summary>
          No se pudo encontrar el espacio de nombres especificado. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidObject">
      <summary>
          La instancia especificada no es válida. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidClass">
      <summary>
          La clase especificada no es válida. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderNotFound">
      <summary>
          Un proveedor al que se hace referencia en el esquema no tiene un registro correspondiente. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidProviderRegistration">
      <summary>
          Un proveedor al que se hace referencia en el esquema tiene un registro incorrecto o incompleto. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderLoadFailure">
      <summary>
          COM no encuentra un proveedor al que se hace referencia en el esquema. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InitializationFailure">
      <summary>
          No se pudo inicializar un componente, como un proveedor, por razones internas. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TransportFailure">
      <summary>
           Se ha producido un error de red que impide el funcionamiento normal. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidOperation">
      <summary>
          La operación solicitada no es válida. Normalmente, este error está relacionado con intentos no válidos de eliminar clases o propiedades. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQuery">
      <summary>
          La consulta no era válida sintácticamente. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQueryType">
      <summary>
          No se admite el lenguaje de consulta solicitado.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AlreadyExists">
      <summary>
          En una operación de colocar, se especificó el indicador wbemChangeFlagCreateOnly, pero ya existe la instancia.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OverrideNotAllowed">
      <summary>
          La operación de agregar no se puede realizar en el calificador, porque el objeto propietario no permite reemplazos.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedQualifier">
      <summary>
          El usuario intentó eliminar un calificador sin propietario. Se trataba de un calificador heredado de una clase principal. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedProperty">
      <summary>
          El usuario intentó eliminar una propiedad sin propietario. Se trataba de una propiedad heredada de una clase principal. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Unexpected">
      <summary>
          El cliente realizó una secuencia de llamadas inesperadas y no válidas. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IllegalOperation">
      <summary>
          El usuario solicitó una operación no válida, como generar una clase a partir de una instancia.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeKey">
      <summary>
          Se produjo un intento no válido de especificar un calificador de clave en una propiedad que no puede ser una clave. Las claves se especifican en la definición de la clase de un objeto, y no se pueden modificar instancia por instancia.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IncompleteClass">
      <summary>
          El objeto actual no es una definición de clase válida. O es incompleto o no se ha registrado con WMI mediante <see cref="M:System.Management.ManagementObject.Put" /> ().
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidSyntax">
      <summary>
          Reservado para un uso futuro. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NondecoratedObject">
      <summary>
          Reservado para un uso futuro. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ReadOnly">
      <summary>
          La propiedad que intenta modificar es de sólo lectura.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderNotCapable">
      <summary>
          El proveedor no puede realizar la operación solicitada, como una consulta que es demasiado compleja, recuperar una instancia, crear o actualizar una clase, eliminar una clase o enumerar una clase. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClassHasChildren">
      <summary>
          Se intentó realizar un cambio que invalidaría una clase derivada.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClassHasInstances">
      <summary>
          Se intentó eliminar o modificar una clase que tiene instancias. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.QueryNotImplemented">
      <summary>
          Reservado para un uso futuro. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IllegalNull">
      <summary>
          Se especificó un valor null para una propiedad que no puede tener dicho valor, como una que esté marcada con un calificador Key, Indexed o Not_Null.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQualifierType">
      <summary>
          El valor proporcionado para un calificador no era un tipo de calificador válido.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidPropertyType">
      <summary>
          El tipo CIM especificado para una propiedad no es válido. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ValueOutOfRange">
      <summary>
          La solicitud se realizó con un valor fuera del intervalo o es incompatible con el tipo. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeSingleton">
      <summary>
          Se produjo un intento no válido de convertir una clase en singleton, como sucede cuando la clase se deriva de una clase que no es singleton.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidCimType">
      <summary>
          El tipo CIM especificado no es válido. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidMethod">
      <summary>
          El método solicitado no está disponible. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidMethodParameters">
      <summary>
          Los parámetros proporcionados para el método no son válidos. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.SystemProperty">
      <summary>
          Se intentó obtener calificadores en una propiedad del sistema. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidProperty">
      <summary>
          No se reconoce el tipo de propiedad. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CallCanceled">
      <summary>
          Un proceso asincrónico ha sido cancelado internamente o por el usuario. Tenga presente que, dada la duración y la naturaleza de la operación asincrónica, es posible que la operación no se haya cancelado realmente. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ShuttingDown">
      <summary>
          El usuario solicitó una operación mientras WMI procedía a cerrar.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedMethod">
      <summary>
          Se intentó reutilizar un nombre de método existente desde una superclase y las firmas no coincidían. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedParameter">
      <summary>
          Uno o más valores de parámetro, como un texto de consulta, es demasiado complejo o no se admite. Se ha solicitado a WMI que reintente la operación con parámetros más sencillos. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingParameterID">
      <summary>
          No se encontró un parámetro en la llamada al método. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidParameterID">
      <summary>
          Un parámetro de método tiene un calificador de id. no válido. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NonconsecutiveParameterIDs">
      <summary>
          Uno o varios parámetros de método tienen calificadores de id. que están fuera de la secuencia. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ParameterIDOnRetval">
      <summary>
          El valor devuelto para un método tiene un calificador de id. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidObjectPath">
      <summary>
          La ruta de acceso al objeto especificada no era válida. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OutOfDiskSpace">
      <summary>
          No hay espacio suficiente en el disco para continuar la operación. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.BufferTooSmall">
      <summary>
          El búfer suministrado era demasiado pequeño para contener todos los objetos del enumerador o para leer una propiedad de cadena. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedPutExtension">
      <summary>
          El proveedor no admite la operación de colocar que se ha solicitado. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnknownObjectType">
      <summary>
          Se encontró un objeto con un tipo o una versión incorrectos durante el cálculo de referencias. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnknownPacketType">
      <summary>
          Se encontró un paquete con un tipo o una versión incorrectos durante el cálculo de referencias. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MarshalVersionMismatch">
      <summary>
          El paquete tiene una versión no admitida. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MarshalInvalidSignature">
      <summary>
          El paquete está dañado.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQualifier">
      <summary>
          Se intentó asignar certificadores no coincidentes, como colocar [ManagementKey] en un objeto en lugar de en una propiedad. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidDuplicateParameter">
      <summary>
          Se ha declarado un parámetro duplicado en un método CIM. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TooMuchData">
      <summary>
          Reservado para un uso futuro. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ServerTooBusy">
      <summary>
          Se produjo un error en la entrega de un evento. El proveedor puede optar por volver a provocarlo.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidFlavor">
      <summary>
          El modo especificado no era válido. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CircularReference">
      <summary>
          Se intentó crear una referencia circular (por ejemplo, derivar una clase de sí misma). 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedClassUpdate">
      <summary>
          La clase especificada no se admite. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotChangeKeyInheritance">
      <summary>
          Se intentó cambiar una clave cuando hay instancias o clases derivadas que todavía la utilizan. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotChangeIndexInheritance">
      <summary>
          Se intentó cambiar un índice cuando hay instancias o clases derivadas que todavía lo utilizan. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TooManyProperties">
      <summary>
          Se intentó crear más propiedades de las que admite la versión actual de la clase. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdateTypeMismatch">
      <summary>
          Se volvió a definir una propiedad con un tipo incompatible en una clase derivada. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdateOverrideNotAllowed">
      <summary>
          Se intentó reemplazar un calificador no reemplazable en una clase derivada. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdatePropagatedMethod">
      <summary>
          Se volvió a declarar un método con una firma incompatible en una clase derivada. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MethodNotImplemented">
      <summary>
          Se intentó ejecutar un método no marcado con [implemented] en una clase relevante. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MethodDisabled">
      <summary>
          Se intentó ejecutar un método marcado con [disabled]. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RefresherBusy">
      <summary>
          El actualizador está ocupado con otra operación. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnparsableQuery">
      <summary>
          La consulta de filtrado no es válida sintácticamente. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotEventClass">
      <summary>
          La cláusula FROM de una consulta de filtrado hace referencia a una clase que no es una clase de evento. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingGroupWithin">
      <summary>
          Se utilizó una cláusula GROUP BY sin la cláusula GROUP WITHIN correspondiente. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingAggregationList">
      <summary>
          Se utilizó una cláusula GROUP BY. No se admite la agregación en todas las propiedades. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropertyNotAnObject">
      <summary>
          Se utilizó la notación de punto en una propiedad que no es un objeto incrustado. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AggregatingByObject">
      <summary>
          Una cláusula GROUP BY hace referencia a una propiedad que es un objeto incrustado sin utilizar la notación de punto. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UninterpretableProviderQuery">
      <summary>
          Una consulta de registro de proveedor de eventos (__EventProviderRegistration) no especificó las clases para las que se proporcionaron los eventos. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.BackupRestoreWinmgmtRunning">
      <summary>
          Se realizó una solicitud de copia de seguridad o restauración del repositorio mientras WinMgmt.exe lo estaba utilizando. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.QueueOverflow">
      <summary>
          La cola de entrega asincrónica se desbordó porque el consumidor de eventos era demasiado lento. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PrivilegeNotHeld">
      <summary>
          Se produjo un error en la operación porque el cliente no tenía los privilegios de seguridad necesarios. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidOperator">
      <summary>
          El operador no es válido para este tipo de propiedad.
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.LocalCredentials">
      <summary>
          El usuario especificó un nombre de usuario, una contraseña o una autoridad en una conexión local. El usuario debe utilizar un nombre de usuario y una contraseña vacíos, y basarse en la seguridad predeterminada. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeAbstract">
      <summary>
          La clase se convirtió en abstracta cuando su superclase no lo es. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AmendedObject">
      <summary>
          Se utilizó un objeto corregido en una operación de colocar sin haber especificado el indicador WBEM_FLAG_USE_AMENDED_QUALIFIERS. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClientTooSlow">
      <summary>
          El cliente no estaba recuperando objetos lo suficientemente rápido desde una enumeración. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RegistrationTooBroad">
      <summary>
          El registro del proveedor se superpone al dominio de eventos del sistema. 
        </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RegistrationTooPrecise">
      <summary>
          No se utilizó una cláusula WITHIN en esta consulta. 
        </summary>
    </member>
    <member name="T:System.Management.MethodData">
      <summary>
          Contiene información sobre un método WMI.          
        </summary>
    </member>
    <member name="P:System.Management.MethodData.InParameters">
      <summary>
          Obtiene los parámetros de entrada del método. Cada parámetro se describe como una propiedad en el objeto. Si un parámetro se encuentra tanto dentro como fuera, aparece en las propiedades <see cref="P:System.Management.MethodData.InParameters" /> y <see cref="P:System.Management.MethodData.OutParameters" />.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.ManagementBaseObject" /> que contiene los parámetros de entrada del método.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.Name">
      <summary>
          Obtiene el nombre del método.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el nombre del método.
        </returns>
    </member>
    <member name="P:System.Management.MethodData.Origin">
      <summary>
          Obtiene el nombre de la clase de administración en la que se presentó el método por primera vez en la jerarquía de herencia de clases.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el nombre de la clase en la que se presentó primero el método en la jerarquía de herencia de clases.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.OutParameters">
      <summary>
          Obtiene los parámetros de salida del método. Cada parámetro se describe como una propiedad en el objeto. Si un parámetro se encuentra tanto dentro como fuera, aparecerá en las propiedades <see cref="P:System.Management.MethodData.InParameters" /> y <see cref="P:System.Management.MethodData.OutParameters" />.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.ManagementBaseObject" /> que contiene los parámetros de salida del método.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.Qualifiers">
      <summary>
          Obtiene una colección de calificadores definidos en el método. Cada elemento es de tipo <see cref="T:System.Management.QualifierData" /> y contiene información como el nombre, el valor y el modo del calificador.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.QualifierDataCollection" /> que contiene los calificadores del método.
        </returns>
    </member>
    <member name="T:System.Management.MethodDataCollection">
      <summary>
          Representa el conjunto de métodos disponibles en la colección.          
        </summary>
    </member>
    <member name="M:System.Management.MethodDataCollection.Add(System.String)">
      <summary>
          Agrega <see cref="T:System.Management.MethodData" /> a <see cref="T:System.Management.MethodDataCollection" />. Esta sobrecarga agregará a la colección un método nuevo sin parámetros.          
        </summary>
      <param name="methodName">
              Nombre del método que se va a agregar.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)">
      <summary>
          Agrega <see cref="T:System.Management.MethodData" /> a <see cref="T:System.Management.MethodDataCollection" />. Esta sobrecarga agregará a la colección un método nuevo con los objetos de parámetro especificados.          
        </summary>
      <param name="methodName">
              Nombre del método que se va a agregar.
            </param>
      <param name="inParameters">
              <see cref="T:System.Management.ManagementBaseObject" /> que contiene los parámetros de entrada del método. 
            </param>
      <param name="outParameters">
              <see cref="T:System.Management.ManagementBaseObject" /> que contiene los parámetros de salida del método. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>
          Copia <see cref="T:System.Management.MethodDataCollection" /> en una matriz.          
        </summary>
      <param name="array">
              Matriz en la que se va a copiar la colección. 
            </param>
      <param name="index">
              Índice por el que se va a comenzar. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)">
      <summary>
          Copia <see cref="T:System.Management.MethodDataCollection" /> en una matriz <see cref="T:System.Management.MethodData" /> especializada.          
        </summary>
      <param name="methodArray">
              Matriz de destino en la que se va a copiar los objetos <see cref="T:System.Management.MethodData" />.
            </param>
      <param name="index">
              Índice de la matriz de destino por el que va a comenzar la copia.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.Count">
      <summary>
          Obtiene el número de objetos de la colección <see cref="T:System.Management.MethodDataCollection" />.         
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Int32" /> que representa el número de objetos de la colección.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.GetEnumerator">
      <summary>
          Devuelve un enumerador para <see cref="T:System.Management.MethodDataCollection" />.          
        </summary>
      <returns>
          <see cref="T:System.Collections.IEnumerator" /> que enumera la colección.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.IsSynchronized">
      <summary>
          Obtiene un valor que indica si el objeto  está sincronizado.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si el objeto está sincronizado.
        </returns>
    </member>
    <member name="P:System.Management.MethodDataCollection.Item(System.String)">
      <summary>
          Obtiene el <see cref="T:System.Management.MethodData" /> especificado de <see cref="T:System.Management.MethodDataCollection" />.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.MethodData" /> que contiene los datos de un método especificado de la colección.
        </returns>
      <param name="methodName">
              Nombre del método solicitado.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.Remove(System.String)">
      <summary>
          Quita <see cref="T:System.Management.MethodData" /> de <see cref="T:System.Management.MethodDataCollection" />.          
        </summary>
      <param name="methodName">
              Nombre del método que se va a quitar de la colección.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.SyncRoot">
      <summary>
          Obtiene el objeto que se utilizará para la sincronización.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Object" /> que representa el objeto que se va a utilizar para la sincronización.
        </returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
          Devuelve <see cref="T:System.Collections.IEnumerator" /> que recorre en iteración <see cref="T:System.Management.MethodDataCollection" />.
        </summary>
      <returns>
          <see cref="T:System.Collections.IEnumerator" /> para <see cref="T:System.Management.MethodDataCollection" />.
        </returns>
    </member>
    <member name="T:System.Management.MethodDataCollection.MethodDataEnumerator">
      <summary>
          Representa el enumerador de los objetos <see cref="T:System.Management.MethodData" /> de <see cref="T:System.Management.MethodDataCollection" />. 
        </summary>
    </member>
    <member name="P:System.Management.MethodDataCollection.MethodDataEnumerator.Current">
      <summary>
          Devuelve el <see cref="T:System.Management.MethodData" /> actual en la enumeración <see cref="T:System.Management.MethodDataCollection" />.
        </summary>
      <returns>
          El elemento <see cref="T:System.Management.MethodData" /> actual de la colección.
        </returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.MethodDataEnumerator.MoveNext">
      <summary>
          Se desplaza al siguiente elemento de la enumeración <see cref="T:System.Management.MethodDataCollection" />.
        </summary>
      <returns>
          
            true si el enumerador avanzó con éxito hasta el siguiente método; false si el enumerador alcanzó el final de la colección.
        </returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.MethodDataEnumerator.Reset">
      <summary>
          Restablece el enumerador al principio de la enumeración <see cref="T:System.Management.MethodDataCollection" />.
        </summary>
    </member>
    <member name="P:System.Management.MethodDataCollection.MethodDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>
          Obtiene el objeto actual de la colección.
        </summary>
      <returns>
          Devuelve el elemento actual de la colección.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              La colección se modificó después de crear el enumerador.
            </exception>
    </member>
    <member name="T:System.Management.ObjectGetOptions">
      <summary>
          Especifica opciones para obtener un objeto de administración.          
        </summary>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ObjectGetOptions" /> para obtener un objeto WMI, mediante los valores predeterminados. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor(System.Management.ManagementNamedValueCollection)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ObjectGetOptions" /> para obtener un objeto WMI, utilizando el contexto específico para cada proveedor indicado.          
        </summary>
      <param name="context">
              Objeto de contexto de pares de nombre y valor específico para cada proveedor que se pasa al proveedor.
            </param>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ObjectGetOptions" /> para obtener un objeto WMI, utilizando los valores de opciones dados.          
        </summary>
      <param name="context">
              Objeto de contexto de pares de nombre y valor específico para cada proveedor que se pasa al proveedor.
            </param>
      <param name="timeout">
              Tiempo para que se realice la operación antes de que se agote el tiempo. El valor predeterminado es <see cref="F:System.TimeSpan.MaxValue" />.  
            </param>
      <param name="useAmendedQualifiers">
              
                Es true si los objetos devueltos deben contener calificadores corregidos (que reconozcan la configuración regional); en caso contrario, es false. 
            </param>
    </member>
    <member name="M:System.Management.ObjectGetOptions.Clone">
      <summary>
          Devuelve una copia del objeto.          
        </summary>
      <returns>
          Objeto clonado.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ObjectGetOptions.UseAmendedQualifiers">
      <summary>
          Obtiene o establece un valor que indica si los objetos devueltos de WMI deben contener información corregida. Generalmente, la información corregida es información localizable adjunta al objeto WMI, como las descripciones de propiedades y objetos.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si los objetos devueltos de WMI deben contener información corregida.
        </returns>
    </member>
    <member name="T:System.Management.ObjectPutEventArgs">
      <summary>
          Contiene los datos del evento <see cref="E:System.Management.ManagementOperationObserver.ObjectPut" />.          
        </summary>
    </member>
    <member name="P:System.Management.ObjectPutEventArgs.Path">
      <summary>
          Obtiene la identidad del objeto que se ha colocado.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.ManagementPath" /> que contiene la ruta de acceso al objeto que se ha colocado.
        </returns>
    </member>
    <member name="T:System.Management.ObjectPutEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.Management.ManagementOperationObserver.ObjectPut" />.  
        </summary>
      <param name="sender">
              Instancia del objeto para el que debe invocarse este método.
            </param>
      <param name="e">
              <see cref="T:System.Management.ObjectPutEventArgs" /> que especifica la razón por la que se llama al evento.
            </param>
    </member>
    <member name="T:System.Management.ObjectQuery">
      <summary>
          Representa una consulta de administración que devuelve instancias o clases.          
        </summary>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ObjectQuery" /> sin valores inicializados. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ObjectQuery" /> para una cadena de consulta específica.          
        </summary>
      <param name="query">
              Representación de cadena de la consulta.
            </param>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.ObjectQuery" /> para una cadena y un lenguaje de consulta específicos.          
        </summary>
      <param name="language">
              Lenguaje de consulta en el que se especifica esta consulta.
            </param>
      <param name="query">
              Representación de cadena de la consulta. 
            </param>
    </member>
    <member name="M:System.Management.ObjectQuery.Clone">
      <summary>
          Devuelve una copia del objeto.          
        </summary>
      <returns>
          Objeto clonado.             
        </returns>
    </member>
    <member name="T:System.Management.ObjectReadyEventArgs">
      <summary>
          Contiene los datos del evento <see cref="E:System.Management.ManagementOperationObserver.ObjectReady" />.          
        </summary>
    </member>
    <member name="P:System.Management.ObjectReadyEventArgs.NewObject">
      <summary>
          Obtiene el objeto que se acaba de devolver.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.ManagementBaseObject" /> que contiene el objeto que se acaba de devolver.
        </returns>
    </member>
    <member name="T:System.Management.ObjectReadyEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.Management.ManagementOperationObserver.ObjectReady" />.
        </summary>
      <param name="sender">
              Instancia del objeto para el que debe invocarse este método.
            </param>
      <param name="e">
              <see cref="T:System.Management.ObjectReadyEventArgs" /> que especifica la razón por la que se llama al evento.
            </param>
    </member>
    <member name="T:System.Management.ProgressEventArgs">
      <summary>
          Contiene los datos del evento <see cref="E:System.Management.ManagementOperationObserver.Progress" />.          
        </summary>
    </member>
    <member name="P:System.Management.ProgressEventArgs.Current">
      <summary>
          Obtiene la cantidad de trabajo realizada actualmente por la operación. Es siempre menor o igual que <see cref="P:System.Management.ProgressEventArgs.UpperBound" />.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Int32" /> que representa la cantidad de trabajo ya realizada por la operación.
        </returns>
    </member>
    <member name="P:System.Management.ProgressEventArgs.Message">
      <summary>
          Obtiene o establece información adicional opcional relacionada con el progreso de la operación.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene información sobre el progreso de la operación.
        </returns>
    </member>
    <member name="P:System.Management.ProgressEventArgs.UpperBound">
      <summary>
          Obtiene la cantidad total de trabajo que debe realizar la operación.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Int32" /> que representa la cantidad de trabajo total que va a realizar la operación.
        </returns>
    </member>
    <member name="T:System.Management.ProgressEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.Management.ManagementOperationObserver.Progress" />.
        </summary>
      <param name="sender">
              Instancia del objeto para el que debe invocarse este método.
            </param>
      <param name="e">
              <see cref="T:System.Management.ProgressEventArgs" /> que especifica la razón por la que se llama al evento.
            </param>
    </member>
    <member name="T:System.Management.PropertyData">
      <summary>
          Representa información sobre una propiedad WMI.          
        </summary>
    </member>
    <member name="P:System.Management.PropertyData.IsArray">
      <summary>
          Obtiene un valor que indica si la propiedad es una matriz.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si la propiedad es una matriz.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.IsLocal">
      <summary>
          Obtiene un valor que indica si la propiedad se ha definido en la actual clase WMI.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si la propiedad se ha definido en la actual clase WMI.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Name">
      <summary>
          Obtiene el nombre de la propiedad.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el nombre de la propiedad.
        </returns>
    </member>
    <member name="P:System.Management.PropertyData.Origin">
      <summary>
          Obtiene el nombre de la clase WMI en la jerarquía en la que se presentó la propiedad.          
        </summary>
      <returns>
          Obtiene un valor <see cref="T:System.String" /> que contiene el nombre de la clase WMI en la jerarquía en la que se presentó la propiedad.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Qualifiers">
      <summary>
          Obtiene el conjunto de calificadores definidos en la propiedad.          
        </summary>
      <returns>
          Devuelve una colección <see cref="T:System.Management.QualifierDataCollection" /> que contiene el conjunto de calificadores definidos en la propiedad.
        </returns>
    </member>
    <member name="P:System.Management.PropertyData.Type">
      <summary>
          Obtiene el tipo CIM de la propiedad.          
        </summary>
      <returns>
          Devuelve un valor de enumeración <see cref="T:System.Management.CimType" /> que representa el tipo CIM de la propiedad.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Value">
      <summary>
          Obtiene o establece el valor actual de la propiedad.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Object" /> que representa el valor de la propiedad.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.PropertyDataCollection">
      <summary>
          Representa el conjunto de propiedades de un objeto WMI.           
        </summary>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)">
      <summary>
          Agrega un nuevo <see cref="T:System.Management.PropertyData" /> sin un valor asignado.          
        </summary>
      <param name="propertyName">
              Nombre de la propiedad.
            </param>
      <param name="propertyType">
              Tipo de CIM (Modelo de información común) de la propiedad.
            </param>
      <param name="isArray">
              
                Es true para especificar que la propiedad es un tipo de matriz; en caso contrario, es false.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Object)">
      <summary>
          Agrega un nuevo <see cref="T:System.Management.PropertyData" /> con el valor especificado. El valor no puede ser null y debe ser convertible a un tipo de CIM (Modelo de información común).          
        </summary>
      <param name="propertyName">
              Nombre de la nueva propiedad.
            </param>
      <param name="propertyValue">
              Valor de la propiedad (no puede ser nulo).
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)">
      <summary>
          Agrega una nueva clase <see cref="T:System.Management.PropertyData" /> con el valor y el tipo de CIM (Modelo de información común) especificados.          
        </summary>
      <param name="propertyName">
              Nombre de la propiedad.
            </param>
      <param name="propertyValue">
              Valor de la propiedad (que puede ser nulo).
            </param>
      <param name="propertyType">
              Tipo CIM de la propiedad.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>
          Copia <see cref="T:System.Management.PropertyDataCollection" /> en una matriz.          
        </summary>
      <param name="array">
              Matriz en la que se va a copiar <see cref="T:System.Management.PropertyDataCollection" />. 
            </param>
      <param name="index">
              Índice por el que se va a comenzar la copia. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)">
      <summary>
          Copia <see cref="T:System.Management.PropertyDataCollection" /> en una matriz de objetos <see cref="T:System.Management.PropertyData" /> especializada.          
        </summary>
      <param name="propertyArray">
              Matriz de destino que contendrá el <see cref="T:System.Management.PropertyDataCollection" /> copiado.
            </param>
      <param name="index">
              Índice de la matriz de destino por el que va a comenzar la copia. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.Count">
      <summary>
          Obtiene el número de objetos de <see cref="T:System.Management.PropertyDataCollection" />.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Int32" /> que representa el número de objetos de la colección.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.GetEnumerator">
      <summary>
          Devuelve el enumerador para <see cref="T:System.Management.PropertyDataCollection" />.          
        </summary>
      <returns>
          <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.IsSynchronized">
      <summary>
          Obtiene un valor que indica si el objeto está sincronizado.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si el objeto está sincronizado.
        </returns>
    </member>
    <member name="P:System.Management.PropertyDataCollection.Item(System.String)">
      <summary>
          Devuelve la propiedad especificada de <see cref="T:System.Management.PropertyDataCollection" />, con la sintaxis []. Esta propiedad es el indizador de la clase <see cref="T:System.Management.PropertyDataCollection" />.
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.PropertyData" /> que contiene los datos de un calificador especificado de la colección.
        </returns>
      <param name="propertyName">
              Nombre de la propiedad que se va a recuperar.
            </param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Remove(System.String)">
      <summary>
          Quita <see cref="T:System.Management.PropertyData" /> de <see cref="T:System.Management.PropertyDataCollection" />.          
        </summary>
      <returns>
        </returns>
      <param name="propertyName">
              Nombre de la propiedad que se va a quitar.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.SyncRoot">
      <summary>
          Obtiene el objeto que se utilizará para la sincronización.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Object" /> que contiene el objeto que se va a utilizar para la sincronización.
        </returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="T:System.Management.PropertyDataCollection.PropertyDataEnumerator">
      <summary>
          Representa el enumerador de los objetos <see cref="T:System.Management.PropertyData" /> de <see cref="T:System.Management.PropertyDataCollection" />. 
        </summary>
    </member>
    <member name="P:System.Management.PropertyDataCollection.PropertyDataEnumerator.Current">
      <summary>
          Obtiene el <see cref="T:System.Management.PropertyData" /> actual de la enumeración <see cref="T:System.Management.PropertyDataCollection" />.
        </summary>
      <returns>
          El actual elemento <see cref="T:System.Management.PropertyData" /> de la colección.
        </returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.PropertyDataEnumerator.MoveNext">
      <summary>
          Se desplaza al siguiente elemento de la enumeración <see cref="T:System.Management.PropertyDataCollection" />.
        </summary>
      <returns>
          
            true si el enumerador avanzó con éxito hasta el siguiente elemento; false si el enumerador alcanzó el final de la colección.
        </returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset">
      <summary>
          Restablece el enumerador al principio de la enumeración <see cref="T:System.Management.PropertyDataCollection" />.
        </summary>
    </member>
    <member name="P:System.Management.PropertyDataCollection.PropertyDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>
          Obtiene el objeto actual de la colección.
        </summary>
      <returns>
          Devuelve el elemento actual de la colección.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              La colección se modificó después de crear el enumerador.
            </exception>
    </member>
    <member name="T:System.Management.PutOptions">
      <summary>
          Especifica opciones para confirmar los cambios del objeto de administración.          
        </summary>
    </member>
    <member name="M:System.Management.PutOptions.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.PutOptions" /> para las operaciones de movimiento, con los valores predeterminados. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.PutOptions.#ctor(System.Management.ManagementNamedValueCollection)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.PutOptions" /> para confirmar un objeto WMI, mediante el contexto específico para cada proveedor especificado.          
        </summary>
      <param name="context">
              Objeto de contexto de pares de nombre y valor específico para cada proveedor que se pasa al proveedor.
            </param>
    </member>
    <member name="M:System.Management.PutOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Boolean,System.Management.PutType)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.PutOptions" /> para confirmar un objeto WMI, mediante los valores de opción especificados.          
        </summary>
      <param name="context">
              Objeto de pares nombre-valor específico para cada proveedor que se pasa al proveedor. 
            </param>
      <param name="timeout">
              Tiempo para que se realice la operación antes de que se agote el tiempo. El valor predeterminado es <see cref="F:System.TimeSpan.MaxValue" />. 
            </param>
      <param name="useAmendedQualifiers">
              
                Es true si los objetos devueltos deben contener calificadores corregidos (que reconozcan la configuración regional); en caso contrario, es false. 
            </param>
      <param name="putType">
              Tipo de confirmación que se va a realizar (actualizar o crear). 
            </param>
    </member>
    <member name="M:System.Management.PutOptions.Clone">
      <summary>
          Devuelve una copia del objeto.          
        </summary>
      <returns>
          Objeto clonado.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PutOptions.Type">
      <summary>
          Obtiene o establece el tipo de confirmación que se va a realizar para el objeto.          
        </summary>
      <returns>
          Devuelve un valor de enumeración <see cref="T:System.Management.PutType" /> que representa el tipo de confirmación que se va a realizar para el objeto.
        </returns>
    </member>
    <member name="P:System.Management.PutOptions.UseAmendedQualifiers">
      <summary>
          Obtiene o establece un valor que indica si los objetos devueltos de WMI deben contener información corregida. Generalmente, la información corregida es información localizable adjunta al objeto WMI, como las descripciones de propiedades y objetos.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si los objetos devueltos de WMI deben contener información corregida.
        </returns>
    </member>
    <member name="T:System.Management.PutType">
      <summary>
          Describe los posibles efectos de guardar un objeto en WMI al utilizar <see cref="M:System.Management.ManagementObject.Put" />.          
        </summary>
    </member>
    <member name="F:System.Management.PutType.None">
      <summary>
          No se ha producido ningún cambio.
        </summary>
    </member>
    <member name="F:System.Management.PutType.UpdateOnly">
      <summary>
          Sólo actualiza objetos existentes, no crea objetos nuevos.
        </summary>
    </member>
    <member name="F:System.Management.PutType.CreateOnly">
      <summary>
          Sólo crea objetos, no actualiza objetos existentes.
        </summary>
    </member>
    <member name="F:System.Management.PutType.UpdateOrCreate">
      <summary>
          Guarda el objeto, ya se esté actualizando un objeto existente o creando uno nuevo.
        </summary>
    </member>
    <member name="T:System.Management.QualifierData">
      <summary>
          Contiene información sobre un calificador WMI.          
        </summary>
    </member>
    <member name="P:System.Management.QualifierData.IsAmended">
      <summary>
          Obtiene o establece un valor que indica si el calificador está corregido.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si el calificador está corregido.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.IsLocal">
      <summary>
          Obtiene un valor que indica si el calificador se ha definido localmente en esta clase o si se ha propagado desde una clase base.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si el calificador se ha definido localmente en esta clase o si se ha propagado desde una clase base.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.IsOverridable">
      <summary>
          Obtiene o establece un valor que indica si se puede reemplazar el valor del calificador cuando se propague.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si se puede reemplazar el valor del calificador cuando se propague.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.Name">
      <summary>
          Representa el nombre del calificador.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el nombre del calificador.
        </returns>
    </member>
    <member name="P:System.Management.QualifierData.PropagatesToInstance">
      <summary>
          Obtiene o establece un valor que indica si se debe propagar el calificador a instancias de la clase.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si se debe propagar el calificador a las instancias de la clase.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.PropagatesToSubclass">
      <summary>
          Obtiene o establece un valor que indica si se debe propagar el calificador a subclases de la clase.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si se debe propagar el calificador a las subclases de la clase.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.Value">
      <summary>
          Obtiene o establece el valor del calificador.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Object" /> que contiene el valor del calificador.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.QualifierDataCollection">
      <summary>
          Representa una colección de objetos <see cref="T:System.Management.QualifierData" />.          
        </summary>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Add(System.String,System.Object)">
      <summary>
          Agrega <see cref="T:System.Management.QualifierData" /> a <see cref="T:System.Management.QualifierDataCollection" />. Esta sobrecarga especifica el nombre y el valor del calificador.          
        </summary>
      <param name="qualifierName">
              Nombre del <see cref="T:System.Management.QualifierData" /> que se va a agregar a <see cref="T:System.Management.QualifierDataCollection" />. 
            </param>
      <param name="qualifierValue">
              Valor del nuevo calificador. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
          Agrega <see cref="T:System.Management.QualifierData" /> a <see cref="T:System.Management.QualifierDataCollection" />. Esta sobrecarga especifica todos los valores de propiedad de <see cref="T:System.Management.QualifierData" />.          
        </summary>
      <param name="qualifierName">
              Nombre del calificador. 
            </param>
      <param name="qualifierValue">
              Valor del calificador. 
            </param>
      <param name="isAmended">
              
                Es true para especificar que este calificador está corregido (modo); en caso contrario, es false. 
            </param>
      <param name="propagatesToInstance">
              
                Es true para propagar este calificador a instancias; en caso contrario, es false. 
            </param>
      <param name="propagatesToSubclass">
              
                Es true para propagar este calificador a subclases; en caso contrario, es false. 
            </param>
      <param name="isOverridable">
              
                Es true para especificar que el valor de este calificador se puede reemplazar en instancias de subclases; en caso contrario, es false. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>
          Copia <see cref="T:System.Management.QualifierDataCollection" /> en una matriz.          
        </summary>
      <param name="array">
              Matriz en la que se va a copiar <see cref="T:System.Management.QualifierDataCollection" />. 
            </param>
      <param name="index">
              Índice por el que se va a comenzar la copia. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)">
      <summary>
          Copia <see cref="T:System.Management.QualifierDataCollection" /> en una matriz <see cref="T:System.Management.QualifierData" /> especializada.          
        </summary>
      <param name="qualifierArray">
              Matriz especializada de objetos <see cref="T:System.Management.QualifierData" /> en la que se va a copiar <see cref="T:System.Management.QualifierDataCollection" />.
            </param>
      <param name="index">
              Índice por el que se va a comenzar la copia. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.Count">
      <summary>
          Obtiene el número de objetos <see cref="T:System.Management.QualifierData" /> de la colección <see cref="T:System.Management.QualifierDataCollection" />.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Int32" /> que representa el número de objetos de la colección.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.GetEnumerator">
      <summary>
          Devuelve un enumerador para <see cref="T:System.Management.QualifierDataCollection" />. Este método tiene establecimiento inflexible de tipos.          
        </summary>
      <returns>
          <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.IsSynchronized">
      <summary>
          Obtiene un valor que indica si el objeto está sincronizado.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si el objeto está sincronizado.
        </returns>
    </member>
    <member name="P:System.Management.QualifierDataCollection.Item(System.String)">
      <summary>
          Obtiene el <see cref="T:System.Management.QualifierData" /> especificado de <see cref="T:System.Management.QualifierDataCollection" />.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.QualifierData" /> que contiene los datos de un calificador especificado de la colección.
        </returns>
      <param name="qualifierName">
              Nombre del <see cref="T:System.Management.QualifierData" /> al que se debe obtener acceso en <see cref="T:System.Management.QualifierDataCollection" />. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Remove(System.String)">
      <summary>
          Quita <see cref="T:System.Management.QualifierData" /> de <see cref="T:System.Management.QualifierDataCollection" /> por nombre.          
        </summary>
      <param name="qualifierName">
              Nombre de <see cref="T:System.Management.QualifierData" /> que se va a quitar. 
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.SyncRoot">
      <summary>
          Obtiene el objeto que se utilizará para la sincronización.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Object" /> que se va a utilizar para la sincronización.
        </returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
          Devuelve <see cref="T:System.Collections.IEnumerator" /> que recorre en iteración <see cref="T:System.Management.QualifierDataCollection" />.
        </summary>
      <returns>
          <see cref="T:System.Collections.IEnumerator" /> para <see cref="T:System.Management.QualifierDataCollection" />.
        </returns>
    </member>
    <member name="T:System.Management.QualifierDataCollection.QualifierDataEnumerator">
      <summary>
          Representa el enumerador de los objetos <see cref="T:System.Management.QualifierData" /> de <see cref="T:System.Management.QualifierDataCollection" />. 
        </summary>
    </member>
    <member name="P:System.Management.QualifierDataCollection.QualifierDataEnumerator.Current">
      <summary>
          Obtiene o establece el <see cref="T:System.Management.QualifierData" /> actual de la enumeración <see cref="T:System.Management.QualifierDataCollection" />.
        </summary>
      <returns>
          El actual elemento <see cref="T:System.Management.QualifierData" /> de la colección.
        </returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.QualifierDataEnumerator.MoveNext">
      <summary>
          Se desplaza al siguiente elemento de la enumeración <see cref="T:System.Management.QualifierDataCollection" />.
        </summary>
      <returns>
          
            true si el enumerador avanzó con éxito hasta el siguiente elemento; false si el enumerador alcanzó el final de la colección.
        </returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset">
      <summary>
          Restablece el enumerador al principio de la enumeración <see cref="T:System.Management.QualifierDataCollection" />.
        </summary>
    </member>
    <member name="P:System.Management.QualifierDataCollection.QualifierDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>
          Obtiene el objeto actual de la colección.
        </summary>
      <returns>
          Devuelve el elemento actual de la colección.
        </returns>
      <exception cref="T:System.InvalidOperationException">
              La colección se modificó después de crear el enumerador.
            </exception>
    </member>
    <member name="T:System.Management.RelatedObjectQuery">
      <summary>
          Representa una consulta de datos ASSOCIATORS OF. Se puede utilizar tanto para consultas de instancias como para consultas de esquema.           
        </summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.RelatedObjectQuery" />. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.RelatedObjectQuery" /> para una consulta de esquema, utilizando el conjunto de parámetros dado. Este constructor se utiliza sólo para consultas de esquema: el primer parámetro se debe establecer en true.          
        </summary>
      <param name="isSchemaQuery">
              
                Es true para indicar que se trata de una consulta de esquema; en caso contrario, es false.
            </param>
      <param name="sourceObject">
              Ruta de acceso de la clase de origen.
            </param>
      <param name="relatedClass">
              Clase base necesaria de los objetos relacionados.
            </param>
      <param name="relationshipClass">
              Tipo de relación.
            </param>
      <param name="relatedQualifier">
              Calificador que debe estar presente en los objetos relacionados.
            </param>
      <param name="relationshipQualifier">
              Calificador que debe estar presente en las relaciones.
            </param>
      <param name="relatedRole">
              Función que deben realizar los objetos relacionados en la relación.
            </param>
      <param name="thisRole">
              Función que debe realizar la clase de origen en la relación.
            </param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.RelatedObjectQuery" />. Si la cadena especificada puede analizarse correctamente como consulta WQL, se considera que es la cadena de consulta; en caso contrario, se supone que es la ruta de acceso al objeto de origen de la consulta. En este caso, se asume que se trata de una consulta de instancia.           
        </summary>
      <param name="queryOrSourceObject">
              Cadena de consulta o ruta de acceso del objeto de origen.
            </param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.RelatedObjectQuery" /> para el objeto de origen dado y la clase relacionada. Se supone que la consulta es una consulta de instancia (frente a una consulta de esquema).          
        </summary>
      <param name="sourceObject">
              Ruta de acceso del objeto de origen de esta consulta.
            </param>
      <param name="relatedClass">
              Clase de los objetos relacionados.
            </param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.RelatedObjectQuery" /> para el conjunto de parámetros dado. Se supone que la consulta es una consulta de instancia (frente a una consulta de esquema).          
        </summary>
      <param name="sourceObject">
              Ruta de acceso del objeto de origen.
            </param>
      <param name="relatedClass">
              Clase necesaria de los objetos relacionados.
            </param>
      <param name="relationshipClass">
              Tipo de relación.
            </param>
      <param name="relatedQualifier">
              Calificador que debe estar presente en los objetos relacionados.
            </param>
      <param name="relationshipQualifier">
              Calificador que debe estar presente en las relaciones.
            </param>
      <param name="relatedRole">
              Función que deben realizar los objetos relacionados en la relación.
            </param>
      <param name="thisRole">
              Función que debe realizar el objeto de origen en la relación.
            </param>
      <param name="classDefinitionsOnly">
              
                Es true para devolver sólo las definiciones de clase de los objetos relacionados; en caso contrario, es false.
            </param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.BuildQuery">
      <summary>
          Construye la cadena de consulta de acuerdo con los valores de propiedad actuales.                       
        </summary>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.ClassDefinitionsOnly">
      <summary>
          Obtiene o establece un valor que indica que, para todas las instancias que se ajusten a la consulta, se devuelva sólo sus definiciones de clase. Este parámetro sólo es válido para las consultas de instancias.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica que, para todas las instancias que se ajusten a la consulta, se devuelvan sólo sus definiciones de clase.
        </returns>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.Clone">
      <summary>
          Crea una copia del objeto.          
        </summary>
      <returns>
          Objeto copiado.             
        </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.IsSchemaQuery">
      <summary>
          Obtiene o establece un valor que indica si ésta es una consulta de esquema o una consulta de instancia.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si ésta es una consulta de esquema.
        </returns>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.ParseQuery(System.String)">
      <summary>
          Analiza la cadena de consulta y establece los valores de propiedad en consecuencia.                       
        </summary>
      <param name="query">
              Cadena de consulta que se va a analizar.
            </param>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedClass">
      <summary>
          Obtiene o establece la clase de los objetos de extremo (la clase relacionada).          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el nombre de la clase relacionada.
        </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedQualifier">
      <summary>
          Obtiene o establece un calificador que debe estar definido en los objetos relacionados.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el nombre del calificador necesario en el objeto relacionado.
        </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedRole">
      <summary>
          Obtiene o establece la función que los objetos relacionados devueltos deben realizar en la relación.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene la función de los objetos relacionados.
        </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelationshipClass">
      <summary>
          Obtiene o establece el tipo de relación (asociación).          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el nombre de la clase de relación. 
        </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelationshipQualifier">
      <summary>
          Obtiene o establece un calificador que debe estar definido en los objetos de la relación.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el nombre del calificador necesario en los objetos de la relación.
        </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.SourceObject">
      <summary>
          Obtiene o establece el objeto de origen que se va a utilizar para la consulta. En el caso de las consultas de instancias, suele ser una ruta de acceso a una instancia. En el caso de las consultas de esquema, suele ser un nombre de clase.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que representa la ruta de acceso al objeto que se va a utilizar en la consulta.
        </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.ThisRole">
      <summary>
          Obtiene o establece la función que el objeto de origen debe realizar en la relación.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene la función de este objeto.
        </returns>
    </member>
    <member name="T:System.Management.RelationshipQuery">
      <summary>
          Representa una consulta de datos WQL REFERENCES OF.           
        </summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.RelationshipQuery" />. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.RelationshipQuery" /> para una consulta de esquema, utilizando el conjunto de parámetros dado. Este constructor se utiliza sólo para las consultas de esquema, por lo que el primer parámetro debe tener el valor true.          
        </summary>
      <param name="isSchemaQuery">
              
                Es true para indicar que se trata de una consulta de esquema; en caso contrario, es false.
            </param>
      <param name="sourceObject">
              Ruta de acceso de la clase de origen de esta consulta.
            </param>
      <param name="relationshipClass">
              Tipo de relación sobre la que se va a realizar la consulta.
            </param>
      <param name="relationshipQualifier">
              Calificador que debe estar presente en la clase de relación.
            </param>
      <param name="thisRole">
              Función que debe realizar la clase de origen en la relación.
            </param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.RelationshipQuery" />. Si la cadena especificada puede analizarse correctamente como consulta WQL, se considera que es la cadena de consulta; en caso contrario, se supone que es la ruta de acceso al objeto de origen de la consulta. En este caso, se asume que se trata de una consulta de instancias.           
        </summary>
      <param name="queryOrSourceObject">
              Cadena de consulta o nombre de clase de esta consulta.
            </param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.RelationshipQuery" /> para el objeto de origen y la clase de relación especificados. Se supone que la consulta es una consulta de instancia (frente a una consulta de esquema).          
        </summary>
      <param name="sourceObject">
               Ruta de acceso del objeto de origen de esta consulta.
            </param>
      <param name="relationshipClass">
               Tipo de relación sobre la que se va a realizar la consulta.
            </param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.RelationshipQuery" /> para el conjunto de parámetros dado. Se supone que la consulta es una consulta de instancia (frente a una consulta de esquema).          
        </summary>
      <param name="sourceObject">
              Ruta de acceso del objeto de origen de esta consulta.
            </param>
      <param name="relationshipClass">
              Tipo de relación sobre la que se va a realizar la consulta.
            </param>
      <param name="relationshipQualifier">
              Calificador que debe estar presente en el objeto de la relación.
            </param>
      <param name="thisRole">
              Función que debe realizar el objeto de origen en la relación.
            </param>
      <param name="classDefinitionsOnly">
              El resultado de este método contiene un valor booleano que indica que sólo se devuelvan las definiciones de clase de los objetos resultantes.
            </param>
    </member>
    <member name="M:System.Management.RelationshipQuery.BuildQuery">
      <summary>
          Construye la cadena de consulta de acuerdo con los valores de propiedad actuales.                       
        </summary>
    </member>
    <member name="P:System.Management.RelationshipQuery.ClassDefinitionsOnly">
      <summary>
          Obtiene o establece un valor que indica que sólo se devuelvan las definiciones de clase de los objetos correspondientes de la relación.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica que sólo se devuelvan las definiciones de clase de los objetos de relación relevantes.
        </returns>
    </member>
    <member name="M:System.Management.RelationshipQuery.Clone">
      <summary>
          Crea una copia del objeto.          
        </summary>
      <returns>
          Objeto copiado.             
        </returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.IsSchemaQuery">
      <summary>
          Obtiene o establece un valor que indica si ésta es una consulta de esquema o una consulta de instancia.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si esta consulta es una consulta de esquema.
        </returns>
    </member>
    <member name="M:System.Management.RelationshipQuery.ParseQuery(System.String)">
      <summary>
          Analiza la cadena de consulta y establece los valores de propiedad en consecuencia.                       
        </summary>
      <param name="query">
              Cadena de consulta que se va a analizar.
            </param>
    </member>
    <member name="P:System.Management.RelationshipQuery.RelationshipClass">
      <summary>
          Obtiene o establece la clase de los objetos de la relación que se desean en la consulta.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el nombre de la clase de relación.
        </returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.RelationshipQualifier">
      <summary>
          Obtiene o establece un calificador que es obligatorio en los objetos de la relación.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el nombre del calificador necesario en los objetos de la relación.
        </returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.SourceObject">
      <summary>
          Obtiene o establece el objeto de origen de esta consulta.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que representa la ruta de acceso al objeto que se va a utilizar en la consulta.
        </returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.ThisRole">
      <summary>
          Obtiene o establece la función del objeto de origen en la relación.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene la función de este objeto.
        </returns>
    </member>
    <member name="T:System.Management.SelectQuery">
      <summary>
          Representa una consulta de datos WQL SELECT.          
        </summary>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.SelectQuery" />. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.Boolean,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.SelectQuery" /> para una consulta de esquema, especificando opcionalmente una condición.          
        </summary>
      <param name="isSchemaQuery">
              
                Es true para indicar que se trata de una consulta de esquema; en caso contrario, es false. El valor false no es válido en este constructor.
            </param>
      <param name="condition">
              Condición que se va a aplicar para formar el conjunto de resultados de las clases. 
            </param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.SelectQuery" /> para la consulta especificada o el nombre de clase especificado.          
        </summary>
      <param name="queryOrClassName">
              Consulta completa o nombre de clase que se va a utilizar en la consulta. El analizador de esta clase intenta analizar la cadena como consulta WQL SELECT válida. Si el analizador no obtiene los resultados esperados, se supone que la cadena es un nombre de clase.
            </param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.SelectQuery" /> con el nombre de clase y la condición especificados.          
        </summary>
      <param name="className">
              Nombre de la clase que se va a seleccionar en la consulta.
            </param>
      <param name="condition">
              Condición que se va a aplicar a la consulta. 
            </param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String,System.String,System.String[])">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.SelectQuery" /> con el nombre de clase y la condición especificados, seleccionando sólo las propiedades especificadas.          
        </summary>
      <param name="className">
              Nombre de la clase en la que se va a realizar la selección.
            </param>
      <param name="condition">
              Condición que se va a aplicar a las instancias de la clase seleccionada. 
            </param>
      <param name="selectedProperties">
              Matriz de nombres de propiedad que se devolverán en los resultados de la consulta. 
            </param>
    </member>
    <member name="M:System.Management.SelectQuery.BuildQuery">
      <summary>
          Construye la cadena de consulta de acuerdo con los valores de propiedad actuales.                       
        </summary>
    </member>
    <member name="P:System.Management.SelectQuery.ClassName">
      <summary>
          Obtiene o establece el nombre de la clase en la que se va a realizar la selección en la consulta.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el nombre de la clase en la consulta.
        </returns>
    </member>
    <member name="M:System.Management.SelectQuery.Clone">
      <summary>
          Crea una copia del objeto.          
        </summary>
      <returns>
          Objeto copiado.             
        </returns>
    </member>
    <member name="P:System.Management.SelectQuery.Condition">
      <summary>
          Obtiene o establece la condición que se va a aplicar en la consulta SELECT.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene la condición que se va a aplicar a la consulta SELECT.
        </returns>
    </member>
    <member name="P:System.Management.SelectQuery.IsSchemaQuery">
      <summary>
          Obtiene o establece un valor que indica si ésta es una consulta de esquema o una consulta de instancias.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si la consulta es una consulta de esquema.
        </returns>
    </member>
    <member name="M:System.Management.SelectQuery.ParseQuery(System.String)">
      <summary>
          Analiza la cadena de consulta y establece los valores de propiedad en consecuencia.                       
        </summary>
      <param name="query">
              Cadena de consulta que se va a analizar.
            </param>
    </member>
    <member name="P:System.Management.SelectQuery.QueryString">
      <summary>
          Obtiene o establece la consulta del objeto <see cref="T:System.Management.SelectQuery" />, en forma de cadena.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene la consulta.
        </returns>
    </member>
    <member name="P:System.Management.SelectQuery.SelectedProperties">
      <summary>
          Obtiene o establece una matriz de los nombres de propiedad que se van a seleccionar en la consulta.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Collections.Specialized.StringCollection" /> que contiene los nombres de las propiedades que se van a seleccionar en la consulta.
        </returns>
    </member>
    <member name="T:System.Management.StoppedEventArgs">
      <summary>
          Contiene los datos del evento <see cref="E:System.Management.ManagementEventWatcher.Stopped" />.          
        </summary>
    </member>
    <member name="P:System.Management.StoppedEventArgs.Status">
      <summary>
          Obtiene el estado de finalización de la operación.          
        </summary>
      <returns>
          Devuelve <see cref="T:System.Management.ManagementStatus" /> que contiene el estado de esta operación.
        </returns>
    </member>
    <member name="T:System.Management.StoppedEventHandler">
      <summary>
          Representa el método que controlará el evento <see cref="E:System.Management.ManagementEventWatcher.Stopped" />.
        </summary>
      <param name="sender">
              Instancia del objeto para el que debe invocarse este método.
            </param>
      <param name="e">
              <see cref="T:System.Management.StoppedEventArgs" /> que especifica la razón por la que se llama al evento.
            </param>
    </member>
    <member name="T:System.Management.TextFormat">
      <summary>
          Describe los posibles formatos de texto que se pueden utilizar con <see cref="M:System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)" />.          
        </summary>
    </member>
    <member name="F:System.Management.TextFormat.Mof">
      <summary>
          
            Managed Object Format (MOF)
          
        </summary>
    </member>
    <member name="F:System.Management.TextFormat.CimDtd20">
      <summary>
          DTD de XML que corresponde a DTD CIM versión 2.0.             
        </summary>
    </member>
    <member name="F:System.Management.TextFormat.WmiDtd20">
      <summary>
          DTD de WMI XML que corresponde a DTD CIM versión 2.0. Al utilizar este valor se habilitan algunas extensiones específicas de WMI, como los objetos incrustados.             
        </summary>
    </member>
    <member name="T:System.Management.WqlEventQuery">
      <summary>
          Representa una consulta de eventos WMI en formato WQL.          
        </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.WqlEventQuery" />. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.WqlEventQuery" /> basándose en la cadena de consulta dada o en el nombre de clase de eventos especificado.          
        </summary>
      <param name="queryOrEventClassName">
              Cadena que representa toda la consulta de eventos o el nombre de la clase de eventos que se va a consultar. El objeto intentará analizar la cadena como consulta de eventos válida. Si no se puede, el analizador supondrá que el parámetro representa un nombre de clase de eventos.
            </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.WqlEventQuery" /> para el nombre de clase de eventos especificado, con la condición especificada.          
        </summary>
      <param name="eventClassName">
              Nombre de la clase de eventos que se va a consultar.
            </param>
      <param name="condition">
              Condición que se va a aplicar a los eventos de la clase especificada. 
            </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.WqlEventQuery" /> con el nombre de clase de eventos, la condición y el intervalo de agrupamiento especificados.          
        </summary>
      <param name="eventClassName">
              Nombre de la clase de eventos que se va a consultar. 
            </param>
      <param name="condition">
              Condición que se va a aplicar a los eventos de la clase especificada.
            </param>
      <param name="groupWithinInterval">
              Intervalo especificado en el que WMI envía un evento agregado, en lugar de varios eventos. 
            </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan,System.String[])">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.WqlEventQuery" /> con el nombre de clase de eventos, la condición, el intervalo de agrupamiento y las propiedades de agrupamiento especificados.          
        </summary>
      <param name="eventClassName">
              Nombre de la clase de eventos que se va a consultar. 
            </param>
      <param name="condition">
              Condición que se va a aplicar a los eventos de la clase especificada.
            </param>
      <param name="groupWithinInterval">
              Intervalo especificado en el que WMI envía un evento agregado, en lugar de varios eventos.
            </param>
      <param name="groupByPropertyList">
              Propiedades de la clase de eventos por las que se deben agrupar los eventos.  
            </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.WqlEventQuery" /> para la clase de eventos especificada, con el tiempo de latencia especificado.          
        </summary>
      <param name="eventClassName">
              Nombre de la clase de eventos que se va a consultar.
            </param>
      <param name="withinInterval">
              Valor de <see cref="T:System.TimeSpan" /> que especifica la latencia aceptable para recibir este evento. Este valor se utiliza cuando no hay un proveedor de eventos explícito para la consulta solicitada y se requiere WMI para sondear la condición. Este intervalo es la cantidad de tiempo máxima que puede transcurrir antes de entregarse la notificación de un evento.  
            </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.WqlEventQuery" /> con el nombre de clase de eventos, el intervalo de sondeo y la condición especificados.          
        </summary>
      <param name="eventClassName">
              Nombre de la clase de eventos que se va a consultar. 
            </param>
      <param name="withinInterval">
              Valor de <see cref="T:System.TimeSpan" /> que especifica la latencia aceptable para recibir este evento. Este valor se utiliza cuando no hay un proveedor de eventos explícito para la consulta solicitada y se requiere WMI para sondear la condición. Este intervalo es la cantidad de tiempo máxima que puede transcurrir antes de entregarse la notificación de un evento. 
            </param>
      <param name="condition">
              Condición que se va a aplicar a los eventos de la clase especificada. 
            </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String,System.TimeSpan,System.String[],System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.WqlEventQuery" /> con el nombre de clase de eventos, la condición, el intervalo de agrupamiento, las propiedades de agrupamiento y el número de eventos especificados.          
        </summary>
      <param name="eventClassName">
              Nombre de la clase de eventos en que se va a realizar la consulta.
            </param>
      <param name="withinInterval">
              Valor de <see cref="T:System.TimeSpan" /> que especifica la latencia aceptable para recibir este evento. Este valor se utiliza cuando no hay un proveedor de eventos explícito para la consulta solicitada y se requiere WMI para sondear la condición. Este intervalo es la cantidad de tiempo máxima que puede transcurrir antes de entregarse la notificación de un evento.
            </param>
      <param name="condition">
              Condición que se va a aplicar a los eventos de la clase especificada. 
            </param>
      <param name="groupWithinInterval">
              Intervalo especificado en el que WMI envía un evento agregado, en lugar de varios eventos. 
            </param>
      <param name="groupByPropertyList">
              Propiedades de la clase de eventos por las que se deben agrupar los eventos. 
            </param>
      <param name="havingCondition">
              Condición que se va a aplicar al número de eventos. 
            </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.BuildQuery">
      <summary>
          Construye la cadena de consulta de acuerdo con los valores de propiedad actuales.                       
        </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.Clone">
      <summary>
          Crea una copia del objeto.          
        </summary>
      <returns>
          Objeto copiado.             
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.WqlEventQuery.Condition">
      <summary>
          Obtiene o establece la condición que se va a aplicar a los eventos de la clase especificada.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene la condición o las condiciones en la consulta de eventos.
        </returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.EventClassName">
      <summary>
          Obtiene o establece la clase de eventos que se va a consultar.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el nombre de la clase de evento en la consulta de eventos.
        </returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.GroupByPropertyList">
      <summary>
          Obtiene o establece las propiedades del evento que se utilizarán para agrupar eventos del mismo tipo.          
        </summary>
      <returns>
          Devuelve una colección <see cref="T:System.Collections.Specialized.StringCollection" /> que contiene las propiedades del evento que se utilizarán para agrupar los eventos del mismo tipo.
        </returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.GroupWithinInterval">
      <summary>
          Obtiene o establece el intervalo que se utilizará para agrupar eventos del mismo tipo.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.TimeSpan" /> que contiene el intervalo utilizado para agrupar los eventos del mismo tipo.
        </returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.HavingCondition">
      <summary>
          Obtiene o establece la condición que se va a aplicar a la agregación de eventos, basándose en el número de eventos recibidos.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene la condición aplicada a la agregación de eventos, basándose en el número de eventos recibidos.
        </returns>
    </member>
    <member name="M:System.Management.WqlEventQuery.ParseQuery(System.String)">
      <summary>
          Analiza la cadena de consulta y establece los valores de propiedad en consecuencia.                       
        </summary>
      <param name="query">
              Cadena de consulta que se va a analizar.
            </param>
    </member>
    <member name="P:System.Management.WqlEventQuery.QueryLanguage">
      <summary>
          Obtiene el lenguaje de la consulta.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el lenguaje en el que está escrita la consulta.
        </returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.QueryString">
      <summary>
          Obtiene o establece la cadena que representa la consulta.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene la consulta.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.WqlEventQuery.WithinInterval">
      <summary>
          Obtiene o establece el intervalo de sondeo que se va a utilizar en esta consulta.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.TimeSpan" /> que contiene el intervalo de sondeo utilizado en la consulta de evento.
        </returns>
    </member>
    <member name="T:System.Management.WqlObjectQuery">
      <summary>
          Representa una consulta de datos WMI en formato WQL.          
        </summary>
    </member>
    <member name="M:System.Management.WqlObjectQuery.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.WqlObjectQuery" />. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.WqlObjectQuery.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.WqlObjectQuery" /> inicializada para la consulta especificada.          
        </summary>
      <param name="query">
               Representación de la consulta de datos.
            </param>
    </member>
    <member name="M:System.Management.WqlObjectQuery.Clone">
      <summary>
          Crea una copia del objeto.          
        </summary>
      <returns>
          Objeto copiado.             
        </returns>
    </member>
    <member name="P:System.Management.WqlObjectQuery.QueryLanguage">
      <summary>
          Obtiene el lenguaje de la consulta.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el lenguaje de la consulta.
        </returns>
    </member>
    <member name="T:System.Management.Instrumentation.BaseEvent">
      <summary>
          Representa clases derivadas de <see cref="T:System.Management.Instrumentation.BaseEvent" /> que sabe que son clases de eventos de administración. Estas clases derivadas heredan una implementación de <see cref="T:System.Management.Instrumentation.IEvent" /> que permite que los eventos se activen a través del método <see cref="M:System.Management.Instrumentation.BaseEvent.Fire" />.
        </summary>
    </member>
    <member name="M:System.Management.Instrumentation.BaseEvent.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.Instrumentation.BaseEvent" />.
        </summary>
    </member>
    <member name="M:System.Management.Instrumentation.BaseEvent.Fire">
      <summary>
          Activa un evento de administración.
        </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.DefaultManagementProjectInstaller">
      <summary>
          Instala un ensamblado instrumentado. Para utilizar este instalador de proyecto predeterminado, simplemente hay que derivar una clase de <see cref="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" /> dentro del ensamblado. No es necesario reemplazar ningún método.
        </summary>
    </member>
    <member name="M:System.Management.Instrumentation.DefaultManagementProjectInstaller.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" />. Éste es el constructor predeterminado.
        </summary>
    </member>
    <member name="T:System.Management.Instrumentation.IEvent">
      <summary>
          Especifica un origen de un evento de instrumentación administrado. Los objetos que implementan esta interfaz son orígenes de eventos de instrumentación administrados. Las clases que no se derivan de <see cref="T:System.Management.Instrumentation.BaseEvent" /> deben implementar esta interfaz en su lugar.          
        </summary>
    </member>
    <member name="M:System.Management.Instrumentation.IEvent.Fire">
      <summary>
          Activa un evento de administración.          
        </summary>
    </member>
    <member name="T:System.Management.Instrumentation.IgnoreMemberAttribute">
      <summary>
          Provoca que la instrumentación administrada omita el miembro asociado de una clase instrumentada.
        </summary>
    </member>
    <member name="M:System.Management.Instrumentation.IgnoreMemberAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.Instrumentation.IgnoreMemberAttribute" />.          
        </summary>
    </member>
    <member name="T:System.Management.Instrumentation.IInstance">
      <summary>
          Especifica un origen de una instancia de instrumentación administrada. Los objetos que implementan esta interfaz son orígenes de instancias de instrumentación administradas. Las clases que no se derivan de <see cref="T:System.Management.Instrumentation.Instance" /> deben implementar esta interfaz en su lugar.          
        </summary>
    </member>
    <member name="P:System.Management.Instrumentation.IInstance.Published">
      <summary>
          Obtiene o establece un valor que indica si las instancias de clases que implementan esta interfaz son visibles a través de la instrumentación de administración.                       
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si las instancias de clases que implementan esta interfaz son visibles a través de la instrumentación de administración.
        </returns>
    </member>
    <member name="T:System.Management.Instrumentation.Instance">
      <summary>
          Representa clases derivadas que son clases de instancias de instrumentación de administración. Estas clases derivadas heredan una implementación de <see cref="T:System.Management.Instrumentation.IInstance" /> que permite que las instancias se publiquen a través de la propiedad <see cref="P:System.Management.Instrumentation.IInstance.Published" />.          
        </summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instance.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.Instrumentation.Instance" />.            
        </summary>
    </member>
    <member name="P:System.Management.Instrumentation.Instance.Published">
      <summary>
          Obtiene o establece un valor que indica si las instancias de clases que implementan esta interfaz son visibles a través de la instrumentación de administración.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.Boolean" /> que indica si las instancias de clases que implementan esta interfaz son visibles a través de la instrumentación de administración.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.Instrumentation">
      <summary>
          Proporciona funciones auxiliares para exponer eventos y datos para la administración. Hay una única instancia de esta clase por dominio de aplicación.          
        </summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.Instrumentation.Instrumentation" />.          
        </summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Fire(System.Object)">
      <summary>
          Activa un evento de administración.          
        </summary>
      <param name="eventData">
              Objeto que determina la clase, propiedades, y valores del evento.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.IsAssemblyRegistered(System.Reflection.Assembly)">
      <summary>
          Determina si el esquema de instrumentación del ensamblado especificado ya está registrado correctamente en WMI.          
        </summary>
      <returns>
          
            true si el esquema de instrumentación del ensamblado especificado está registrado en WMI; de lo contrario, false.
        </returns>
      <param name="assemblyToRegister">
              El <see cref="T:System.Reflection.Assembly" /> que contiene los tipos de instancia o evento de instrumentación.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)">
      <summary>
          Hace que una instancia sea visible a través de la instrumentación de administración.          
        </summary>
      <param name="instanceData">
              Objeto que se va a hacer visible a través de la instrumentación de administración.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.RegisterAssembly(System.Reflection.Assembly)">
      <summary>
          Registra las clases de instancia o evento de administración del ensamblado especificado en WMI. De esta forma, se asegura de que las aplicaciones cliente de <see cref="N:System.Management" /> tienen acceso al esquema de instrumentación.          
        </summary>
      <param name="assemblyToRegister">
              El <see cref="T:System.Reflection.Assembly" /> que contiene los tipos de instancia o evento de instrumentación.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Revoke(System.Object)">
      <summary>
          Hace que una instancia previamente publicada a través del método <see cref="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)" /> deje de ser visible a través de la instrumentación de administración.          
        </summary>
      <param name="instanceData">
              Objeto que va a dejar de ser visible para la instrumentación de administración.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.SetBatchSize(System.Type,System.Int32)">
      <summary>
          Especifica el número máximo de objetos del tipo especificado que se van a proporcionar de una vez.                       
        </summary>
      <param name="instrumentationClass">
              Clase para la que se ha establecido el tamaño del lote.
            </param>
      <param name="batchSize">
              Número máximo de objetos que se van a proporcionar de una vez.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationClassAttribute">
      <summary>
          Especifica que una clase proporciona instrumentación de instancia o evento.                       
        </summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> que se utiliza si este tipo se deriva de otro con el atributo <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" />; o bien si se trata de una clase de instrumentación de nivel superior (por ejemplo, una instancia o clase abstracta sin ninguna clase base ni ningún evento derivado de __ExtrinsicEvent).          
        </summary>
      <param name="instrumentationType">
              Tipo de instrumentación proporcionado por esta clase.
            </param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> que tiene esquema para una clase base existente. La clase debe contener definiciones de miembro correctas para las propiedades de la clase base WMI existente.          
        </summary>
      <param name="instrumentationType">
              Tipo de instrumentación proporcionado por esta clase.
            </param>
      <param name="managedBaseClassName">
              Nombre de la clase base.
            </param>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType">
      <summary>
          Obtiene o establece el tipo de instrumentación proporcionado por esta clase.          
        </summary>
      <returns>
          Devuelve el valor de una enumeración <see cref="T:System.Management.Instrumentation.InstrumentationType" /> que contiene el tipo de instrumentación proporcionado por esta clase.
        </returns>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName">
      <summary>
          Obtiene o establece el nombre de la clase base de esta clase de instrumentación.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene el nombre de la clase base de esta clase de instrumentación.
        </returns>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationType">
      <summary>
          Especifica el tipo de instrumentación proporcionado por una clase.           
        </summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Instance">
      <summary>
          La clase proporciona las instancias para la instrumentación de administración.
        </summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Event">
      <summary>
          La clase proporciona los eventos de la instrumentación de administración.
        </summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Abstract">
      <summary>
          La clase define una clase abstracta para la instrumentación de administración.
        </summary>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentedAttribute">
      <summary>
          Especifica que este ensamblado proporciona instrumentación de administración. Este atributo debería aparecer una vez por ensamblado.
        </summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> que se establece para el espacio de nombres predeterminado/raíz. Éste es el constructor predeterminado.          
        </summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> que se establece en el espacio de nombres especificado para la instrumentación dentro de este ensamblado.          
        </summary>
      <param name="namespaceName">
              Espacio de nombres para eventos e instancias de instrumentación.
            </param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String,System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> que se establece en el espacio de nombres y en los valores de seguridad especificados para la instrumentación dentro de este ensamblado.          
        </summary>
      <param name="namespaceName">
              Espacio de nombres para eventos e instancias de instrumentación.
            </param>
      <param name="securityDescriptor">
               Descriptor de seguridad que sólo permite a usuarios o grupos especificados ejecutar aplicaciones que proporcionan la instrumentación compatible con este ensamblado.
            </param>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentedAttribute.NamespaceName">
      <summary>
          Obtiene o establece el espacio de nombres para eventos e instancias de instrumentación en este ensamblado.          
        </summary>
      <returns>
          Devuelve el valor de <see cref="T:System.String" /> que contenga el nombre del espacio de nombres para las instancias y eventos de instrumentación de este ensamblado.
        </returns>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor">
      <summary>
          Obtiene o establece un descriptor de seguridad que sólo permite a usuarios o grupos especificados ejecutar aplicaciones que proporcionan la instrumentación compatible con este ensamblado.          
        </summary>
      <returns>
          Devuelve el valor de <see cref="T:System.String" /> que contiene el descriptor de seguridad que sólo permite a usuarios o grupos especificados ejecutar aplicaciones que proporcionan la instrumentación compatible con este ensamblado.
        </returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagedNameAttribute">
      <summary>
          Permite que una clase instrumentada o que un miembro de una clase instrumentada presente un nombre alternativo a través de la instrumentación de administración.          
        </summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagedNameAttribute.#ctor(System.String)">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.Instrumentation.ManagedNameAttribute" /> que permite que el nombre alternativo se especifique para el tipo, el campo, la propiedad, el método o el parámetro a los que se aplica este atributo.          
        </summary>
      <param name="name">
              Nombre alternativo para el tipo, el campo, la propiedad, el método o el parámetro a los que se aplica este atributo.
            </param>
    </member>
    <member name="P:System.Management.Instrumentation.ManagedNameAttribute.Name">
      <summary>
          Obtiene el nombre de la entidad administrada.          
        </summary>
      <returns>
          Devuelve un valor T:System.String que contiene el nombre de la entidad administrada.
        </returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementInstaller">
      <summary>
          Instala ensamblados instrumentados. Incluya una instancia de esta clase de instalador en el instalador de proyecto para un ensamblado que incluya instrumentación.          
        </summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.#ctor">
      <summary>
          Inicializa una nueva instancia de la clase <see cref="T:System.Management.Instrumentation.ManagementInstaller" />.          
        </summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Commit(System.Collections.IDictionary)">
      <summary>
          Confirma el ensamblado para la operación.          
        </summary>
      <param name="savedState">
              Estado del ensamblado.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementInstaller.HelpText">
      <summary>
          Obtiene o establece las opciones del instalador para esta clase.          
        </summary>
      <returns>
          Devuelve un valor <see cref="T:System.String" /> que contiene las opciones del instalador para esta clase.
        </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Install(System.Collections.IDictionary)">
      <summary>
          Instala el ensamblado.          
        </summary>
      <param name="savedState">
              Estado del ensamblado.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Rollback(System.Collections.IDictionary)">
      <summary>
          Deshace el estado del ensamblado.          
        </summary>
      <param name="savedState">
              Estado del ensamblado.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>
          Desinstala el ensamblado.          
        </summary>
      <param name="savedState">
              Estado del ensamblado.
            </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementQuery.GetValueOfKeyword(System.String,System.String,System.Int32)"></member>
  </members>
</doc>