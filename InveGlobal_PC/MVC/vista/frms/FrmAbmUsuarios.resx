<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QAWRXhpZgAATU0AKgAAAAgAAAAAAAD/2wBDAAEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQH/wAARCAAyADIDASIAAhEBAxEB/8QAHAAAAgIDAQEAAAAAAAAAAAAAAAkICgUGBwMB/8QAKxAAAQUA
        AQQBAgYDAQAAAAAAAgEDBAUGBwAIERITITEJFBUWIkEjUYGR/8QAHQEAAQQCAwAAAAAAAAAAAAAACAUG
        BwkAAgMECv/EADERAAICAgECBAMGBwEAAAAAAAIDAQQFBgcAEQgSExQJIXMVMTQ1UbEiJEGRssHw0v/a
        AAwDAQACEQMRAD8Av8dCr4+vXwiQRUiXwKIqqqr4RERPKqq/RE+n9qqdLI0feBa8s2mhgcP8g0/GnHtD
        or7Kt8kN5mt3O12dpl7OVQaCZjqu8nN4/K0EHQwLKrgXOmptjL0KV7s6Pn6yrkQLCet4XXspnzfGPT3T
        UFZW7Ri2a9aHEQpFnoKc0mPIGekpKmuMVtZC5UlxrSspmaGHBRXGwJ2CIa6BlcNfIREskPVNa4FcEMmx
        jAWMkAyXnYsSZsRiAqZEgiIkRESogiIp5UiVVREFERVUvPhE/vwvnpTrXcjT9wVrrLqZPtneNYGlss5j
        snXXdrQQbinqPRj91aYqGZW2Fu9qHzdnQKufMcqYNGla0tcli5ZOu4HTdzXKPDmX0uguOXC7hsFEo7N/
        WUmrw+Qw/KtbShDfWztsVqeNI2axlxMrYJvy2specfwH7UowMR9nWvF/nhr2g5yv22PhTMpctS1gsQoN
        odc4psyESI27U3KMKhKVVp6hyFoqB99v2kVdiwLiNy2JcZgEfiJcjcjeGvR9B23H4RmV07ObFlsPn8nT
        qW3U4yKqFR+GxltdqrXcEWobfeFe5WBFxlVXpEwk+XogPDk3j7bVb67K5GaWx4SjgrGGrsamLCaVu3eX
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAABDQAA
        AxQAAAQYAAAEGAAAAxQAAAENAAAABAAAAAAAAAAAAAAAAAAAAABkaWUAWl5cA32Afgt6fXsNen57DXp+
        fA16fnwNen17DXp+ew17f3wMWVtZECQlKBwKChosBAgwSAIKRW0EDE6FAw5OhgYJRXAKBy9JBgQVKAAA
        ChQAAAADAAAAAAAAAABaXl0BbG9ubpyfneejpqTuo6ak7qKlpO6ipaPuo6el7qOnpe6eoZ/uiYuO709Q
        cfEaF3TyGkR6/SF/bP8ikWf/HZZp/0xnXP9ZQFf/MiJY0BQOSG4CAiIkAAAABgAAAABXW1oNpKem8sXJ
        yf/BxcX/vsHB/7m8vP+1uLn/zdLS/8nNzP+orLX/VFWU/xkZmv8SC6//DFd+/wueU/8Ln1L+BKNV/01x
        Pf6JUyf/lFgw/2pFTf8nGlawBQMyKgAAAANUVlUTsLKx9re6uv+/xMT/t7y8/62xsf+tsLD/3OHg/8TJ
        zf9jZaD/Dg2Z/xAQrv8kH7v/RHqu/1DJlv9S1pX/TteZ/5Glfv+rflz/l185/pJVKP9+UEL/IxdYqQEB
        HxFVV1YTr7Gw9bG1tf+2urr/rrOz/6aqqv+mqqr/0dXT/5WXsf8fH5P/IiK5/1RU2f9fWu7/OFDX/yys
        mf8t3ID/NNOD/5iPWv+3fE7/uohg/659Xf6XXjX/YD5M/wYETkFVV1YTr7Gw9bS3t/+6vr7/sra2/6ms
        rP+qra3/0dbU/36Brf8fH6T/XFzk/05O7f8xMeL/MSnl/z+AwP9O2p7/bsmL/7CQYP+4fk7/sHVE/691
        Rf+zgmD+jV1G/w4IWoBVV1YTr7Gw9bW4uP+6vr7/sre3/6qtrf+qrq3/z9TU/4KEsv8/PsD/Xl71/z8/
        6P9BQej/PTro/0BM3/9fwL7/nL6K/7+SZf+9h1j/t39R/7F2Rv+vdEP/pnhh/xMMYI9VV1YTr7Gw9bW4
        uP+7vr7/s7e3/6qtrf+qrq3/0NTV/5KUv/9NTdD/VVX0/05O7v9LS+3/SEjr/0E87f9hjNj/sKWM/8uZ
        Z//Hkl3/v4hW/7mATv+xdkT/rn5g/xcRaYtVV1YTr7Gx9ba4uP+9wcH/tbi4/6yvr/+sr67/1tnY/5ud
        xf9QUNL/X1/5/1hY8/9VVfL/UlLw/01N8P9TVun/gW+8/5t9nv+kgIz/rIF4/7KBY/+2fU/+rH1g/xYS
        bXZVV1YTr7Gx9ba5uf+9wMD/tbi4/6yvr/+rrq7/297c/6msxf9XV8X/amr9/2Ji+P9fX/b/XFz1/1lZ
        8/9VVPL/TU72/01O8v9XU+P/Z1vO/3Rhtv6Mb6L/dl2C/wgHaThVV1YTr7Gx9be6uv++wMD/trm5/6yv
        r/+sr6//2t7d/8THzf96e7j/Wlrc/25u//9ra/3/Z2f6/2Rk+P9gYPb/XV31/1la9P9VVvT/T1L2/lJV
        /f9OUeL/KCmZoQQFagVVV1YTsLGx9bi7u//Bw8P/ubu7/6+ysv+usLD/29/f/9ve3P/CxND/eXq+/1hY
        0/9jY/P/cXH//3Bw//9tbf//a2v+/2ho/v5nZ/7/Xl3v/0pKz/01NaijAABgHQAAAABVV1YTsLKx9be4
        uf++wMD/tri4/6yvr/+srq7/2Nvb/9TX1//X2tj/vsDI/4WFsv9oaLz/V1fK/05O0/9PT9r/T0/b/0xM
        0v9FRcXtPT25syYmlmkAAEMWAAAAAAAAAABVV1YTsLKx9by+vv/GyMj/vcDA/7S1tf+ytLT/4ePj/93f
        3//d39//4OLh/9DS0f+7vcj/sLLQ/6Giz/+Zms//k5TJ/5GSvf9LTYOQAABFJQAAAAAAAAAAAAAAAAQE
        agBVV1YTsLKx9ba4uP+9v7//tbe3/6yurv+rra3/19nZ/9TV1f/U1tb/09XV/8jKyv/Nz83/2dvY/9XX
        1P/Q0tH/x8nI/8jJxv+GiH9nGCYAAgAAAAAAAAAAAABfAAAAAABVV1YTsbKx9cDCwv/Lzc3/wsTE/7i5
        uf+2uLj/6Ovr/+Tn5//k5+f/5Obm/9fZ2f/Z29v/5ujo/+Xn5//m6en/3d/f/8vNzP9/goFsDxQRBwAA
        AAAAAAAAAAAAAAAAAABVV1YTsLKx9bK0tP+5u7v/s7W1/6usrP+ipKT/vsDA/7y+vv+8vr7/vL29/7Kz
        s/+0tbX/vb6+/7y+vv+9vr7/tLW1/8DBwf9/goBsERcUBwAAAAAAAAAAAAAAAAAAAABVV1YTsbKx9cHD
        w//R0tL/yszM/8HCwv+usLD/xsbG/8TFxf/ExcX/w8TE/7e4uP+5urr/xcbG/8TFxf/Fxsb/ubu7/8HC
        wv9/gYBsERcUBwAAAAAAAAAAAAAAAAAAAABVV1YTsrSz+MPFxf/W19f/0tTU/8nKyv+1trb/zc7O/8zN
        zf/Mzc3/y8zM/76/v//AwsL/zc7O/8zMzP/Mzc3/wsPD/sXGxv+Ag4JsDxQRBwAAAAAAAAAAAAAAAAAA
        AABeYV8FiYuKyc3Ozv/Q0dH/z9DQ/87Pz//Kysv/z9DQ/8/Q0P/P0ND/zs/P/8zMzP/Mzc3/z9DQ/8/Q
        0P/P0ND/0NHR/6iqqf97fn1DAAAAAAAAAAAAAAAAAAAAAAAAAABdYV8AZGdlG2hsamZoa2pwaGtqb2hr
        am9na2lvaGtqb2hram9oa2pvaGtqb2hraW9oa2lvaGtqb2hram9oa2pwaGtqcGdraTxiZmQHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAADRIOAEBFQgJFSUcDRUlHA0VJRwNFSkcDRUlHA0VJRwNFSUcDRUlHA0VJ
        RwNFSUcDRUlHA0VJRwNFSUcDREhGAzQ5NwEAAAAAAAAAAExQTgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAT1NRAAAAAAAAAAAAAAAAAAAAAAD///8A//5/AMAADwCAAAMAgAABAIAAAQCAAAAAgAAAAIAA
        AACAAAEAgAABAIAAAQCAAAMAgAAPAIAAHwCAAD8AgAA/AIAAPwCAAD8AgAA/AIAAPwD///8A////AP//
        /wA=
</value>
  </data>
</root>