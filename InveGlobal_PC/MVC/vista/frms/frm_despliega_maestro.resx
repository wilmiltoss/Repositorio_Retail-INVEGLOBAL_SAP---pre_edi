<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6/8AXJnMkm81SgYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAABDQAA
        AxQAAAQYAAAEGAAAAxQAAAENAAAABAAAAAAAAAAAAAAAAAAAAABkaWUAWl5cA32Afgt6fXsNen57DXp+
        fA16fnwNen17DXp+ew17f3wMWVtZECQlKBwKChosBAgwSAIKRW0EDE6FAw5OhgYJRXAKBy9JBgQVKAAA
        ChQAAAADAAAAAAAAAABaXl0BbG9ubpyfneejpqTuo6ak7qKlpO6ipaPuo6el7qOnpe6eoZ/uiYuO709Q
        cfEaF3TyGkR6/SF/bP8ikWf/HZZp/0xnXP9ZQFf/MiJY0BQOSG4CAiIkAAAABgAAAABXW1oNpKem8sXJ
        yf/BxcX/vsHB/7m8vP+1uLn/zdLS/8nNzP+orLX/VFWU/xkZmv8SC6//DFd+/wueU/8Ln1L+BKNV/01x
        Pf6JUyf/lFgw/2pFTf8nGlawBQMyKgAAAANUVlUTsLKx9re6uv+/xMT/t7y8/62xsf+tsLD/3OHg/8TJ
        zf9jZaD/Dg2Z/xAQrv8kH7v/RHqu/1DJlv9S1pX/TteZ/5Glfv+rflz/l185/pJVKP9+UEL/IxdYqQEB
        HxFVV1YTr7Gw9bG1tf+2urr/rrOz/6aqqv+mqqr/0dXT/5WXsf8fH5P/IiK5/1RU2f9fWu7/OFDX/yys
        mf8t3ID/NNOD/5iPWv+3fE7/uohg/659Xf6XXjX/YD5M/wYETkFVV1YTr7Gw9bS3t/+6vr7/sra2/6ms
        rP+qra3/0dbU/36Brf8fH6T/XFzk/05O7f8xMeL/MSnl/z+AwP9O2p7/bsmL/7CQYP+4fk7/sHVE/691
        Rf+zgmD+jV1G/w4IWoBVV1YTr7Gw9bW4uP+6vr7/sre3/6qtrf+qrq3/z9TU/4KEsv8/PsD/Xl71/z8/
        6P9BQej/PTro/0BM3/9fwL7/nL6K/7+SZf+9h1j/t39R/7F2Rv+vdEP/pnhh/xMMYI9VV1YTr7Gw9bW4
        uP+7vr7/s7e3/6qtrf+qrq3/0NTV/5KUv/9NTdD/VVX0/05O7v9LS+3/SEjr/0E87f9hjNj/sKWM/8uZ
        Z//Hkl3/v4hW/7mATv+xdkT/rn5g/xcRaYtVV1YTr7Gx9ba4uP+9wcH/tbi4/6yvr/+sr67/1tnY/5ud
        xf9QUNL/X1/5/1hY8/9VVfL/UlLw/01N8P9TVun/gW+8/5t9nv+kgIz/rIF4/7KBY/+2fU/+rH1g/xYS
        bXZVV1YTr7Gx9ba5uf+9wMD/tbi4/6yvr/+rrq7/297c/6msxf9XV8X/amr9/2Ji+P9fX/b/XFz1/1lZ
        8/9VVPL/TU72/01O8v9XU+P/Z1vO/3Rhtv6Mb6L/dl2C/wgHaThVV1YTr7Gx9be6uv++wMD/trm5/6yv
        r/+sr6//2t7d/8THzf96e7j/Wlrc/25u//9ra/3/Z2f6/2Rk+P9gYPb/XV31/1la9P9VVvT/T1L2/lJV
        /f9OUeL/KCmZoQQFagVVV1YTsLGx9bi7u//Bw8P/ubu7/6+ysv+usLD/29/f/9ve3P/CxND/eXq+/1hY
        0/9jY/P/cXH//3Bw//9tbf//a2v+/2ho/v5nZ/7/Xl3v/0pKz/01NaijAABgHQAAAABVV1YTsLKx9be4
        uf++wMD/tri4/6yvr/+srq7/2Nvb/9TX1//X2tj/vsDI/4WFsv9oaLz/V1fK/05O0/9PT9r/T0/b/0xM
        0v9FRcXtPT25syYmlmkAAEMWAAAAAAAAAABVV1YTsLKx9by+vv/GyMj/vcDA/7S1tf+ytLT/4ePj/93f
        3//d39//4OLh/9DS0f+7vcj/sLLQ/6Giz/+Zms//k5TJ/5GSvf9LTYOQAABFJQAAAAAAAAAAAAAAAAQE
        agBVV1YTsLKx9ba4uP+9v7//tbe3/6yurv+rra3/19nZ/9TV1f/U1tb/09XV/8jKyv/Nz83/2dvY/9XX
        1P/Q0tH/x8nI/8jJxv+GiH9nGCYAAgAAAAAAAAAAAABfAAAAAABVV1YTsbKx9cDCwv/Lzc3/wsTE/7i5
        uf+2uLj/6Ovr/+Tn5//k5+f/5Obm/9fZ2f/Z29v/5ujo/+Xn5//m6en/3d/f/8vNzP9/goFsDxQRBwAA
        AAAAAAAAAAAAAAAAAABVV1YTsLKx9bK0tP+5u7v/s7W1/6usrP+ipKT/vsDA/7y+vv+8vr7/vL29/7Kz
        s/+0tbX/vb6+/7y+vv+9vr7/tLW1/8DBwf9/goBsERcUBwAAAAAAAAAAAAAAAAAAAABVV1YTsbKx9cHD
        w//R0tL/yszM/8HCwv+usLD/xsbG/8TFxf/ExcX/w8TE/7e4uP+5urr/xcbG/8TFxf/Fxsb/ubu7/8HC
        wv9/gYBsERcUBwAAAAAAAAAAAAAAAAAAAABVV1YTsrSz+MPFxf/W19f/0tTU/8nKyv+1trb/zc7O/8zN
        zf/Mzc3/y8zM/76/v//AwsL/zc7O/8zMzP/Mzc3/wsPD/sXGxv+Ag4JsDxQRBwAAAAAAAAAAAAAAAAAA
        AABeYV8FiYuKyc3Ozv/Q0dH/z9DQ/87Pz//Kysv/z9DQ/8/Q0P/P0ND/zs/P/8zMzP/Mzc3/z9DQ/8/Q
        0P/P0ND/0NHR/6iqqf97fn1DAAAAAAAAAAAAAAAAAAAAAAAAAABdYV8AZGdlG2hsamZoa2pwaGtqb2hr
        am9na2lvaGtqb2hram9oa2pvaGtqb2hraW9oa2lvaGtqb2hram9oa2pwaGtqcGdraTxiZmQHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAADRIOAEBFQgJFSUcDRUlHA0VJRwNFSkcDRUlHA0VJRwNFSUcDRUlHA0VJ
        RwNFSUcDRUlHA0VJRwNFSUcDREhGAzQ5NwEAAAAAAAAAAExQTgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAT1NRAAAAAAAAAAAAAAAAAAAAAAD///8A//5/AMAADwCAAAMAgAABAIAAAQCAAAAAgAAAAIAA
        AACAAAEAgAABAIAAAQCAAAMAgAAPAIAAHwCAAD8AgAA/AIAAPwCAAD8AgAA/AIAAPwD///8A////AP//
        /wA=
</value>
  </data>
</root>